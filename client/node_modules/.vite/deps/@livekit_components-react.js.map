{
  "version": 3,
  "sources": ["../../../../node_modules/loglevel/lib/loglevel.js", "../../../../node_modules/@livekit/components-react/src/components/controls/ClearPinButton.tsx", "../../../../node_modules/@livekit/components-react/src/hooks/useAudioPlayback.ts", "../../../../node_modules/@livekit/components-react/src/hooks/internal/useResizeObserver.ts", "../../../../node_modules/@livekit/components-react/src/hooks/internal/useObservableState.ts", "../../../../node_modules/@livekit/components-react/src/hooks/internal/useMediaQuery.ts", "../../../../node_modules/@livekit/components-react/src/context/layout-context.ts", "../../../../node_modules/@livekit/components-react/src/context/chat-context.ts", "../../../../node_modules/@livekit/components-react/src/context/pin-context.ts", "../../../../node_modules/@livekit/components-react/src/context/participant-context.ts", "../../../../node_modules/@livekit/components-react/src/context/track-reference-context.ts", "../../../../node_modules/@livekit/components-react/src/context/room-context.ts", "../../../../node_modules/@livekit/components-react/src/context/feature-context.ts", "../../../../node_modules/@livekit/components-react/src/hooks/useClearPinButton.ts", "../../../../node_modules/@livekit/components-react/src/mergeProps.ts", "../../../../node_modules/@livekit/components-react/src/hooks/useConnectionQualityIndicator.ts", "../../../../node_modules/@livekit/components-react/src/hooks/useConnectionStatus.ts", "../../../../node_modules/@livekit/components-react/src/hooks/useDataChannel.ts", "../../../../node_modules/@livekit/components-react/src/hooks/useDisconnectButton.ts", "../../../../node_modules/@livekit/components-react/src/hooks/useFacingMode.ts", "../../../../node_modules/@livekit/components-react/src/hooks/useFocusToggle.ts", "../../../../node_modules/@livekit/components-react/src/hooks/useGridLayout.ts", "../../../../node_modules/@livekit/components-react/src/hooks/useIsMuted.ts", "../../../../node_modules/@livekit/components-react/src/hooks/useIsSpeaking.ts", "../../../../node_modules/@livekit/components-react/src/hooks/useLiveKitRoom.ts", "../../../../node_modules/@livekit/components-react/src/hooks/useLocalParticipant.ts", "../../../../node_modules/@livekit/components-react/src/hooks/useLocalParticipantPermissions.ts", "../../../../node_modules/@livekit/components-react/src/hooks/useMediaDeviceSelect.ts", "../../../../node_modules/@livekit/components-react/src/hooks/useMediaDevices.ts", "../../../../node_modules/@livekit/components-react/src/hooks/useMediaTrackBySourceOrName.ts", "../../../../node_modules/@livekit/components-react/src/utils.ts", "../../../../node_modules/@livekit/components-react/src/hooks/useMediaTrack.ts", "../../../../node_modules/@livekit/components-react/src/hooks/useMediaTrackByName.ts", "../../../../node_modules/@livekit/components-react/src/hooks/usePagination.ts", "../../../../node_modules/@livekit/components-react/src/hooks/useVisualStableUpdate.ts", "../../../../node_modules/@livekit/components-react/src/hooks/useParticipantInfo.ts", "../../../../node_modules/@livekit/components-react/src/hooks/useParticipantPermissions.ts", "../../../../node_modules/@livekit/components-react/src/hooks/useParticipantTile.ts", "../../../../node_modules/@livekit/components-react/src/hooks/useRemoteParticipants.ts", "../../../../node_modules/@livekit/components-react/src/hooks/useParticipants.ts", "../../../../node_modules/@livekit/components-react/src/hooks/usePinnedTracks.ts", "../../../../node_modules/@livekit/components-react/src/hooks/useRemoteParticipant.ts", "../../../../node_modules/@livekit/components-react/src/hooks/useRoomInfo.ts", "../../../../node_modules/@livekit/components-react/src/hooks/useSortedParticipants.ts", "../../../../node_modules/@livekit/components-react/src/hooks/useSpeakingParticipants.ts", "../../../../node_modules/@livekit/components-react/src/hooks/useStartAudio.ts", "../../../../node_modules/@livekit/components-react/src/hooks/useStartVideo.ts", "../../../../node_modules/@livekit/components-react/src/hooks/useSwipe.ts", "../../../../node_modules/@livekit/components-react/src/hooks/useChatToggle.ts", "../../../../node_modules/@livekit/components-react/src/hooks/useToken.ts", "../../../../node_modules/@livekit/components-react/src/hooks/useTrackMutedIndicator.ts", "../../../../node_modules/@livekit/components-react/src/hooks/useTrackToggle.ts", "../../../../node_modules/@livekit/components-react/src/hooks/useTracks.ts", "../../../../node_modules/@livekit/components-react/src/hooks/useTrack.ts", "../../../../node_modules/@livekit/components-react/src/hooks/useTrackByName.ts", "../../../../node_modules/@livekit/components-react/src/hooks/useChat.ts", "../../../../node_modules/@livekit/components-react/src/hooks/usePersistentUserChoices.ts", "../../../../node_modules/@livekit/components-react/src/hooks/useIsEncrypted.ts", "../../../../node_modules/@livekit/components-react/src/hooks/useTrackVolume.ts", "../../../../node_modules/@livekit/components-react/src/components/ConnectionState.tsx", "../../../../node_modules/@livekit/components-react/src/components/controls/ChatToggle.tsx", "../../../../node_modules/@livekit/components-react/src/components/controls/DisconnectButton.tsx", "../../../../node_modules/@livekit/components-react/src/components/controls/FocusToggle.tsx", "../../../../node_modules/@livekit/components-react/src/assets/icons/CameraDisabledIcon.tsx", "../../../../node_modules/@livekit/components-react/src/assets/icons/CameraIcon.tsx", "../../../../node_modules/@livekit/components-react/src/assets/icons/ChatCloseIcon.tsx", "../../../../node_modules/@livekit/components-react/src/assets/icons/ChatIcon.tsx", "../../../../node_modules/@livekit/components-react/src/assets/icons/Chevron.tsx", "../../../../node_modules/@livekit/components-react/src/assets/icons/FocusToggleIcon.tsx", "../../../../node_modules/@livekit/components-react/src/assets/icons/GearIcon.tsx", "../../../../node_modules/@livekit/components-react/src/assets/icons/LeaveIcon.tsx", "../../../../node_modules/@livekit/components-react/src/assets/icons/LockLockedIcon.tsx", "../../../../node_modules/@livekit/components-react/src/assets/icons/MicDisabledIcon.tsx", "../../../../node_modules/@livekit/components-react/src/assets/icons/MicIcon.tsx", "../../../../node_modules/@livekit/components-react/src/assets/icons/QualityExcellentIcon.tsx", "../../../../node_modules/@livekit/components-react/src/assets/icons/QualityGoodIcon.tsx", "../../../../node_modules/@livekit/components-react/src/assets/icons/QualityPoorIcon.tsx", "../../../../node_modules/@livekit/components-react/src/assets/icons/QualityUnknownIcon.tsx", "../../../../node_modules/@livekit/components-react/src/assets/icons/ScreenShareIcon.tsx", "../../../../node_modules/@livekit/components-react/src/assets/icons/ScreenShareStopIcon.tsx", "../../../../node_modules/@livekit/components-react/src/assets/icons/SpinnerIcon.tsx", "../../../../node_modules/@livekit/components-react/src/assets/icons/UnfocusToggleIcon.tsx", "../../../../node_modules/@livekit/components-react/src/components/controls/MediaDeviceSelect.tsx", "../../../../node_modules/@livekit/components-react/src/components/controls/StartAudio.tsx", "../../../../node_modules/@livekit/components-react/src/components/controls/TrackToggle.tsx", "../../../../node_modules/@livekit/components-react/src/assets/icons/util.tsx", "../../../../node_modules/@livekit/components-react/src/components/layout/FocusLayout.tsx", "../../../../node_modules/@livekit/components-react/src/components/participant/ParticipantTile.tsx", "../../../../node_modules/@livekit/components-react/src/components/participant/ConnectionQualityIndicator.tsx", "../../../../node_modules/@livekit/components-react/src/components/participant/ParticipantName.tsx", "../../../../node_modules/@livekit/components-react/src/components/participant/TrackMutedIndicator.tsx", "../../../../node_modules/@livekit/components-react/src/assets/images/ParticipantPlaceholder.tsx", "../../../../node_modules/@livekit/components-react/src/components/participant/VideoTrack.tsx", "../../../../node_modules/@livekit/components-react/src/components/participant/AudioTrack.tsx", "../../../../node_modules/@livekit/components-react/src/components/layout/GridLayout.tsx", "../../../../node_modules/@livekit/components-react/src/components/TrackLoop.tsx", "../../../../node_modules/@livekit/components-react/src/components/controls/PaginationControl.tsx", "../../../../node_modules/@livekit/components-react/src/components/controls/PaginationIndicator.tsx", "../../../../node_modules/@livekit/components-react/src/components/layout/CarouselLayout.tsx", "../../../../node_modules/@livekit/components-react/src/components/layout/LayoutContextProvider.tsx", "../../../../node_modules/@livekit/components-react/src/components/LiveKitRoom.tsx", "../../../../node_modules/@livekit/components-react/src/components/participant/AudioVisualizer.tsx", "../../../../node_modules/@livekit/components-react/src/components/ParticipantLoop.tsx", "../../../../node_modules/@livekit/components-react/src/components/RoomAudioRenderer.tsx", "../../../../node_modules/@livekit/components-react/src/components/RoomName.tsx", "../../../../node_modules/@livekit/components-react/src/components/Toast.tsx", "../../../../node_modules/@livekit/components-react/src/components/participant/ParticipantAudioTile.tsx", "../../../../node_modules/@livekit/components-react/src/components/ConnectionStateToast.tsx", "../../../../node_modules/@livekit/components-react/src/components/ChatEntry.tsx", "../../../../node_modules/@livekit/components-react/src/prefabs/Chat.tsx", "../../../../node_modules/@livekit/components-react/src/prefabs/PreJoin.tsx", "../../../../node_modules/@livekit/components-react/src/prefabs/MediaDeviceMenu.tsx", "../../../../node_modules/@livekit/components-react/src/hooks/useWarnAboutMissingStyles.ts", "../../../../node_modules/@livekit/components-react/src/prefabs/VideoConference.tsx", "../../../../node_modules/@livekit/components-react/src/prefabs/ControlBar.tsx", "../../../../node_modules/@livekit/components-react/src/components/controls/StartMediaButton.tsx", "../../../../node_modules/@livekit/components-react/src/prefabs/AudioConference.tsx", "../../../../node_modules/@livekit/components-react/src/index.ts", "../../../../node_modules/@react-hook/latest/dist/module/index.js", "../../../../node_modules/livekit-client/node_modules/.pnpm/loglevel@1.8.1/node_modules/loglevel/lib/loglevel.js", "../../../../node_modules/livekit-client/src/logger.ts", "../../../../node_modules/livekit-client/node_modules/.pnpm/@bufbuild+protobuf@1.4.2/node_modules/@bufbuild/protobuf/dist/esm/private/assert.js", "../../../../node_modules/livekit-client/node_modules/.pnpm/@bufbuild+protobuf@1.4.2/node_modules/@bufbuild/protobuf/dist/esm/private/enum.js", "../../../../node_modules/livekit-client/node_modules/.pnpm/@bufbuild+protobuf@1.4.2/node_modules/@bufbuild/protobuf/dist/esm/message.js", "../../../../node_modules/livekit-client/node_modules/.pnpm/@bufbuild+protobuf@1.4.2/node_modules/@bufbuild/protobuf/dist/esm/private/message-type.js", "../../../../node_modules/livekit-client/node_modules/.pnpm/@bufbuild+protobuf@1.4.2/node_modules/@bufbuild/protobuf/dist/esm/private/proto-runtime.js", "../../../../node_modules/livekit-client/node_modules/.pnpm/@bufbuild+protobuf@1.4.2/node_modules/@bufbuild/protobuf/dist/esm/field.js", "../../../../node_modules/livekit-client/node_modules/.pnpm/@bufbuild+protobuf@1.4.2/node_modules/@bufbuild/protobuf/dist/esm/google/varint.js", "../../../../node_modules/livekit-client/node_modules/.pnpm/@bufbuild+protobuf@1.4.2/node_modules/@bufbuild/protobuf/dist/esm/proto-int64.js", "../../../../node_modules/livekit-client/node_modules/.pnpm/@bufbuild+protobuf@1.4.2/node_modules/@bufbuild/protobuf/dist/esm/binary-encoding.js", "../../../../node_modules/livekit-client/node_modules/.pnpm/@bufbuild+protobuf@1.4.2/node_modules/@bufbuild/protobuf/dist/esm/private/field-wrapper.js", "../../../../node_modules/livekit-client/node_modules/.pnpm/@bufbuild+protobuf@1.4.2/node_modules/@bufbuild/protobuf/dist/esm/private/scalars.js", "../../../../node_modules/livekit-client/node_modules/.pnpm/@bufbuild+protobuf@1.4.2/node_modules/@bufbuild/protobuf/dist/esm/private/binary-format-common.js", "../../../../node_modules/livekit-client/node_modules/.pnpm/@bufbuild+protobuf@1.4.2/node_modules/@bufbuild/protobuf/dist/esm/private/binary-format-proto3.js", "../../../../node_modules/livekit-client/node_modules/.pnpm/@bufbuild+protobuf@1.4.2/node_modules/@bufbuild/protobuf/dist/esm/proto-base64.js", "../../../../node_modules/livekit-client/node_modules/.pnpm/@bufbuild+protobuf@1.4.2/node_modules/@bufbuild/protobuf/dist/esm/private/json-format-common.js", "../../../../node_modules/livekit-client/node_modules/.pnpm/@bufbuild+protobuf@1.4.2/node_modules/@bufbuild/protobuf/dist/esm/private/json-format-proto3.js", "../../../../node_modules/livekit-client/node_modules/.pnpm/@bufbuild+protobuf@1.4.2/node_modules/@bufbuild/protobuf/dist/esm/private/util-common.js", "../../../../node_modules/livekit-client/node_modules/.pnpm/@bufbuild+protobuf@1.4.2/node_modules/@bufbuild/protobuf/dist/esm/private/field-list.js", "../../../../node_modules/livekit-client/node_modules/.pnpm/@bufbuild+protobuf@1.4.2/node_modules/@bufbuild/protobuf/dist/esm/private/names.js", "../../../../node_modules/livekit-client/node_modules/.pnpm/@bufbuild+protobuf@1.4.2/node_modules/@bufbuild/protobuf/dist/esm/private/field.js", "../../../../node_modules/livekit-client/node_modules/.pnpm/@bufbuild+protobuf@1.4.2/node_modules/@bufbuild/protobuf/dist/esm/proto3.js", "../../../../node_modules/livekit-client/node_modules/.pnpm/@bufbuild+protobuf@1.4.2/node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/timestamp_pb.js", "../../../../node_modules/livekit-client/src/proto/livekit_models_pb.ts", "../../../../node_modules/livekit-client/src/room/DefaultReconnectPolicy.ts", "../../../../node_modules/livekit-client/node_modules/.pnpm/events@3.3.0/node_modules/events/events.js", "../../../../node_modules/livekit-client/node_modules/.pnpm/webrtc-adapter@8.2.3/node_modules/webrtc-adapter/src/js/utils.js", "../../../../node_modules/livekit-client/node_modules/.pnpm/webrtc-adapter@8.2.3/node_modules/webrtc-adapter/src/js/chrome/getusermedia.js", "../../../../node_modules/livekit-client/node_modules/.pnpm/webrtc-adapter@8.2.3/node_modules/webrtc-adapter/src/js/chrome/getdisplaymedia.js", "../../../../node_modules/livekit-client/node_modules/.pnpm/webrtc-adapter@8.2.3/node_modules/webrtc-adapter/src/js/chrome/chrome_shim.js", "../../../../node_modules/livekit-client/node_modules/.pnpm/webrtc-adapter@8.2.3/node_modules/webrtc-adapter/src/js/firefox/getusermedia.js", "../../../../node_modules/livekit-client/node_modules/.pnpm/webrtc-adapter@8.2.3/node_modules/webrtc-adapter/src/js/firefox/getdisplaymedia.js", "../../../../node_modules/livekit-client/node_modules/.pnpm/webrtc-adapter@8.2.3/node_modules/webrtc-adapter/src/js/firefox/firefox_shim.js", "../../../../node_modules/livekit-client/node_modules/.pnpm/webrtc-adapter@8.2.3/node_modules/webrtc-adapter/src/js/safari/safari_shim.js", "../../../../node_modules/livekit-client/node_modules/.pnpm/sdp@3.2.0/node_modules/sdp/sdp.js", "../../../../node_modules/livekit-client/node_modules/.pnpm/webrtc-adapter@8.2.3/node_modules/webrtc-adapter/src/js/common_shim.js", "../../../../node_modules/livekit-client/node_modules/.pnpm/webrtc-adapter@8.2.3/node_modules/webrtc-adapter/src/js/adapter_factory.js", "../../../../node_modules/livekit-client/node_modules/.pnpm/webrtc-adapter@8.2.3/node_modules/webrtc-adapter/src/js/adapter_core.js", "../../../../node_modules/livekit-client/src/e2ee/constants.ts", "../../../../node_modules/livekit-client/src/e2ee/events.ts", "../../../../node_modules/livekit-client/src/e2ee/utils.ts", "../../../../node_modules/livekit-client/src/e2ee/KeyProvider.ts", "../../../../node_modules/livekit-client/src/room/errors.ts", "../../../../node_modules/livekit-client/src/room/events.ts", "../../../../node_modules/livekit-client/node_modules/.pnpm/ts-debounce@4.0.0/node_modules/ts-debounce/dist/src/index.esm.js", "../../../../node_modules/livekit-client/src/utils/browserParser.ts", "../../../../node_modules/livekit-client/src/version.ts", "../../../../node_modules/livekit-client/src/room/timers.ts", "../../../../node_modules/livekit-client/src/room/track/options.ts", "../../../../node_modules/livekit-client/src/proto/livekit_rtc_pb.ts", "../../../../node_modules/livekit-client/src/utils/cloneDeep.ts", "../../../../node_modules/livekit-client/src/room/track/Track.ts", "../../../../node_modules/livekit-client/src/room/track/utils.ts", "../../../../node_modules/livekit-client/src/room/utils.ts", "../../../../node_modules/livekit-client/src/room/DeviceManager.ts", "../../../../node_modules/livekit-client/src/room/track/LocalTrack.ts", "../../../../node_modules/livekit-client/src/e2ee/E2eeManager.ts", "../../../../node_modules/livekit-client/src/utils/AsyncQueue.ts", "../../../../node_modules/livekit-client/src/api/SignalClient.ts", "../../../../node_modules/livekit-client/node_modules/.pnpm/sdp-transform@2.14.1/node_modules/sdp-transform/lib/grammar.js", "../../../../node_modules/livekit-client/node_modules/.pnpm/sdp-transform@2.14.1/node_modules/sdp-transform/lib/parser.js", "../../../../node_modules/livekit-client/node_modules/.pnpm/sdp-transform@2.14.1/node_modules/sdp-transform/lib/writer.js", "../../../../node_modules/livekit-client/node_modules/.pnpm/sdp-transform@2.14.1/node_modules/sdp-transform/lib/index.js", "../../../../node_modules/livekit-client/src/room/PCTransport.ts", "../../../../node_modules/livekit-client/src/room/defaults.ts", "../../../../node_modules/livekit-client/src/room/PCTransportManager.ts", "../../../../node_modules/livekit-client/src/room/RTCEngine.ts", "../../../../node_modules/livekit-client/src/room/RegionUrlProvider.ts", "../../../../node_modules/livekit-client/src/room/stats.ts", "../../../../node_modules/livekit-client/src/room/track/LocalAudioTrack.ts", "../../../../node_modules/livekit-client/src/room/participant/publishUtils.ts", "../../../../node_modules/livekit-client/src/room/track/LocalVideoTrack.ts", "../../../../node_modules/livekit-client/src/room/track/RemoteTrack.ts", "../../../../node_modules/livekit-client/src/room/track/RemoteAudioTrack.ts", "../../../../node_modules/livekit-client/src/room/track/RemoteVideoTrack.ts", "../../../../node_modules/livekit-client/src/room/track/TrackPublication.ts", "../../../../node_modules/livekit-client/src/room/track/LocalTrackPublication.ts", "../../../../node_modules/livekit-client/src/room/participant/Participant.ts", "../../../../node_modules/livekit-client/src/room/participant/ParticipantTrackPermission.ts", "../../../../node_modules/livekit-client/src/room/track/RemoteTrackPublication.ts", "../../../../node_modules/livekit-client/src/room/participant/RemoteParticipant.ts", "../../../../node_modules/livekit-client/src/room/participant/LocalParticipant.ts", "../../../../node_modules/livekit-client/src/room/Room.ts", "../../../../node_modules/livekit-client/src/connectionHelper/checks/Checker.ts", "../../../../node_modules/livekit-client/src/room/track/create.ts", "../../../../node_modules/livekit-client/src/connectionHelper/checks/publishAudio.ts", "../../../../node_modules/livekit-client/src/connectionHelper/checks/publishVideo.ts", "../../../../node_modules/livekit-client/src/connectionHelper/checks/reconnect.ts", "../../../../node_modules/livekit-client/src/connectionHelper/checks/turn.ts", "../../../../node_modules/livekit-client/src/connectionHelper/checks/webrtc.ts", "../../../../node_modules/livekit-client/src/connectionHelper/checks/websocket.ts", "../../../../node_modules/livekit-client/src/connectionHelper/ConnectionCheck.ts", "../../../../node_modules/livekit-client/src/room/track/facingMode.ts", "../../../../node_modules/email-regex/index.js", "../../../../node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs", "../../../../node_modules/@floating-ui/core/dist/floating-ui.core.mjs", "../../../../node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs", "../../../../node_modules/@livekit/components-core/node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs", "../../../../node_modules/@livekit/components-core/src/constants.ts", "../../../../node_modules/@livekit/components-core/src/utils.ts", "../../../../node_modules/@livekit/components-core/src/track-reference/track-reference.types.ts", "../../../../node_modules/@livekit/components-core/src/track-reference/track-reference.utils.ts", "../../../../node_modules/@livekit/components-core/src/helper/detectMobileBrowser.ts", "../../../../node_modules/@livekit/components-core/src/helper/url-regex.ts", "../../../../node_modules/@livekit/components-core/src/helper/emailRegex.ts", "../../../../node_modules/@livekit/components-core/src/helper/floating-menu.ts", "../../../../node_modules/@livekit/components-core/src/helper/tokenizer.ts", "../../../../node_modules/@livekit/components-core/src/helper/eventGroups.ts", "../../../../node_modules/@livekit/components-core/src/logger.ts", "../../../../node_modules/@livekit/components-core/src/helper/grid-layouts.ts", "../../../../node_modules/@livekit/components-core/src/helper/set-helper.ts", "../../../../node_modules/@livekit/components-core/src/helper/featureDetection.ts", "../../../../node_modules/@livekit/components-core/src/types.ts", "../../../../node_modules/@livekit/components-core/src/sorting/sort-track-bundles.ts", "../../../../node_modules/@livekit/components-core/src/sorting/base-sort-functions.ts", "../../../../node_modules/@livekit/components-core/src/sorting/sort-participants.ts", "../../../../node_modules/@livekit/components-core/src/helper/array-helper.ts", "../../../../node_modules/@livekit/components-core/src/track-reference/test-utils.ts", "../../../../node_modules/@livekit/components-core/src/sorting/tile-array-update.ts", "../../../../node_modules/@livekit/components-core/src/components/mediaToggle.ts", "../../../../node_modules/@livekit/components-core/src/observables/participant.ts", "../../../../node_modules/@livekit/components-core/src/observables/room.ts", "../../../../node_modules/@livekit/components-core/src/components/mediaTrack.ts", "../../../../node_modules/@livekit/components-core/src/styles-interface/class-prefixer.ts", "../../../../node_modules/@livekit/components-core/src/components/mediaDeviceSelect.ts", "../../../../node_modules/@livekit/components-core/src/components/disconnectButton.ts", "../../../../node_modules/@livekit/components-core/src/components/connectionQualityIndicator.ts", "../../../../node_modules/@livekit/components-core/src/components/trackMutedIndicator.ts", "../../../../node_modules/@livekit/components-core/src/components/participantName.ts", "../../../../node_modules/@livekit/components-core/src/components/participantTile.ts", "../../../../node_modules/@livekit/components-core/src/components/chat.ts", "../../../../node_modules/@livekit/components-core/src/observables/dataChannel.ts", "../../../../node_modules/@livekit/components-core/src/components/startAudio.ts", "../../../../node_modules/@livekit/components-core/src/components/startVideo.ts", "../../../../node_modules/@livekit/components-core/src/components/chatToggle.ts", "../../../../node_modules/@livekit/components-core/src/components/focusToggle.ts", "../../../../node_modules/@livekit/components-core/src/components/clearPinButton.ts", "../../../../node_modules/@livekit/components-core/src/components/room.ts", "../../../../node_modules/@livekit/components-core/src/observables/track.ts", "../../../../node_modules/@livekit/components-core/src/observables/dom-event.ts", "../../../../node_modules/@livekit/components-core/src/persistent-storage/local-storage-helpers.ts", "../../../../node_modules/@livekit/components-core/src/persistent-storage/user-choices.ts", "../../../../node_modules/tslib/tslib.es6.mjs", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/util/isFunction.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/util/createErrorClass.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/util/UnsubscriptionError.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/util/arrRemove.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/Subscription.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/config.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/scheduler/timeoutProvider.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/util/reportUnhandledError.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/util/noop.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/NotificationFactories.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/util/errorContext.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/Subscriber.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/symbol/observable.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/util/identity.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/util/pipe.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/Observable.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/util/lift.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/operators/OperatorSubscriber.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/operators/refCount.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/observable/ConnectableObservable.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/scheduler/performanceTimestampProvider.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/scheduler/animationFrameProvider.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/observable/dom/animationFrames.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/util/ObjectUnsubscribedError.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/Subject.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/BehaviorSubject.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/scheduler/dateTimestampProvider.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/ReplaySubject.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/AsyncSubject.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/scheduler/Action.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/scheduler/intervalProvider.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/scheduler/AsyncAction.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/util/Immediate.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/scheduler/immediateProvider.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/scheduler/AsapAction.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/Scheduler.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/scheduler/AsyncScheduler.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/scheduler/AsapScheduler.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/scheduler/asap.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/scheduler/async.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/scheduler/QueueAction.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/scheduler/QueueScheduler.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/scheduler/queue.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/scheduler/AnimationFrameAction.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/scheduler/AnimationFrameScheduler.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/scheduler/animationFrame.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/observable/empty.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/util/isScheduler.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/util/args.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/util/isArrayLike.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/util/isPromise.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/util/isInteropObservable.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/util/isAsyncIterable.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/util/throwUnobservableError.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/symbol/iterator.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/util/isIterable.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/util/isReadableStreamLike.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/observable/innerFrom.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/util/executeSchedule.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/operators/observeOn.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/operators/subscribeOn.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/scheduled/scheduleObservable.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/scheduled/schedulePromise.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/scheduled/scheduleArray.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/scheduled/scheduleIterable.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/scheduled/scheduleAsyncIterable.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/scheduled/scheduleReadableStreamLike.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/scheduled/scheduled.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/observable/from.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/observable/of.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/observable/throwError.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/Notification.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/util/EmptyError.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/util/ArgumentOutOfRangeError.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/util/NotFoundError.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/util/SequenceError.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/util/isDate.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/operators/timeout.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/operators/map.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/util/mapOneOrManyArgs.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/util/argsArgArrayOrObject.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/operators/mergeInternals.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/operators/mergeMap.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/operators/mergeAll.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/operators/concatAll.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/observable/concat.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/observable/fromEvent.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/observable/never.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/util/argsOrArgArray.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/operators/filter.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/operators/scanInternals.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/operators/distinctUntilChanged.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/operators/finalize.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/operators/scan.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/operators/skipUntil.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/operators/startWith.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/operators/switchMap.ts", "../../../../node_modules/@livekit/components-core/node_modules/rxjs/src/internal/operators/takeUntil.ts", "../../../../node_modules/@livekit/components-react/node_modules/clsx/dist/clsx.mjs", "../../../../node_modules/usehooks-ts/dist/esm/useBoolean/useBoolean.js", "../../../../node_modules/usehooks-ts/dist/esm/useCopyToClipboard/useCopyToClipboard.js", "../../../../node_modules/usehooks-ts/dist/esm/useCountdown/useCountdown.js", "../../../../node_modules/usehooks-ts/dist/esm/useCounter/useCounter.js", "../../../../node_modules/usehooks-ts/dist/esm/useDebounce/useDebounce.js", "../../../../node_modules/usehooks-ts/dist/esm/useEffectOnce/useEffectOnce.js", "../../../../node_modules/usehooks-ts/dist/esm/useElementSize/useElementSize.js", "../../../../node_modules/usehooks-ts/dist/esm/useEventCallback/useEventCallback.js", "../../../../node_modules/usehooks-ts/dist/esm/useEventListener/useEventListener.js", "../../../../node_modules/usehooks-ts/dist/esm/useFetch/useFetch.js", "../../../../node_modules/usehooks-ts/dist/esm/useHover/useHover.js", "../../../../node_modules/usehooks-ts/dist/esm/useImageOnLoad/useImageOnLoad.js", "../../../../node_modules/usehooks-ts/dist/esm/useIntersectionObserver/useIntersectionObserver.js", "../../../../node_modules/usehooks-ts/dist/esm/useInterval/useInterval.js", "../../../../node_modules/usehooks-ts/dist/esm/useIsClient/useIsClient.js", "../../../../node_modules/usehooks-ts/dist/esm/useIsFirstRender/useIsFirstRender.js", "../../../../node_modules/usehooks-ts/dist/esm/useIsMounted/useIsMounted.js", "../../../../node_modules/usehooks-ts/dist/esm/useIsomorphicLayoutEffect/useIsomorphicLayoutEffect.js", "../../../../node_modules/usehooks-ts/dist/esm/useLocalStorage/useLocalStorage.js", "../../../../node_modules/usehooks-ts/dist/esm/useLockedBody/useLockedBody.js", "../../../../node_modules/usehooks-ts/dist/esm/useMap/useMap.js", "../../../../node_modules/usehooks-ts/dist/esm/useMediaQuery/useMediaQuery.js", "../../../../node_modules/usehooks-ts/dist/esm/useReadLocalStorage/useReadLocalStorage.js", "../../../../node_modules/usehooks-ts/dist/esm/useScreen/useScreen.js", "../../../../node_modules/usehooks-ts/dist/esm/useScript/useScript.js", "../../../../node_modules/usehooks-ts/dist/esm/useSessionStorage/useSessionStorage.js", "../../../../node_modules/usehooks-ts/dist/esm/useStep/useStep.js", "../../../../node_modules/usehooks-ts/dist/esm/useTernaryDarkMode/useTernaryDarkMode.js", "../../../../node_modules/usehooks-ts/dist/esm/useTimeout/useTimeout.js", "../../../../node_modules/usehooks-ts/dist/esm/useToggle/useToggle.js", "../../../../node_modules/usehooks-ts/dist/esm/useUpdateEffect/useUpdateEffect.js", "../../../../node_modules/usehooks-ts/dist/esm/useWindowSize/useWindowSize.js"],
  "sourcesContent": ["/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    \"use strict\";\n    if (typeof define === 'function' && define.amd) {\n        define(definition);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = definition();\n    } else {\n        root.log = definition();\n    }\n}(this, function () {\n    \"use strict\";\n\n    // Slightly dubious tricks to cut down minimized file size\n    var noop = function() {};\n    var undefinedType = \"undefined\";\n    var isIE = (typeof window !== undefinedType) && (typeof window.navigator !== undefinedType) && (\n        /Trident\\/|MSIE /.test(window.navigator.userAgent)\n    );\n\n    var logMethods = [\n        \"trace\",\n        \"debug\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ];\n\n    // Cross-browser bind equivalent that works at least back to IE6\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === 'function') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // Trace() doesn't print the message in IE, so for that case we need to wrap it\n    function traceForIE() {\n        if (console.log) {\n            if (console.log.apply) {\n                console.log.apply(console, arguments);\n            } else {\n                // In old IE, native console methods themselves don't have apply().\n                Function.prototype.apply.apply(console.log, [console, arguments]);\n            }\n        }\n        if (console.trace) console.trace();\n    }\n\n    // Build the best logging method possible for this env\n    // Wherever possible we want to bind, not wrap, to preserve stack traces\n    function realMethod(methodName) {\n        if (methodName === 'debug') {\n            methodName = 'log';\n        }\n\n        if (typeof console === undefinedType) {\n            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\n        } else if (methodName === 'trace' && isIE) {\n            return traceForIE;\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, 'log');\n        } else {\n            return noop;\n        }\n    }\n\n    // These private functions always need `this` to be set properly\n\n    function replaceLoggingMethods(level, loggerName) {\n        /*jshint validthis:true */\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, loggerName);\n        }\n\n        // Define log.log as an alias for log.debug\n        this.log = this.debug;\n    }\n\n    // In old IE versions, the console isn't present until you first open it.\n    // We build realMethod() replacements here that regenerate logging methods\n    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this, level, loggerName);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    // By default, we use closely bound real methods wherever possible, and\n    // otherwise we wait for a console to appear, and then try again.\n    function defaultMethodFactory(methodName, level, loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    function Logger(name, defaultLevel, factory) {\n      var self = this;\n      var currentLevel;\n      defaultLevel = defaultLevel == null ? \"WARN\" : defaultLevel;\n\n      var storageKey = \"loglevel\";\n      if (typeof name === \"string\") {\n        storageKey += \":\" + name;\n      } else if (typeof name === \"symbol\") {\n        storageKey = undefined;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          // Fallback to cookies if local storage gives us nothing\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var location = cookie.indexOf(\n                      encodeURIComponent(storageKey) + \"=\");\n                  if (location !== -1) {\n                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      function clearPersistedLevel() {\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage.removeItem(storageKey);\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=; expires=Thu, 01 Jan 1970 00:00:00 UTC\";\n          } catch (ignore) {}\n      }\n\n      /*\n       *\n       * Public logger API - see https://github.com/pimterry/loglevel for details\n       *\n       */\n\n      self.name = name;\n\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n          \"ERROR\": 4, \"SILENT\": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          return currentLevel;\n      };\n\n      self.setLevel = function (level, persist) {\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n              currentLevel = level;\n              if (persist !== false) {  // defaults to true\n                  persistLevelIfPossible(level);\n              }\n              replaceLoggingMethods.call(self, level, name);\n              if (typeof console === undefinedType && level < self.levels.SILENT) {\n                  return \"No console available for logging\";\n              }\n          } else {\n              throw \"log.setLevel() called with invalid level: \" + level;\n          }\n      };\n\n      self.setDefaultLevel = function (level) {\n          defaultLevel = level;\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.resetLevel = function () {\n          self.setLevel(defaultLevel, false);\n          clearPersistedLevel();\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      // Initialize with the right level\n      var initialLevel = getPersistedLevel();\n      if (initialLevel == null) {\n          initialLevel = defaultLevel;\n      }\n      self.setLevel(initialLevel, false);\n    }\n\n    /*\n     *\n     * Top-level API\n     *\n     */\n\n    var defaultLogger = new Logger();\n\n    var _loggersByName = {};\n    defaultLogger.getLogger = function getLogger(name) {\n        if ((typeof name !== \"symbol\" && typeof name !== \"string\") || name === \"\") {\n          throw new TypeError(\"You must supply a name when creating a logger.\");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n          logger = _loggersByName[name] = new Logger(\n            name, defaultLogger.getLevel(), defaultLogger.methodFactory);\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    defaultLogger.getLoggers = function getLoggers() {\n        return _loggersByName;\n    };\n\n    // ES6 default export, for compatibility\n    defaultLogger['default'] = defaultLogger;\n\n    return defaultLogger;\n}));\n", "import * as React from 'react';\nimport { useClearPinButton } from '../../hooks';\n\n/** @public */\nexport interface ClearPinButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {}\n\n/**\n * The `ClearPinButton` is a basic html button with the added ability to signal\n * the `LayoutContext` that it should display the grid view again.\n * @remarks\n * This component works only inside a `LayoutContext`.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <ClearPinButton>Back to grid view</ClearPinButton>\n * </LiveKitRoom>\n * ```\n * @public\n */\nexport function ClearPinButton(props: ClearPinButtonProps) {\n  const { buttonProps } = useClearPinButton(props);\n  return <button {...buttonProps}>{props.children}</button>;\n}\n", "import type { Room } from 'livekit-client';\nimport * as React from 'react';\nimport { useObservableState } from './internal';\nimport { roomAudioPlaybackAllowedObservable } from '@livekit/components-core';\nimport { useEnsureRoom } from '../context';\n\n/**\n * In many browsers to start audio playback, the user must perform a user-initiated event such as clicking a button.\n * The `useAudioPlayback` hook returns an object with a boolean `canPlayAudio` flag that indicates whether audio\n * playback is allowed in the current context, as well as a `startAudio` function that can be called in a button\n * `onClick` callback to start audio playback in the current context.\n *\n * @see Autoplay policy on MDN web docs for more info: {@link https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API/Best_practices#autoplay_policy}\n * @alpha\n */\nexport function useAudioPlayback(room?: Room): {\n  canPlayAudio: boolean;\n  startAudio: () => Promise<void>;\n} {\n  const roomEnsured = useEnsureRoom(room);\n  const startAudio = React.useCallback(async () => {\n    await roomEnsured.startAudio();\n  }, [roomEnsured]);\n\n  const observable = React.useMemo(\n    () => roomAudioPlaybackAllowedObservable(roomEnsured),\n    [roomEnsured],\n  );\n  const { canPlayAudio } = useObservableState(observable, {\n    canPlayAudio: roomEnsured.canPlaybackAudio,\n  });\n\n  return { canPlayAudio, startAudio };\n}\n", "/* eslint-disable no-return-assign */\n/* eslint-disable no-underscore-dangle */\nimport * as React from 'react';\nimport useLatest from '@react-hook/latest';\n\n/**\n * A React hook that fires a callback whenever ResizeObserver detects a change to its size\n * code extracted from https://github.com/jaredLunde/react-hook/blob/master/packages/resize-observer/src/index.tsx in order to not include the polyfill for resize-observer\n *\n * @internal\n */\nexport function useResizeObserver<T extends HTMLElement>(\n  target: React.RefObject<T>,\n  callback: UseResizeObserverCallback,\n) {\n  const resizeObserver = getResizeObserver();\n  const storedCallback = useLatest(callback);\n\n  React.useLayoutEffect(() => {\n    let didUnsubscribe = false;\n\n    const targetEl = target.current;\n    if (!targetEl) return;\n\n    function cb(entry: ResizeObserverEntry, observer: ResizeObserver) {\n      if (didUnsubscribe) return;\n      storedCallback.current(entry, observer);\n    }\n\n    resizeObserver?.subscribe(targetEl as HTMLElement, cb);\n\n    return () => {\n      didUnsubscribe = true;\n      resizeObserver?.unsubscribe(targetEl as HTMLElement, cb);\n    };\n  }, [target.current, resizeObserver, storedCallback]);\n\n  return resizeObserver?.observer;\n}\n\nfunction createResizeObserver() {\n  let ticking = false;\n  let allEntries: ResizeObserverEntry[] = [];\n\n  const callbacks: Map<unknown, Array<UseResizeObserverCallback>> = new Map();\n\n  if (typeof window === 'undefined') {\n    return;\n  }\n\n  const observer = new ResizeObserver((entries: ResizeObserverEntry[], obs: ResizeObserver) => {\n    allEntries = allEntries.concat(entries);\n    if (!ticking) {\n      window.requestAnimationFrame(() => {\n        const triggered = new Set<Element>();\n        for (let i = 0; i < allEntries.length; i++) {\n          if (triggered.has(allEntries[i].target)) continue;\n          triggered.add(allEntries[i].target);\n          const cbs = callbacks.get(allEntries[i].target);\n          cbs?.forEach((cb) => cb(allEntries[i], obs));\n        }\n        allEntries = [];\n        ticking = false;\n      });\n    }\n    ticking = true;\n  });\n\n  return {\n    observer,\n    subscribe(target: HTMLElement, callback: UseResizeObserverCallback) {\n      observer.observe(target);\n      const cbs = callbacks.get(target) ?? [];\n      cbs.push(callback);\n      callbacks.set(target, cbs);\n    },\n    unsubscribe(target: HTMLElement, callback: UseResizeObserverCallback) {\n      const cbs = callbacks.get(target) ?? [];\n      if (cbs.length === 1) {\n        observer.unobserve(target);\n        callbacks.delete(target);\n        return;\n      }\n      const cbIndex = cbs.indexOf(callback);\n      if (cbIndex !== -1) cbs.splice(cbIndex, 1);\n      callbacks.set(target, cbs);\n    },\n  };\n}\n\nlet _resizeObserver: ReturnType<typeof createResizeObserver>;\n\nconst getResizeObserver = () =>\n  !_resizeObserver ? (_resizeObserver = createResizeObserver()) : _resizeObserver;\n\nexport type UseResizeObserverCallback = (\n  entry: ResizeObserverEntry,\n  observer: ResizeObserver,\n) => unknown;\n\nexport const useSize = (target: React.RefObject<HTMLDivElement>) => {\n  const [size, setSize] = React.useState({ width: 0, height: 0 });\n  React.useLayoutEffect(() => {\n    if (target.current) {\n      const { width, height } = target.current.getBoundingClientRect();\n      setSize({ width, height });\n    }\n  }, [target.current]);\n\n  const resizeCallback = React.useCallback(\n    (entry: ResizeObserverEntry) => setSize(entry.contentRect),\n    [],\n  );\n  // Where the magic happens\n  useResizeObserver(target, resizeCallback);\n  return size;\n};\n", "import * as React from 'react';\n// @ts-ignore\nimport type { Observable } from 'rxjs';\n\n/**\n * @internal\n */\nexport function useObservableState<T>(observable: Observable<T> | undefined, startWith: T) {\n  const [state, setState] = React.useState<T>(startWith);\n  React.useEffect(() => {\n    // observable state doesn't run in SSR\n    if (typeof window === 'undefined' || !observable) return;\n    const subscription = observable.subscribe(setState);\n    return () => subscription.unsubscribe();\n  }, [observable]);\n  return state;\n}\n", "import * as React from 'react';\n/**\n * Implementation used from https://github.com/juliencrn/usehooks-ts\n *\n * @internal\n */\nexport function useMediaQuery(query: string): boolean {\n  const getMatches = (query: string): boolean => {\n    // Prevents SSR issues\n    if (typeof window !== 'undefined') {\n      return window.matchMedia(query).matches;\n    }\n    return false;\n  };\n\n  const [matches, setMatches] = React.useState<boolean>(getMatches(query));\n\n  function handleChange() {\n    setMatches(getMatches(query));\n  }\n\n  React.useEffect(() => {\n    const matchMedia = window.matchMedia(query);\n\n    // Triggered at the first client-side load and if query changes\n    handleChange();\n\n    // Listen matchMedia\n    if (matchMedia.addListener) {\n      matchMedia.addListener(handleChange);\n    } else {\n      matchMedia.addEventListener('change', handleChange);\n    }\n\n    return () => {\n      if (matchMedia.removeListener) {\n        matchMedia.removeListener(handleChange);\n      } else {\n        matchMedia.removeEventListener('change', handleChange);\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [query]);\n\n  return matches;\n}\n", "import { PIN_DEFAULT_STATE, WIDGET_DEFAULT_STATE } from '@livekit/components-core';\nimport * as React from 'react';\nimport type { PinContextType } from './pin-context';\nimport type { ChatContextType } from './chat-context';\nimport { chatReducer } from './chat-context';\nimport { pinReducer } from './pin-context';\n\n/** @public */\nexport type LayoutContextType = {\n  pin: PinContextType;\n  widget: ChatContextType;\n};\n\n/** @public */\nexport const LayoutContext = React.createContext<LayoutContextType | undefined>(undefined);\n\n/**\n * Ensures that a layout context is provided via context.\n * If no layout context is provided, an error is thrown.\n * @public\n */\nexport function useLayoutContext(): LayoutContextType {\n  const layoutContext = React.useContext(LayoutContext);\n  if (!layoutContext) {\n    throw Error('Tried to access LayoutContext context outside a LayoutContextProvider provider.');\n  }\n  return layoutContext;\n}\n\n/**\n * Ensures that a layout context is provided, either via context or explicitly as a parameter.\n * If not inside a `LayoutContext` and no layout context is provided, an error is thrown.\n * @public\n */\nexport function useEnsureLayoutContext(layoutContext?: LayoutContextType) {\n  const layout = useMaybeLayoutContext();\n  layoutContext ??= layout;\n  if (!layoutContext) {\n    throw Error('Tried to access LayoutContext context outside a LayoutContextProvider provider.');\n  }\n  return layoutContext;\n}\n\n/** @public */\nexport function useCreateLayoutContext(): LayoutContextType {\n  const [pinState, pinDispatch] = React.useReducer(pinReducer, PIN_DEFAULT_STATE);\n  const [widgetState, widgetDispatch] = React.useReducer(chatReducer, WIDGET_DEFAULT_STATE);\n  return {\n    pin: { dispatch: pinDispatch, state: pinState },\n    widget: { dispatch: widgetDispatch, state: widgetState },\n  };\n}\n\n/** @public */\nexport function useEnsureCreateLayoutContext(layoutContext?: LayoutContextType): LayoutContextType {\n  const [pinState, pinDispatch] = React.useReducer(pinReducer, PIN_DEFAULT_STATE);\n  const [widgetState, widgetDispatch] = React.useReducer(chatReducer, WIDGET_DEFAULT_STATE);\n  return (\n    layoutContext ?? {\n      pin: { dispatch: pinDispatch, state: pinState },\n      widget: { dispatch: widgetDispatch, state: widgetState },\n    }\n  );\n}\n\n/**\n * Returns a layout context from the `LayoutContext` if it exists, otherwise `undefined`.\n * @public\n */\nexport function useMaybeLayoutContext(): LayoutContextType | undefined {\n  return React.useContext(LayoutContext);\n}\n", "import type { WidgetState } from '@livekit/components-core';\nimport type * as React from 'react';\n\n/** @internal */\nexport type ChatContextAction =\n  | { msg: 'show_chat' }\n  | { msg: 'hide_chat' }\n  | { msg: 'toggle_chat' }\n  | { msg: 'unread_msg'; count: number };\n\n/** @internal */\nexport type ChatContextType = {\n  dispatch?: React.Dispatch<ChatContextAction>;\n  state?: WidgetState;\n};\n\n/** @internal */\nexport function chatReducer(state: WidgetState, action: ChatContextAction): WidgetState {\n  if (action.msg === 'show_chat') {\n    return { ...state, showChat: true, unreadMessages: 0 };\n  } else if (action.msg === 'hide_chat') {\n    return { ...state, showChat: false };\n  } else if (action.msg === 'toggle_chat') {\n    const newState = { ...state, showChat: !state.showChat };\n    if (newState.showChat === true) {\n      newState.unreadMessages = 0;\n    }\n    return newState;\n  } else if (action.msg === 'unread_msg') {\n    return { ...state, unreadMessages: action.count };\n  } else {\n    return { ...state };\n  }\n}\n", "import type { PinState, TrackReferenceOrPlaceholder } from '@livekit/components-core';\nimport type * as React from 'react';\n\n/** @internal */\nexport type PinAction =\n  | {\n      msg: 'set_pin';\n      trackReference: TrackReferenceOrPlaceholder;\n    }\n  | { msg: 'clear_pin' };\n\n/** @internal */\nexport type PinContextType = {\n  dispatch?: React.Dispatch<PinAction>;\n  state?: PinState;\n};\n\n/** @internal */\nexport function pinReducer(state: PinState, action: PinAction): PinState {\n  if (action.msg === 'set_pin') {\n    return [action.trackReference];\n  } else if (action.msg === 'clear_pin') {\n    return [];\n  } else {\n    return { ...state };\n  }\n}\n", "import type { Participant } from 'livekit-client';\nimport * as React from 'react';\nimport { useMaybeTrackRefContext } from './track-reference-context';\n\n/** @public */\nexport const ParticipantContext = React.createContext<Participant | undefined>(undefined);\n\n/**\n * Ensures that a participant is provided via context.\n * If not inside a `ParticipantContext`, an error is thrown.\n * @public\n */\nexport function useParticipantContext() {\n  const participant = React.useContext(ParticipantContext);\n  if (!participant) {\n    throw Error('tried to access participant context outside of participant context provider');\n  }\n  return participant;\n}\n\n/**\n * Returns a participant from the `ParticipantContext` if it exists, otherwise `undefined`.\n * @public\n */\nexport function useMaybeParticipantContext() {\n  return React.useContext(ParticipantContext);\n}\n\n/**\n * Ensures that a participant is provided, either via context or explicitly as a parameter.\n * If not inside a `ParticipantContext` and no participant is provided, an error is thrown.\n * @public\n */\nexport function useEnsureParticipant(participant?: Participant) {\n  const context = useMaybeParticipantContext();\n  const trackContext = useMaybeTrackRefContext();\n  const p = participant ?? context ?? trackContext?.participant;\n  if (!p) {\n    throw new Error(\n      'No participant provided, make sure you are inside a participant context or pass the participant explicitly',\n    );\n  }\n  return p;\n}\n", "import type { TrackReferenceOrPlaceholder } from '@livekit/components-core';\nimport * as React from 'react';\n\n/**\n * This context provides a `TrackReferenceOrPlaceholder` to all child components.\n * @public\n */\nexport const TrackRefContext = React.createContext<TrackReferenceOrPlaceholder | undefined>(\n  undefined,\n);\n\n/**\n * @public\n * @deprecated `TrackContext` has been renamed to `TrackRefContext`, use this as a drop in replacement.\n */\nexport const TrackContext = TrackRefContext;\n\n/**\n * Ensures that a track reference is provided via context.\n * If not inside a `TrackRefContext`, an error is thrown.\n * @public\n * @deprecated `useTrackContext` has been renamed to `useTrackRefContext`, use this as a drop in replacement.\n */\nexport function useTrackContext() {\n  return useTrackRefContext();\n}\n\n/**\n * Ensures that a track reference is provided via context.\n * If not inside a `TrackRefContext`, an error is thrown.\n * @public\n */\nexport function useTrackRefContext() {\n  const trackReference = React.useContext(TrackRefContext);\n  if (!trackReference) {\n    throw Error('tried to access track context outside of track context provider');\n  }\n  return trackReference;\n}\n\n/**\n * Returns a track reference from the `TrackContext` if it exists, otherwise `undefined`.\n * @public\n * @deprecated `useMaybeTrackContext` has been renamed to `useMaybeTrackRefContext`, use this as a drop in replacement.\n */\nexport function useMaybeTrackContext() {\n  return useMaybeTrackRefContext();\n}\n\n/**\n * Returns a track reference from the `TrackRefContext` if it exists, otherwise `undefined`.\n * @public\n */\nexport function useMaybeTrackRefContext() {\n  return React.useContext(TrackRefContext);\n}\n\n/**\n * Ensures that a track reference is provided, either via context or explicitly as a parameter.\n * If not inside a `TrackContext` and no track reference is provided, an error is thrown.\n * @public\n * @deprecated `useEnsureTrackReference` has been renamed to `useEnsureTrackRef`, use this as a drop in replacement.\n */\nexport function useEnsureTrackReference(track?: TrackReferenceOrPlaceholder) {\n  return useEnsureTrackRef(track);\n}\n\n/**\n * Ensures that a track reference is provided, either via context or explicitly as a parameter.\n * If not inside a `TrackRefContext` and no track reference is provided, an error is thrown.\n * @public\n */\nexport function useEnsureTrackRef(trackRef?: TrackReferenceOrPlaceholder) {\n  const context = useMaybeTrackRefContext();\n  const ref = trackRef ?? context;\n  if (!ref) {\n    throw new Error(\n      'No TrackRef, make sure you are inside a TrackRefContext or pass the TrackRef explicitly',\n    );\n  }\n  return ref;\n}\n", "import type { Room } from 'livekit-client';\nimport * as React from 'react';\n\n/** @public */\nexport const RoomContext = React.createContext<Room | undefined>(undefined);\n\n/**\n * Ensures that a room is provided via context.\n * If no room is provided, an error is thrown.\n * @public\n */\nexport function useRoomContext() {\n  const ctx = React.useContext(RoomContext);\n  if (!ctx) {\n    throw Error('tried to access room context outside of livekit room component');\n  }\n  return ctx;\n}\n\n/**\n * Returns the room context if it exists, otherwise undefined.\n * @public\n */\nexport function useMaybeRoomContext() {\n  return React.useContext(RoomContext);\n}\n\n/**\n * Ensures that a room is provided, either via context or explicitly as a parameter.\n * If no room is provided, an error is thrown.\n * @public\n */\nexport function useEnsureRoom(room?: Room) {\n  const context = useMaybeRoomContext();\n  const r = room ?? context;\n  if (!r) {\n    throw new Error(\n      'No room provided, make sure you are inside a Room context or pass the room explicitly',\n    );\n  }\n  return r;\n}\n", "import * as React from 'react';\n\n/** @internal */\nexport interface FeatureFlags {\n  autoSubscription?: boolean;\n}\n\ntype FeatureContext<T extends boolean = false> = T extends true\n  ? FeatureFlags\n  : FeatureFlags | undefined;\n\n/** @internal */\nexport const LKFeatureContext = React.createContext<FeatureFlags | undefined>(undefined);\n\n/**\n * @internal\n */\nexport function useFeatureContext<T extends boolean>(require?: T): FeatureContext<T> {\n  const ctx = React.useContext(LKFeatureContext) as FeatureContext<T>;\n  if (require === true) {\n    if (ctx) {\n      return ctx;\n    } else {\n      throw Error('tried to access feature context, but none is present');\n    }\n  }\n  return ctx;\n}\n", "import { setupClearPinButton } from '@livekit/components-core';\nimport * as React from 'react';\nimport { useLayoutContext } from '../context';\nimport { mergeProps } from '../mergeProps';\nimport type { ClearPinButtonProps } from '../components';\n\n/**\n * The `useClearPinButton` hook provides props for the {@link ClearPinButton}\n * or your custom implementation of it component. It adds the `onClick` handler\n * to signal the `LayoutContext` that the tile in focus should be cleared.\n * @public\n */\nexport function useClearPinButton(props: ClearPinButtonProps) {\n  const { state, dispatch } = useLayoutContext().pin;\n\n  const buttonProps = React.useMemo(() => {\n    const { className } = setupClearPinButton();\n    const mergedProps = mergeProps(props, {\n      className,\n      disabled: !state?.length,\n      onClick: () => {\n        if (dispatch) dispatch({ msg: 'clear_pin' });\n      },\n    });\n    return mergedProps;\n  }, [props, dispatch, state]);\n\n  return { buttonProps };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport clsx from 'clsx';\n\n/**\n * Calls all functions in the order they were chained with the same arguments.\n * @internal\n */\nexport function chain(...callbacks: any[]): (...args: any[]) => void {\n  return (...args: any[]) => {\n    for (const callback of callbacks) {\n      if (typeof callback === 'function') {\n        callback(...args);\n      }\n    }\n  };\n}\n\ninterface Props {\n  [key: string]: any;\n}\n\n// taken from: https://stackoverflow.com/questions/51603250/typescript-3-parameter-list-intersection-type/51604379#51604379\ntype TupleTypes<T> = { [P in keyof T]: T[P] } extends { [key: number]: infer V } ? V : never;\ntype UnionToIntersection<U> = (U extends any ? (k: U) => void : never) extends (k: infer I) => void\n  ? I\n  : never;\n\n/**\n * Merges multiple props objects together. Event handlers are chained,\n * classNames are combined, and ids are deduplicated - different ids\n * will trigger a side-effect and re-render components hooked up with `useId`.\n * For all other props, the last prop object overrides all previous ones.\n * @param args - Multiple sets of props to merge together.\n * @internal\n */\nexport function mergeProps<T extends Props[]>(...args: T): UnionToIntersection<TupleTypes<T>> {\n  // Start with a base clone of the first argument. This is a lot faster than starting\n  // with an empty object and adding properties as we go.\n  const result: Props = { ...args[0] };\n  for (let i = 1; i < args.length; i++) {\n    const props = args[i];\n    for (const key in props) {\n      const a = result[key];\n      const b = props[key];\n\n      // Chain events\n      if (\n        typeof a === 'function' &&\n        typeof b === 'function' &&\n        // This is a lot faster than a regex.\n        key[0] === 'o' &&\n        key[1] === 'n' &&\n        key.charCodeAt(2) >= /* 'A' */ 65 &&\n        key.charCodeAt(2) <= /* 'Z' */ 90\n      ) {\n        result[key] = chain(a, b);\n\n        // Merge classnames, sometimes classNames are empty string which eval to false, so we just need to do a type check\n      } else if (\n        (key === 'className' || key === 'UNSAFE_className') &&\n        typeof a === 'string' &&\n        typeof b === 'string'\n      ) {\n        result[key] = clsx(a, b);\n      } else {\n        result[key] = b !== undefined ? b : a;\n      }\n    }\n  }\n\n  return result as UnionToIntersection<TupleTypes<T>>;\n}\n", "import { setupConnectionQualityIndicator } from '@livekit/components-core';\nimport type { Participant } from 'livekit-client';\nimport { ConnectionQuality } from 'livekit-client';\nimport * as React from 'react';\nimport { useEnsureParticipant } from '../context';\nimport { useObservableState } from './internal';\n\n/** @public */\nexport interface ConnectionQualityIndicatorOptions {\n  participant?: Participant;\n}\n\n/**\n * The `useConnectionQualityIndicator` hook provides props for the `ConnectionQualityIndicator` or your custom implementation of it component.\n * @example\n * ```tsx\n * const { quality } = useConnectionQualityIndicator();\n * // or\n * const { quality } = useConnectionQualityIndicator({ participant });\n * ```\n * @public\n */\nexport function useConnectionQualityIndicator(options: ConnectionQualityIndicatorOptions = {}) {\n  const p = useEnsureParticipant(options.participant);\n\n  const { className, connectionQualityObserver } = React.useMemo(\n    () => setupConnectionQualityIndicator(p),\n    [p],\n  );\n\n  const quality = useObservableState(connectionQualityObserver, ConnectionQuality.Unknown);\n\n  return { className, quality };\n}\n", "import { connectionStateObserver } from '@livekit/components-core';\nimport type { Room } from 'livekit-client';\nimport * as React from 'react';\nimport { useEnsureRoom } from '../context';\nimport { useObservableState } from './internal';\n\n/**\n * The `useConnectionState` hook allows you to simply implement your own `ConnectionState` component.\n *\n * @example\n * ```tsx\n * const connectionState = useConnectionState(room);\n * ```\n * @public\n */\nexport function useConnectionState(room?: Room) {\n  // passed room takes precedence, if not supplied get current room context\n  const r = useEnsureRoom(room);\n  const observable = React.useMemo(() => connectionStateObserver(r), [r]);\n  const connectionState = useObservableState(observable, r.state);\n  return connectionState;\n}\n", "import type { DataSendOptions, ReceivedDataMessage } from '@livekit/components-core';\nimport { setupDataMessageHandler } from '@livekit/components-core';\nimport * as React from 'react';\nimport { useRoomContext } from '../context';\nimport { useObservableState } from './internal';\n\ntype UseDataChannelReturnType<T extends string | undefined = undefined> = {\n  isSending: boolean;\n  send: (payload: Uint8Array, options: DataSendOptions) => void;\n  message: ReceivedDataMessage<T> | undefined;\n};\n\n/**\n * The `useDataChannel` hook returns the ability to send and receive messages.\n * By optionally passing a `topic`, you can narrow down which messages are returned in the messages array.\n * @remarks\n * There is only one data channel. Passing a `topic` does not open a new data channel.\n * It is only used to filter out messages with no or a different `topic`.\n *\n * @example\n * ```tsx\n * // Send messages to all participants via the 'chat' topic.\n * const { message, send } = useDataChannel('chat');\n * ```\n * @public\n */\nexport function useDataChannel<T extends string>(\n  topic: T,\n  onMessage?: (msg: ReceivedDataMessage<T>) => void,\n): UseDataChannelReturnType<T>;\n/**\n * The `useDataChannel` hook returns the ability to send and receive messages.\n * @remarks\n * There is only one data channel. Passing a `topic` does not open a new data channel.\n * It is only used to filter out messages with no or a different `topic`.\n *\n * @example\n * ```tsx\n * // Send messages to all participants\n * const { message, send } = useDataChannel(callback);\n * ```\n * @public\n */\nexport function useDataChannel(\n  onMessage?: (msg: ReceivedDataMessage) => void,\n): UseDataChannelReturnType;\n/**\n * @internal\n */\nexport function useDataChannel<T extends string>(\n  topicOrCallback?: T | ((msg: ReceivedDataMessage) => void),\n  callback?: (msg: ReceivedDataMessage<T>) => void,\n) {\n  const onMessage = typeof topicOrCallback === 'function' ? topicOrCallback : callback;\n\n  const topic = typeof topicOrCallback === 'string' ? topicOrCallback : undefined;\n  const room = useRoomContext();\n  const { send, messageObservable, isSendingObservable } = React.useMemo(\n    () => setupDataMessageHandler(room, topic, onMessage),\n    [room, topic, onMessage],\n  );\n\n  const message = useObservableState(messageObservable, undefined);\n  const isSending = useObservableState(isSendingObservable, false);\n\n  return {\n    message,\n    send,\n    isSending,\n  };\n}\n", "import { setupDisconnectButton } from '@livekit/components-core';\nimport { ConnectionState } from 'livekit-client';\nimport * as React from 'react';\nimport type { DisconnectButtonProps } from '../components';\nimport { useRoomContext } from '../context';\nimport { mergeProps } from '../mergeProps';\nimport { useConnectionState } from './useConnectionStatus';\n\n/**\n * The `useDisconnectButton` hook is used to implement the `DisconnectButton` or your\n * custom implementation of it. It adds onClick handler to the button to disconnect\n * from the room.\n *\n * @example\n * ```tsx\n * const { buttonProps } = useDisconnectButton();\n * return <button {...buttonProps}>Disconnect</button>;\n * ```\n * @public\n */\nexport function useDisconnectButton(props: DisconnectButtonProps) {\n  const room = useRoomContext();\n  const connectionState = useConnectionState(room);\n\n  const buttonProps = React.useMemo(() => {\n    const { className, disconnect } = setupDisconnectButton(room);\n    const mergedProps = mergeProps(props, {\n      className,\n      onClick: () => disconnect(props.stopTracks ?? true),\n      disabled: connectionState === ConnectionState.Disconnected,\n    });\n    return mergedProps;\n  }, [room, props, connectionState]);\n\n  return { buttonProps };\n}\n", "import type { TrackReferenceOrPlaceholder } from '@livekit/components-core';\nimport { LocalTrackPublication, facingModeFromLocalTrack } from 'livekit-client';\n\n/**\n * Try to determine the `facingMode` of a local participant video track.\n * @remarks\n * Works only on local video tracks.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints/facingMode | MDN docs on facingMode}\n * @alpha\n */\nexport function useFacingMode(\n  trackReference: TrackReferenceOrPlaceholder,\n): 'user' | 'environment' | 'left' | 'right' | 'undefined' {\n  if (trackReference.publication instanceof LocalTrackPublication) {\n    const localTrack = trackReference.publication.track;\n    if (localTrack) {\n      const { facingMode } = facingModeFromLocalTrack(localTrack);\n      return facingMode;\n    }\n  }\n  return 'undefined';\n}\n", "import type { TrackReferenceOrPlaceholder } from '@livekit/components-core';\nimport { setupFocusToggle, isTrackReferencePinned } from '@livekit/components-core';\nimport type { Track, Participant } from 'livekit-client';\nimport { useEnsureParticipant, useMaybeLayoutContext } from '../context';\nimport { mergeProps } from '../mergeProps';\nimport * as React from 'react';\n\n/** @public */\nexport interface UseFocusToggleProps {\n  trackRef?: TrackReferenceOrPlaceholder;\n  /** @deprecated This parameter will be removed in a future version use `trackRef` instead. */\n  trackSource?: Track.Source;\n  /** @deprecated This parameter will be removed in a future version use `trackRef` instead. */\n  participant?: Participant;\n  props: React.ButtonHTMLAttributes<HTMLButtonElement>;\n}\n\n/**\n * The `useFocusToggle` hook is used to implement the `FocusToggle` or your custom implementation of it.\n * The `TrackReferenceOrPlaceholder` is used to register a onClick handler and to identify the track to focus on.\n *\n * @example\n * ```tsx\n * const { mergedProps, inFocus } = useFocusToggle({ trackRef, props: yourButtonProps });\n * return <button {...mergedProps}>{inFocus ? 'Unfocus' : 'Focus'}</button>;\n * ```\n * @public\n */\nexport function useFocusToggle({ trackRef, trackSource, participant, props }: UseFocusToggleProps) {\n  const p = useEnsureParticipant(participant);\n  if (!trackRef && !trackSource) {\n    throw new Error('trackRef or trackSource must be defined.');\n  }\n  const layoutContext = useMaybeLayoutContext();\n  const { className } = React.useMemo(() => setupFocusToggle(), []);\n\n  const inFocus: boolean = React.useMemo(() => {\n    if (trackRef) {\n      return isTrackReferencePinned(trackRef, layoutContext?.pin.state);\n    } else if (trackSource) {\n      const track = p.getTrack(trackSource);\n      if (layoutContext?.pin.state && track) {\n        return isTrackReferencePinned(\n          { participant: p, source: trackSource, publication: track },\n          layoutContext.pin.state,\n        );\n      } else {\n        return false;\n      }\n    } else {\n      throw new Error('trackRef or trackSource and participant must be defined.');\n    }\n  }, [trackRef, layoutContext?.pin.state, p, trackSource]);\n\n  const mergedProps = React.useMemo(\n    () =>\n      mergeProps(props, {\n        className,\n        onClick: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n          // Call user defined on click callbacks.\n          props.onClick?.(event);\n\n          // Set or clear focus based on current focus state.\n          if (trackRef) {\n            if (inFocus) {\n              layoutContext?.pin.dispatch?.({\n                msg: 'clear_pin',\n              });\n            } else {\n              layoutContext?.pin.dispatch?.({\n                msg: 'set_pin',\n                trackReference: trackRef,\n              });\n            }\n          } else if (trackSource) {\n            const track = p.getTrack(trackSource);\n            if (layoutContext?.pin.dispatch && track) {\n              if (inFocus) {\n                layoutContext.pin.dispatch({\n                  msg: 'clear_pin',\n                });\n              } else {\n                layoutContext.pin.dispatch({\n                  msg: 'set_pin',\n                  trackReference: {\n                    participant: p,\n                    publication: track,\n                    source: track.source,\n                  },\n                });\n              }\n            }\n          }\n        },\n      }),\n    [props, className, trackRef, trackSource, inFocus, layoutContext?.pin, p],\n  );\n\n  return { mergedProps, inFocus };\n}\n", "import { GRID_LAYOUTS, selectGridLayout } from '@livekit/components-core';\nimport type { GridLayoutDefinition } from '@livekit/components-core';\nimport * as React from 'react';\nimport { useSize } from './internal';\n\n/**\n * The `useGridLayout` hook tries to select the best layout to fit all tiles.\n * If the available screen space is not enough, it will reduce the number of maximum visible\n * tiles and select a layout that still works visually within the given limitations.\n * As the order of tiles changes over time, the hook tries to keep visual updates to a minimum\n * while trying to display important tiles such as speaking participants or screen shares.\n *\n * @example\n * ```tsx\n * const { layout } = useGridLayout(gridElement, trackCount);\n * ```\n * @public\n */\nexport function useGridLayout(\n  /** HTML element that contains the grid. */\n  gridElement: React.RefObject<HTMLDivElement>,\n  /** Count of tracks that should get layed out */\n  trackCount: number,\n): { layout: GridLayoutDefinition } {\n  const { width, height } = useSize(gridElement);\n\n  const layout =\n    width > 0 && height > 0\n      ? selectGridLayout(GRID_LAYOUTS, trackCount, width, height)\n      : GRID_LAYOUTS[0];\n\n  React.useEffect(() => {\n    if (gridElement.current && layout) {\n      gridElement.current.style.setProperty('--lk-col-count', layout?.columns.toString());\n      gridElement.current.style.setProperty('--lk-row-count', layout?.rows.toString());\n    }\n  }, [gridElement, layout]);\n\n  return {\n    layout,\n  };\n}\n", "import {\n  type TrackReferenceOrPlaceholder,\n  getTrackReferenceId,\n  mutedObserver,\n} from '@livekit/components-core';\nimport type { Participant, Track } from 'livekit-client';\nimport * as React from 'react';\nimport { useEnsureParticipant } from '../context';\n\n/** @public */\nexport interface UseIsMutedOptions {\n  participant?: Participant;\n}\n\n/**\n * The `useIsMuted` hook is used to implement the `TrackMutedIndicator` or your custom implementation of it.\n * It returns a `boolean` that indicates if the track is muted or not.\n *\n * @example\n * ```tsx\n * const isMuted = useIsMuted(track);\n * ```\n * @public\n */\nexport function useIsMuted(trackRef: TrackReferenceOrPlaceholder): boolean;\n/** @public @deprecated This overload will be removed in a future version, pass in trackRef instead. */\nexport function useIsMuted(source: Track.Source, options?: UseIsMutedOptions): boolean;\nexport function useIsMuted(\n  sourceOrTrackRef: TrackReferenceOrPlaceholder | Track.Source,\n  options: UseIsMutedOptions = {},\n) {\n  const passedParticipant =\n    typeof sourceOrTrackRef === 'string' ? options.participant : sourceOrTrackRef.participant;\n  const p = useEnsureParticipant(passedParticipant);\n  const ref =\n    typeof sourceOrTrackRef === 'string'\n      ? { participant: p, source: sourceOrTrackRef }\n      : sourceOrTrackRef;\n  const [isMuted, setIsMuted] = React.useState(\n    !!(ref.publication?.isMuted || p.getTrack(ref.source)?.isMuted),\n  );\n\n  React.useEffect(() => {\n    const listener = mutedObserver(ref).subscribe(setIsMuted);\n    return () => listener.unsubscribe();\n  }, [getTrackReferenceId(ref)]);\n\n  return isMuted;\n}\n", "import { createIsSpeakingObserver } from '@livekit/components-core';\nimport type { Participant } from 'livekit-client';\nimport * as React from 'react';\nimport { useEnsureParticipant } from '../context';\nimport { useObservableState } from './internal';\n\n/**\n * The `useIsSpeaking` hook returns a `boolean` that indicates if the participant is speaking or not.\n * @example\n * ```tsx\n * const isSpeaking = useIsSpeaking(participant);\n * ```\n * @public\n */\nexport function useIsSpeaking(participant?: Participant) {\n  const p = useEnsureParticipant(participant);\n  const observable = React.useMemo(() => createIsSpeakingObserver(p), [p]);\n  const isSpeaking = useObservableState(observable, p.isSpeaking);\n\n  return isSpeaking;\n}\n", "import { log, setupLiveKitRoom } from '@livekit/components-core';\nimport { Room, MediaDeviceFailure, RoomEvent, ConnectionState } from 'livekit-client';\nimport * as React from 'react';\nimport type { HTMLAttributes } from 'react';\n\nimport type { LiveKitRoomProps } from '../components';\nimport { mergeProps } from '../mergeProps';\n\nconst defaultRoomProps: Partial<LiveKitRoomProps> = {\n  connect: true,\n  audio: false,\n  video: false,\n};\n\n/**\n * The `useLiveKitRoom` hook is used to implement the `LiveKitRoom` or your custom implementation of it.\n * It returns a `Room` instance and HTML props that should be applied to the root element of the component.\n *\n * @example\n * ```tsx\n * const { room, htmlProps } = useLiveKitRoom();\n * return <div {...htmlProps}>...</div>;\n * ```\n * @public\n */\nexport function useLiveKitRoom<T extends HTMLElement>(\n  props: LiveKitRoomProps,\n): {\n  room: Room | undefined;\n  htmlProps: HTMLAttributes<T>;\n} {\n  const {\n    token,\n    serverUrl,\n    options,\n    room: passedRoom,\n    connectOptions,\n    connect,\n    audio,\n    video,\n    screen,\n    onConnected,\n    onDisconnected,\n    onError,\n    onMediaDeviceFailure,\n    onEncryptionError,\n    simulateParticipants,\n    ...rest\n  } = { ...defaultRoomProps, ...props };\n  if (options && passedRoom) {\n    log.warn(\n      'when using a manually created room, the options object will be ignored. set the desired options directly when creating the room instead.',\n    );\n  }\n\n  const [room, setRoom] = React.useState<Room | undefined>();\n\n  React.useEffect(() => {\n    setRoom(passedRoom ?? new Room(options));\n  }, [passedRoom]);\n\n  const htmlProps = React.useMemo(() => {\n    const { className } = setupLiveKitRoom();\n    return mergeProps(rest, { className }) as HTMLAttributes<T>;\n  }, [rest]);\n\n  React.useEffect(() => {\n    if (!room) return;\n    const onSignalConnected = () => {\n      const localP = room.localParticipant;\n\n      log.debug('trying to publish local tracks');\n      Promise.all([\n        localP.setMicrophoneEnabled(!!audio, typeof audio !== 'boolean' ? audio : undefined),\n        localP.setCameraEnabled(!!video, typeof video !== 'boolean' ? video : undefined),\n        localP.setScreenShareEnabled(!!screen, typeof screen !== 'boolean' ? screen : undefined),\n      ]).catch((e) => {\n        log.warn(e);\n        onError?.(e as Error);\n      });\n    };\n\n    const handleMediaDeviceError = (e: Error) => {\n      const mediaDeviceFailure = MediaDeviceFailure.getFailure(e);\n      onMediaDeviceFailure?.(mediaDeviceFailure);\n    };\n    const handleEncryptionError = (e: Error) => {\n      onEncryptionError?.(e);\n    };\n    room\n      .on(RoomEvent.SignalConnected, onSignalConnected)\n      .on(RoomEvent.MediaDevicesError, handleMediaDeviceError)\n      .on(RoomEvent.EncryptionError, handleEncryptionError);\n\n    return () => {\n      room\n        .off(RoomEvent.SignalConnected, onSignalConnected)\n        .off(RoomEvent.MediaDevicesError, handleMediaDeviceError)\n        .off(RoomEvent.EncryptionError, handleEncryptionError);\n    };\n  }, [room, audio, video, screen, onError, onEncryptionError, onMediaDeviceFailure]);\n\n  React.useEffect(() => {\n    if (!room) return;\n\n    if (simulateParticipants) {\n      room.simulateParticipants({\n        participants: {\n          count: simulateParticipants,\n        },\n        publish: {\n          audio: true,\n          useRealTracks: true,\n        },\n      });\n      return;\n    }\n    if (!token) {\n      log.debug('no token yet');\n      return;\n    }\n    if (!serverUrl) {\n      log.warn('no livekit url provided');\n      onError?.(Error('no livekit url provided'));\n      return;\n    }\n    if (connect) {\n      log.debug('connecting');\n      room.connect(serverUrl, token, connectOptions).catch((e) => {\n        log.warn(e);\n        onError?.(e as Error);\n      });\n    } else {\n      log.debug('disconnecting because connect is false');\n      room.disconnect();\n    }\n  }, [\n    connect,\n    token,\n    JSON.stringify(connectOptions),\n    room,\n    onError,\n    serverUrl,\n    simulateParticipants,\n  ]);\n\n  React.useEffect(() => {\n    if (!room) return;\n    const connectionStateChangeListener = (state: ConnectionState) => {\n      switch (state) {\n        case ConnectionState.Disconnected:\n          if (onDisconnected) onDisconnected();\n          break;\n        case ConnectionState.Connected:\n          if (onConnected) onConnected();\n          break;\n\n        default:\n          break;\n      }\n    };\n    room.on(RoomEvent.ConnectionStateChanged, connectionStateChangeListener);\n    return () => {\n      room.off(RoomEvent.ConnectionStateChanged, connectionStateChangeListener);\n    };\n  }, [token, onConnected, onDisconnected, room]);\n\n  React.useEffect(() => {\n    if (!room) return;\n    return () => {\n      log.info('disconnecting on onmount');\n      room.disconnect();\n    };\n  }, [room]);\n\n  return { room, htmlProps };\n}\n", "import type { ParticipantMedia } from '@livekit/components-core';\nimport { observeParticipantMedia } from '@livekit/components-core';\nimport type { TrackPublication, LocalParticipant, Room } from 'livekit-client';\nimport * as React from 'react';\nimport { useEnsureRoom } from '../context';\n\n/** @public */\nexport interface UseLocalParticipantOptions {\n  /**\n   * The room to use. If not provided, the hook will use the room from the context.\n   */\n  room?: Room;\n}\n\n/**\n * The `useLocalParticipant` hook returns the local participant and the associated state\n * around the participant.\n *\n * @example\n * ```tsx\n * const { localParticipant } = useLocalParticipant();\n * ```\n * @public\n */\nexport function useLocalParticipant(options: UseLocalParticipantOptions = {}) {\n  const room = useEnsureRoom(options.room);\n  const [localParticipant, setLocalParticipant] = React.useState(room.localParticipant);\n  const [isMicrophoneEnabled, setIsMicrophoneEnabled] = React.useState(\n    localParticipant.isMicrophoneEnabled,\n  );\n  const [isCameraEnabled, setIsCameraEnabled] = React.useState(\n    localParticipant.isMicrophoneEnabled,\n  );\n  const [lastMicrophoneError, setLastMicrophoneError] = React.useState(\n    localParticipant.lastMicrophoneError,\n  );\n  const [lastCameraError, setLastCameraError] = React.useState(localParticipant.lastCameraError);\n  const [isScreenShareEnabled, setIsScreenShareEnabled] = React.useState(\n    localParticipant.isMicrophoneEnabled,\n  );\n  const [microphoneTrack, setMicrophoneTrack] = React.useState<TrackPublication | undefined>(\n    undefined,\n  );\n  const [cameraTrack, setCameraTrack] = React.useState<TrackPublication | undefined>(undefined);\n\n  const handleUpdate = (media: ParticipantMedia<LocalParticipant>) => {\n    setIsCameraEnabled(media.isCameraEnabled);\n    setIsMicrophoneEnabled(media.isMicrophoneEnabled);\n    setIsScreenShareEnabled(media.isScreenShareEnabled);\n    setCameraTrack(media.cameraTrack);\n    setMicrophoneTrack(media.microphoneTrack);\n    setLastMicrophoneError(media.participant.lastMicrophoneError);\n    setLastCameraError(media.participant.lastCameraError);\n    setLocalParticipant(media.participant);\n  };\n  React.useEffect(() => {\n    const listener = observeParticipantMedia(room.localParticipant).subscribe(handleUpdate);\n    // TODO also listen to permission and metadata etc. events\n    return () => listener.unsubscribe();\n  }, [room]);\n\n  return {\n    isMicrophoneEnabled,\n    isScreenShareEnabled,\n    isCameraEnabled,\n    microphoneTrack,\n    cameraTrack,\n    lastMicrophoneError,\n    lastCameraError,\n    localParticipant,\n  };\n}\n", "import { participantPermissionObserver } from '@livekit/components-core';\nimport * as React from 'react';\nimport { useRoomContext } from '../context';\nimport { useObservableState } from './internal';\n\n/**\n * The `useLocalParticipantPermissions` hook returns the local participant's permissions.\n *\n * @example\n * ```tsx\n * const { canPublish, canPublishData } = useLocalParticipantPermissions();\n * ```\n * @public\n */\nexport function useLocalParticipantPermissions() {\n  const room = useRoomContext();\n  const permissionObserver = React.useMemo(\n    () => participantPermissionObserver(room.localParticipant),\n    [room],\n  );\n  const permissions = useObservableState(permissionObserver, room.localParticipant.permissions);\n  return permissions;\n}\n", "import { createMediaDeviceObserver, setupDeviceSelector, log } from '@livekit/components-core';\nimport type { LocalAudioTrack, LocalVideoTrack, Room } from 'livekit-client';\nimport * as React from 'react';\nimport { useMaybeRoomContext } from '../context';\nimport { useObservableState } from './internal';\n\n/** @public */\nexport interface UseMediaDeviceSelectProps {\n  kind: MediaDeviceKind;\n  room?: Room;\n  track?: LocalAudioTrack | LocalVideoTrack;\n  /**\n   * this will call getUserMedia if the permissions are not yet given to enumerate the devices with device labels.\n   * in some browsers multiple calls to getUserMedia result in multiple permission prompts.\n   * It's generally advised only flip this to true, once a (preview) track has been acquired successfully with the\n   * appropriate permissions.\n   *\n   * @see {@link MediaDeviceMenu}\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/enumerateDevices | MDN enumerateDevices}\n   */\n  requestPermissions?: boolean;\n  /**\n   * this callback gets called if an error is thrown when failing to select a device and also if a user\n   * denied permissions, eventhough the `requestPermissions` option is set to `true`.\n   * Most commonly this will emit a MediaDeviceError\n   */\n  onError?: (e: Error) => void;\n}\n\n/**\n * The `useMediaDeviceSelect` hook is used to implement the `MediaDeviceSelect` component and\n * returns o.a. the list of devices of a given kind (audioinput or videoinput), the currently active device\n * and a function to set the the active device.\n *\n * @example\n * ```tsx\n * const { devices, activeDeviceId, setActiveMediaDevice } = useMediaDeviceSelect({kind: 'audioinput'});\n * ```\n * @public\n */\nexport function useMediaDeviceSelect({\n  kind,\n  room,\n  track,\n  requestPermissions,\n  onError,\n}: UseMediaDeviceSelectProps) {\n  const roomContext = useMaybeRoomContext();\n  // List of all devices.\n  const deviceObserver = React.useMemo(\n    () => createMediaDeviceObserver(kind, onError, requestPermissions),\n    [kind, requestPermissions, onError],\n  );\n  const devices = useObservableState(deviceObserver, [] as MediaDeviceInfo[]);\n  // Active device management.\n  const [currentDeviceId, setCurrentDeviceId] = React.useState<string>('');\n  const { className, activeDeviceObservable, setActiveMediaDevice } = React.useMemo(\n    () => setupDeviceSelector(kind, room ?? roomContext, track),\n    [kind, room, roomContext, track],\n  );\n\n  React.useEffect(() => {\n    const listener = activeDeviceObservable.subscribe((deviceId) => {\n      log.info('setCurrentDeviceId', deviceId);\n      if (deviceId) setCurrentDeviceId(deviceId);\n    });\n    return () => {\n      listener?.unsubscribe();\n    };\n  }, [activeDeviceObservable]);\n\n  return { devices, className, activeDeviceId: currentDeviceId, setActiveMediaDevice };\n}\n", "import * as React from 'react';\nimport { useObservableState } from './internal';\nimport { createMediaDeviceObserver } from '@livekit/components-core';\n\n/**\n * The `useMediaDevices` hook returns the list of media devices of a given kind.\n *\n * @example\n * ```tsx\n * const videoDevices = useMediaDevices({ kind: 'videoinput' });\n * const audioDevices = useMediaDevices({ kind: 'audioinput' });\n * ```\n * @public\n */\nexport function useMediaDevices({ kind }: { kind: MediaDeviceKind }) {\n  const deviceObserver = React.useMemo(() => createMediaDeviceObserver(kind), [kind]);\n  const devices = useObservableState(deviceObserver, [] as MediaDeviceInfo[]);\n  return devices;\n}\n", "import type { TrackIdentifier } from '@livekit/components-core';\nimport { isTrackReference } from '@livekit/components-core';\nimport { setupMediaTrack, log, isLocal, getTrackByIdentifier } from '@livekit/components-core';\nimport * as React from 'react';\nimport { mergeProps } from '../utils';\nimport type { UseMediaTrackOptions } from './useMediaTrack';\n\n/**\n * @internal\n */\nexport function useMediaTrackBySourceOrName(\n  observerOptions: TrackIdentifier,\n  options: UseMediaTrackOptions = {},\n) {\n  const [publication, setPublication] = React.useState(getTrackByIdentifier(observerOptions));\n\n  const [isMuted, setMuted] = React.useState(publication?.isMuted);\n  const [isSubscribed, setSubscribed] = React.useState(publication?.isSubscribed);\n\n  const [track, setTrack] = React.useState(publication?.track);\n  const [orientation, setOrientation] = React.useState<'landscape' | 'portrait'>('landscape');\n  const previousElement = React.useRef<HTMLMediaElement | undefined | null>();\n\n  const { className, trackObserver } = React.useMemo(() => {\n    return setupMediaTrack(observerOptions);\n  }, [\n    observerOptions.participant.sid ?? observerOptions.participant.identity,\n    observerOptions.source,\n    isTrackReference(observerOptions) && observerOptions.publication.trackSid,\n  ]);\n\n  React.useEffect(() => {\n    const subscription = trackObserver.subscribe((publication) => {\n      log.debug('update track', publication);\n      setPublication(publication);\n      setMuted(publication?.isMuted);\n      setSubscribed(publication?.isSubscribed);\n      setTrack(publication?.track);\n    });\n    return () => subscription?.unsubscribe();\n  }, [trackObserver]);\n\n  React.useEffect(() => {\n    if (track) {\n      if (previousElement.current) {\n        track.detach(previousElement.current);\n      }\n      if (\n        options.element?.current &&\n        !(isLocal(observerOptions.participant) && track?.kind === 'audio')\n      ) {\n        track.attach(options.element.current);\n      }\n    }\n    previousElement.current = options.element?.current;\n    return () => {\n      if (previousElement.current) {\n        track?.detach(previousElement.current);\n      }\n    };\n  }, [track, options.element]);\n\n  React.useEffect(() => {\n    // Set the orientation of the video track.\n    // TODO: This does not handle changes in orientation after a track got published (e.g when rotating a phone camera from portrait to landscape).\n    if (\n      typeof publication?.dimensions?.width === 'number' &&\n      typeof publication?.dimensions?.height === 'number'\n    ) {\n      const orientation_ =\n        publication.dimensions.width > publication.dimensions.height ? 'landscape' : 'portrait';\n      setOrientation(orientation_);\n    }\n  }, [publication]);\n\n  return {\n    publication,\n    isMuted,\n    isSubscribed,\n    track,\n    elementProps: mergeProps(options.props, {\n      className,\n      'data-lk-local-participant': observerOptions.participant.isLocal,\n      'data-lk-source': publication?.source,\n      ...(publication?.kind === 'video' && { 'data-lk-orientation': orientation }),\n    }),\n  };\n}\n", "import * as React from 'react';\nimport { mergeProps as mergePropsReactAria } from './mergeProps';\nimport { log } from '@livekit/components-core';\n\n/** @internal */\nexport function isProp<U extends HTMLElement, T extends React.HTMLAttributes<U>>(\n  prop: T | undefined,\n): prop is T {\n  return prop !== undefined;\n}\n\n/** @internal */\nexport function mergeProps<\n  U extends HTMLElement,\n  T extends Array<React.HTMLAttributes<U> | undefined>,\n>(...props: T) {\n  return mergePropsReactAria(...props.filter(isProp));\n}\n\n/** @internal */\nexport function cloneSingleChild(\n  children: React.ReactNode | React.ReactNode[],\n  props?: Record<string, any>,\n  key?: any,\n) {\n  return React.Children.map(children, (child) => {\n    // Checking isValidElement is the safe way and avoids a typescript\n    // error too.\n    if (React.isValidElement(child) && React.Children.only(children)) {\n      return React.cloneElement(child, { ...props, key });\n    }\n    return child;\n  });\n}\n\n/**\n * @internal\n */\nexport function warnAboutMissingStyles(el?: HTMLElement) {\n  if (\n    // eslint-disable-next-line turbo/no-undeclared-env-vars\n    (process?.env?.NODE_ENV === 'dev' || process?.env?.NODE_ENV === 'development') &&\n    typeof window !== 'undefined'\n  ) {\n    const target = el ?? document.querySelector('.lk-room-container');\n    if (target && !getComputedStyle(target).getPropertyValue('--lk-has-imported-styles')) {\n      log.warn(\n        \"It looks like you're not using the `@livekit/components-styles package`. To render the UI with the default styling, please import it in your layout or page.\",\n      );\n    }\n  }\n}\n", "import type { VideoSource, AudioSource } from '@livekit/components-core';\nimport type { Participant } from 'livekit-client';\nimport { useEnsureParticipant } from '../context/participant-context';\nimport type * as React from 'react';\nimport { useMediaTrackBySourceOrName } from './useMediaTrackBySourceOrName';\n\n/** @public */\nexport interface UseMediaTrackOptions {\n  element?: React.RefObject<HTMLMediaElement>;\n  props?: React.HTMLAttributes<HTMLVideoElement | HTMLAudioElement>;\n}\n\n/**\n * @public\n * @deprecated use `useTrack` instead\n *  */\nexport function useMediaTrack(\n  source: VideoSource | AudioSource,\n  participant?: Participant,\n  options: UseMediaTrackOptions = {},\n) {\n  const p = useEnsureParticipant(participant);\n  return useMediaTrackBySourceOrName({ source, participant: p }, options);\n}\n", "import type { Participant } from 'livekit-client';\nimport { useEnsureParticipant } from '../context';\nimport type { UseMediaTrackOptions } from './useMediaTrack';\nimport { useMediaTrackBySourceOrName } from './useMediaTrackBySourceOrName';\n\n/**\n * @public\n * @deprecated This function will be removed in a future version, use `useTrackByName` instead.\n */\nexport function useMediaTrackByName(\n  name: string,\n  participant?: Participant,\n  options: UseMediaTrackOptions = {},\n) {\n  const p = useEnsureParticipant(participant);\n  return useMediaTrackBySourceOrName({ name, participant: p }, options);\n}\n", "import type { TrackReferenceOrPlaceholder } from '@livekit/components-core';\nimport * as React from 'react';\nimport { useVisualStableUpdate } from './useVisualStableUpdate';\n\n/**\n * The `usePagination` hook implements simple pagination logic for use with arrays.\n * @example\n * ```tsx\n * const tracks = useTracks();\n * const pagination = usePagination(4, tracks);\n *\n * <TrackLoop tracks={pagination.tracks} />\n * ```\n * @alpha\n */\nexport function usePagination(itemPerPage: number, trackReferences: TrackReferenceOrPlaceholder[]) {\n  const [currentPage, setCurrentPage] = React.useState(1);\n  const totalPageCount = Math.max(Math.ceil(trackReferences.length / itemPerPage), 1);\n  if (currentPage > totalPageCount) {\n    setCurrentPage(totalPageCount);\n  }\n  const lastItemIndex = currentPage * itemPerPage;\n  const firstItemIndex = lastItemIndex - itemPerPage;\n\n  const changePage = (direction: 'next' | 'previous') => {\n    setCurrentPage((state) => {\n      if (direction === 'next') {\n        if (state === totalPageCount) {\n          return state;\n        }\n        return state + 1;\n      } else {\n        if (state === 1) {\n          return state;\n        }\n        return state - 1;\n      }\n    });\n  };\n\n  const goToPage = (num: number) => {\n    if (num > totalPageCount) {\n      setCurrentPage(totalPageCount);\n    } else if (num < 1) {\n      setCurrentPage(1);\n    } else {\n      setCurrentPage(num);\n    }\n  };\n\n  const updatedTrackReferences = useVisualStableUpdate(trackReferences, itemPerPage);\n\n  const tracksOnPage = updatedTrackReferences.slice(firstItemIndex, lastItemIndex);\n\n  return {\n    totalPageCount,\n    nextPage: () => changePage('next'),\n    prevPage: () => changePage('previous'),\n    setPage: goToPage,\n    firstItemIndex,\n    lastItemIndex,\n    tracks: tracksOnPage,\n    currentPage,\n  };\n}\n\nexport default usePagination;\n", "import type { TrackReferenceOrPlaceholder } from '@livekit/components-core';\nimport { log, sortTrackReferences, updatePages } from '@livekit/components-core';\nimport * as React from 'react';\n\n/** @public */\nexport interface UseVisualStableUpdateOptions {\n  /** Overwrites the default sort function. */\n  customSortFunction?: (\n    trackReferences: TrackReferenceOrPlaceholder[],\n  ) => TrackReferenceOrPlaceholder[];\n}\n\n/**\n * The `useVisualStableUpdate` hook is used to prevent visually jarring jumps and shifts of elements\n * in an array. The algorithm only starts to update when there are more items than visually fit\n * on a page. If this is the case, it will make sure that speaking participants move to the first\n * page and are always visible.\n * @remarks\n * Updating the array can occur because attendees leave or join a room, or because they mute/unmute\n * or start speaking.\n * The hook is used for the `GridLayout` and `CarouselLayout` components.\n *\n * @example\n * ```tsx\n * const trackRefs = useTracks();\n * const updatedTrackRefs = useVisualStableUpdate(trackRefs, itemPerPage);\n * ```\n * @public\n */\nexport function useVisualStableUpdate(\n  /** `TrackReference`s to display in the grid.  */\n  trackReferences: TrackReferenceOrPlaceholder[],\n  maxItemsOnPage: number,\n  options: UseVisualStableUpdateOptions = {},\n): TrackReferenceOrPlaceholder[] {\n  const lastTrackRefs = React.useRef<TrackReferenceOrPlaceholder[]>([]);\n  const lastMaxItemsOnPage = React.useRef<number>(-1);\n  const layoutChanged = maxItemsOnPage !== lastMaxItemsOnPage.current;\n\n  const sortedTrackRefs =\n    typeof options.customSortFunction === 'function'\n      ? options.customSortFunction(trackReferences)\n      : sortTrackReferences(trackReferences);\n\n  let updatedTrackRefs: TrackReferenceOrPlaceholder[] = [...sortedTrackRefs];\n  if (layoutChanged === false) {\n    try {\n      updatedTrackRefs = updatePages(lastTrackRefs.current, sortedTrackRefs, maxItemsOnPage);\n    } catch (error) {\n      log.error('Error while running updatePages(): ', error);\n    }\n  }\n\n  // Save info for to compare against in the next update cycle.\n  if (layoutChanged) {\n    lastTrackRefs.current = sortedTrackRefs;\n  } else {\n    lastTrackRefs.current = updatedTrackRefs;\n  }\n  lastMaxItemsOnPage.current = maxItemsOnPage;\n\n  return updatedTrackRefs;\n}\n", "import { participantInfoObserver } from '@livekit/components-core';\nimport type { Participant } from 'livekit-client';\nimport * as React from 'react';\nimport { useEnsureParticipant } from '../context';\nimport { useObservableState } from './internal';\n\n/**\n * The `useParticipantInfo` hook returns the identity, name, and metadata of a given participant.\n * It requires a `Participant` object passed as property or via the `ParticipantContext`.\n *\n * @example\n * ```tsx\n * const { identity, name, metadata } = useParticipantInfo({ participant });\n * ```\n * @public\n */\nexport interface UseParticipantInfoOptions {\n  participant?: Participant;\n}\n\n/** @public */\nexport function useParticipantInfo(props: UseParticipantInfoOptions = {}) {\n  const p = useEnsureParticipant(props.participant);\n  const infoObserver = React.useMemo(() => participantInfoObserver(p), [p]);\n  const { identity, name, metadata } = useObservableState(infoObserver, {\n    name: p.name,\n    identity: p.identity,\n    metadata: p.metadata,\n  });\n\n  return { identity, name, metadata };\n}\n", "import * as React from 'react';\nimport type { Participant } from 'livekit-client';\nimport { participantPermissionObserver } from '@livekit/components-core';\nimport { useEnsureParticipant } from '../context';\nimport { useObservableState } from './internal/useObservableState';\n\n/**\n * The `useParticipantPermissions` hook returns the permissions of a given participant.\n *\n * @example\n * ```tsx\n * const permissions = useParticipantPermissions({ participant });\n * ```\n * @public\n */\nexport interface UseParticipantPermissionsOptions {\n  participant?: Participant;\n}\n\n/** @public */\nexport function useParticipantPermissions(options: UseParticipantPermissionsOptions = {}) {\n  const p = useEnsureParticipant(options.participant);\n  const permissionObserver = React.useMemo(() => participantPermissionObserver(p), [p]);\n  const permissions = useObservableState(permissionObserver, p.permissions);\n  return permissions;\n}\n", "import type { ParticipantClickEvent, TrackReferenceOrPlaceholder } from '@livekit/components-core';\nimport { setupParticipantTile } from '@livekit/components-core';\nimport type { TrackPublication, Participant } from 'livekit-client';\nimport { Track } from 'livekit-client';\nimport * as React from 'react';\nimport { useEnsureParticipant, useMaybeTrackRefContext } from '../context';\nimport { mergeProps } from '../mergeProps';\nimport { useFacingMode } from './useFacingMode';\nimport { useIsMuted } from './useIsMuted';\nimport { useIsSpeaking } from './useIsSpeaking';\n\n/** @public */\nexport interface UseParticipantTileProps<T extends HTMLElement> extends React.HTMLAttributes<T> {\n  /** The track reference to display. */\n  trackRef?: TrackReferenceOrPlaceholder;\n  disableSpeakingIndicator?: boolean;\n  /** @deprecated This parameter will be removed in a future version use `trackRef` instead. */\n  publication?: TrackPublication;\n  onParticipantClick?: (event: ParticipantClickEvent) => void;\n  htmlProps: React.HTMLAttributes<T>;\n  /** @deprecated This parameter will be removed in a future version use `trackRef` instead. */\n  source?: Track.Source;\n  /** @deprecated This parameter will be removed in a future version use `trackRef` instead. */\n  participant?: Participant;\n}\n\n/**\n * The `useParticipantTile` hook is used to implement the `ParticipantTile` and returns the props needed to render the tile.\n * @remarks\n * The returned props include many data attributes that are useful for CSS styling purposes because they\n * indicate the state of the participant and the track.\n * For example: `data-lk-audio-muted`, `data-lk-video-muted`, `data-lk-speaking`, `data-lk-local-participant`, `data-lk-source`, `data-lk-facing-mode`.\n * @public\n */\nexport function useParticipantTile<T extends HTMLElement>({\n  trackRef,\n  participant,\n  source,\n  publication,\n  onParticipantClick,\n  disableSpeakingIndicator,\n  htmlProps,\n}: UseParticipantTileProps<T>) {\n  // TODO: Remove and refactor after deprecation period to use:\n  // const trackReference = useEnsureTrackRefContext(trackRef)`.\n  const maybeTrackRef = useMaybeTrackRefContext();\n  const p = useEnsureParticipant(participant);\n  const trackReference = React.useMemo(() => {\n    const _source = trackRef?.source ?? maybeTrackRef?.source ?? source;\n    if (_source === undefined) {\n      throw new Error(\n        'Missing track `source`, provided it via `trackRef`, `source` property or via `TrackRefContext`.',\n      );\n    }\n    return {\n      participant: trackRef?.participant ?? maybeTrackRef?.participant ?? p,\n      publication: trackRef?.publication ?? maybeTrackRef?.publication ?? publication,\n      source: _source,\n    };\n  }, [\n    trackRef?.participant,\n    trackRef?.source,\n    trackRef?.publication,\n    maybeTrackRef?.participant,\n    maybeTrackRef?.source,\n    maybeTrackRef?.publication,\n    p,\n    source,\n    publication,\n  ]);\n\n  const mergedProps = React.useMemo(() => {\n    const { className } = setupParticipantTile();\n    return mergeProps(htmlProps, {\n      className,\n      onClick: (event: React.MouseEvent<T, MouseEvent>) => {\n        htmlProps.onClick?.(event);\n        if (typeof onParticipantClick === 'function') {\n          const track =\n            trackReference.publication ??\n            trackReference.participant.getTrack(trackReference.source);\n          onParticipantClick({ participant: trackReference.participant, track });\n        }\n      },\n    });\n  }, [\n    htmlProps,\n    onParticipantClick,\n    trackReference.publication,\n    trackReference.source,\n    trackReference.participant,\n  ]);\n  const isVideoMuted = useIsMuted(Track.Source.Camera, { participant: trackReference.participant });\n  const isAudioMuted = useIsMuted(Track.Source.Microphone, {\n    participant: trackReference.participant,\n  });\n  const isSpeaking = useIsSpeaking(trackReference.participant);\n  const facingMode = useFacingMode(trackReference);\n  return {\n    elementProps: {\n      'data-lk-audio-muted': isAudioMuted,\n      'data-lk-video-muted': isVideoMuted,\n      'data-lk-speaking': disableSpeakingIndicator === true ? false : isSpeaking,\n      'data-lk-local-participant': trackReference.participant.isLocal,\n      'data-lk-source': trackReference.source,\n      'data-lk-facing-mode': facingMode,\n      ...mergedProps,\n    } as React.HTMLAttributes<T>,\n  };\n}\n", "import { connectedParticipantsObserver } from '@livekit/components-core';\nimport type { RoomEvent, RemoteParticipant, Room } from 'livekit-client';\nimport * as React from 'react';\nimport { useEnsureRoom } from '../context';\n\n/** @public */\nexport interface UseRemoteParticipantsOptions {\n  /**\n   * To optimize performance, you can use the `updateOnlyOn` property to decide on what RoomEvents the hook updates.\n   * By default it updates on all relevant RoomEvents to keep the returned participants array up to date.\n   * The minimal set of non-overwriteable `RoomEvents` is: `[RoomEvent.ParticipantConnected, RoomEvent.ParticipantDisconnected, RoomEvent.ConnectionStateChanged]`\n   */\n  updateOnlyOn?: RoomEvent[];\n  /**\n   * The room to use. If not provided, the hook will use the room from the context.\n   */\n  room?: Room;\n}\n\n/**\n * The `useRemoteParticipants` hook returns all remote participants (without the local) of the current room.\n * @remarks\n * To optimize performance, you can use the `updateOnlyOn` property to decide on what `RoomEvents` the hook updates.\n *\n * @example\n * ```tsx\n * const participants = useRemoteParticipants();\n * <ParticipantLoop participants={participants}>\n *  <ParticipantName />\n * </ParticipantLoop>\n * ```\n * @public\n */\nexport function useRemoteParticipants(options: UseRemoteParticipantsOptions = {}) {\n  const room = useEnsureRoom(options.room);\n  const [participants, setParticipants] = React.useState<RemoteParticipant[]>([]);\n\n  React.useEffect(() => {\n    const listener = connectedParticipantsObserver(room, {\n      additionalRoomEvents: options.updateOnlyOn,\n    }).subscribe(setParticipants);\n    return () => listener.unsubscribe();\n  }, [room, JSON.stringify(options.updateOnlyOn)]);\n  return participants;\n}\n", "import type { Room, RoomEvent } from 'livekit-client';\nimport { useLocalParticipant } from './useLocalParticipant';\nimport { useRemoteParticipants } from './useRemoteParticipants';\n\n/** @public */\nexport interface UseParticipantsOptions {\n  /**\n   * To optimize performance, you can use the `updateOnlyOn` property to decide on what RoomEvents the hook updates.\n   * By default it updates on all relevant RoomEvents to keep the returned participants array up to date.\n   * The minimal set of non-overwriteable `RoomEvents` is: `[RoomEvent.ParticipantConnected, RoomEvent.ParticipantDisconnected, RoomEvent.ConnectionStateChanged]`\n   */\n  updateOnlyOn?: RoomEvent[];\n  /**\n   * The room to use. If not provided, the hook will use the room from the context.\n   */\n  room?: Room;\n}\n\n/**\n * The `useParticipants` hook returns all participants (local and remote) of the current room.\n * @remarks\n * To optimize performance, you can use the `updateOnlyOn` property to decide on what `RoomEvents` the hook updates.\n *\n * @example\n * ```tsx\n * const participants = useParticipants();\n * <ParticipantLoop participants={participants}>\n *  <ParticipantName />\n * </ParticipantLoop>\n * ```\n * @public\n */\nexport function useParticipants(options: UseParticipantsOptions = {}) {\n  const remoteParticipants = useRemoteParticipants(options);\n  const { localParticipant } = useLocalParticipant(options);\n\n  return [localParticipant, ...remoteParticipants];\n}\n", "import type { TrackReferenceOrPlaceholder } from '@livekit/components-core';\nimport * as React from 'react';\nimport type { LayoutContextType } from '../context';\nimport { useEnsureLayoutContext } from '../context';\n\n/**\n * The `usePinnedTracks` hook returns a array of the pinned tracks of the current room.\n * @remarks\n * To function properly, this hook must be called within a `LayoutContext`.\n * @example\n * ```tsx\n * const pinnedTracks = usePinnedTracks();\n * ```\n * @public\n */\nexport function usePinnedTracks(layoutContext?: LayoutContextType): TrackReferenceOrPlaceholder[] {\n  layoutContext = useEnsureLayoutContext(layoutContext);\n  return React.useMemo(() => {\n    if (layoutContext?.pin.state !== undefined && layoutContext.pin.state.length >= 1) {\n      return layoutContext.pin.state;\n    }\n    return [];\n  }, [layoutContext.pin.state]);\n}\n", "import { connectedParticipantObserver } from '@livekit/components-core';\nimport type { ParticipantEvent, RemoteParticipant } from 'livekit-client';\nimport * as React from 'react';\nimport { useRoomContext } from '../context';\nimport { useObservableState } from './internal';\n\n/** @public */\nexport interface UseRemoteParticipantOptions {\n  /**\n   * To optimize performance, you can use the `updateOnlyOn` property to decide on what `ParticipantEvents` the hook updates.\n   * By default it updates on all relevant ParticipantEvents to keep the returned participant up to date.\n   */\n  updateOnlyOn?: ParticipantEvent[];\n}\n\n/**\n * The `useRemoteParticipant` hook returns the RemoteParticipant with the given `identity`.\n * @remarks\n * To optimize performance, you can use the `updateOnlyOn` property to decide on what `ParticipantEvents` the hook updates.\n *\n * @example\n * ```tsx\n * const participant = useRemoteParticipant('Russ');\n * ```\n * @public\n */\nexport function useRemoteParticipant(\n  identity: string,\n  options: UseRemoteParticipantOptions = {},\n): RemoteParticipant | undefined {\n  const room = useRoomContext();\n  const [updateOnlyOn] = React.useState(options.updateOnlyOn);\n\n  const observable = React.useMemo(\n    () => connectedParticipantObserver(room, identity, { additionalEvents: updateOnlyOn }),\n    [room, identity, updateOnlyOn],\n  );\n  const participant = useObservableState(\n    observable,\n    room.getParticipantByIdentity(identity) as RemoteParticipant | undefined,\n  );\n  return participant;\n}\n", "import { roomInfoObserver } from '@livekit/components-core';\nimport type { Room } from 'livekit-client';\nimport * as React from 'react';\nimport { useEnsureRoom } from '../context';\nimport { useObservableState } from './internal';\n\n/**\n * The `useRoomInfo` hook returns the name and metadata of the given `Room`.\n * @remarks\n * Needs to be called inside a `RoomContext` or by passing a `Room` instance.\n *\n * @example\n * ```tsx\n * const { name, metadata } = useRoomInfo();\n * ```\n * @public\n */\nexport interface UseRoomInfoOptions {\n  room?: Room;\n}\n\n/** @public */\nexport function useRoomInfo(options: UseRoomInfoOptions = {}) {\n  const room = useEnsureRoom(options.room);\n  const infoObserver = React.useMemo(() => roomInfoObserver(room), [room]);\n  const { name, metadata } = useObservableState(infoObserver, {\n    name: room.name,\n    metadata: room.metadata,\n  });\n\n  return { name, metadata };\n}\n", "import { sortParticipants } from '@livekit/components-core';\nimport type { Participant } from 'livekit-client';\nimport * as React from 'react';\nimport { useSpeakingParticipants } from './useSpeakingParticipants';\n\n/**\n * The `useSortedParticipants` hook returns the participants sorted by importance.\n * @public\n */\nexport function useSortedParticipants(participants: Array<Participant>) {\n  const [sortedParticipants, setSortedParticipants] = React.useState(\n    sortParticipants(participants),\n  );\n  const activeSpeakers = useSpeakingParticipants();\n\n  React.useEffect(() => {\n    setSortedParticipants(sortParticipants(participants));\n  }, [activeSpeakers, participants]);\n  return sortedParticipants;\n}\n", "import { activeSpeakerObserver } from '@livekit/components-core';\nimport * as React from 'react';\nimport { useRoomContext } from '../context';\nimport { useObservableState } from './internal';\n\n/**\n * The `useSpeakingParticipants` hook returns the only the active speakers of all participants.\n *\n * @example\n * ```tsx\n * const activeSpeakers = useSpeakingParticipants();\n * ```\n * @public\n */\nexport function useSpeakingParticipants() {\n  const room = useRoomContext();\n  const speakerObserver = React.useMemo(() => activeSpeakerObserver(room), [room]);\n  const activeSpeakers = useObservableState(speakerObserver, room.activeSpeakers);\n  return activeSpeakers;\n}\n", "import { setupStartAudio } from '@livekit/components-core';\nimport type { Room } from 'livekit-client';\nimport * as React from 'react';\nimport { useEnsureRoom } from '../context';\nimport { mergeProps } from '../mergeProps';\nimport { useObservableState } from './internal';\n\n/** @alpha */\nexport interface UseStartAudioProps {\n  room?: Room;\n  props: React.ButtonHTMLAttributes<HTMLButtonElement>;\n}\n\n/**\n * In many browsers to start audio playback, the user must perform a user-initiated event such as clicking a button.\n * The `useStatAudio` hook returns an object with a boolean `canPlayAudio` flag\n * that indicates whether audio playback is allowed in the current context,\n * as well as a `startAudio` function that can be called in a button `onClick` callback to start audio playback in the current context.\n *\n * @see Autoplay policy on MDN web docs for more info: {@link https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API/Best_practices#autoplay_policy}\n * @alpha\n */\nexport function useStartAudio({ room, props }: UseStartAudioProps) {\n  const roomEnsured = useEnsureRoom(room);\n  const { className, roomAudioPlaybackAllowedObservable, handleStartAudioPlayback } = React.useMemo(\n    () => setupStartAudio(),\n    [],\n  );\n  const observable = React.useMemo(\n    () => roomAudioPlaybackAllowedObservable(roomEnsured),\n    [roomEnsured, roomAudioPlaybackAllowedObservable],\n  );\n  const { canPlayAudio } = useObservableState(observable, {\n    canPlayAudio: roomEnsured.canPlaybackAudio,\n  });\n\n  const mergedProps = React.useMemo(\n    () =>\n      mergeProps(props, {\n        className,\n        onClick: () => {\n          handleStartAudioPlayback(roomEnsured);\n        },\n        style: { display: canPlayAudio ? 'none' : 'block' },\n      }),\n    [props, className, canPlayAudio, handleStartAudioPlayback, roomEnsured],\n  );\n\n  return { mergedProps, canPlayAudio };\n}\n", "import { setupStartVideo } from '@livekit/components-core';\nimport type { Room } from 'livekit-client';\nimport * as React from 'react';\nimport { useEnsureRoom } from '../context';\nimport { mergeProps } from '../mergeProps';\nimport { useObservableState } from './internal';\n\n/** @alpha */\nexport interface UseStartVideoProps {\n  room?: Room;\n  props: React.ButtonHTMLAttributes<HTMLButtonElement>;\n}\n\n/**\n * In some browsers to start video playback in low power mode, the user must perform a user-initiated event such as clicking a button.\n * The `useStartVideo` hook returns an object with a boolean `canPlayVideo` flag\n * that indicates whether video playback is allowed in the current context,\n * as well as a `startVideo` function that can be called in a button `onClick` callback to start video playback in the current context.\n *\n * @alpha\n */\nexport function useStartVideo({ room, props }: UseStartVideoProps) {\n  const roomEnsured = useEnsureRoom(room);\n  const { className, roomVideoPlaybackAllowedObservable, handleStartVideoPlayback } = React.useMemo(\n    () => setupStartVideo(),\n    [],\n  );\n  const observable = React.useMemo(\n    () => roomVideoPlaybackAllowedObservable(roomEnsured),\n    [roomEnsured, roomVideoPlaybackAllowedObservable],\n  );\n  const { canPlayVideo } = useObservableState(observable, {\n    canPlayVideo: roomEnsured.canPlaybackVideo,\n  });\n\n  const mergedProps = React.useMemo(\n    () =>\n      mergeProps(props, {\n        className,\n        onClick: () => {\n          handleStartVideoPlayback(roomEnsured);\n        },\n        style: { display: canPlayVideo ? 'none' : 'block' },\n      }),\n    [props, className, canPlayVideo, handleStartVideoPlayback, roomEnsured],\n  );\n\n  return { mergedProps, canPlayVideo };\n}\n", "import * as React from 'react';\n\n/**\n * @alpha\n */\nexport type UseSwipeOptions = {\n  minSwipeDistance?: number;\n  onLeftSwipe?: () => void;\n  onRightSwipe?: () => void;\n};\n\n/**\n * Simple implementation to detect horizontal swipe actions.\n * Accepts callbacks for on right and left swipes.\n * @example\n * ```tsx\n *  <div\n      onTouchStart={onTouchStart}\n      onTouchMove={onTouchMove}\n      onTouchEnd={onTouchEnd}\n    >\n * ```\n * @alpha\n */\nexport function useSwipe(element: React.RefObject<HTMLElement>, options: UseSwipeOptions = {}) {\n  const touchStart = React.useRef<number | null>(null);\n  const touchEnd = React.useRef<number | null>(null);\n\n  // The required distance between touchStart and touchEnd to be detected as a swipe.\n  const minSwipeDistance = options.minSwipeDistance ?? 50;\n\n  const onTouchStart = (event: TouchEvent) => {\n    touchEnd.current = null; // Otherwise the swipe is fired even with usual touch events.\n    touchStart.current = event.targetTouches[0].clientX;\n  };\n\n  const onTouchMove = (event: TouchEvent) => {\n    touchEnd.current = event.targetTouches[0].clientX;\n  };\n\n  const onTouchEnd = React.useCallback(() => {\n    if (!touchStart.current || !touchEnd.current) {\n      return;\n    }\n    const distance = touchStart.current - touchEnd.current;\n    const isLeftSwipe = distance > minSwipeDistance;\n    const isRightSwipe = distance < -minSwipeDistance;\n\n    if (isLeftSwipe && options.onLeftSwipe) options.onLeftSwipe();\n    if (isRightSwipe && options.onRightSwipe) options.onRightSwipe();\n  }, [minSwipeDistance, options]);\n\n  React.useEffect(() => {\n    const elementCopy = element.current;\n    if (elementCopy) {\n      elementCopy.addEventListener('touchstart', onTouchStart, { passive: true });\n      elementCopy.addEventListener('touchmove', onTouchMove, { passive: true });\n      elementCopy.addEventListener('touchend', onTouchEnd, { passive: true });\n    }\n    return () => {\n      if (elementCopy) {\n        elementCopy.removeEventListener('touchstart', onTouchStart);\n        elementCopy.removeEventListener('touchmove', onTouchMove);\n        elementCopy.removeEventListener('touchend', onTouchEnd);\n      }\n    };\n  }, [element, onTouchEnd]);\n}\n", "import { setupChatToggle } from '@livekit/components-core';\nimport { useLayoutContext } from '../context';\nimport { mergeProps } from '../mergeProps';\nimport * as React from 'react';\n\n/** @public */\nexport interface UseChatToggleProps {\n  props: React.ButtonHTMLAttributes<HTMLButtonElement>;\n}\n\n/**\n * The `useChatToggle` hook provides state and functions for toggling the chat window.\n * @remarks\n * Depends on the `LayoutContext` to work properly.\n * @see {@link ChatToggle}, {@link Chat}\n * @public\n */\nexport function useChatToggle({ props }: UseChatToggleProps) {\n  const { dispatch, state } = useLayoutContext().widget;\n  const { className } = React.useMemo(() => setupChatToggle(), []);\n\n  const mergedProps = React.useMemo(() => {\n    return mergeProps(props, {\n      className,\n      onClick: () => {\n        if (dispatch) dispatch({ msg: 'toggle_chat' });\n      },\n      'aria-pressed': state?.showChat ? 'true' : 'false',\n      'data-lk-unread-msgs': state\n        ? state.unreadMessages < 10\n          ? state.unreadMessages.toFixed(0)\n          : '9+'\n        : '0',\n    });\n  }, [props, className, dispatch, state]);\n\n  return { mergedProps };\n}\n", "import { log } from '@livekit/components-core';\nimport * as React from 'react';\n\n/** @public */\nexport interface UserInfo {\n  identity?: string;\n  name?: string;\n  metadata?: string;\n}\n\n/** @public */\nexport interface UseTokenOptions {\n  userInfo?: UserInfo;\n}\n\n/**\n * The `useToken` hook fetches a token from the given token endpoint with the given user info.\n *\n * @example\n * ```tsx\n * const token = useToken(<token-endpoint>, roomName, { userInfo: { identity, name }});\n * ```\n * @public */\nexport function useToken(\n  tokenEndpoint: string | undefined,\n  roomName: string,\n  options: UseTokenOptions = {},\n) {\n  const [token, setToken] = React.useState<string | undefined>(undefined);\n\n  React.useEffect(() => {\n    if (tokenEndpoint === undefined) {\n      throw Error('token endpoint needs to be defined');\n    }\n    if (options.userInfo?.identity === undefined) {\n      return;\n    }\n    const tokenFetcher = async () => {\n      log.debug('fetching token');\n      const params = new URLSearchParams({ ...options.userInfo, roomName });\n      const res = await fetch(`${tokenEndpoint}?${params.toString()}`);\n      if (!res.ok) {\n        log.error(\n          `Could not fetch token. Server responded with status ${res.status}: ${res.statusText}`,\n        );\n        return;\n      }\n      const { accessToken } = await res.json();\n      setToken(accessToken);\n    };\n    tokenFetcher();\n  }, [tokenEndpoint, roomName, JSON.stringify(options)]);\n  return token;\n}\n", "import {\n  type TrackReferenceOrPlaceholder,\n  setupTrackMutedIndicator,\n  getTrackReferenceId,\n} from '@livekit/components-core';\nimport type { Participant, Track } from 'livekit-client';\nimport * as React from 'react';\nimport { useMaybeParticipantContext, useMaybeTrackRefContext } from '../context';\nimport { useObservableState } from './internal';\n\n/** @public */\nexport interface UseTrackMutedIndicatorOptions {\n  /** @deprecated This parameter will be removed in a future version use `trackRef` instead. */\n  participant?: Participant;\n}\n\ninterface TrackMutedIndicatorReturnType {\n  isMuted: boolean;\n  className: string;\n}\n\n/**\n * The `useTrackMutedIndicator` hook is used to implement the `TrackMutedIndicator` component\n * and returns the muted state of the given track.\n *\n * @example\n * ```tsx\n * const { isMuted } = useTrackMutedIndicator(trackRef);\n * ```\n * @public\n */\nexport function useTrackMutedIndicator(\n  trackRef?: TrackReferenceOrPlaceholder,\n): TrackMutedIndicatorReturnType;\n/** @public @deprecated This overload will be removed in a future version, pass in trackRef instead. */\nexport function useTrackMutedIndicator(\n  source: Track.Source,\n  options?: UseTrackMutedIndicatorOptions,\n): TrackMutedIndicatorReturnType;\nexport function useTrackMutedIndicator(\n  trackRefOrSource?: TrackReferenceOrPlaceholder | Track.Source,\n  options: UseTrackMutedIndicatorOptions = {},\n): TrackMutedIndicatorReturnType {\n  let ref = useMaybeTrackRefContext();\n  const p = useMaybeParticipantContext() ?? options.participant ?? ref?.participant;\n\n  if (typeof trackRefOrSource === 'string') {\n    if (!p) {\n      throw Error(`Participant missing, either provide it via context or pass it in directly`);\n    }\n    ref = { participant: p, source: trackRefOrSource };\n  } else if (trackRefOrSource) {\n    ref = trackRefOrSource;\n  } else {\n    throw Error(`No track reference found, either provide it via context or pass it in directly`);\n  }\n\n  const { className, mediaMutedObserver } = React.useMemo(\n    () => setupTrackMutedIndicator(ref as TrackReferenceOrPlaceholder),\n    [getTrackReferenceId(ref)],\n  );\n\n  const isMuted = useObservableState(\n    mediaMutedObserver,\n    !!(ref.publication?.isMuted || ref.participant.getTrack(ref.source)?.isMuted),\n  );\n\n  return { isMuted, className };\n}\n", "import type { ToggleSource } from '@livekit/components-core';\nimport { setupMediaToggle, setupManualToggle, log } from '@livekit/components-core';\nimport * as React from 'react';\nimport type { TrackToggleProps } from '../components';\nimport { useMaybeRoomContext } from '../context';\nimport { mergeProps } from '../mergeProps';\nimport { useObservableState } from './internal';\n\n/** @public */\nexport interface UseTrackToggleProps<T extends ToggleSource>\n  extends Omit<TrackToggleProps<T>, 'showIcon'> {}\n\n/**\n * The `useTrackToggle` hook is used to implement the `TrackToggle` component and returns state\n * and functionality of the given track.\n *\n * @example\n * ```tsx\n * const { buttonProps, enabled } = useTrackToggle(trackRef);\n * return <button {...buttonProps}>{enabled ? 'disable' : 'enable'}</button>;\n * ```\n * @public\n */\nexport function useTrackToggle<T extends ToggleSource>({\n  source,\n  onChange,\n  initialState,\n  captureOptions,\n  ...rest\n}: UseTrackToggleProps<T>) {\n  const room = useMaybeRoomContext();\n  const track = room?.localParticipant?.getTrack(source);\n  /** `true` if a user interaction such as a click on the TrackToggle button has occurred. */\n  const userInteractionRef = React.useRef(false);\n\n  const { toggle, className, pendingObserver, enabledObserver } = React.useMemo(\n    () => (room ? setupMediaToggle<T>(source, room, captureOptions) : setupManualToggle()),\n    [room, source, JSON.stringify(captureOptions)],\n  );\n\n  const pending = useObservableState(pendingObserver, false);\n  const enabled = useObservableState(enabledObserver, initialState ?? !!track?.isEnabled);\n\n  React.useEffect(() => {\n    onChange?.(enabled, userInteractionRef.current);\n    userInteractionRef.current = false;\n  }, [enabled, onChange]);\n\n  React.useEffect(() => {\n    if (initialState !== undefined) {\n      log.debug('forcing initial toggle state', source, initialState);\n      toggle(initialState);\n    }\n    // only execute once at the beginning\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const newProps = React.useMemo(() => mergeProps(rest, { className }), [rest, className]);\n\n  const clickHandler: React.MouseEventHandler<HTMLButtonElement> = React.useCallback(\n    (evt) => {\n      userInteractionRef.current = true;\n      toggle().finally(() => (userInteractionRef.current = false));\n      rest.onClick?.(evt);\n    },\n    [rest, toggle],\n  );\n\n  return {\n    toggle,\n    enabled,\n    pending,\n    track,\n    buttonProps: {\n      ...newProps,\n      'aria-pressed': enabled,\n      'data-lk-source': source,\n      'data-lk-enabled': enabled,\n      disabled: pending,\n      onClick: clickHandler,\n    } as React.ButtonHTMLAttributes<HTMLButtonElement>,\n  };\n}\n", "import type {\n  SourcesArray,\n  TrackReference,\n  TrackReferenceOrPlaceholder,\n  TrackSourceWithOptions,\n  TrackReferencePlaceholder,\n} from '@livekit/components-core';\nimport {\n  isSourcesWithOptions,\n  isSourceWitOptions,\n  log,\n  trackReferencesObservable,\n} from '@livekit/components-core';\nimport type { Participant, Room, RoomEvent } from 'livekit-client';\nimport { Track } from 'livekit-client';\nimport * as React from 'react';\nimport { useEnsureRoom } from '../context';\n\n/** @public */\nexport type UseTracksOptions = {\n  updateOnlyOn?: RoomEvent[];\n  onlySubscribed?: boolean;\n  room?: Room;\n};\n\n/** @public */\nexport type UseTracksHookReturnType<T> = T extends Track.Source[]\n  ? TrackReference[]\n  : T extends TrackSourceWithOptions[]\n  ? TrackReferenceOrPlaceholder[]\n  : never;\n\n/**\n * The `useTracks` hook returns an array of `TrackReference` or `TrackReferenceOrPlaceholder` depending on the provided `sources` property.\n * If only subscribed tracks are desired, set the `onlySubscribed` property to `true`.\n * @example\n * ```ts\n * // Return all camera track publications.\n * const trackReferences: TrackReference[] = useTracks([Track.Source.Camera])\n * ```\n * @example\n * ```ts\n * // Return all subscribed camera tracks as well as placeholders for\n * // participants without a camera subscription.\n * const trackReferencesWithPlaceholders: TrackReferenceOrPlaceholder[] = useTracks([{source: Track.Source.Camera, withPlaceholder: true}])\n * ```\n * @public\n */\nexport function useTracks<T extends SourcesArray = Track.Source[]>(\n  sources: T = [\n    Track.Source.Camera,\n    Track.Source.Microphone,\n    Track.Source.ScreenShare,\n    Track.Source.ScreenShareAudio,\n    Track.Source.Unknown,\n  ] as T,\n  options: UseTracksOptions = {},\n): UseTracksHookReturnType<T> {\n  const room = useEnsureRoom(options.room);\n  const [trackReferences, setTrackReferences] = React.useState<TrackReference[]>([]);\n  const [participants, setParticipants] = React.useState<Participant[]>([]);\n\n  const sources_ = React.useMemo(() => {\n    return sources.map((s) => (isSourceWitOptions(s) ? s.source : s));\n  }, [JSON.stringify(sources)]);\n\n  React.useEffect(() => {\n    const subscription = trackReferencesObservable(room, sources_, {\n      additionalRoomEvents: options.updateOnlyOn,\n      onlySubscribed: options.onlySubscribed,\n    }).subscribe(({ trackReferences, participants }) => {\n      log.debug('setting track bundles', trackReferences, participants);\n      setTrackReferences(trackReferences);\n      setParticipants(participants);\n    });\n    return () => subscription.unsubscribe();\n  }, [room, JSON.stringify(options.updateOnlyOn), JSON.stringify(sources)]);\n\n  const maybeTrackReferences = React.useMemo(() => {\n    if (isSourcesWithOptions(sources)) {\n      const requirePlaceholder = requiredPlaceholders(sources, participants);\n      const trackReferencesWithPlaceholders: TrackReferenceOrPlaceholder[] =\n        Array.from(trackReferences);\n      participants.forEach((participant) => {\n        if (requirePlaceholder.has(participant.identity)) {\n          const sourcesToAddPlaceholder = requirePlaceholder.get(participant.identity) ?? [];\n          sourcesToAddPlaceholder.forEach((placeholderSource) => {\n            if (\n              trackReferences.find(\n                ({ participant: p, publication }) =>\n                  participant.identity === p.identity && publication.source === placeholderSource,\n              )\n            ) {\n              return;\n            }\n            log.debug(\n              `Add ${placeholderSource} placeholder for participant ${participant.identity}.`,\n            );\n            const placeholder: TrackReferencePlaceholder = {\n              participant,\n              source: placeholderSource,\n            };\n            trackReferencesWithPlaceholders.push(placeholder);\n          });\n        }\n      });\n      return trackReferencesWithPlaceholders;\n    } else {\n      return trackReferences;\n    }\n  }, [trackReferences, participants, sources]);\n\n  return maybeTrackReferences as UseTracksHookReturnType<T>;\n}\n\nfunction difference<T>(setA: Set<T>, setB: Set<T>): Set<T> {\n  const _difference = new Set(setA);\n  for (const elem of setB) {\n    _difference.delete(elem);\n  }\n  return _difference;\n}\n\nexport function requiredPlaceholders<T extends SourcesArray>(\n  sources: T,\n  participants: Participant[],\n): Map<Participant['identity'], Track.Source[]> {\n  const placeholderMap = new Map<Participant['identity'], Track.Source[]>();\n  if (isSourcesWithOptions(sources)) {\n    const sourcesThatNeedPlaceholder = sources\n      .filter((sourceWithOption) => sourceWithOption.withPlaceholder)\n      .map((sourceWithOption) => sourceWithOption.source);\n\n    participants.forEach((participant) => {\n      const sourcesOfSubscribedTracks = participant\n        .getTracks()\n        .map((pub) => pub.track?.source)\n        .filter((trackSource): trackSource is Track.Source => trackSource !== undefined);\n      const placeholderNeededForThisParticipant = Array.from(\n        difference(new Set(sourcesThatNeedPlaceholder), new Set(sourcesOfSubscribedTracks)),\n      );\n      // If the participant needs placeholder add it to the placeholder map.\n      if (placeholderNeededForThisParticipant.length > 0) {\n        placeholderMap.set(participant.identity, placeholderNeededForThisParticipant);\n      }\n    });\n  }\n  return placeholderMap;\n}\n", "import type { TrackIdentifier } from '@livekit/components-core';\nimport type * as React from 'react';\nimport { useMediaTrackBySourceOrName } from './useMediaTrackBySourceOrName';\n\n/** @public */\nexport interface UseTrackOptions {\n  element?: React.RefObject<HTMLMediaElement>;\n  props?: React.HTMLAttributes<HTMLVideoElement | HTMLAudioElement>;\n}\n\n/** @public */\nexport function useTrack(trackRef: TrackIdentifier, options: UseTrackOptions = {}) {\n  return useMediaTrackBySourceOrName(trackRef, options);\n}\n", "import { useEnsureTrackRef } from '../context';\nimport type { UseMediaTrackOptions } from './useMediaTrack';\nimport { useMediaTrackBySourceOrName } from './useMediaTrackBySourceOrName';\nimport type { TrackReferenceOrPlaceholder } from '@livekit/components-core';\n\n/**\n * @public\n */\nexport function useTrackByName(\n  trackRef?: TrackReferenceOrPlaceholder,\n  options: UseMediaTrackOptions = {},\n) {\n  const ref = useEnsureTrackRef(trackRef);\n  return useMediaTrackBySourceOrName(ref, options);\n}\n", "import type { ChatOptions, ReceivedChatMessage } from '@livekit/components-core';\nimport { setupChat } from '@livekit/components-core';\nimport * as React from 'react';\nimport { useRoomContext } from '../context';\nimport { useObservableState } from './internal/useObservableState';\n\n/**\n * The `useChat` hook provides chat functionality for a LiveKit room.\n * It returns a simple `send` function to send chat messages and an array of `chatMessages` to hold received messages.\n * It also returns a `update` function that allows you to implement message-edit functionality.\n * @remarks\n * It is possible to pass configurations for custom message encoding and decoding and non-default topics on which to send the messages.\n * @public\n */\nexport function useChat(options?: ChatOptions) {\n  const room = useRoomContext();\n  const [setup, setSetup] = React.useState<ReturnType<typeof setupChat>>();\n  const isSending = useObservableState(setup?.isSendingObservable, false);\n  const chatMessages = useObservableState<ReceivedChatMessage[]>(setup?.messageObservable, []);\n\n  React.useEffect(() => {\n    const setupChatReturn = setupChat(room, options);\n    setSetup(setupChatReturn);\n  }, [room, options]);\n\n  return { send: setup?.send, update: setup?.update, chatMessages, isSending };\n}\n", "import type { LocalUserChoices } from '@livekit/components-core';\nimport { loadUserChoices, saveUserChoices } from '@livekit/components-core';\nimport * as React from 'react';\n\n/**\n * Options for the `usePersistentDeviceSettings` hook.\n * @alpha\n */\nexport interface UsePersistentUserChoicesOptions {\n  /**\n   * The default value to use if reading from local storage returns no results or fails.\n   */\n  defaults?: Partial<LocalUserChoices>;\n  /**\n   * Whether to prevent saving to persistent storage.\n   * @defaultValue false\n   */\n  preventSave?: boolean;\n  /**\n   * Whether to prevent loading user choices from persistent storage and use `defaults` instead.\n   * @defaultValue false\n   */\n  preventLoad?: boolean;\n}\n\n/**\n * A hook that provides access to user choices stored in local storage, such as\n * selected media devices and their current state (on or off), as well as the user name.\n * @alpha\n */\nexport function usePersistentUserChoices(options: UsePersistentUserChoicesOptions = {}) {\n  const [userChoices, setSettings] = React.useState<LocalUserChoices>(\n    loadUserChoices(options.defaults, options.preventLoad ?? false),\n  );\n\n  const saveAudioInputEnabled = React.useCallback((isEnabled: boolean) => {\n    setSettings((prev) => ({ ...prev, audioEnabled: isEnabled }));\n  }, []);\n  const saveVideoInputEnabled = React.useCallback((isEnabled: boolean) => {\n    setSettings((prev) => ({ ...prev, videoEnabled: isEnabled }));\n  }, []);\n  const saveAudioInputDeviceId = React.useCallback((deviceId: string) => {\n    setSettings((prev) => ({ ...prev, audioDeviceId: deviceId }));\n  }, []);\n  const saveVideoInputDeviceId = React.useCallback((deviceId: string) => {\n    setSettings((prev) => ({ ...prev, videoDeviceId: deviceId }));\n  }, []);\n  const saveUsername = React.useCallback((username: string) => {\n    setSettings((prev) => ({ ...prev, username: username }));\n  }, []);\n\n  React.useEffect(() => {\n    saveUserChoices(userChoices, options.preventSave ?? false);\n  }, [userChoices, options.preventSave]);\n\n  return {\n    userChoices,\n    saveAudioInputEnabled,\n    saveVideoInputEnabled,\n    saveAudioInputDeviceId,\n    saveVideoInputDeviceId,\n    saveUsername,\n  };\n}\n", "import * as React from 'react';\nimport { LocalParticipant, Participant } from 'livekit-client';\nimport { encryptionStatusObservable } from '@livekit/components-core';\nimport { useEnsureParticipant, useEnsureRoom } from '../context';\nimport { useObservableState } from './internal';\n\n/**\n * @alpha\n */\nexport function useIsEncrypted(participant?: Participant) {\n  const p = useEnsureParticipant(participant);\n  const room = useEnsureRoom();\n\n  const observer = React.useMemo(() => encryptionStatusObservable(room, p), [room, p]);\n  const isEncrypted = useObservableState(\n    observer,\n    p instanceof LocalParticipant ? p.isE2EEEnabled : p.isEncrypted,\n  );\n  return isEncrypted;\n}\n", "import * as React from 'react';\nimport type { LocalAudioTrack, RemoteAudioTrack, AudioAnalyserOptions } from 'livekit-client';\nimport { Track, createAudioAnalyser } from 'livekit-client';\nimport {\n  type TrackReference,\n  isTrackReference,\n  type TrackReferenceOrPlaceholder,\n} from '@livekit/components-core';\n\n/**\n * @alpha\n * Hook for tracking the volume of an audio track using the Web Audio API.\n */\nexport const useTrackVolume = (\n  trackOrTrackReference?: LocalAudioTrack | RemoteAudioTrack | TrackReference,\n  options: AudioAnalyserOptions = { fftSize: 32, smoothingTimeConstant: 0 },\n) => {\n  const track = isTrackReference(trackOrTrackReference)\n    ? <LocalAudioTrack | RemoteAudioTrack | undefined>trackOrTrackReference.publication.track\n    : trackOrTrackReference;\n  const [volume, setVolume] = React.useState(0);\n  React.useEffect(() => {\n    if (!track || !track.mediaStream) {\n      return;\n    }\n\n    const { cleanup, analyser } = createAudioAnalyser(track, options);\n\n    const bufferLength = analyser.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n\n    const updateVolume = () => {\n      analyser.getByteFrequencyData(dataArray);\n      let sum = 0;\n      for (let i = 0; i < dataArray.length; i++) {\n        const a = dataArray[i];\n        sum += a * a;\n      }\n      setVolume(Math.sqrt(sum / dataArray.length) / 255);\n    };\n\n    const interval = setInterval(updateVolume, 1000 / 30);\n\n    return () => {\n      cleanup();\n      clearInterval(interval);\n    };\n  }, [track, track?.mediaStream, JSON.stringify(options)]);\n\n  return volume;\n};\n\nconst normalizeFrequencies = (frequencies: Float32Array) => {\n  const normalizeDb = (value: number) => {\n    const minDb = -100;\n    const maxDb = -10;\n    let db = 1 - (Math.max(minDb, Math.min(maxDb, value)) * -1) / 100;\n    db = Math.sqrt(db);\n\n    return db;\n  };\n\n  // Normalize all frequency values\n  return frequencies.map((value) => {\n    if (value === -Infinity) {\n      return 0;\n    }\n    return normalizeDb(value);\n  });\n};\n\n/**\n * Interface for configuring options for the useMultibandTrackVolume hook.\n * @alpha\n */\nexport interface MultiBandTrackVolumeOptions {\n  bands?: number;\n  /**\n   * cut off of frequency bins on the lower end\n   * Note: this is not a frequency measure, but in relation to analyserOptions.fftSize,\n   */\n  loPass?: number;\n  /**\n   * cut off of frequency bins on the higher end\n   * Note: this is not a frequency measure, but in relation to analyserOptions.fftSize,\n   */\n  hiPass?: number;\n  /**\n   * update should run every x ms\n   */\n  updateInterval?: number;\n  analyserOptions?: AnalyserOptions;\n}\n\nconst multibandDefaults = {\n  bands: 5,\n  loPass: 100,\n  hiPass: 600,\n  updateInterval: 10,\n  analyserOptions: { fftSize: 2048 },\n} as const satisfies MultiBandTrackVolumeOptions;\n\n/**\n * Hook for tracking the volume of an audio track across multiple frequency bands using the Web Audio API.\n * @alpha\n */\nexport const useMultibandTrackVolume = (\n  trackOrTrackReference?: LocalAudioTrack | RemoteAudioTrack | TrackReferenceOrPlaceholder,\n  options: MultiBandTrackVolumeOptions = {},\n) => {\n  const track =\n    trackOrTrackReference instanceof Track\n      ? trackOrTrackReference\n      : <LocalAudioTrack | RemoteAudioTrack | undefined>trackOrTrackReference?.publication?.track;\n  const [frequencyBands, setFrequencyBands] = React.useState<Array<number>>([]);\n  const opts = { ...multibandDefaults, ...options };\n  React.useEffect(() => {\n    if (!track || !track?.mediaStream) {\n      return;\n    }\n    const { analyser, cleanup } = createAudioAnalyser(track, opts.analyserOptions);\n\n    const bufferLength = analyser.frequencyBinCount;\n    const dataArray = new Float32Array(bufferLength);\n\n    const updateVolume = () => {\n      analyser.getFloatFrequencyData(dataArray);\n      let frequencies: Float32Array = new Float32Array(dataArray.length);\n      for (let i = 0; i < dataArray.length; i++) {\n        frequencies[i] = dataArray[i];\n      }\n      frequencies = frequencies.slice(options.loPass, options.hiPass);\n\n      const normalizedFrequencies = normalizeFrequencies(frequencies);\n      const chunkSize = Math.ceil(normalizedFrequencies.length / opts.bands);\n      const chunks: Array<number> = [];\n      for (let i = 0; i < opts.bands; i++) {\n        const summedVolumes = normalizedFrequencies\n          .slice(i * chunkSize, (i + 1) * chunkSize)\n          .reduce((acc, val) => (acc += val), 0);\n        chunks.push(summedVolumes / chunkSize);\n      }\n\n      setFrequencyBands(chunks);\n    };\n\n    const interval = setInterval(updateVolume, opts.updateInterval);\n\n    return () => {\n      cleanup();\n      clearInterval(interval);\n    };\n  }, [track, track?.mediaStream, JSON.stringify(options)]);\n\n  return frequencyBands;\n};\n", "import type { Room } from 'livekit-client';\nimport * as React from 'react';\nimport { useConnectionState } from '../hooks';\n\n/** @public */\nexport interface ConnectionStatusProps extends React.HTMLAttributes<HTMLDivElement> {\n  /**\n   * The room from which the connection status should be displayed.\n   */\n  room?: Room;\n}\n\n/**\n * The `ConnectionState` component displays the connection status of the room as strings\n * (`\"connected\" | \"connecting\" | \"disconnected\" | \"reconnecting\"`).\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <ConnectionState />\n * </LiveKitRoom>\n * ```\n * @public\n */\nexport function ConnectionState({ room, ...props }: ConnectionStatusProps) {\n  const connectionState = useConnectionState(room);\n  return <div {...props}>{connectionState}</div>;\n}\n", "import * as React from 'react';\nimport { useChatToggle } from '../../hooks';\n\n/** @public */\nexport interface ChatToggleProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {}\n\n/**\n * The `ChatToggle` component is a button that toggles the visibility of the `Chat` component.\n * @remarks\n * For the component to have any effect it has to live inside a `LayoutContext` context.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <ToggleChat />\n * </LiveKitRoom>\n * ```\n * @public\n */\nexport function ChatToggle(props: ChatToggleProps) {\n  const { mergedProps } = useChatToggle({ props });\n\n  return <button {...mergedProps}>{props.children}</button>;\n}\n", "import * as React from 'react';\nimport { useDisconnectButton } from '../../hooks';\n\n/** @public */\nexport interface DisconnectButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  stopTracks?: boolean;\n}\n\n/**\n * The `DisconnectButton` is a basic html button with the added ability to disconnect from a LiveKit room.\n * Normally this is the big red button that allows end users to leave the video or audio call.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <DisconnectButton>Leave room</DisconnectButton>\n * </LiveKitRoom>\n * ```\n * @public\n */\nexport function DisconnectButton(props: DisconnectButtonProps) {\n  const { buttonProps } = useDisconnectButton(props);\n  return <button {...buttonProps}>{props.children}</button>;\n}\n", "import type { Participant, Track } from 'livekit-client';\nimport * as React from 'react';\nimport { LayoutContext, useMaybeTrackRefContext } from '../../context';\nimport { FocusToggleIcon, UnfocusToggleIcon } from '../../assets/icons';\nimport { useFocusToggle } from '../../hooks';\nimport type { TrackReferenceOrPlaceholder } from '@livekit/components-core';\n\n/** @public */\nexport interface FocusToggleProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  trackRef?: TrackReferenceOrPlaceholder;\n  /** @deprecated This parameter will be removed in a future version use `trackRef` instead. */\n  trackSource?: Track.Source;\n  /** @deprecated This parameter will be removed in a future version use `trackRef` instead. */\n  participant?: Participant;\n}\n\n/**\n * The `FocusToggle` puts the `ParticipantTile` in focus or removes it from focus.\n * @remarks\n * This component needs to live inside `LayoutContext` to work properly.\n *\n * @example\n * ```tsx\n * <ParticipantTile>\n *   <FocusToggle />\n * </ParticipantTile>\n * ```\n * @public\n */\nexport function FocusToggle({ trackRef, trackSource, participant, ...props }: FocusToggleProps) {\n  const trackRefFromContext = useMaybeTrackRefContext();\n\n  const { mergedProps, inFocus } = useFocusToggle({\n    trackRef: trackRef ?? trackRefFromContext,\n    trackSource,\n    participant,\n    props,\n  });\n\n  return (\n    <LayoutContext.Consumer>\n      {(layoutContext) =>\n        layoutContext !== undefined && (\n          <button {...mergedProps}>\n            {props.children ? (\n              props.children\n            ) : inFocus ? (\n              <UnfocusToggleIcon />\n            ) : (\n              <FocusToggleIcon />\n            )}\n          </button>\n        )\n      }\n    </LayoutContext.Consumer>\n  );\n}\n", "/**\n * WARNING: This file was auto-generated by svgr. Do not edit.\n */\nimport * as React from 'react';\nimport type { SVGProps } from 'react';\n/**\n * @internal\n */\nconst SvgCameraDisabledIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} fill=\"currentColor\" {...props}>\n    <path d=\"M1.354.646a.5.5 0 1 0-.708.708l14 14a.5.5 0 0 0 .708-.708L11 10.293V4.5A1.5 1.5 0 0 0 9.5 3H3.707zM0 4.5a1.5 1.5 0 0 1 .943-1.393l9.532 9.533c-.262.224-.603.36-.975.36h-8A1.5 1.5 0 0 1 0 11.5z\" />\n    <path d=\"m15.2 3.6-2.8 2.1a1 1 0 0 0-.4.8v3a1 1 0 0 0 .4.8l2.8 2.1a.5.5 0 0 0 .8-.4V4a.5.5 0 0 0-.8-.4z\" />\n  </svg>\n);\nexport default SvgCameraDisabledIcon;\n", "/**\n * WARNING: This file was auto-generated by svgr. Do not edit.\n */\nimport * as React from 'react';\nimport type { SVGProps } from 'react';\n/**\n * @internal\n */\nconst SvgCameraIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} fill=\"currentColor\" {...props}>\n    <path d=\"M0 4.5A1.5 1.5 0 0 1 1.5 3h8A1.5 1.5 0 0 1 11 4.5v7A1.5 1.5 0 0 1 9.5 13h-8A1.5 1.5 0 0 1 0 11.5zM15.2 3.6l-2.8 2.1a1 1 0 0 0-.4.8v3a1 1 0 0 0 .4.8l2.8 2.1a.5.5 0 0 0 .8-.4V4a.5.5 0 0 0-.8-.4z\" />\n  </svg>\n);\nexport default SvgCameraIcon;\n", "/**\n * WARNING: This file was auto-generated by svgr. Do not edit.\n */\nimport * as React from 'react';\nimport type { SVGProps } from 'react';\n/**\n * @internal\n */\nconst SvgChatCloseIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} viewBox=\"0 0 24 24\" {...props}>\n    <path\n      fill=\"#FFF\"\n      d=\"M4.99 3.99a1 1 0 0 0-.697 1.717L10.586 12l-6.293 6.293a1 1 0 1 0 1.414 1.414L12 13.414l6.293 6.293a1 1 0 1 0 1.414-1.414L13.414 12l6.293-6.293a1 1 0 0 0-.727-1.717 1 1 0 0 0-.687.303L12 10.586 5.707 4.293a1 1 0 0 0-.717-.303z\"\n    />\n  </svg>\n);\nexport default SvgChatCloseIcon;\n", "/**\n * WARNING: This file was auto-generated by svgr. Do not edit.\n */\nimport * as React from 'react';\nimport type { SVGProps } from 'react';\n/**\n * @internal\n */\nconst SvgChatIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={18} fill=\"none\" {...props}>\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M0 2.75A2.75 2.75 0 0 1 2.75 0h10.5A2.75 2.75 0 0 1 16 2.75v13.594a.75.75 0 0 1-1.234.572l-3.691-3.12a1.25 1.25 0 0 0-.807-.296H2.75A2.75 2.75 0 0 1 0 10.75v-8ZM2.75 1.5c-.69 0-1.25.56-1.25 1.25v8c0 .69.56 1.25 1.25 1.25h7.518c.65 0 1.279.23 1.775.65l2.457 2.077V2.75c0-.69-.56-1.25-1.25-1.25H2.75Z\"\n      clipRule=\"evenodd\"\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M3 4.5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5Zm0 2a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5Zm0 2a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5Z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\nexport default SvgChatIcon;\n", "/**\n * WARNING: This file was auto-generated by svgr. Do not edit.\n */\nimport * as React from 'react';\nimport type { SVGProps } from 'react';\n/**\n * @internal\n */\nconst SvgChevron = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} fill=\"none\" {...props}>\n    <path\n      fill=\"currentcolor\"\n      fillRule=\"evenodd\"\n      d=\"M5.293 2.293a1 1 0 0 1 1.414 0l4.823 4.823a1.25 1.25 0 0 1 0 1.768l-4.823 4.823a1 1 0 0 1-1.414-1.414L9.586 8 5.293 3.707a1 1 0 0 1 0-1.414z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\nexport default SvgChevron;\n", "/**\n * WARNING: This file was auto-generated by svgr. Do not edit.\n */\nimport * as React from 'react';\nimport type { SVGProps } from 'react';\n/**\n * @internal\n */\nconst SvgFocusToggleIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} fill=\"none\" {...props}>\n    <g stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5}>\n      <path d=\"M10 1.75h4.25m0 0V6m0-4.25L9 7M6 14.25H1.75m0 0V10m0 4.25L7 9\" />\n    </g>\n  </svg>\n);\nexport default SvgFocusToggleIcon;\n", "/**\n * WARNING: This file was auto-generated by svgr. Do not edit.\n */\nimport * as React from 'react';\nimport type { SVGProps } from 'react';\n/**\n * @internal\n */\nconst SvgGearIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} fill=\"none\" {...props}>\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M2 2.75A2.75 2.75 0 0 1 4.75 0h6.5A2.75 2.75 0 0 1 14 2.75v10.5A2.75 2.75 0 0 1 11.25 16h-6.5A2.75 2.75 0 0 1 2 13.25v-.5a.75.75 0 0 1 1.5 0v.5c0 .69.56 1.25 1.25 1.25h6.5c.69 0 1.25-.56 1.25-1.25V2.75c0-.69-.56-1.25-1.25-1.25h-6.5c-.69 0-1.25.56-1.25 1.25v.5a.75.75 0 0 1-1.5 0v-.5Z\"\n      clipRule=\"evenodd\"\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M8.78 7.47a.75.75 0 0 1 0 1.06l-2.25 2.25a.75.75 0 1 1-1.06-1.06l.97-.97H1.75a.75.75 0 0 1 0-1.5h4.69l-.97-.97a.75.75 0 0 1 1.06-1.06l2.25 2.25Z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\nexport default SvgGearIcon;\n", "/**\n * WARNING: This file was auto-generated by svgr. Do not edit.\n */\nimport * as React from 'react';\nimport type { SVGProps } from 'react';\n/**\n * @internal\n */\nconst SvgLeaveIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} fill=\"none\" {...props}>\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M2 2.75A2.75 2.75 0 0 1 4.75 0h6.5A2.75 2.75 0 0 1 14 2.75v10.5A2.75 2.75 0 0 1 11.25 16h-6.5A2.75 2.75 0 0 1 2 13.25v-.5a.75.75 0 0 1 1.5 0v.5c0 .69.56 1.25 1.25 1.25h6.5c.69 0 1.25-.56 1.25-1.25V2.75c0-.69-.56-1.25-1.25-1.25h-6.5c-.69 0-1.25.56-1.25 1.25v.5a.75.75 0 0 1-1.5 0v-.5Z\"\n      clipRule=\"evenodd\"\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M8.78 7.47a.75.75 0 0 1 0 1.06l-2.25 2.25a.75.75 0 1 1-1.06-1.06l.97-.97H1.75a.75.75 0 0 1 0-1.5h4.69l-.97-.97a.75.75 0 0 1 1.06-1.06l2.25 2.25Z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\nexport default SvgLeaveIcon;\n", "/**\n * WARNING: This file was auto-generated by svgr. Do not edit.\n */\nimport * as React from 'react';\nimport type { SVGProps } from 'react';\n/**\n * @internal\n */\nconst SvgLockLockedIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} fill=\"none\" {...props}>\n    <path\n      fill=\"currentcolor\"\n      fillRule=\"evenodd\"\n      d=\"M4 6.104V4a4 4 0 1 1 8 0v2.104c1.154.326 2 1.387 2 2.646v4.5A2.75 2.75 0 0 1 11.25 16h-6.5A2.75 2.75 0 0 1 2 13.25v-4.5c0-1.259.846-2.32 2-2.646ZM5.5 4a2.5 2.5 0 0 1 5 0v2h-5V4Z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\nexport default SvgLockLockedIcon;\n", "/**\n * WARNING: This file was auto-generated by svgr. Do not edit.\n */\nimport * as React from 'react';\nimport type { SVGProps } from 'react';\n/**\n * @internal\n */\nconst SvgMicDisabledIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} fill=\"currentColor\" {...props}>\n    <path d=\"M12.227 11.52a5.477 5.477 0 0 0 1.246-2.97.5.5 0 0 0-.995-.1 4.478 4.478 0 0 1-.962 2.359l-1.07-1.07C10.794 9.247 11 8.647 11 8V3a3 3 0 0 0-6 0v1.293L1.354.646a.5.5 0 1 0-.708.708l14 14a.5.5 0 0 0 .708-.708zM8 12.5c.683 0 1.33-.152 1.911-.425l.743.743c-.649.359-1.378.59-2.154.66V15h2a.5.5 0 0 1 0 1h-5a.5.5 0 0 1 0-1h2v-1.522a5.502 5.502 0 0 1-4.973-4.929.5.5 0 0 1 .995-.098A4.5 4.5 0 0 0 8 12.5z\" />\n    <path d=\"M8.743 10.907 5 7.164V8a3 3 0 0 0 3.743 2.907z\" />\n  </svg>\n);\nexport default SvgMicDisabledIcon;\n", "/**\n * WARNING: This file was auto-generated by svgr. Do not edit.\n */\nimport * as React from 'react';\nimport type { SVGProps } from 'react';\n/**\n * @internal\n */\nconst SvgMicIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} fill=\"currentColor\" {...props}>\n    <path\n      fillRule=\"evenodd\"\n      d=\"M2.975 8.002a.5.5 0 0 1 .547.449 4.5 4.5 0 0 0 8.956 0 .5.5 0 1 1 .995.098A5.502 5.502 0 0 1 8.5 13.478V15h2a.5.5 0 0 1 0 1h-5a.5.5 0 0 1 0-1h2v-1.522a5.502 5.502 0 0 1-4.973-4.929.5.5 0 0 1 .448-.547z\"\n      clipRule=\"evenodd\"\n    />\n    <path d=\"M5 3a3 3 0 1 1 6 0v5a3 3 0 0 1-6 0z\" />\n  </svg>\n);\nexport default SvgMicIcon;\n", "/**\n * WARNING: This file was auto-generated by svgr. Do not edit.\n */\nimport * as React from 'react';\nimport type { SVGProps } from 'react';\n/**\n * @internal\n */\nconst SvgQualityExcellentIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} fill=\"currentcolor\" {...props}>\n    <path d=\"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-6a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" />\n    <path d=\"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-6a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" />\n  </svg>\n);\nexport default SvgQualityExcellentIcon;\n", "/**\n * WARNING: This file was auto-generated by svgr. Do not edit.\n */\nimport * as React from 'react';\nimport type { SVGProps } from 'react';\n/**\n * @internal\n */\nconst SvgQualityGoodIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} fill=\"currentcolor\" {...props}>\n    <path d=\"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" />\n    <path d=\"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" />\n    <g opacity={0.25}>\n      <path d=\"M12 .5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" />\n      <path d=\"M12 .5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" />\n    </g>\n  </svg>\n);\nexport default SvgQualityGoodIcon;\n", "/**\n * WARNING: This file was auto-generated by svgr. Do not edit.\n */\nimport * as React from 'react';\nimport type { SVGProps } from 'react';\n/**\n * @internal\n */\nconst SvgQualityPoorIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} fill=\"currentcolor\" {...props}>\n    <path d=\"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" />\n    <path d=\"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" />\n    <g opacity={0.25}>\n      <path d=\"M6 6.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" />\n      <path d=\"M6 6.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-6a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" />\n      <path d=\"M12 .5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" />\n    </g>\n  </svg>\n);\nexport default SvgQualityPoorIcon;\n", "/**\n * WARNING: This file was auto-generated by svgr. Do not edit.\n */\nimport * as React from 'react';\nimport type { SVGProps } from 'react';\n/**\n * @internal\n */\nconst SvgQualityUnknownIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} fill=\"currentColor\" {...props}>\n    <g opacity={0.25}>\n      <path d=\"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-4Zm6-5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-9Zm6-6a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5V.5Z\" />\n      <path d=\"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-4Zm6-5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-9Zm6-6a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5V.5Z\" />\n    </g>\n  </svg>\n);\nexport default SvgQualityUnknownIcon;\n", "/**\n * WARNING: This file was auto-generated by svgr. Do not edit.\n */\nimport * as React from 'react';\nimport type { SVGProps } from 'react';\n/**\n * @internal\n */\nconst SvgScreenShareIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={20} height={16} fill=\"none\" {...props}>\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M0 2.75A2.75 2.75 0 0 1 2.75 0h14.5A2.75 2.75 0 0 1 20 2.75v10.5A2.75 2.75 0 0 1 17.25 16H2.75A2.75 2.75 0 0 1 0 13.25V2.75ZM2.75 1.5c-.69 0-1.25.56-1.25 1.25v10.5c0 .69.56 1.25 1.25 1.25h14.5c.69 0 1.25-.56 1.25-1.25V2.75c0-.69-.56-1.25-1.25-1.25H2.75Z\"\n      clipRule=\"evenodd\"\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M9.47 4.22a.75.75 0 0 1 1.06 0l2.25 2.25a.75.75 0 0 1-1.06 1.06l-.97-.97v4.69a.75.75 0 0 1-1.5 0V6.56l-.97.97a.75.75 0 0 1-1.06-1.06l2.25-2.25Z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\nexport default SvgScreenShareIcon;\n", "/**\n * WARNING: This file was auto-generated by svgr. Do not edit.\n */\nimport * as React from 'react';\nimport type { SVGProps } from 'react';\n/**\n * @internal\n */\nconst SvgScreenShareStopIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={20} height={16} fill=\"none\" {...props}>\n    <g fill=\"currentColor\">\n      <path d=\"M7.28 4.22a.75.75 0 0 0-1.06 1.06L8.94 8l-2.72 2.72a.75.75 0 1 0 1.06 1.06L10 9.06l2.72 2.72a.75.75 0 1 0 1.06-1.06L11.06 8l2.72-2.72a.75.75 0 0 0-1.06-1.06L10 6.94z\" />\n      <path\n        fillRule=\"evenodd\"\n        d=\"M2.75 0A2.75 2.75 0 0 0 0 2.75v10.5A2.75 2.75 0 0 0 2.75 16h14.5A2.75 2.75 0 0 0 20 13.25V2.75A2.75 2.75 0 0 0 17.25 0zM1.5 2.75c0-.69.56-1.25 1.25-1.25h14.5c.69 0 1.25.56 1.25 1.25v10.5c0 .69-.56 1.25-1.25 1.25H2.75c-.69 0-1.25-.56-1.25-1.25z\"\n        clipRule=\"evenodd\"\n      />\n    </g>\n  </svg>\n);\nexport default SvgScreenShareStopIcon;\n", "/**\n * WARNING: This file was auto-generated by svgr. Do not edit.\n */\nimport * as React from 'react';\nimport type { SVGProps } from 'react';\n/**\n * @internal\n */\nconst SvgSpinnerIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} fill=\"none\" {...props}>\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M8 0a.75.75 0 0 1 .75.75v2.5a.75.75 0 0 1-1.5 0V.75A.75.75 0 0 1 8 0Z\"\n      clipRule=\"evenodd\"\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M8 12a.75.75 0 0 1 .75.75v2.5a.75.75 0 0 1-1.5 0v-2.5A.75.75 0 0 1 8 12Z\"\n      clipRule=\"evenodd\"\n      opacity={0.7}\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M12 1.072a.75.75 0 0 1 .274 1.024l-1.25 2.165a.75.75 0 0 1-1.299-.75l1.25-2.165A.75.75 0 0 1 12 1.072Z\"\n      clipRule=\"evenodd\"\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M6 11.464a.75.75 0 0 1 .274 1.025l-1.25 2.165a.75.75 0 0 1-1.299-.75l1.25-2.165A.75.75 0 0 1 6 11.464Z\"\n      clipRule=\"evenodd\"\n      opacity={0.6}\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M14.928 4a.75.75 0 0 1-.274 1.025l-2.165 1.25a.75.75 0 1 1-.75-1.3l2.165-1.25A.75.75 0 0 1 14.928 4Z\"\n      clipRule=\"evenodd\"\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M4.536 10a.75.75 0 0 1-.275 1.024l-2.165 1.25a.75.75 0 0 1-.75-1.298l2.165-1.25A.75.75 0 0 1 4.536 10Z\"\n      clipRule=\"evenodd\"\n      opacity={0.5}\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M16 8a.75.75 0 0 1-.75.75h-2.5a.75.75 0 0 1 0-1.5h2.5A.75.75 0 0 1 16 8Z\"\n      clipRule=\"evenodd\"\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M4 8a.75.75 0 0 1-.75.75H.75a.75.75 0 0 1 0-1.5h2.5A.75.75 0 0 1 4 8Z\"\n      clipRule=\"evenodd\"\n      opacity={0.4}\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M14.928 12a.75.75 0 0 1-1.024.274l-2.165-1.25a.75.75 0 0 1 .75-1.299l2.165 1.25A.75.75 0 0 1 14.928 12Z\"\n      clipRule=\"evenodd\"\n      opacity={0.9}\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M4.536 6a.75.75 0 0 1-1.025.275l-2.165-1.25a.75.75 0 1 1 .75-1.3l2.165 1.25A.75.75 0 0 1 4.536 6Z\"\n      clipRule=\"evenodd\"\n      opacity={0.3}\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M12 14.928a.75.75 0 0 1-1.024-.274l-1.25-2.165a.75.75 0 0 1 1.298-.75l1.25 2.165A.75.75 0 0 1 12 14.928Z\"\n      clipRule=\"evenodd\"\n      opacity={0.8}\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M6 4.536a.75.75 0 0 1-1.024-.275l-1.25-2.165a.75.75 0 1 1 1.299-.75l1.25 2.165A.75.75 0 0 1 6 4.536Z\"\n      clipRule=\"evenodd\"\n      opacity={0.2}\n    />\n  </svg>\n);\nexport default SvgSpinnerIcon;\n", "/**\n * WARNING: This file was auto-generated by svgr. Do not edit.\n */\nimport * as React from 'react';\nimport type { SVGProps } from 'react';\n/**\n * @internal\n */\nconst SvgUnfocusToggleIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} fill=\"none\" {...props}>\n    <g stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5}>\n      <path d=\"M13.25 7H9m0 0V2.75M9 7l5.25-5.25M2.75 9H7m0 0v4.25M7 9l-5.25 5.25\" />\n    </g>\n  </svg>\n);\nexport default SvgUnfocusToggleIcon;\n", "import * as React from 'react';\nimport { useMaybeRoomContext } from '../../context';\nimport { mergeProps } from '../../utils';\nimport { RoomEvent, type LocalAudioTrack, type LocalVideoTrack } from 'livekit-client';\nimport { useMediaDeviceSelect } from '../../hooks';\n\n/** @public */\nexport interface MediaDeviceSelectProps\n  extends Omit<React.HTMLAttributes<HTMLUListElement>, 'onError'> {\n  kind: MediaDeviceKind;\n  onActiveDeviceChange?: (deviceId: string) => void;\n  onDeviceListChange?: (devices: MediaDeviceInfo[]) => void;\n  onDeviceSelectError?: (e: Error) => void;\n  initialSelection?: string;\n  /** will force the browser to only return the specified device\n   * will call `onDeviceSelectError` with the error in case this fails\n   */\n  exactMatch?: boolean;\n  track?: LocalAudioTrack | LocalVideoTrack;\n  /**\n   * this will call getUserMedia if the permissions are not yet given to enumerate the devices with device labels.\n   * in some browsers multiple calls to getUserMedia result in multiple permission prompts.\n   * It's generally advised only flip this to true, once a (preview) track has been acquired successfully with the\n   * appropriate permissions.\n   *\n   * @see {@link MediaDeviceMenu}\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/enumerateDevices | MDN enumerateDevices}\n   */\n  requestPermissions?: boolean;\n  onError?: (e: Error) => void;\n}\n\n/**\n * The `MediaDeviceSelect` list all media devices of one kind.\n * Clicking on one of the listed devices make it the active media device.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <MediaDeviceSelect kind='audioinput' />\n * </LiveKitRoom>\n * ```\n * @public\n */\nexport function MediaDeviceSelect({\n  kind,\n  initialSelection,\n  onActiveDeviceChange,\n  onDeviceListChange,\n  onDeviceSelectError,\n  exactMatch,\n  track,\n  requestPermissions,\n  onError,\n  ...props\n}: MediaDeviceSelectProps) {\n  const room = useMaybeRoomContext();\n  const handleError = React.useCallback(\n    (e: Error) => {\n      if (room) {\n        // awkwardly emit the event from outside of the room, as we don't have other means to raise a MediaDeviceError\n        room.emit(RoomEvent.MediaDevicesError, e);\n      }\n      onError?.(e);\n    },\n    [room, onError],\n  );\n  const { devices, activeDeviceId, setActiveMediaDevice, className } = useMediaDeviceSelect({\n    kind,\n    room,\n    track,\n    requestPermissions,\n    onError: handleError,\n  });\n  React.useEffect(() => {\n    if (initialSelection !== undefined) {\n      setActiveMediaDevice(initialSelection);\n    }\n  }, [setActiveMediaDevice]);\n\n  React.useEffect(() => {\n    if (typeof onDeviceListChange === 'function') {\n      onDeviceListChange(devices);\n    }\n  }, [onDeviceListChange, devices]);\n\n  React.useEffect(() => {\n    if (activeDeviceId && activeDeviceId !== '') {\n      onActiveDeviceChange?.(activeDeviceId);\n    }\n  }, [activeDeviceId]);\n\n  const handleActiveDeviceChange = async (deviceId: string) => {\n    try {\n      await setActiveMediaDevice(deviceId, { exact: exactMatch });\n    } catch (e) {\n      if (e instanceof Error) {\n        onDeviceSelectError?.(e);\n      } else {\n        throw e;\n      }\n    }\n  };\n  // Merge Props\n  const mergedProps = React.useMemo(\n    () => mergeProps(props, { className }, { className: 'lk-list' }),\n    [className, props],\n  );\n\n  function isActive(deviceId: string, activeDeviceId: string, index: number) {\n    return deviceId === activeDeviceId || (index === 0 && activeDeviceId === 'default');\n  }\n\n  return (\n    <ul {...mergedProps}>\n      {devices.map((device, index) => (\n        <li\n          key={device.deviceId}\n          id={device.deviceId}\n          data-lk-active={isActive(device.deviceId, activeDeviceId, index)}\n          aria-selected={isActive(device.deviceId, activeDeviceId, index)}\n          role=\"option\"\n        >\n          <button className=\"lk-button\" onClick={() => handleActiveDeviceChange(device.deviceId)}>\n            {device.label}\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n", "import * as React from 'react';\nimport { useRoomContext } from '../../context';\nimport { useStartAudio } from '../../hooks';\n\n/** @public */\nexport interface AllowAudioPlaybackProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  label: string;\n}\n\n/**\n * The `StartAudio` component is only visible when the browser blocks audio playback. This is due to some browser implemented autoplay policies.\n * To start audio playback, the user must perform a user-initiated event such as clicking this button.\n * As soon as audio playback starts, the button hides itself again.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <StartAudio label=\"Click to allow audio playback\" />\n * </LiveKitRoom>\n * ```\n *\n * @see Autoplay policy on MDN web docs: {@link https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API/Best_practices#autoplay_policy}\n * @public\n */\nexport function StartAudio({ label = 'Allow Audio', ...props }: AllowAudioPlaybackProps) {\n  const room = useRoomContext();\n  const { mergedProps } = useStartAudio({ room, props });\n\n  return <button {...mergedProps}>{label}</button>;\n}\n", "import type { CaptureOptionsBySource, ToggleSource } from '@livekit/components-core';\nimport * as React from 'react';\nimport { getSourceIcon } from '../../assets/icons/util';\nimport { useTrackToggle } from '../../hooks';\n\n/** @public */\nexport interface TrackToggleProps<T extends ToggleSource>\n  extends Omit<React.ButtonHTMLAttributes<HTMLButtonElement>, 'onChange'> {\n  source: T;\n  showIcon?: boolean;\n  initialState?: boolean;\n  /**\n   * Function that is called when the enabled state of the toggle changes.\n   * The second function argument `isUserInitiated` is `true` if the change was initiated by a user interaction, such as a click.\n   */\n  onChange?: (enabled: boolean, isUserInitiated: boolean) => void;\n  captureOptions?: CaptureOptionsBySource<T>;\n}\n\n/**\n * With the `TrackToggle` component it is possible to mute and unmute your camera and microphone.\n * The component uses an html button element under the hood so you can treat it like a button.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <TrackToggle source={Track.Source.Microphone} />\n *   <TrackToggle source={Track.Source.Camera} />\n * </LiveKitRoom>\n * ```\n * @public\n */\nexport function TrackToggle<T extends ToggleSource>({ showIcon, ...props }: TrackToggleProps<T>) {\n  const { buttonProps, enabled } = useTrackToggle(props);\n  return (\n    <button {...buttonProps}>\n      {(showIcon ?? true) && getSourceIcon(props.source, enabled)}\n      {props.children}\n    </button>\n  );\n}\n", "import * as React from 'react';\nimport { ConnectionQuality, Track } from 'livekit-client';\n\nimport {\n  MicIcon,\n  MicDisabledIcon,\n  CameraIcon,\n  CameraDisabledIcon,\n  QualityUnknownIcon,\n  QualityExcellentIcon,\n  QualityGoodIcon,\n  QualityPoorIcon,\n  ScreenShareIcon,\n  ScreenShareStopIcon,\n} from './index';\n\n/**\n * @internal\n */\nexport function getSourceIcon(source: Track.Source, enabled: boolean) {\n  switch (source) {\n    case Track.Source.Microphone:\n      return enabled ? <MicIcon /> : <MicDisabledIcon />;\n    case Track.Source.Camera:\n      return enabled ? <CameraIcon /> : <CameraDisabledIcon />;\n    case Track.Source.ScreenShare:\n      return enabled ? <ScreenShareStopIcon /> : <ScreenShareIcon />;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * @internal\n */\nexport function getConnectionQualityIcon(quality: ConnectionQuality) {\n  switch (quality) {\n    case ConnectionQuality.Excellent:\n      return <QualityExcellentIcon />;\n    case ConnectionQuality.Good:\n      return <QualityGoodIcon />;\n    case ConnectionQuality.Poor:\n      return <QualityPoorIcon />;\n    default:\n      return <QualityUnknownIcon />;\n  }\n}\n", "import type { Participant } from 'livekit-client';\nimport * as React from 'react';\nimport { mergeProps } from '../../utils';\nimport type { TrackReference, TrackReferenceOrPlaceholder } from '@livekit/components-core';\nimport { ParticipantTile } from '../participant/ParticipantTile';\nimport type { ParticipantClickEvent } from '@livekit/components-core';\n\n/** @public */\nexport interface FocusLayoutContainerProps extends React.HTMLAttributes<HTMLDivElement> {\n  /** @deprecated This property has no effect and will be removed in a future version. */\n  focusTrack?: TrackReference;\n  /** @deprecated This property has no effect and will be removed in a future version. */\n  participants?: Array<Participant>;\n}\n\n/**\n * The `FocusLayoutContainer` is a layout component that expects two children:\n * A small side component: In a video conference, this is usually a carousel of participants\n * who are not in focus. And a larger main component to display the focused participant.\n * For example, with the `FocusLayout` component.\n *  @public\n */\nexport function FocusLayoutContainer(props: FocusLayoutContainerProps) {\n  const elementProps = mergeProps(props, { className: 'lk-focus-layout' });\n\n  return <div {...elementProps}>{props.children}</div>;\n}\n\n/** @public */\nexport interface FocusLayoutProps extends React.HTMLAttributes<HTMLElement> {\n  /** The track to display in the focus layout. */\n  trackRef?: TrackReferenceOrPlaceholder;\n  /** @deprecated This property will be removed in a future version use `trackRef` instead. */\n  track?: TrackReferenceOrPlaceholder;\n  onParticipantClick?: (evt: ParticipantClickEvent) => void;\n}\n\n/**\n * The `FocusLayout` component is just a light wrapper around the `ParticipantTile` to display a single participant.\n * @public\n */\nexport function FocusLayout({ trackRef, track, ...htmlProps }: FocusLayoutProps) {\n  const trackReference = trackRef ?? track;\n  return <ParticipantTile {...trackReference} {...htmlProps} />;\n}\n", "import * as React from 'react';\nimport type { Participant, TrackPublication } from 'livekit-client';\nimport { Track } from 'livekit-client';\nimport type { ParticipantClickEvent, TrackReferenceOrPlaceholder } from '@livekit/components-core';\nimport { isTrackReference, isTrackReferencePinned } from '@livekit/components-core';\nimport { ConnectionQualityIndicator } from './ConnectionQualityIndicator';\nimport { ParticipantName } from './ParticipantName';\nimport { TrackMutedIndicator } from './TrackMutedIndicator';\nimport {\n  ParticipantContext,\n  TrackRefContext,\n  useEnsureParticipant,\n  useFeatureContext,\n  useMaybeLayoutContext,\n  useMaybeParticipantContext,\n  useMaybeTrackRefContext,\n} from '../../context';\nimport { FocusToggle } from '../controls/FocusToggle';\nimport { ParticipantPlaceholder } from '../../assets/images';\nimport { LockLockedIcon, ScreenShareIcon } from '../../assets/icons';\nimport { VideoTrack } from './VideoTrack';\nimport { AudioTrack } from './AudioTrack';\nimport { useParticipantTile } from '../../hooks';\nimport { useIsEncrypted } from '../../hooks/useIsEncrypted';\n\n/**\n * The `ParticipantContextIfNeeded` component only creates a `ParticipantContext`\n * if there is no `ParticipantContext` already.\n * @example\n * ```tsx\n * <ParticipantContextIfNeeded participant={trackReference.participant}>\n *  ...\n * </ParticipantContextIfNeeded>\n * ```\n * @public\n */\nexport function ParticipantContextIfNeeded(\n  props: React.PropsWithChildren<{\n    participant?: Participant;\n  }>,\n) {\n  const hasContext = !!useMaybeParticipantContext();\n  return props.participant && !hasContext ? (\n    <ParticipantContext.Provider value={props.participant}>\n      {props.children}\n    </ParticipantContext.Provider>\n  ) : (\n    <>{props.children}</>\n  );\n}\n\n/**\n * Only create a `TrackRefContext` if there is no `TrackRefContext` already.\n */\nfunction TrackRefContextIfNeeded(\n  props: React.PropsWithChildren<{\n    trackRef?: TrackReferenceOrPlaceholder;\n  }>,\n) {\n  const hasContext = !!useMaybeTrackRefContext();\n  return props.trackRef && !hasContext ? (\n    <TrackRefContext.Provider value={props.trackRef}>{props.children}</TrackRefContext.Provider>\n  ) : (\n    <>{props.children}</>\n  );\n}\n\n/** @public */\nexport interface ParticipantTileProps extends React.HTMLAttributes<HTMLDivElement> {\n  /** The track reference to display. */\n  trackRef?: TrackReferenceOrPlaceholder;\n  disableSpeakingIndicator?: boolean;\n  /** @deprecated This parameter will be removed in a future version use `trackRef` instead. */\n  participant?: Participant;\n  /** @deprecated This parameter will be removed in a future version use `trackRef` instead. */\n  source?: Track.Source;\n  /** @deprecated This parameter will be removed in a future version use `trackRef` instead. */\n  publication?: TrackPublication;\n  onParticipantClick?: (event: ParticipantClickEvent) => void;\n}\n\n/**\n * The `ParticipantTile` component is the base utility wrapper for displaying a visual representation of a participant.\n * This component can be used as a child of the `TrackLoop` component or by passing a track reference as property.\n *\n * @example Using the `ParticipantTile` component with a track reference:\n * ```tsx\n * <ParticipantTile trackRef={trackRef} />\n * ```\n * @example Using the `ParticipantTile` component as a child of the `TrackLoop` component:\n * ```tsx\n * <TrackLoop>\n *  <ParticipantTile />\n * </TrackLoop>\n * ```\n * @public\n */\nexport function ParticipantTile({\n  trackRef,\n  participant,\n  children,\n  source = Track.Source.Camera,\n  onParticipantClick,\n  publication,\n  disableSpeakingIndicator,\n  ...htmlProps\n}: ParticipantTileProps) {\n  // TODO: remove deprecated props and refactor in a future version.\n  const maybeTrackRef = useMaybeTrackRefContext();\n  const p = useEnsureParticipant(participant);\n  const trackReference: TrackReferenceOrPlaceholder = React.useMemo(() => {\n    return {\n      participant: trackRef?.participant ?? maybeTrackRef?.participant ?? p,\n      source: trackRef?.source ?? maybeTrackRef?.source ?? source,\n      publication: trackRef?.publication ?? maybeTrackRef?.publication ?? publication,\n    };\n  }, [maybeTrackRef, p, publication, source, trackRef]);\n\n  const { elementProps } = useParticipantTile<HTMLDivElement>({\n    participant: trackReference.participant,\n    htmlProps,\n    source: trackReference.source,\n    publication: trackReference.publication,\n    disableSpeakingIndicator,\n    onParticipantClick,\n  });\n  const isEncrypted = useIsEncrypted(p);\n  const layoutContext = useMaybeLayoutContext();\n\n  const autoManageSubscription = useFeatureContext()?.autoSubscription;\n\n  const handleSubscribe = React.useCallback(\n    (subscribed: boolean) => {\n      if (\n        trackReference.source &&\n        !subscribed &&\n        layoutContext &&\n        layoutContext.pin.dispatch &&\n        isTrackReferencePinned(trackReference, layoutContext.pin.state)\n      ) {\n        layoutContext.pin.dispatch({ msg: 'clear_pin' });\n      }\n    },\n    [trackReference, layoutContext],\n  );\n\n  return (\n    <div style={{ position: 'relative' }} {...elementProps}>\n      <TrackRefContextIfNeeded trackRef={trackReference}>\n        <ParticipantContextIfNeeded participant={trackReference.participant}>\n          {children ?? (\n            <>\n              {isTrackReference(trackReference) &&\n              (trackReference.publication?.kind === 'video' ||\n                trackReference.source === Track.Source.Camera ||\n                trackReference.source === Track.Source.ScreenShare) ? (\n                <VideoTrack\n                  trackRef={trackReference}\n                  onSubscriptionStatusChanged={handleSubscribe}\n                  manageSubscription={autoManageSubscription}\n                />\n              ) : (\n                isTrackReference(trackReference) && (\n                  <AudioTrack\n                    trackRef={trackReference}\n                    onSubscriptionStatusChanged={handleSubscribe}\n                  />\n                )\n              )}\n              <div className=\"lk-participant-placeholder\">\n                <ParticipantPlaceholder />\n              </div>\n              <div className=\"lk-participant-metadata\">\n                <div className=\"lk-participant-metadata-item\">\n                  {trackReference.source === Track.Source.Camera ? (\n                    <>\n                      {isEncrypted && <LockLockedIcon style={{ marginRight: '0.25rem' }} />}\n                      <TrackMutedIndicator\n                        source={Track.Source.Microphone}\n                        show={'muted'}\n                      ></TrackMutedIndicator>\n                      <ParticipantName />\n                    </>\n                  ) : (\n                    <>\n                      <ScreenShareIcon style={{ marginRight: '0.25rem' }} />\n                      <ParticipantName>&apos;s screen</ParticipantName>\n                    </>\n                  )}\n                </div>\n                <ConnectionQualityIndicator className=\"lk-participant-metadata-item\" />\n              </div>\n            </>\n          )}\n          <FocusToggle trackRef={trackReference} />\n        </ParticipantContextIfNeeded>\n      </TrackRefContextIfNeeded>\n    </div>\n  );\n}\n", "import * as React from 'react';\nimport { mergeProps } from '../../utils';\nimport { getConnectionQualityIcon } from '../../assets/icons/util';\nimport type { ConnectionQualityIndicatorOptions } from '../../hooks';\nimport { useConnectionQualityIndicator } from '../../hooks';\n\n/** @public */\nexport interface ConnectionQualityIndicatorProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    ConnectionQualityIndicatorOptions {}\n\n/**\n * The `ConnectionQualityIndicator` shows the individual connection quality of a participant.\n *\n * @example\n * ```tsx\n * <ConnectionQualityIndicator />\n * ```\n * @public\n */\nexport function ConnectionQualityIndicator(props: ConnectionQualityIndicatorProps) {\n  const { className, quality } = useConnectionQualityIndicator(props);\n  const elementProps = React.useMemo(() => {\n    return { ...mergeProps(props, { className: className as string }), 'data-lk-quality': quality };\n  }, [quality, props, className]);\n  return <div {...elementProps}>{props.children ?? getConnectionQualityIcon(quality)}</div>;\n}\n", "import { setupParticipantName } from '@livekit/components-core';\nimport * as React from 'react';\nimport { useEnsureParticipant } from '../../context';\nimport { useObservableState } from '../../hooks/internal/useObservableState';\nimport { mergeProps } from '../../utils';\nimport type { UseParticipantInfoOptions } from '../../hooks';\n\n/** @public */\nexport interface ParticipantNameProps\n  extends React.HTMLAttributes<HTMLSpanElement>,\n    UseParticipantInfoOptions {}\n\n/**\n * The `ParticipantName` component displays the name of the participant as a string within an HTML span element.\n * If no participant name is undefined the participant identity string is displayed.\n *\n * @example\n * ```tsx\n * <ParticipantName />\n * ```\n * @public\n */\nexport function ParticipantName({ participant, ...props }: ParticipantNameProps) {\n  const p = useEnsureParticipant(participant);\n\n  const { className, infoObserver } = React.useMemo(() => {\n    return setupParticipantName(p);\n  }, [p]);\n\n  const { identity, name } = useObservableState(infoObserver, {\n    name: p.name,\n    identity: p.identity,\n    metadata: p.metadata,\n  });\n\n  const mergedProps = React.useMemo(() => {\n    return mergeProps(props, { className, 'data-lk-participant-name': name });\n  }, [props, className, name]);\n\n  return (\n    <span {...mergedProps}>\n      {name !== '' ? name : identity}\n      {props.children}\n    </span>\n  );\n}\n", "import * as React from 'react';\nimport { mergeProps } from '../../utils';\nimport type { Participant, Track } from 'livekit-client';\nimport { getSourceIcon } from '../../assets/icons/util';\nimport { useTrackMutedIndicator } from '../../hooks';\nimport type { TrackReferenceOrPlaceholder } from '@livekit/components-core';\n\n/** @public */\nexport interface TrackMutedIndicatorProps extends React.HTMLAttributes<HTMLDivElement> {\n  /** @deprecated This parameter will be removed in a future version use `trackRef` instead. */\n  source?: Track.Source;\n  /** @deprecated This parameter will be removed in a future version use `trackRef` instead. */\n  participant?: Participant;\n  trackRef?: TrackReferenceOrPlaceholder;\n  show?: 'always' | 'muted' | 'unmuted';\n}\n\n/**\n * The `TrackMutedIndicator` shows whether the participant's camera or microphone is muted or not.\n * By default, a muted/unmuted icon is displayed for a camera, microphone, and screen sharing track.\n *\n * @example\n * ```tsx\n * <TrackMutedIndicator source={Track.Source.Camera} />\n * <TrackMutedIndicator source={Track.Source.Microphone} />\n * ```\n * @public\n */\nexport function TrackMutedIndicator({\n  source,\n  participant,\n  trackRef,\n  show = 'always',\n  ...props\n}: TrackMutedIndicatorProps) {\n  // @ts-ignore this should work\n  const { className, isMuted } = useTrackMutedIndicator(trackRef ?? source, { participant });\n\n  const showIndicator =\n    show === 'always' || (show === 'muted' && isMuted) || (show === 'unmuted' && !isMuted);\n\n  const htmlProps = React.useMemo(\n    () =>\n      mergeProps(props, {\n        className,\n      }),\n    [className, props],\n  );\n\n  if (!showIndicator) {\n    return null;\n  }\n\n  return (\n    <div {...htmlProps} data-lk-muted={isMuted}>\n      {props.children ?? getSourceIcon((trackRef?.source ?? source)!, !isMuted)}\n    </div>\n  );\n}\n", "/**\n * WARNING: This file was auto-generated by svgr. Do not edit.\n */\nimport * as React from 'react';\nimport type { SVGProps } from 'react';\n/**\n * @internal\n */\nconst SvgParticipantPlaceholder = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    width={320}\n    height={320}\n    viewBox=\"0 0 320 320\"\n    preserveAspectRatio=\"xMidYMid meet\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path\n      d=\"M160 180C204.182 180 240 144.183 240 100C240 55.8172 204.182 20 160 20C115.817 20 79.9997 55.8172 79.9997 100C79.9997 144.183 115.817 180 160 180Z\"\n      fill=\"white\"\n      fillOpacity={0.25}\n    />\n    <path\n      d=\"M97.6542 194.614C103.267 191.818 109.841 192.481 115.519 195.141C129.025 201.466 144.1 205 159.999 205C175.899 205 190.973 201.466 204.48 195.141C210.158 192.481 216.732 191.818 222.345 194.614C262.703 214.719 291.985 253.736 298.591 300.062C300.15 310.997 291.045 320 280 320H39.9997C28.954 320 19.8495 310.997 21.4087 300.062C28.014 253.736 57.2966 214.72 97.6542 194.614Z\"\n      fill=\"white\"\n      fillOpacity={0.25}\n    />\n  </svg>\n);\nexport default SvgParticipantPlaceholder;\n", "import {\n  RemoteTrackPublication,\n  type Participant,\n  type Track,\n  type TrackPublication,\n} from 'livekit-client';\nimport * as React from 'react';\nimport { useMediaTrackBySourceOrName } from '../../hooks/useMediaTrackBySourceOrName';\nimport type { ParticipantClickEvent, TrackReference } from '@livekit/components-core';\nimport { useEnsureParticipant, useMaybeTrackRefContext } from '../../context';\nimport * as useHooks from 'usehooks-ts';\n\n/** @public */\nexport interface VideoTrackProps extends React.VideoHTMLAttributes<HTMLVideoElement> {\n  /** The track reference of the track to render. */\n  trackRef?: TrackReference;\n  /** @deprecated This property will be removed in a future version use `trackRef` instead. */\n  source?: Track.Source;\n  /** @deprecated This property will be removed in a future version use `trackRef` instead. */\n  name?: string;\n  /** @deprecated This property will be removed in a future version use `trackRef` instead. */\n  participant?: Participant;\n  /** @deprecated This property will be removed in a future version use `trackRef` instead. */\n  publication?: TrackPublication;\n  onTrackClick?: (evt: ParticipantClickEvent) => void;\n  onSubscriptionStatusChanged?: (subscribed: boolean) => void;\n  manageSubscription?: boolean;\n}\n\n/**\n * The `VideoTrack` component is responsible for rendering participant video tracks like `camera` and `screen_share`.\n * This component must have access to the participant's context, or alternatively pass it a `Participant` as a property.\n *\n * @example\n * ```tsx\n * <VideoTrack trackRef={trackRef} />\n * ```\n * @see {@link @livekit/components-react#ParticipantTile | ParticipantTile}\n * @public\n */\nexport function VideoTrack({\n  onTrackClick,\n  onClick,\n  onSubscriptionStatusChanged,\n  trackRef,\n  name,\n  publication,\n  source,\n  participant: p,\n  manageSubscription,\n  ...props\n}: VideoTrackProps) {\n  // TODO: Remove and refactor all variables with underscore in a future version after the deprecation period.\n  const maybeTrackRef = useMaybeTrackRefContext();\n  const _name = trackRef?.publication?.trackName ?? maybeTrackRef?.publication?.trackName ?? name;\n  const _source = trackRef?.source ?? maybeTrackRef?.source ?? source;\n  const _publication = trackRef?.publication ?? maybeTrackRef?.publication ?? publication;\n  const _participant = trackRef?.participant ?? maybeTrackRef?.participant ?? p;\n  if (_source === undefined) {\n    throw new Error('VideoTrack: You must provide a trackRef or source property.');\n  }\n\n  const participant = useEnsureParticipant(_participant);\n\n  const mediaEl = React.useRef<HTMLVideoElement>(null);\n\n  const intersectionEntry = useHooks.useIntersectionObserver(mediaEl, {});\n\n  const debouncedIntersectionEntry = useHooks.useDebounce(intersectionEntry, 3000);\n\n  React.useEffect(() => {\n    if (\n      manageSubscription &&\n      _publication instanceof RemoteTrackPublication &&\n      debouncedIntersectionEntry?.isIntersecting === false &&\n      intersectionEntry?.isIntersecting === false\n    ) {\n      _publication.setSubscribed(false);\n    }\n  }, [debouncedIntersectionEntry, _publication, manageSubscription]);\n\n  React.useEffect(() => {\n    if (\n      manageSubscription &&\n      _publication instanceof RemoteTrackPublication &&\n      intersectionEntry?.isIntersecting === true\n    ) {\n      _publication.setSubscribed(true);\n    }\n  }, [intersectionEntry, _publication, manageSubscription]);\n\n  const {\n    elementProps,\n    publication: pub,\n    isSubscribed,\n  } = useMediaTrackBySourceOrName(\n    { participant, name: _name, source: _source, publication: _publication },\n    {\n      element: mediaEl,\n      props,\n    },\n  );\n\n  React.useEffect(() => {\n    onSubscriptionStatusChanged?.(!!isSubscribed);\n  }, [isSubscribed, onSubscriptionStatusChanged]);\n\n  const clickHandler = (evt: React.MouseEvent<HTMLVideoElement, MouseEvent>) => {\n    onClick?.(evt);\n    onTrackClick?.({ participant, track: pub });\n  };\n\n  return <video ref={mediaEl} {...elementProps} muted={true} onClick={clickHandler}></video>;\n}\n", "import type { Participant, Track, TrackPublication } from 'livekit-client';\nimport * as React from 'react';\nimport { useMediaTrackBySourceOrName } from '../../hooks/useMediaTrackBySourceOrName';\nimport type { TrackReference } from '@livekit/components-core';\nimport { log } from '@livekit/components-core';\nimport { useEnsureParticipant, useMaybeTrackRefContext } from '../../context';\nimport { RemoteAudioTrack, RemoteTrackPublication } from 'livekit-client';\n\n/** @public */\nexport interface AudioTrackProps extends React.AudioHTMLAttributes<HTMLAudioElement> {\n  /** The track reference of the track from which the audio is to be rendered. */\n  trackRef?: TrackReference;\n  /** @deprecated This property will be removed in a future version use `trackRef` instead. */\n  source?: Track.Source;\n  /** @deprecated This property will be removed in a future version use `trackRef` instead. */\n  name?: string;\n  /** @deprecated This property will be removed in a future version use `trackRef` instead. */\n  participant?: Participant;\n  /** @deprecated This property will be removed in a future version use `trackRef` instead. */\n  publication?: TrackPublication;\n  onSubscriptionStatusChanged?: (subscribed: boolean) => void;\n  /** Sets the volume of the audio track. By default, the range is between `0.0` and `1.0`. */\n  volume?: number;\n  /**\n   * Mutes the audio track if set to `true`.\n   * @remarks\n   * If set to `true`, the server will stop sending audio track data to the client.\n   * @alpha\n   */\n  muted?: boolean;\n}\n\n/**\n * The AudioTrack component is responsible for rendering participant audio tracks.\n * This component must have access to the participant's context, or alternatively pass it a `Participant` as a property.\n *\n * @example\n * ```tsx\n *   <ParticipantTile>\n *     <AudioTrack trackRef={trackRef} />\n *   </ParticipantTile>\n * ```\n *\n * @see `ParticipantTile` component\n * @public\n */\nexport function AudioTrack({\n  trackRef,\n  onSubscriptionStatusChanged,\n  volume,\n  source,\n  name,\n  publication,\n  participant: p,\n  ...props\n}: AudioTrackProps) {\n  // TODO: Remove and refactor all variables with underscore in a future version after the deprecation period.\n  const maybeTrackRef = useMaybeTrackRefContext();\n  const _name = trackRef?.publication?.trackName ?? maybeTrackRef?.publication?.trackName ?? name;\n  const _source = trackRef?.source ?? maybeTrackRef?.source ?? source;\n  const _publication = trackRef?.publication ?? maybeTrackRef?.publication ?? publication;\n  const _participant = trackRef?.participant ?? maybeTrackRef?.participant ?? p;\n  if (_source === undefined) {\n    throw new Error('The AudioTrack component expects a trackRef or source property.');\n  }\n\n  const mediaEl = React.useRef<HTMLAudioElement>(null);\n  const participant = useEnsureParticipant(_participant);\n\n  const {\n    elementProps,\n    isSubscribed,\n    track,\n    publication: pub,\n  } = useMediaTrackBySourceOrName(\n    { source: _source, name: _name, participant, publication: _publication },\n    {\n      element: mediaEl,\n      props,\n    },\n  );\n\n  React.useEffect(() => {\n    onSubscriptionStatusChanged?.(!!isSubscribed);\n  }, [isSubscribed, onSubscriptionStatusChanged]);\n\n  React.useEffect(() => {\n    if (track === undefined || volume === undefined) {\n      return;\n    }\n    if (track instanceof RemoteAudioTrack) {\n      track.setVolume(volume);\n    } else {\n      log.warn('Volume can only be set on remote audio tracks.');\n    }\n  }, [volume, track]);\n\n  React.useEffect(() => {\n    if (pub === undefined || props.muted === undefined) {\n      return;\n    }\n    if (pub instanceof RemoteTrackPublication) {\n      pub.setEnabled(!props.muted);\n    } else {\n      log.warn('Can only call setEnabled on remote track publications.');\n    }\n  }, [props.muted, pub, track]);\n\n  return <audio ref={mediaEl} {...elementProps} />;\n}\n", "import * as React from 'react';\nimport type { UseParticipantsOptions } from '../../hooks';\nimport { useGridLayout, usePagination, useSwipe } from '../../hooks';\nimport { mergeProps } from '../../utils';\nimport type { TrackReferenceOrPlaceholder } from '@livekit/components-core';\nimport { TrackLoop } from '../TrackLoop';\nimport { PaginationControl } from '../controls/PaginationControl';\nimport { PaginationIndicator } from '../controls/PaginationIndicator';\n\n/** @public */\nexport interface GridLayoutProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    Pick<UseParticipantsOptions, 'updateOnlyOn'> {\n  children: React.ReactNode;\n  tracks: TrackReferenceOrPlaceholder[];\n}\n\n/**\n * The `GridLayout` component displays the nested participants in a grid where every participants has the same size.\n * It also supports pagination if there are more participants than the grid can display.\n * @remarks\n * To ensure visual stability when tiles are reordered due to track updates,\n * the component uses the `useVisualStableUpdate` hook.\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <GridLayout tracks={tracks}>\n *     <ParticipantTile />\n *   </GridLayout>\n * <LiveKitRoom>\n * ```\n * @public\n */\nexport function GridLayout({ tracks, ...props }: GridLayoutProps) {\n  const gridEl = React.createRef<HTMLDivElement>();\n\n  const elementProps = React.useMemo(\n    () => mergeProps(props, { className: 'lk-grid-layout' }),\n    [props],\n  );\n  const { layout } = useGridLayout(gridEl, tracks.length);\n  const pagination = usePagination(layout.maxTiles, tracks);\n\n  useSwipe(gridEl, {\n    onLeftSwipe: pagination.nextPage,\n    onRightSwipe: pagination.prevPage,\n  });\n\n  return (\n    <div ref={gridEl} data-lk-pagination={pagination.totalPageCount > 1} {...elementProps}>\n      <TrackLoop tracks={pagination.tracks}>{props.children}</TrackLoop>\n      {tracks.length > layout.maxTiles && (\n        <>\n          <PaginationIndicator\n            totalPageCount={pagination.totalPageCount}\n            currentPage={pagination.currentPage}\n          />\n          <PaginationControl pagesContainer={gridEl} {...pagination} />\n        </>\n      )}\n    </div>\n  );\n}\n", "import type { TrackReference, TrackReferenceOrPlaceholder } from '@livekit/components-core';\nimport * as React from 'react';\nimport { TrackRefContext } from '../context/track-reference-context';\nimport { cloneSingleChild } from '../utils';\nimport { getTrackReferenceId } from '@livekit/components-core';\n\n/** @public */\nexport interface TrackLoopProps {\n  /** Track references to loop over. You can the use `useTracks()` hook to get TrackReferences. */\n  tracks: TrackReference[] | TrackReferenceOrPlaceholder[];\n  /** The template component to be used in the loop. */\n  children: React.ReactNode;\n}\n\n/**\n * The `TrackLoop` component loops over tracks. It is for example a easy way to loop over all participant camera and screen share tracks.\n * `TrackLoop` creates a `TrackRefContext` for each track that you can use to e.g. render the track.\n *\n * @example\n * ```tsx\n * const trackRefs = useTracks([Track.Source.Camera]);\n * <TrackLoop tracks={trackRefs} >\n *  <TrackRefContext.Consumer>\n *    {(trackRef) => trackRef && <VideoTrack trackRef={trackRef}/>}\n *  </TrackRefContext.Consumer>\n * <TrackLoop />\n * ```\n * @public\n */\nexport function TrackLoop({ tracks, ...props }: TrackLoopProps) {\n  return (\n    <>\n      {tracks.map((trackReference) => {\n        return (\n          <TrackRefContext.Provider\n            value={trackReference}\n            key={getTrackReferenceId(trackReference)}\n          >\n            {cloneSingleChild(props.children)}\n          </TrackRefContext.Provider>\n        );\n      })}\n    </>\n  );\n}\n", "import * as React from 'react';\nimport SvgChevron from '../../assets/icons/Chevron';\nimport type { usePagination } from '../../hooks';\nimport { createInteractingObservable } from '@livekit/components-core';\n\nexport interface PaginationControlProps\n  extends Pick<\n    ReturnType<typeof usePagination>,\n    'totalPageCount' | 'nextPage' | 'prevPage' | 'currentPage'\n  > {\n  /** Reference to an HTML element that holds the pages, while interacting (`mouseover`)\n   *  with it, the pagination controls will appear for a while. */\n  pagesContainer?: React.RefObject<HTMLElement>;\n}\n\nexport function PaginationControl({\n  totalPageCount,\n  nextPage,\n  prevPage,\n  currentPage,\n  pagesContainer: connectedElement,\n}: PaginationControlProps) {\n  const [interactive, setInteractive] = React.useState(false);\n  React.useEffect(() => {\n    let subscription:\n      | ReturnType<ReturnType<typeof createInteractingObservable>['subscribe']>\n      | undefined;\n    if (connectedElement) {\n      subscription = createInteractingObservable(connectedElement.current, 2000).subscribe(\n        setInteractive,\n      );\n    }\n    return () => {\n      if (subscription) {\n        subscription.unsubscribe();\n      }\n    };\n  }, [connectedElement]);\n\n  return (\n    <div className=\"lk-pagination-control\" data-lk-user-interaction={interactive}>\n      <button className=\"lk-button\" onClick={prevPage}>\n        <SvgChevron />\n      </button>\n      <span className=\"lk-pagination-count\">{`${currentPage} of ${totalPageCount}`}</span>\n      <button className=\"lk-button\" onClick={nextPage}>\n        <SvgChevron />\n      </button>\n    </div>\n  );\n}\n", "import * as React from 'react';\n\nexport interface PaginationIndicatorProps {\n  totalPageCount: number;\n  currentPage: number;\n}\n\nexport function PaginationIndicator({ totalPageCount, currentPage }: PaginationIndicatorProps) {\n  const bubbles = new Array(totalPageCount).fill('').map((_, index) => {\n    if (index + 1 === currentPage) {\n      return <span data-lk-active key={index} />;\n    } else {\n      return <span key={index} />;\n    }\n  });\n\n  return <div className=\"lk-pagination-indicator\">{bubbles}</div>;\n}\n", "import type { TrackReferenceOrPlaceholder } from '@livekit/components-core';\nimport { getScrollBarWidth } from '@livekit/components-core';\nimport * as React from 'react';\nimport { useSize } from '../../hooks/internal';\nimport { useVisualStableUpdate } from '../../hooks';\nimport { TrackLoop } from '../TrackLoop';\n\nconst MIN_HEIGHT = 130;\nconst MIN_WIDTH = 140;\nconst MIN_VISIBLE_TILES = 1;\nconst ASPECT_RATIO = 16 / 10;\nconst ASPECT_RATIO_INVERT = (1 - ASPECT_RATIO) * -1;\n\n/** @public */\nexport interface CarouselLayoutProps extends React.HTMLAttributes<HTMLMediaElement> {\n  tracks: TrackReferenceOrPlaceholder[];\n  children: React.ReactNode;\n  /** Place the tiles vertically or horizontally next to each other.\n   * If undefined orientation is guessed by the dimensions of the container. */\n  orientation?: 'vertical' | 'horizontal';\n}\n\n/**\n * @deprecated Renamed to [[CarouselLayout]]\n * @public\n */\nexport const CarouselView = CarouselLayout;\n\n/**\n * The `CarouselLayout` component displays a list of tracks in a scroll container.\n * It will display as many tiles as possible and overflow the rest.\n * @remarks\n * To ensure visual stability when tiles are reordered due to track updates,\n * the component uses the `useVisualStableUpdate` hook.\n * @example\n * ```tsx\n * const tracks = useTracks([Track.Source.Camera]);\n * <CarouselLayout tracks={tracks}>\n *   <ParticipantTile />\n * </CarouselLayout>\n * ```\n * @public\n */\nexport function CarouselLayout({ tracks, orientation, ...props }: CarouselLayoutProps) {\n  const asideEl = React.useRef<HTMLDivElement>(null);\n  const [prevTiles, setPrevTiles] = React.useState(0);\n  const { width, height } = useSize(asideEl);\n  const carouselOrientation = orientation\n    ? orientation\n    : height >= width\n    ? 'vertical'\n    : 'horizontal';\n\n  const tileSpan =\n    carouselOrientation === 'vertical'\n      ? Math.max(width * ASPECT_RATIO_INVERT, MIN_HEIGHT)\n      : Math.max(height * ASPECT_RATIO, MIN_WIDTH);\n  const scrollBarWidth = getScrollBarWidth();\n\n  const tilesThatFit =\n    carouselOrientation === 'vertical'\n      ? Math.max((height - scrollBarWidth) / tileSpan, MIN_VISIBLE_TILES)\n      : Math.max((width - scrollBarWidth) / tileSpan, MIN_VISIBLE_TILES);\n\n  let maxVisibleTiles = Math.round(tilesThatFit);\n  if (Math.abs(tilesThatFit - prevTiles) < 0.5) {\n    maxVisibleTiles = Math.round(prevTiles);\n  } else if (prevTiles !== tilesThatFit) {\n    setPrevTiles(tilesThatFit);\n  }\n\n  const sortedTiles = useVisualStableUpdate(tracks, maxVisibleTiles);\n\n  React.useLayoutEffect(() => {\n    if (asideEl.current) {\n      asideEl.current.dataset.lkOrientation = carouselOrientation;\n      asideEl.current.style.setProperty('--lk-max-visible-tiles', maxVisibleTiles.toString());\n    }\n  }, [maxVisibleTiles, carouselOrientation]);\n\n  return (\n    <aside key={carouselOrientation} className=\"lk-carousel\" ref={asideEl} {...props}>\n      <TrackLoop tracks={sortedTiles}>{props.children}</TrackLoop>\n    </aside>\n  );\n}\n", "import type { PinState, WidgetState } from '@livekit/components-core';\nimport { log } from '@livekit/components-core';\nimport * as React from 'react';\nimport type { LayoutContextType } from '../../context';\nimport { LayoutContext, useEnsureCreateLayoutContext } from '../../context';\n\n/** @alpha */\nexport interface LayoutContextProviderProps {\n  value?: LayoutContextType;\n  onPinChange?: (state: PinState) => void;\n  onWidgetChange?: (state: WidgetState) => void;\n}\n\n/** @alpha */\nexport function LayoutContextProvider({\n  value,\n  onPinChange,\n  onWidgetChange,\n  children,\n}: React.PropsWithChildren<LayoutContextProviderProps>) {\n  const layoutContextValue = useEnsureCreateLayoutContext(value);\n\n  React.useEffect(() => {\n    log.debug('PinState Updated', { state: layoutContextValue.pin.state });\n    if (onPinChange && layoutContextValue.pin.state) onPinChange(layoutContextValue.pin.state);\n  }, [layoutContextValue.pin.state, onPinChange]);\n\n  React.useEffect(() => {\n    log.debug('Widget Updated', { widgetState: layoutContextValue.widget.state });\n    if (onWidgetChange && layoutContextValue.widget.state) {\n      onWidgetChange(layoutContextValue.widget.state);\n    }\n  }, [onWidgetChange, layoutContextValue.widget.state]);\n\n  return <LayoutContext.Provider value={layoutContextValue}>{children}</LayoutContext.Provider>;\n}\n", "import type {\n  AudioCaptureOptions,\n  RoomConnectOptions,\n  RoomOptions,\n  ScreenShareCaptureOptions,\n  VideoCaptureOptions,\n} from 'livekit-client';\nimport type { MediaDeviceFailure, Room } from 'livekit-client';\nimport * as React from 'react';\nimport { type FeatureFlags, LKFeatureContext, RoomContext } from '../context';\nimport { useLiveKitRoom } from '../hooks';\n\n/** @public */\nexport interface LiveKitRoomProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onError'> {\n  /**\n   * URL to the LiveKit server.\n   * For example: `wss://<domain>.livekit.cloud`\n   * To simplify the implementation, `undefined` is also accepted as an intermediate value, but only with a valid string url can the connection be established.\n   */\n  serverUrl: string | undefined;\n  /**\n   * A user specific access token for a client to authenticate to the room.\n   * This token is necessary to establish a connection to the room.\n   * To simplify the implementation, `undefined` is also accepted as an intermediate value, but only with a valid string token can the connection be established.\n   *\n   * @see https://docs.livekit.io/cloud/project-management/keys-and-tokens/#generating-access-tokens\n   */\n  token: string | undefined;\n  /**\n   * Publish audio immediately after connecting to your LiveKit room.\n   * @defaultValue `false`\n   * @see https://docs.livekit.io/client-sdk-js/interfaces/AudioCaptureOptions.html\n   */\n  audio?: AudioCaptureOptions | boolean;\n  /**\n   * Publish video immediately after connecting to your LiveKit room.\n   * @defaultValue `false`\n   * @see https://docs.livekit.io/client-sdk-js/interfaces/VideoCaptureOptions.html\n   */\n  video?: VideoCaptureOptions | boolean;\n  /**\n   * Publish screen share immediately after connecting to your LiveKit room.\n   * @defaultValue `false`\n   * @see https://docs.livekit.io/client-sdk-js/interfaces/ScreenShareCaptureOptions.html\n   */\n  screen?: ScreenShareCaptureOptions | boolean;\n  /**\n   * If set to true a connection to LiveKit room is initiated.\n   * @defaultValue `false`\n   */\n  connect?: boolean;\n  /**\n   * Options for when creating a new room.\n   * When you pass your own room instance to this component, these options have no effect.\n   * Instead, set the options directly in the room instance.\n   *\n   * @see https://docs.livekit.io/client-sdk-js/interfaces/RoomOptions.html\n   */\n  options?: RoomOptions;\n  /**\n   * Define options how to connect to the LiveKit server.\n   *\n   * @see https://docs.livekit.io/client-sdk-js/interfaces/RoomConnectOptions.html\n   */\n  connectOptions?: RoomConnectOptions;\n  onConnected?: () => void;\n  onDisconnected?: () => void;\n  onError?: (error: Error) => void;\n  onMediaDeviceFailure?: (failure?: MediaDeviceFailure) => void;\n  onEncryptionError?: (error: Error) => void;\n  /**\n   * Optional room instance.\n   * By passing your own room instance you overwrite the `options` parameter,\n   * make sure to set the options directly on the room instance itself.\n   */\n  room?: Room;\n\n  simulateParticipants?: number | undefined;\n\n  /**\n   * @internal\n   */\n  featureFlags?: FeatureFlags;\n}\n\n/**\n * The `LiveKitRoom` component provides the room context to all its child components.\n * It is generally the starting point of your LiveKit app and the root of the LiveKit component tree.\n * It provides the room state as a React context to all child components, so you don't have to pass it yourself.\n *\n * @example\n * ```tsx\n * <LiveKitRoom\n *  token='<livekit-token>'\n *  serverUrl='<url-to-livekit-server>'\n *  connect={true}\n * >\n *     ...\n * </LiveKitRoom>\n * ```\n * @public\n */\nexport function LiveKitRoom(props: React.PropsWithChildren<LiveKitRoomProps>) {\n  const { room, htmlProps } = useLiveKitRoom(props);\n  return (\n    <div {...htmlProps}>\n      {room && (\n        <RoomContext.Provider value={room}>\n          <LKFeatureContext.Provider value={props.featureFlags}>\n            {props.children}\n          </LKFeatureContext.Provider>\n        </RoomContext.Provider>\n      )}\n    </div>\n  );\n}\n", "import type { Participant } from 'livekit-client';\nimport { Track } from 'livekit-client';\nimport * as React from 'react';\nimport { type TrackReference } from '@livekit/components-core';\nimport { useMaybeParticipantContext, useMaybeTrackRefContext } from '../../context';\nimport { useMultibandTrackVolume } from '../../hooks';\n\n/** @public */\nexport interface AudioVisualizerProps extends React.HTMLAttributes<SVGElement> {\n  /** @deprecated this property will be removed in a future version, use `trackRef` instead */\n  participant?: Participant;\n  trackRef?: TrackReference;\n}\n\n/**\n * The AudioVisualizer component is used to visualize the audio volume of a given audio track.\n * @remarks\n * Requires a `TrackReferenceOrPlaceholder` to be provided either as a property or via the `TrackRefContext`.\n * @example\n * ```tsx\n * <AudioVisualizer />\n * ```\n * @public\n */\nexport function AudioVisualizer({ participant, trackRef, ...props }: AudioVisualizerProps) {\n  const svgWidth = 200;\n  const svgHeight = 90;\n  const barWidth = 6;\n  const barSpacing = 4;\n  const volMultiplier = 50;\n  const barCount = 7;\n\n  const p = useMaybeParticipantContext() ?? participant;\n  let ref = useMaybeTrackRefContext() ?? trackRef;\n  if (!ref) {\n    if (!p) {\n      throw Error(`Participant missing, provide it directly or within a context`);\n    }\n    ref = { participant: p, source: Track.Source.Microphone };\n  }\n\n  const volumes = useMultibandTrackVolume(ref, { bands: 7, loPass: 300 });\n\n  return (\n    <svg\n      width=\"100%\"\n      height=\"100%\"\n      viewBox={`0 0 ${svgWidth} ${svgHeight}`}\n      {...props}\n      className=\"lk-audio-visualizer\"\n    >\n      <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" />\n      <g\n        style={{\n          transform: `translate(${(svgWidth - barCount * (barWidth + barSpacing)) / 2}px, 0)`,\n        }}\n      >\n        {volumes.map((vol, idx) => (\n          <rect\n            key={idx}\n            x={idx * (barWidth + barSpacing)}\n            y={svgHeight / 2 - (vol * volMultiplier) / 2}\n            width={barWidth}\n            height={vol * volMultiplier}\n          ></rect>\n        ))}\n      </g>\n    </svg>\n  );\n}\n", "import type { Participant } from 'livekit-client';\nimport * as React from 'react';\nimport { ParticipantContext } from '../context';\nimport { cloneSingleChild } from '../utils';\n\n/** @public */\nexport interface ParticipantLoopProps {\n  /** The participants to loop over. Use `useParticipants()` hook to get participants. */\n  participants: Participant[];\n  /** The template component to be used in the loop. */\n  children: React.ReactNode;\n}\n\n/**\n * The `ParticipantLoop` component loops over an array of participants to create a context for every participant.\n * This component takes exactly one child component as a template.\n * By providing your own template as a child you have full control over the look and feel of your participant representations.\n *\n * @remarks\n * If you want to loop over individual tracks instead of participants, you can use the `TrackLoop` component.\n *\n * @example\n * ```tsx\n * const participants = useParticipants();\n * <ParticipantLoop participants={participants}>\n *   <ParticipantName />\n * <ParticipantLoop />\n * ```\n * @public\n */\nexport function ParticipantLoop({ participants, ...props }: ParticipantLoopProps) {\n  return (\n    <>\n      {participants.map((participant) => (\n        <ParticipantContext.Provider value={participant} key={participant.identity}>\n          {cloneSingleChild(props.children)}\n        </ParticipantContext.Provider>\n      ))}\n    </>\n  );\n}\n", "import { getTrackReferenceId, isLocal } from '@livekit/components-core';\nimport type { RemoteTrackPublication } from 'livekit-client';\nimport { Track } from 'livekit-client';\nimport * as React from 'react';\nimport { useTracks } from '../hooks';\nimport { AudioTrack } from './participant/AudioTrack';\n\n/** @public */\nexport interface RoomAudioRendererProps {\n  /** Sets the volume for all audio tracks rendered by this component. By default, the range is between `0.0` and `1.0`. */\n  volume?: number;\n  /**\n   * If set to `true`, mutes all audio tracks rendered by the component.\n   * @remarks\n   * If set to `true`, the server will stop sending audio track data to the client.\n   * @alpha\n   */\n  muted?: boolean;\n}\n\n/**\n * The `RoomAudioRenderer` component is a drop-in solution for adding audio to your LiveKit app.\n * It takes care of handling remote participants’ audio tracks and makes sure that microphones and screen share are audible.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <RoomAudioRenderer />\n * </LiveKitRoom>\n * ```\n * @public\n */\nexport function RoomAudioRenderer({ volume, muted }: RoomAudioRendererProps) {\n  const tracks = useTracks(\n    [Track.Source.Microphone, Track.Source.ScreenShareAudio, Track.Source.Unknown],\n    {\n      updateOnlyOn: [],\n      onlySubscribed: false,\n    },\n  ).filter((ref) => !isLocal(ref.participant) && ref.publication.kind === Track.Kind.Audio);\n\n  React.useEffect(() => {\n    for (const track of tracks) {\n      (track.publication as RemoteTrackPublication).setSubscribed(true);\n    }\n  }, [tracks]);\n\n  return (\n    <div style={{ display: 'none' }}>\n      {tracks.map((trackRef) => (\n        <AudioTrack\n          key={getTrackReferenceId(trackRef)}\n          trackRef={trackRef}\n          volume={volume}\n          muted={muted}\n        />\n      ))}\n    </div>\n  );\n}\n", "import * as React from 'react';\nimport { useRoomInfo } from '../hooks';\n\n/** @public */\nexport interface RoomNameProps extends React.HTMLAttributes<HTMLSpanElement> {\n  childrenPosition?: 'before' | 'after';\n}\n\n/**\n * The `RoomName` component renders the name of the connected LiveKit room inside a span tag.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <RoomName />\n * </LiveKitRoom>\n * ```\n * @public\n */\nexport function RoomName({\n  childrenPosition = 'before',\n  children,\n  ...htmlAttributes\n}: RoomNameProps) {\n  const { name } = useRoomInfo();\n\n  return (\n    <span {...htmlAttributes}>\n      {childrenPosition === 'before' && children}\n      {name}\n      {childrenPosition === 'after' && children}\n    </span>\n  );\n}\n", "import * as React from 'react';\nimport { mergeProps } from '../utils';\n\n/**\n * The `Toast` component is a rudimentary way to display a message to the user.\n * This message should be short lived and not require user interaction.\n * For example, displaying the current connection state like `ConnectionStateToast` does.\n *\n * @example\n * ```tsx\n * <Toast>Connecting...</Toast>\n * ```\n * @public\n */\nexport function Toast(props: React.HTMLAttributes<HTMLDivElement>) {\n  const htmlProps = React.useMemo(() => mergeProps(props, { className: 'lk-toast' }), [props]);\n  return <div {...htmlProps}>{props.children}</div>;\n}\n", "import * as React from 'react';\nimport { Track } from 'livekit-client';\n\nimport { ConnectionQualityIndicator } from './ConnectionQualityIndicator';\nimport { ParticipantName } from './ParticipantName';\nimport { TrackMutedIndicator } from './TrackMutedIndicator';\nimport { useEnsureParticipant } from '../../context';\n\nimport { AudioVisualizer } from './AudioVisualizer';\nimport type { ParticipantTileProps } from './ParticipantTile';\nimport { ParticipantContextIfNeeded } from './ParticipantTile';\nimport { AudioTrack } from './AudioTrack';\nimport { useParticipantTile } from '../../hooks';\n\n/**\n * The `ParticipantAudioTile` component is the base utility wrapper for displaying a visual representation of a participant.\n * This component can be used as a child of the `TileLoop` or independently if a participant is passed as a property.\n *\n * @example\n * ```tsx\n * <ParticipantAudioTile />\n * ```\n * @public\n */\nexport function ParticipantAudioTile({\n  participant,\n  children,\n  source,\n  publication,\n  disableSpeakingIndicator,\n  onParticipantClick,\n  ...htmlProps\n}: ParticipantTileProps) {\n  const p = useEnsureParticipant(participant);\n  const { elementProps } = useParticipantTile({\n    participant: p,\n    htmlProps,\n    disableSpeakingIndicator,\n    source: Track.Source.Microphone,\n    publication,\n    onParticipantClick,\n  });\n\n  return (\n    <div style={{ position: 'relative' }} {...elementProps}>\n      <ParticipantContextIfNeeded participant={p}>\n        {children ?? (\n          <>\n            <AudioTrack source={source ?? Track.Source.Microphone}></AudioTrack>\n            <AudioVisualizer />\n            <div className=\"lk-participant-metadata\">\n              <div className=\"lk-participant-metadata-item\">\n                <TrackMutedIndicator source={Track.Source.Microphone}></TrackMutedIndicator>\n                <ParticipantName />\n              </div>\n              <ConnectionQualityIndicator className=\"lk-participant-metadata-item\" />\n            </div>\n          </>\n        )}\n      </ParticipantContextIfNeeded>\n    </div>\n  );\n}\n", "import type { Room } from 'livekit-client';\nimport { ConnectionState } from 'livekit-client';\nimport * as React from 'react';\nimport { SpinnerIcon } from '../assets/icons';\nimport { useConnectionState } from '../hooks';\nimport { Toast } from './Toast';\n\n/** @public */\nexport interface ConnectionStateToastProps extends React.HTMLAttributes<HTMLDivElement> {\n  room?: Room;\n}\n\n/**\n * The `ConnectionStateToast` component displays a toast\n * notification indicating the current connection state of the room.\n * @public\n */\nexport function ConnectionStateToast(props: ConnectionStateToastProps) {\n  const [notification, setNotification] = React.useState<React.ReactElement | undefined>(undefined);\n  const state = useConnectionState(props.room);\n\n  React.useEffect(() => {\n    switch (state) {\n      case ConnectionState.Reconnecting:\n        setNotification(\n          <>\n            <SpinnerIcon className=\"lk-spinner\" /> Reconnecting\n          </>,\n        );\n        break;\n      case ConnectionState.Connecting:\n        setNotification(\n          <>\n            <SpinnerIcon className=\"lk-spinner\" /> Connecting\n          </>,\n        );\n        break;\n      case ConnectionState.Disconnected:\n        setNotification(<>Disconnected</>);\n        break;\n      default:\n        setNotification(undefined);\n        break;\n    }\n  }, [state]);\n  return notification ? <Toast className=\"lk-toast-connection-state\">{notification}</Toast> : <></>;\n}\n", "import type { ReceivedChatMessage } from '@livekit/components-core';\nimport { tokenize, createDefaultGrammar } from '@livekit/components-core';\nimport * as React from 'react';\n\n/** @public */\nexport type MessageFormatter = (message: string) => React.ReactNode;\n\n/**\n * ChatEntry composes the HTML div element under the hood, so you can pass all its props.\n * These are the props specific to the ChatEntry component:\n * @public\n */\nexport interface ChatEntryProps extends React.HTMLAttributes<HTMLLIElement> {\n  /** The chat massage object to display. */\n  entry: ReceivedChatMessage;\n  /** Hide sender name. Useful when displaying multiple consecutive chat messages from the same person. */\n  hideName?: boolean;\n  /** Hide message timestamp. */\n  hideTimestamp?: boolean;\n  /** An optional formatter for the message body. */\n  messageFormatter?: MessageFormatter;\n}\n\n/**\n * The `ChatEntry` component holds and displays one chat message.\n *\n * @example\n * ```tsx\n * <Chat>\n *   <ChatEntry />\n * </Chat>\n * ```\n * @see `Chat`\n * @public\n */\nexport function ChatEntry({\n  entry,\n  hideName = false,\n  hideTimestamp = false,\n  messageFormatter,\n  ...props\n}: ChatEntryProps) {\n  const formattedMessage = React.useMemo(() => {\n    return messageFormatter ? messageFormatter(entry.message) : entry.message;\n  }, [entry.message, messageFormatter]);\n  const hasBeenEdited = !!entry.editTimestamp;\n  const time = new Date(entry.timestamp);\n  const locale = navigator ? navigator.language : 'en-US';\n\n  return (\n    <li\n      className=\"lk-chat-entry\"\n      title={time.toLocaleTimeString(locale, { timeStyle: 'full' })}\n      data-lk-message-origin={entry.from?.isLocal ? 'local' : 'remote'}\n      {...props}\n    >\n      {(!hideTimestamp || !hideName || hasBeenEdited) && (\n        <span className=\"lk-meta-data\">\n          {!hideName && (\n            <strong className=\"lk-participant-name\">\n              {entry.from?.name ?? entry.from?.identity}\n            </strong>\n          )}\n\n          {(!hideTimestamp || hasBeenEdited) && (\n            <span className=\"lk-timestamp\">\n              {hasBeenEdited && 'edited '}\n              {time.toLocaleTimeString(locale, { timeStyle: 'short' })}\n            </span>\n          )}\n        </span>\n      )}\n\n      <span className=\"lk-message-body\">{formattedMessage}</span>\n    </li>\n  );\n}\n\n/** @public */\nexport function formatChatMessageLinks(message: string): React.ReactNode {\n  return tokenize(message, createDefaultGrammar()).map((tok, i) => {\n    if (typeof tok === `string`) {\n      return tok;\n    } else {\n      const content = tok.content.toString();\n      const href =\n        tok.type === `url`\n          ? /^http(s?):\\/\\//.test(content)\n            ? content\n            : `https://${content}`\n          : `mailto:${content}`;\n      return (\n        <a className=\"lk-chat-link\" key={i} href={href} target=\"_blank\" rel=\"noreferrer\">\n          {content}\n        </a>\n      );\n    }\n  });\n}\n", "import type { ChatMessage, ChatOptions } from '@livekit/components-core';\nimport * as React from 'react';\nimport { useMaybeLayoutContext } from '../context';\nimport { cloneSingleChild } from '../utils';\nimport type { MessageFormatter } from '../components/ChatEntry';\nimport { ChatEntry } from '../components/ChatEntry';\nimport { useChat } from '../hooks/useChat';\nimport { ChatToggle } from '../components';\nimport { ChatCloseIcon } from '../assets/icons';\n\n/** @public */\nexport interface ChatProps extends React.HTMLAttributes<HTMLDivElement>, ChatOptions {\n  messageFormatter?: MessageFormatter;\n}\n\n/**\n * The Chat component adds a basis chat functionality to the LiveKit room. The messages are distributed to all participants\n * in the room. Only users who are in the room at the time of dispatch will receive the message.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <Chat />\n * </LiveKitRoom>\n * ```\n * @public\n */\nexport function Chat({\n  messageFormatter,\n  messageDecoder,\n  messageEncoder,\n  channelTopic,\n  ...props\n}: ChatProps) {\n  const inputRef = React.useRef<HTMLInputElement>(null);\n  const ulRef = React.useRef<HTMLUListElement>(null);\n\n  const chatOptions: ChatOptions = React.useMemo(() => {\n    return { messageDecoder, messageEncoder, channelTopic };\n  }, [messageDecoder, messageEncoder, channelTopic]);\n\n  const { send, chatMessages, isSending } = useChat(chatOptions);\n\n  const layoutContext = useMaybeLayoutContext();\n  const lastReadMsgAt = React.useRef<ChatMessage['timestamp']>(0);\n\n  async function handleSubmit(event: React.FormEvent) {\n    event.preventDefault();\n    if (inputRef.current && inputRef.current.value.trim() !== '') {\n      if (send) {\n        await send(inputRef.current.value);\n        inputRef.current.value = '';\n        inputRef.current.focus();\n      }\n    }\n  }\n\n  React.useEffect(() => {\n    if (ulRef) {\n      ulRef.current?.scrollTo({ top: ulRef.current.scrollHeight });\n    }\n  }, [ulRef, chatMessages]);\n\n  React.useEffect(() => {\n    if (!layoutContext || chatMessages.length === 0) {\n      return;\n    }\n\n    if (\n      layoutContext.widget.state?.showChat &&\n      chatMessages.length > 0 &&\n      lastReadMsgAt.current !== chatMessages[chatMessages.length - 1]?.timestamp\n    ) {\n      lastReadMsgAt.current = chatMessages[chatMessages.length - 1]?.timestamp;\n      return;\n    }\n\n    const unreadMessageCount = chatMessages.filter(\n      (msg) => !lastReadMsgAt.current || msg.timestamp > lastReadMsgAt.current,\n    ).length;\n\n    const { widget } = layoutContext;\n    if (unreadMessageCount > 0 && widget.state?.unreadMessages !== unreadMessageCount) {\n      widget.dispatch?.({ msg: 'unread_msg', count: unreadMessageCount });\n    }\n  }, [chatMessages, layoutContext?.widget]);\n\n  return (\n    <div {...props} className=\"lk-chat\">\n      <div className=\"lk-chat-header\">\n        Messages\n        <ChatToggle className=\"lk-close-button\">\n          <ChatCloseIcon />\n        </ChatToggle>\n      </div>\n\n      <ul className=\"lk-list lk-chat-messages\" ref={ulRef}>\n        {props.children\n          ? chatMessages.map((msg, idx) =>\n              cloneSingleChild(props.children, {\n                entry: msg,\n                key: msg.id ?? idx,\n                messageFormatter,\n              }),\n            )\n          : chatMessages.map((msg, idx, allMsg) => {\n              const hideName = idx >= 1 && allMsg[idx - 1].from === msg.from;\n              // If the time delta between two messages is bigger than 60s show timestamp.\n              const hideTimestamp = idx >= 1 && msg.timestamp - allMsg[idx - 1].timestamp < 60_000;\n\n              return (\n                <ChatEntry\n                  key={msg.id ?? idx}\n                  hideName={hideName}\n                  hideTimestamp={hideName === false ? false : hideTimestamp} // If we show the name always show the timestamp as well.\n                  entry={msg}\n                  messageFormatter={messageFormatter}\n                />\n              );\n            })}\n      </ul>\n      <form className=\"lk-chat-form\" onSubmit={handleSubmit}>\n        <input\n          className=\"lk-form-control lk-chat-form-input\"\n          disabled={isSending}\n          ref={inputRef}\n          type=\"text\"\n          placeholder=\"Enter a message...\"\n        />\n        <button type=\"submit\" className=\"lk-button lk-chat-form-button\" disabled={isSending}>\n          Send\n        </button>\n      </form>\n    </div>\n  );\n}\n", "import type {\n  CreateLocalTracksOptions,\n  LocalAudioTrack,\n  LocalTrack,\n  LocalVideoTrack,\n} from 'livekit-client';\nimport {\n  createLocalAudioTrack,\n  createLocalTracks,\n  createLocalVideoTrack,\n  facingModeFromLocalTrack,\n  Track,\n  VideoPresets,\n} from 'livekit-client';\nimport * as React from 'react';\nimport { MediaDeviceMenu } from './MediaDeviceMenu';\nimport { TrackToggle } from '../components/controls/TrackToggle';\nimport type { LocalUserChoices } from '@livekit/components-core';\nimport { log } from '@livekit/components-core';\nimport { ParticipantPlaceholder } from '../assets/images';\nimport { useMediaDevices, usePersistentUserChoices } from '../hooks';\nimport { useWarnAboutMissingStyles } from '../hooks/useWarnAboutMissingStyles';\n\nconst DEFAULT_USER_CHOICES: LocalUserChoices = {\n  username: '',\n  videoEnabled: true,\n  audioEnabled: true,\n  videoDeviceId: 'default',\n  audioDeviceId: 'default',\n  e2ee: false,\n  sharedPassphrase: '',\n};\n\n/**\n * Props for the PreJoin component.\n * @public\n */\nexport interface PreJoinProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onSubmit' | 'onError'> {\n  /** This function is called with the `LocalUserChoices` if validation is passed. */\n  onSubmit?: (values: LocalUserChoices) => void;\n  /**\n   * Provide your custom validation function. Only if validation is successful the user choices are past to the onSubmit callback.\n   */\n  onValidate?: (values: LocalUserChoices) => boolean;\n  onError?: (error: Error) => void;\n  /** Prefill the input form with initial values. */\n  defaults?: Partial<LocalUserChoices>;\n  /** Display a debug window for your convenience. */\n  debug?: boolean;\n  joinLabel?: string;\n  micLabel?: string;\n  camLabel?: string;\n  userLabel?: string;\n  /** @deprecated  E2EE options will be removed from PreJoin in a future version **/\n  showE2EEOptions?: boolean;\n  /**\n   * If true, user choices are persisted across sessions.\n   * @defaultValue true\n   * @alpha\n   */\n  persistUserChoices?: boolean;\n}\n\n/** @alpha */\nexport function usePreviewTracks(\n  options: CreateLocalTracksOptions,\n  onError?: (err: Error) => void,\n) {\n  const [tracks, setTracks] = React.useState<LocalTrack[]>();\n\n  React.useEffect(() => {\n    let trackPromise: Promise<LocalTrack[]> | undefined = undefined;\n    let needsCleanup = false;\n    if (options.audio || options.video) {\n      trackPromise = createLocalTracks(options);\n      trackPromise\n        .then((tracks) => {\n          if (needsCleanup) {\n            tracks.forEach((tr) => tr.stop());\n          } else {\n            setTracks(tracks);\n          }\n        })\n        .catch(onError);\n    }\n\n    return () => {\n      needsCleanup = true;\n      trackPromise?.then((tracks) =>\n        tracks.forEach((track) => {\n          track.stop();\n        }),\n      );\n    };\n  }, [JSON.stringify(options)]);\n\n  return tracks;\n}\n\n/** @public */\nexport function usePreviewDevice<T extends LocalVideoTrack | LocalAudioTrack>(\n  enabled: boolean,\n  deviceId: string,\n  kind: 'videoinput' | 'audioinput',\n) {\n  const [deviceError, setDeviceError] = React.useState<Error | null>(null);\n  const [isCreatingTrack, setIsCreatingTrack] = React.useState<boolean>(false);\n\n  const devices = useMediaDevices({ kind });\n  const [selectedDevice, setSelectedDevice] = React.useState<MediaDeviceInfo | undefined>(\n    undefined,\n  );\n\n  const [localTrack, setLocalTrack] = React.useState<T>();\n  const [localDeviceId, setLocalDeviceId] = React.useState<string>(deviceId);\n\n  React.useEffect(() => {\n    setLocalDeviceId(deviceId);\n  }, [deviceId]);\n\n  const createTrack = async (deviceId: string, kind: 'videoinput' | 'audioinput') => {\n    try {\n      const track =\n        kind === 'videoinput'\n          ? await createLocalVideoTrack({\n              deviceId: deviceId,\n              resolution: VideoPresets.h720.resolution,\n            })\n          : await createLocalAudioTrack({ deviceId });\n\n      const newDeviceId = await track.getDeviceId();\n      if (newDeviceId && deviceId !== newDeviceId) {\n        prevDeviceId.current = newDeviceId;\n        setLocalDeviceId(newDeviceId);\n      }\n      setLocalTrack(track as T);\n    } catch (e) {\n      if (e instanceof Error) {\n        setDeviceError(e);\n      }\n    }\n  };\n\n  const switchDevice = async (track: LocalVideoTrack | LocalAudioTrack, id: string) => {\n    await track.setDeviceId(id);\n    prevDeviceId.current = id;\n  };\n\n  const prevDeviceId = React.useRef(localDeviceId);\n\n  React.useEffect(() => {\n    if (enabled && !localTrack && !deviceError && !isCreatingTrack) {\n      log.debug('creating track', kind);\n      setIsCreatingTrack(true);\n      createTrack(localDeviceId, kind).finally(() => {\n        setIsCreatingTrack(false);\n      });\n    }\n  }, [enabled, localTrack, deviceError, isCreatingTrack]);\n\n  // switch camera device\n  React.useEffect(() => {\n    if (!localTrack) {\n      return;\n    }\n    if (!enabled) {\n      log.debug(`muting ${kind} track`);\n      localTrack.mute().then(() => log.debug(localTrack.mediaStreamTrack));\n    } else if (selectedDevice?.deviceId && prevDeviceId.current !== selectedDevice?.deviceId) {\n      log.debug(`switching ${kind} device from`, prevDeviceId.current, selectedDevice.deviceId);\n      switchDevice(localTrack, selectedDevice.deviceId);\n    } else {\n      log.debug(`unmuting local ${kind} track`);\n      localTrack.unmute();\n    }\n  }, [localTrack, selectedDevice, enabled, kind]);\n\n  React.useEffect(() => {\n    return () => {\n      if (localTrack) {\n        log.debug(`stopping local ${kind} track`);\n        localTrack.stop();\n        localTrack.mute();\n      }\n    };\n  }, []);\n\n  React.useEffect(() => {\n    setSelectedDevice(devices.find((dev) => dev.deviceId === localDeviceId));\n  }, [localDeviceId, devices]);\n\n  return {\n    selectedDevice,\n    localTrack,\n    deviceError,\n  };\n}\n\n/**\n * The `PreJoin` prefab component is normally presented to the user before he enters a room.\n * This component allows the user to check and select the preferred media device (camera und microphone).\n * On submit the user decisions are returned, which can then be passed on to the `LiveKitRoom` so that the user enters the room with the correct media devices.\n *\n * @remarks\n * This component is independent of the `LiveKitRoom` component and should not be nested within it.\n * Because it only access the local media tracks this component is self contained and works without connection to the LiveKit server.\n *\n * @example\n * ```tsx\n * <PreJoin />\n * ```\n * @public\n */\nexport function PreJoin({\n  defaults = {},\n  onValidate,\n  onSubmit,\n  onError,\n  debug,\n  joinLabel = 'Join Room',\n  micLabel = 'Microphone',\n  camLabel = 'Camera',\n  userLabel = 'Username',\n  showE2EEOptions = false,\n  persistUserChoices = true,\n  ...htmlProps\n}: PreJoinProps) {\n  const [userChoices, setUserChoices] = React.useState(DEFAULT_USER_CHOICES);\n\n  // TODO: Remove and pipe `defaults` object directly into `usePersistentUserChoices` once we fully switch from type `LocalUserChoices` to `UserChoices`.\n  const partialDefaults: Partial<LocalUserChoices> = {\n    ...(defaults.audioDeviceId !== undefined && { audioDeviceId: defaults.audioDeviceId }),\n    ...(defaults.videoDeviceId !== undefined && { videoDeviceId: defaults.videoDeviceId }),\n    ...(defaults.audioEnabled !== undefined && { audioEnabled: defaults.audioEnabled }),\n    ...(defaults.videoEnabled !== undefined && { videoEnabled: defaults.videoEnabled }),\n    ...(defaults.username !== undefined && { username: defaults.username }),\n  };\n\n  const {\n    userChoices: initialUserChoices,\n    saveAudioInputDeviceId,\n    saveAudioInputEnabled,\n    saveVideoInputDeviceId,\n    saveVideoInputEnabled,\n    saveUsername,\n  } = usePersistentUserChoices({\n    defaults: partialDefaults,\n    preventSave: !persistUserChoices,\n    preventLoad: !persistUserChoices,\n  });\n\n  // Initialize device settings\n  const [audioEnabled, setAudioEnabled] = React.useState<boolean>(initialUserChoices.audioEnabled);\n  const [videoEnabled, setVideoEnabled] = React.useState<boolean>(initialUserChoices.videoEnabled);\n  const [audioDeviceId, setAudioDeviceId] = React.useState<string>(\n    initialUserChoices.audioDeviceId,\n  );\n  const [videoDeviceId, setVideoDeviceId] = React.useState<string>(\n    initialUserChoices.videoDeviceId,\n  );\n  const [username, setUsername] = React.useState(initialUserChoices.username);\n  // TODO: Remove `e2ee` and `sharedPassphrase` once deprecated `LocalUserChoices` type is removed.\n  const [e2ee, setE2ee] = React.useState<boolean>(defaults.e2ee ?? DEFAULT_USER_CHOICES.e2ee);\n  const [sharedPassphrase, setSharedPassphrase] = React.useState<string>(\n    defaults.sharedPassphrase ?? DEFAULT_USER_CHOICES.sharedPassphrase,\n  );\n\n  // Save user choices to persistent storage.\n  React.useEffect(() => {\n    saveAudioInputEnabled(audioEnabled);\n  }, [audioEnabled, saveAudioInputEnabled]);\n  React.useEffect(() => {\n    saveVideoInputEnabled(videoEnabled);\n  }, [videoEnabled, saveVideoInputEnabled]);\n  React.useEffect(() => {\n    saveAudioInputDeviceId(audioDeviceId);\n  }, [audioDeviceId, saveAudioInputDeviceId]);\n  React.useEffect(() => {\n    saveVideoInputDeviceId(videoDeviceId);\n  }, [videoDeviceId, saveVideoInputDeviceId]);\n  React.useEffect(() => {\n    saveUsername(username);\n  }, [username, saveUsername]);\n\n  const tracks = usePreviewTracks(\n    {\n      audio: audioEnabled ? { deviceId: initialUserChoices.audioDeviceId } : false,\n      video: videoEnabled ? { deviceId: initialUserChoices.videoDeviceId } : false,\n    },\n    onError,\n  );\n\n  const videoEl = React.useRef(null);\n\n  const videoTrack = React.useMemo(\n    () => tracks?.filter((track) => track.kind === Track.Kind.Video)[0] as LocalVideoTrack,\n    [tracks],\n  );\n\n  const facingMode = React.useMemo(() => {\n    if (videoTrack) {\n      const { facingMode } = facingModeFromLocalTrack(videoTrack);\n      return facingMode;\n    } else {\n      return 'undefined';\n    }\n  }, [videoTrack]);\n\n  const audioTrack = React.useMemo(\n    () => tracks?.filter((track) => track.kind === Track.Kind.Audio)[0] as LocalAudioTrack,\n    [tracks],\n  );\n\n  React.useEffect(() => {\n    if (videoEl.current && videoTrack) {\n      videoTrack.unmute();\n      videoTrack.attach(videoEl.current);\n    }\n\n    return () => {\n      videoTrack?.detach();\n    };\n  }, [videoTrack]);\n\n  const [isValid, setIsValid] = React.useState<boolean>();\n\n  const handleValidation = React.useCallback(\n    (values: LocalUserChoices) => {\n      if (typeof onValidate === 'function') {\n        return onValidate(values);\n      } else {\n        return values.username !== '';\n      }\n    },\n    [onValidate],\n  );\n\n  React.useEffect(() => {\n    const newUserChoices = {\n      username,\n      videoEnabled,\n      videoDeviceId,\n      audioEnabled,\n      audioDeviceId,\n      e2ee,\n      sharedPassphrase,\n    };\n    setUserChoices(newUserChoices);\n    setIsValid(handleValidation(newUserChoices));\n  }, [\n    username,\n    videoEnabled,\n    handleValidation,\n    audioEnabled,\n    audioDeviceId,\n    videoDeviceId,\n    sharedPassphrase,\n    e2ee,\n  ]);\n\n  function handleSubmit(event: React.FormEvent) {\n    event.preventDefault();\n    if (handleValidation(userChoices)) {\n      if (typeof onSubmit === 'function') {\n        onSubmit(userChoices);\n      }\n    } else {\n      log.warn('Validation failed with: ', userChoices);\n    }\n  }\n\n  useWarnAboutMissingStyles();\n\n  return (\n    <div className=\"lk-prejoin\" {...htmlProps}>\n      <div className=\"lk-video-container\">\n        {videoTrack && (\n          <video ref={videoEl} width=\"1280\" height=\"720\" data-lk-facing-mode={facingMode} />\n        )}\n        {(!videoTrack || !videoEnabled) && (\n          <div className=\"lk-camera-off-note\">\n            <ParticipantPlaceholder />\n          </div>\n        )}\n      </div>\n      <div className=\"lk-button-group-container\">\n        <div className=\"lk-button-group audio\">\n          <TrackToggle\n            initialState={audioEnabled}\n            source={Track.Source.Microphone}\n            onChange={(enabled) => setAudioEnabled(enabled)}\n          >\n            {micLabel}\n          </TrackToggle>\n          <div className=\"lk-button-group-menu\">\n            <MediaDeviceMenu\n              initialSelection={audioDeviceId}\n              kind=\"audioinput\"\n              disabled={!audioTrack}\n              tracks={{ audioinput: audioTrack }}\n              onActiveDeviceChange={(_, id) => setAudioDeviceId(id)}\n            />\n          </div>\n        </div>\n        <div className=\"lk-button-group video\">\n          <TrackToggle\n            initialState={videoEnabled}\n            source={Track.Source.Camera}\n            onChange={(enabled) => setVideoEnabled(enabled)}\n          >\n            {camLabel}\n          </TrackToggle>\n          <div className=\"lk-button-group-menu\">\n            <MediaDeviceMenu\n              initialSelection={videoDeviceId}\n              kind=\"videoinput\"\n              disabled={!videoTrack}\n              tracks={{ videoinput: videoTrack }}\n              onActiveDeviceChange={(_, id) => setVideoDeviceId(id)}\n            />\n          </div>\n        </div>\n      </div>\n\n      <form className=\"lk-username-container\">\n        <input\n          className=\"lk-form-control\"\n          id=\"username\"\n          name=\"username\"\n          type=\"text\"\n          defaultValue={username}\n          placeholder={userLabel}\n          onChange={(inputEl) => setUsername(inputEl.target.value)}\n          autoComplete=\"off\"\n        />\n        {showE2EEOptions && (\n          <div style={{ display: 'flex', flexDirection: 'column', gap: '1rem' }}>\n            <div style={{ display: 'flex', flexDirection: 'row', gap: '1rem' }}>\n              <input\n                id=\"use-e2ee\"\n                type=\"checkbox\"\n                checked={e2ee}\n                onChange={(ev) => setE2ee(ev.target.checked)}\n              ></input>\n              <label htmlFor=\"use-e2ee\">Enable end-to-end encryption</label>\n            </div>\n            {e2ee && (\n              <div style={{ display: 'flex', flexDirection: 'row', gap: '1rem' }}>\n                <label htmlFor=\"passphrase\">Passphrase</label>\n                <input\n                  id=\"passphrase\"\n                  type=\"password\"\n                  value={sharedPassphrase}\n                  onChange={(ev) => setSharedPassphrase(ev.target.value)}\n                />\n              </div>\n            )}\n          </div>\n        )}\n        <button\n          className=\"lk-button lk-join-button\"\n          type=\"submit\"\n          onClick={handleSubmit}\n          disabled={!isValid}\n        >\n          {joinLabel}\n        </button>\n      </form>\n\n      {debug && (\n        <>\n          <strong>User Choices:</strong>\n          <ul className=\"lk-list\" style={{ overflow: 'hidden', maxWidth: '15rem' }}>\n            <li>Username: {`${userChoices.username}`}</li>\n            <li>Video Enabled: {`${userChoices.videoEnabled}`}</li>\n            <li>Audio Enabled: {`${userChoices.audioEnabled}`}</li>\n            <li>Video Device: {`${userChoices.videoDeviceId}`}</li>\n            <li>Audio Device: {`${userChoices.audioDeviceId}`}</li>\n          </ul>\n        </>\n      )}\n    </div>\n  );\n}\n", "import { computeMenuPosition, wasClickOutside } from '@livekit/components-core';\nimport * as React from 'react';\nimport { MediaDeviceSelect } from '../components/controls/MediaDeviceSelect';\nimport { log } from '@livekit/components-core';\nimport type { LocalAudioTrack, LocalVideoTrack } from 'livekit-client';\n\n/** @public */\nexport interface MediaDeviceMenuProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  kind?: MediaDeviceKind;\n  initialSelection?: string;\n  onActiveDeviceChange?: (kind: MediaDeviceKind, deviceId: string) => void;\n  tracks?: Partial<Record<MediaDeviceKind, LocalAudioTrack | LocalVideoTrack | undefined>>;\n  /**\n   * this will call getUserMedia if the permissions are not yet given to enumerate the devices with device labels.\n   * in some browsers multiple calls to getUserMedia result in multiple permission prompts.\n   * It's generally advised only flip this to true, once a (preview) track has been acquired successfully with the\n   * appropriate permissions.\n   *\n   * @see {@link PreJoin}\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/enumerateDevices | MDN enumerateDevices}\n   */\n  requestPermissions?: boolean;\n}\n\n/**\n * The `MediaDeviceMenu` component is a button that opens a menu that lists\n * all media devices and allows the user to select them.\n *\n * @remarks\n * This component is implemented with the `MediaDeviceSelect` LiveKit components.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <MediaDeviceMenu />\n * </LiveKitRoom>\n * ```\n * @public\n */\nexport function MediaDeviceMenu({\n  kind,\n  initialSelection,\n  onActiveDeviceChange,\n  tracks,\n  requestPermissions = false,\n  ...props\n}: MediaDeviceMenuProps) {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [devices, setDevices] = React.useState<MediaDeviceInfo[]>([]);\n  const [updateRequired, setUpdateRequired] = React.useState<boolean>(true);\n\n  const handleActiveDeviceChange = (kind: MediaDeviceKind, deviceId: string) => {\n    log.debug('handle device change');\n    setIsOpen(false);\n    onActiveDeviceChange?.(kind, deviceId);\n  };\n\n  const button = React.useRef<HTMLButtonElement>(null);\n  const tooltip = React.useRef<HTMLDivElement>(null);\n\n  React.useLayoutEffect(() => {\n    if (button.current && tooltip.current && (devices || updateRequired)) {\n      computeMenuPosition(button.current, tooltip.current).then(({ x, y }) => {\n        if (tooltip.current) {\n          Object.assign(tooltip.current.style, { left: `${x}px`, top: `${y}px` });\n        }\n      });\n    }\n    setUpdateRequired(false);\n  }, [button, tooltip, devices, updateRequired]);\n\n  const handleClickOutside = React.useCallback(\n    (event: MouseEvent) => {\n      if (!tooltip.current) {\n        return;\n      }\n      if (event.target === button.current) {\n        return;\n      }\n      if (isOpen && wasClickOutside(tooltip.current, event)) {\n        setIsOpen(false);\n      }\n    },\n    [isOpen, tooltip, button],\n  );\n\n  React.useEffect(() => {\n    document.addEventListener<'click'>('click', handleClickOutside);\n    window.addEventListener<'resize'>('resize', () => setUpdateRequired(true));\n    return () => {\n      document.removeEventListener<'click'>('click', handleClickOutside);\n      window.removeEventListener<'resize'>('resize', () => setUpdateRequired(true));\n    };\n  }, [handleClickOutside, setUpdateRequired]);\n\n  return (\n    <>\n      <button\n        className=\"lk-button lk-button-menu\"\n        aria-pressed={isOpen}\n        {...props}\n        onClick={() => setIsOpen(!isOpen)}\n        ref={button}\n      >\n        {props.children}\n      </button>\n      {/** only render when enabled in order to make sure that the permissions are requested only if the menu is enabled */}\n      {!props.disabled && (\n        <div\n          className=\"lk-device-menu\"\n          ref={tooltip}\n          style={{ visibility: isOpen ? 'visible' : 'hidden' }}\n        >\n          {kind ? (\n            <MediaDeviceSelect\n              initialSelection={initialSelection}\n              onActiveDeviceChange={(deviceId) => handleActiveDeviceChange(kind, deviceId)}\n              onDeviceListChange={setDevices}\n              kind={kind}\n              track={tracks?.[kind]}\n              requestPermissions={requestPermissions}\n            />\n          ) : (\n            <>\n              <div className=\"lk-device-menu-heading\">Audio inputs</div>\n              <MediaDeviceSelect\n                kind=\"audioinput\"\n                onActiveDeviceChange={(deviceId) =>\n                  handleActiveDeviceChange('audioinput', deviceId)\n                }\n                onDeviceListChange={setDevices}\n                track={tracks?.audioinput}\n                requestPermissions={requestPermissions}\n              />\n              <div className=\"lk-device-menu-heading\">Video inputs</div>\n              <MediaDeviceSelect\n                kind=\"videoinput\"\n                onActiveDeviceChange={(deviceId) =>\n                  handleActiveDeviceChange('videoinput', deviceId)\n                }\n                onDeviceListChange={setDevices}\n                track={tracks?.videoinput}\n                requestPermissions={requestPermissions}\n              />\n            </>\n          )}\n        </div>\n      )}\n    </>\n  );\n}\n", "import * as React from 'react';\nimport { warnAboutMissingStyles } from '../utils';\n\n/**\n * @internal\n */\nexport function useWarnAboutMissingStyles() {\n  React.useEffect(() => {\n    warnAboutMissingStyles();\n  }, []);\n}\n", "import type {\n  MessageDecoder,\n  MessageEncoder,\n  TrackReferenceOrPlaceholder,\n  WidgetState,\n} from '@livekit/components-core';\nimport { isEqualTrackRef, isTrackReference, isWeb, log } from '@livekit/components-core';\nimport { RoomEvent, Track } from 'livekit-client';\nimport * as React from 'react';\nimport type { MessageFormatter } from '../components';\nimport {\n  CarouselLayout,\n  ConnectionStateToast,\n  FocusLayout,\n  FocusLayoutContainer,\n  GridLayout,\n  LayoutContextProvider,\n  ParticipantTile,\n  RoomAudioRenderer,\n} from '../components';\nimport { useCreateLayoutContext } from '../context';\nimport { usePinnedTracks, useTracks } from '../hooks';\nimport { Chat } from './Chat';\nimport { ControlBar } from './ControlBar';\nimport { useWarnAboutMissingStyles } from '../hooks/useWarnAboutMissingStyles';\n\n/**\n * @public\n */\nexport interface VideoConferenceProps extends React.HTMLAttributes<HTMLDivElement> {\n  chatMessageFormatter?: MessageFormatter;\n  chatMessageEncoder?: MessageEncoder;\n  chatMessageDecoder?: MessageDecoder;\n}\n\n/**\n * The `VideoConference` ready-made component is your drop-in solution for a classic video conferencing application.\n * It provides functionality such as focusing on one participant, grid view with pagination to handle large numbers\n * of participants, basic non-persistent chat, screen sharing, and more.\n *\n * @remarks\n * The component is implemented with other LiveKit components like `FocusContextProvider`,\n * `GridLayout`, `ControlBar`, `FocusLayoutContainer` and `FocusLayout`.\n * You can use this components as a starting point for your own custom video conferencing application.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <VideoConference />\n * <LiveKitRoom>\n * ```\n * @public\n */\nexport function VideoConference({\n  chatMessageFormatter,\n  chatMessageDecoder,\n  chatMessageEncoder,\n  ...props\n}: VideoConferenceProps) {\n  const [widgetState, setWidgetState] = React.useState<WidgetState>({\n    showChat: false,\n    unreadMessages: 0,\n  });\n  const lastAutoFocusedScreenShareTrack = React.useRef<TrackReferenceOrPlaceholder | null>(null);\n\n  const tracks = useTracks(\n    [\n      { source: Track.Source.Camera, withPlaceholder: true },\n      { source: Track.Source.ScreenShare, withPlaceholder: false },\n    ],\n    { updateOnlyOn: [RoomEvent.ActiveSpeakersChanged], onlySubscribed: false },\n  );\n\n  const widgetUpdate = (state: WidgetState) => {\n    log.debug('updating widget state', state);\n    setWidgetState(state);\n  };\n\n  const layoutContext = useCreateLayoutContext();\n\n  const screenShareTracks = tracks\n    .filter(isTrackReference)\n    .filter((track) => track.publication.source === Track.Source.ScreenShare);\n\n  const focusTrack = usePinnedTracks(layoutContext)?.[0];\n  const carouselTracks = tracks.filter((track) => !isEqualTrackRef(track, focusTrack));\n\n  React.useEffect(() => {\n    // If screen share tracks are published, and no pin is set explicitly, auto set the screen share.\n    if (\n      screenShareTracks.some((track) => track.publication.isSubscribed) &&\n      lastAutoFocusedScreenShareTrack.current === null\n    ) {\n      log.debug('Auto set screen share focus:', { newScreenShareTrack: screenShareTracks[0] });\n      layoutContext.pin.dispatch?.({ msg: 'set_pin', trackReference: screenShareTracks[0] });\n      lastAutoFocusedScreenShareTrack.current = screenShareTracks[0];\n    } else if (\n      lastAutoFocusedScreenShareTrack.current &&\n      !screenShareTracks.some(\n        (track) =>\n          track.publication.trackSid ===\n          lastAutoFocusedScreenShareTrack.current?.publication?.trackSid,\n      )\n    ) {\n      log.debug('Auto clearing screen share focus.');\n      layoutContext.pin.dispatch?.({ msg: 'clear_pin' });\n      lastAutoFocusedScreenShareTrack.current = null;\n    }\n  }, [\n    screenShareTracks\n      .map((ref) => `${ref.publication.trackSid}_${ref.publication.isSubscribed}`)\n      .join(),\n    focusTrack?.publication?.trackSid,\n  ]);\n\n  useWarnAboutMissingStyles();\n\n  return (\n    <div className=\"lk-video-conference\" {...props}>\n      {isWeb() && (\n        <LayoutContextProvider\n          value={layoutContext}\n          // onPinChange={handleFocusStateChange}\n          onWidgetChange={widgetUpdate}\n        >\n          <div className=\"lk-video-conference-inner\">\n            {!focusTrack ? (\n              <div className=\"lk-grid-layout-wrapper\">\n                <GridLayout tracks={tracks}>\n                  <ParticipantTile />\n                </GridLayout>\n              </div>\n            ) : (\n              <div className=\"lk-focus-layout-wrapper\">\n                <FocusLayoutContainer>\n                  <CarouselLayout tracks={carouselTracks}>\n                    <ParticipantTile />\n                  </CarouselLayout>\n                  {focusTrack && <FocusLayout trackRef={focusTrack} />}\n                </FocusLayoutContainer>\n              </div>\n            )}\n            <ControlBar controls={{ chat: true }} />\n          </div>\n          <Chat\n            style={{ display: widgetState.showChat ? 'grid' : 'none' }}\n            messageFormatter={chatMessageFormatter}\n            messageEncoder={chatMessageEncoder}\n            messageDecoder={chatMessageDecoder}\n          />\n        </LayoutContextProvider>\n      )}\n      <RoomAudioRenderer />\n      <ConnectionStateToast />\n    </div>\n  );\n}\n", "import { Track } from 'livekit-client';\nimport * as React from 'react';\nimport { MediaDeviceMenu } from './MediaDeviceMenu';\nimport { DisconnectButton } from '../components/controls/DisconnectButton';\nimport { TrackToggle } from '../components/controls/TrackToggle';\nimport { ChatIcon, LeaveIcon } from '../assets/icons';\nimport { ChatToggle } from '../components/controls/ChatToggle';\nimport { useLocalParticipantPermissions, usePersistentUserChoices } from '../hooks';\nimport { useMediaQuery } from '../hooks/internal';\nimport { useMaybeLayoutContext } from '../context';\nimport { supportsScreenSharing } from '@livekit/components-core';\nimport { mergeProps } from '../utils';\nimport { StartMediaButton } from '../components/controls/StartMediaButton';\n\n/** @public */\nexport type ControlBarControls = {\n  microphone?: boolean;\n  camera?: boolean;\n  chat?: boolean;\n  screenShare?: boolean;\n  leave?: boolean;\n};\n\n/** @public */\nexport interface ControlBarProps extends React.HTMLAttributes<HTMLDivElement> {\n  variation?: 'minimal' | 'verbose' | 'textOnly';\n  controls?: ControlBarControls;\n  /**\n   * If `true`, the user's device choices will be persisted.\n   * This will enables the user to have the same device choices when they rejoin the room.\n   * @defaultValue true\n   * @alpha\n   */\n  saveUserChoices?: boolean;\n}\n\n/**\n * The `ControlBar` prefab gives the user the basic user interface to control their\n * media devices (camera, microphone and screen share), open the `Chat` and leave the room.\n *\n * @remarks\n * This component is build with other LiveKit components like `TrackToggle`,\n * `DeviceSelectorButton`, `DisconnectButton` and `StartAudio`.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <ControlBar />\n * </LiveKitRoom>\n * ```\n * @public\n */\nexport function ControlBar({\n  variation,\n  controls,\n  saveUserChoices = true,\n  ...props\n}: ControlBarProps) {\n  const [isChatOpen, setIsChatOpen] = React.useState(false);\n  const layoutContext = useMaybeLayoutContext();\n  React.useEffect(() => {\n    if (layoutContext?.widget.state?.showChat !== undefined) {\n      setIsChatOpen(layoutContext?.widget.state?.showChat);\n    }\n  }, [layoutContext?.widget.state?.showChat]);\n  const isTooLittleSpace = useMediaQuery(`(max-width: ${isChatOpen ? 1000 : 760}px)`);\n\n  const defaultVariation = isTooLittleSpace ? 'minimal' : 'verbose';\n  variation ??= defaultVariation;\n\n  const visibleControls = { leave: true, ...controls };\n\n  const localPermissions = useLocalParticipantPermissions();\n\n  if (!localPermissions) {\n    visibleControls.camera = false;\n    visibleControls.chat = false;\n    visibleControls.microphone = false;\n    visibleControls.screenShare = false;\n  } else {\n    visibleControls.camera ??= localPermissions.canPublish;\n    visibleControls.microphone ??= localPermissions.canPublish;\n    visibleControls.screenShare ??= localPermissions.canPublish;\n    visibleControls.chat ??= localPermissions.canPublishData && controls?.chat;\n  }\n\n  const showIcon = React.useMemo(\n    () => variation === 'minimal' || variation === 'verbose',\n    [variation],\n  );\n  const showText = React.useMemo(\n    () => variation === 'textOnly' || variation === 'verbose',\n    [variation],\n  );\n\n  const browserSupportsScreenSharing = supportsScreenSharing();\n\n  const [isScreenShareEnabled, setIsScreenShareEnabled] = React.useState(false);\n\n  const onScreenShareChange = React.useCallback(\n    (enabled: boolean) => {\n      setIsScreenShareEnabled(enabled);\n    },\n    [setIsScreenShareEnabled],\n  );\n\n  const htmlProps = mergeProps({ className: 'lk-control-bar' }, props);\n\n  const {\n    saveAudioInputEnabled,\n    saveVideoInputEnabled,\n    saveAudioInputDeviceId,\n    saveVideoInputDeviceId,\n  } = usePersistentUserChoices({ preventSave: !saveUserChoices });\n\n  const microphoneOnChange = React.useCallback(\n    (enabled: boolean, isUserInitiated: boolean) =>\n      isUserInitiated ? saveAudioInputEnabled(enabled) : null,\n    [saveAudioInputEnabled],\n  );\n\n  const cameraOnChange = React.useCallback(\n    (enabled: boolean, isUserInitiated: boolean) =>\n      isUserInitiated ? saveVideoInputEnabled(enabled) : null,\n    [saveVideoInputEnabled],\n  );\n\n  return (\n    <div {...htmlProps}>\n      {visibleControls.microphone && (\n        <div className=\"lk-button-group\">\n          <TrackToggle\n            source={Track.Source.Microphone}\n            showIcon={showIcon}\n            onChange={microphoneOnChange}\n          >\n            {showText && 'Microphone'}\n          </TrackToggle>\n          <div className=\"lk-button-group-menu\">\n            <MediaDeviceMenu\n              kind=\"audioinput\"\n              onActiveDeviceChange={(_kind, deviceId) => saveAudioInputDeviceId(deviceId ?? '')}\n            />\n          </div>\n        </div>\n      )}\n      {visibleControls.camera && (\n        <div className=\"lk-button-group\">\n          <TrackToggle source={Track.Source.Camera} showIcon={showIcon} onChange={cameraOnChange}>\n            {showText && 'Camera'}\n          </TrackToggle>\n          <div className=\"lk-button-group-menu\">\n            <MediaDeviceMenu\n              kind=\"videoinput\"\n              onActiveDeviceChange={(_kind, deviceId) => saveVideoInputDeviceId(deviceId ?? '')}\n            />\n          </div>\n        </div>\n      )}\n      {visibleControls.screenShare && browserSupportsScreenSharing && (\n        <TrackToggle\n          source={Track.Source.ScreenShare}\n          captureOptions={{ audio: true, selfBrowserSurface: 'include' }}\n          showIcon={showIcon}\n          onChange={onScreenShareChange}\n        >\n          {showText && (isScreenShareEnabled ? 'Stop screen share' : 'Share screen')}\n        </TrackToggle>\n      )}\n      {visibleControls.chat && (\n        <ChatToggle>\n          {showIcon && <ChatIcon />}\n          {showText && 'Chat'}\n        </ChatToggle>\n      )}\n      {visibleControls.leave && (\n        <DisconnectButton>\n          {showIcon && <LeaveIcon />}\n          {showText && 'Leave'}\n        </DisconnectButton>\n      )}\n      <StartMediaButton />\n    </div>\n  );\n}\n", "import * as React from 'react';\nimport { useRoomContext } from '../../context';\nimport { useStartAudio, useStartVideo } from '../../hooks';\n\n/** @public */\nexport interface AllowMediaPlaybackProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  label?: string;\n}\n\n/**\n * The `StartMediaButton` component is only visible when the browser blocks media playback. This is due to some browser implemented autoplay policies.\n * To start media playback, the user must perform a user-initiated event such as clicking this button.\n * As soon as media playback starts, the button hides itself again.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <StartMediaButton label=\"Click to allow media playback\" />\n * </LiveKitRoom>\n * ```\n *\n * @see Autoplay policy on MDN web docs: {@link https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API/Best_practices#autoplay_policy}\n * @public\n */\nexport function StartMediaButton({ label, ...props }: AllowMediaPlaybackProps) {\n  const room = useRoomContext();\n  const { mergedProps: audioProps, canPlayAudio } = useStartAudio({ room, props });\n  const { mergedProps, canPlayVideo } = useStartVideo({ room, props: audioProps });\n  const { style, ...restProps } = mergedProps;\n  style.display = canPlayAudio && canPlayVideo ? 'none' : 'block';\n\n  return (\n    <button style={style} {...restProps}>\n      {label ?? `Start ${!canPlayAudio ? 'Audio' : 'Video'}`}\n    </button>\n  );\n}\n", "import * as React from 'react';\nimport { ControlBar } from './ControlBar';\n\nimport { ParticipantAudioTile } from '../components/participant/ParticipantAudioTile';\nimport { LayoutContextProvider } from '../components/layout/LayoutContextProvider';\nimport type { WidgetState } from '@livekit/components-core';\nimport { Chat } from './Chat';\nimport { TrackLoop } from '../components';\nimport { useTracks } from '../hooks';\nimport { useWarnAboutMissingStyles } from '../hooks/useWarnAboutMissingStyles';\nimport { Track } from 'livekit-client';\n\n/** @public */\nexport interface AudioConferenceProps extends React.HTMLAttributes<HTMLDivElement> {}\n\n/**\n * This component is the default setup of a classic LiveKit audio conferencing app.\n * It provides functionality like switching between participant grid view and focus view.\n *\n * @remarks\n * The component is implemented with other LiveKit components like `FocusContextProvider`,\n * `GridLayout`, `ControlBar`, `FocusLayoutContainer` and `FocusLayout`.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <AudioConference />\n * <LiveKitRoom>\n * ```\n * @public\n */\nexport function AudioConference({ ...props }: AudioConferenceProps) {\n  const [widgetState, setWidgetState] = React.useState<WidgetState>({\n    showChat: false,\n    unreadMessages: 0,\n  });\n\n  const audioTracks = useTracks([Track.Source.Microphone]);\n\n  useWarnAboutMissingStyles();\n\n  return (\n    <LayoutContextProvider onWidgetChange={setWidgetState}>\n      <div className=\"lk-audio-conference\" {...props}>\n        <div className=\"lk-audio-conference-stage\">\n          <TrackLoop tracks={audioTracks}>\n            <ParticipantAudioTile />\n          </TrackLoop>\n        </div>\n        <ControlBar\n          controls={{ microphone: true, screenShare: false, camera: false, chat: true }}\n        />\n        {widgetState.showChat && <Chat />}\n      </div>\n    </LayoutContextProvider>\n  );\n}\n", "export * from './components';\n\nexport * from './hooks';\n\nexport * from './prefabs';\n\nexport * from './context';\n\nexport * from './assets/icons';\n\nexport * from './assets/images';\n\n// Re-exports from core\nexport { setLogLevel, setLogExtension, isTrackReference } from '@livekit/components-core';\nexport type {\n  ChatMessage,\n  ReceivedChatMessage,\n  MessageDecoder,\n  MessageEncoder,\n  LocalUserChoices,\n  TrackReference,\n  TrackReferenceOrPlaceholder,\n  ParticipantClickEvent,\n  PinState,\n  WidgetState,\n} from '@livekit/components-core';\n", "import * as React from 'react';\n\nconst useLatest = current => {\n  const storedValue = React.useRef(current);\n  React.useEffect(() => {\n    storedValue.current = current;\n  });\n  return storedValue;\n};\n\nexport default useLatest;", "/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    \"use strict\";\n    if (typeof define === 'function' && define.amd) {\n        define(definition);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = definition();\n    } else {\n        root.log = definition();\n    }\n}(this, function () {\n    \"use strict\";\n\n    // Slightly dubious tricks to cut down minimized file size\n    var noop = function() {};\n    var undefinedType = \"undefined\";\n    var isIE = (typeof window !== undefinedType) && (typeof window.navigator !== undefinedType) && (\n        /Trident\\/|MSIE /.test(window.navigator.userAgent)\n    );\n\n    var logMethods = [\n        \"trace\",\n        \"debug\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ];\n\n    // Cross-browser bind equivalent that works at least back to IE6\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === 'function') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // Trace() doesn't print the message in IE, so for that case we need to wrap it\n    function traceForIE() {\n        if (console.log) {\n            if (console.log.apply) {\n                console.log.apply(console, arguments);\n            } else {\n                // In old IE, native console methods themselves don't have apply().\n                Function.prototype.apply.apply(console.log, [console, arguments]);\n            }\n        }\n        if (console.trace) console.trace();\n    }\n\n    // Build the best logging method possible for this env\n    // Wherever possible we want to bind, not wrap, to preserve stack traces\n    function realMethod(methodName) {\n        if (methodName === 'debug') {\n            methodName = 'log';\n        }\n\n        if (typeof console === undefinedType) {\n            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\n        } else if (methodName === 'trace' && isIE) {\n            return traceForIE;\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, 'log');\n        } else {\n            return noop;\n        }\n    }\n\n    // These private functions always need `this` to be set properly\n\n    function replaceLoggingMethods(level, loggerName) {\n        /*jshint validthis:true */\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, loggerName);\n        }\n\n        // Define log.log as an alias for log.debug\n        this.log = this.debug;\n    }\n\n    // In old IE versions, the console isn't present until you first open it.\n    // We build realMethod() replacements here that regenerate logging methods\n    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this, level, loggerName);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    // By default, we use closely bound real methods wherever possible, and\n    // otherwise we wait for a console to appear, and then try again.\n    function defaultMethodFactory(methodName, level, loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    function Logger(name, defaultLevel, factory) {\n      var self = this;\n      var currentLevel;\n      defaultLevel = defaultLevel == null ? \"WARN\" : defaultLevel;\n\n      var storageKey = \"loglevel\";\n      if (typeof name === \"string\") {\n        storageKey += \":\" + name;\n      } else if (typeof name === \"symbol\") {\n        storageKey = undefined;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          // Fallback to cookies if local storage gives us nothing\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var location = cookie.indexOf(\n                      encodeURIComponent(storageKey) + \"=\");\n                  if (location !== -1) {\n                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      function clearPersistedLevel() {\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage.removeItem(storageKey);\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=; expires=Thu, 01 Jan 1970 00:00:00 UTC\";\n          } catch (ignore) {}\n      }\n\n      /*\n       *\n       * Public logger API - see https://github.com/pimterry/loglevel for details\n       *\n       */\n\n      self.name = name;\n\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n          \"ERROR\": 4, \"SILENT\": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          return currentLevel;\n      };\n\n      self.setLevel = function (level, persist) {\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n              currentLevel = level;\n              if (persist !== false) {  // defaults to true\n                  persistLevelIfPossible(level);\n              }\n              replaceLoggingMethods.call(self, level, name);\n              if (typeof console === undefinedType && level < self.levels.SILENT) {\n                  return \"No console available for logging\";\n              }\n          } else {\n              throw \"log.setLevel() called with invalid level: \" + level;\n          }\n      };\n\n      self.setDefaultLevel = function (level) {\n          defaultLevel = level;\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.resetLevel = function () {\n          self.setLevel(defaultLevel, false);\n          clearPersistedLevel();\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      // Initialize with the right level\n      var initialLevel = getPersistedLevel();\n      if (initialLevel == null) {\n          initialLevel = defaultLevel;\n      }\n      self.setLevel(initialLevel, false);\n    }\n\n    /*\n     *\n     * Top-level API\n     *\n     */\n\n    var defaultLogger = new Logger();\n\n    var _loggersByName = {};\n    defaultLogger.getLogger = function getLogger(name) {\n        if ((typeof name !== \"symbol\" && typeof name !== \"string\") || name === \"\") {\n          throw new TypeError(\"You must supply a name when creating a logger.\");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n          logger = _loggersByName[name] = new Logger(\n            name, defaultLogger.getLevel(), defaultLogger.methodFactory);\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    defaultLogger.getLoggers = function getLoggers() {\n        return _loggersByName;\n    };\n\n    // ES6 default export, for compatibility\n    defaultLogger['default'] = defaultLogger;\n\n    return defaultLogger;\n}));\n", "import * as log from 'loglevel';\n\nexport enum LogLevel {\n  trace = 0,\n  debug = 1,\n  info = 2,\n  warn = 3,\n  error = 4,\n  silent = 5,\n}\n\nexport enum LoggerNames {\n  Default = 'livekit',\n  Room = 'livekit-room',\n  Participant = 'livekit-participant',\n  Track = 'livekit-track',\n  Publication = 'livekit-track-publication',\n  Engine = 'livekit-engine',\n  Signal = 'livekit-signal',\n  PCManager = 'livekit-pc-manager',\n  PCTransport = 'livekit-pc-transport',\n  E2EE = 'lk-e2ee',\n}\n\ntype LogLevelString = keyof typeof LogLevel;\n\nexport type StructuredLogger = {\n  trace: (msg: string, context?: object) => void;\n  debug: (msg: string, context?: object) => void;\n  info: (msg: string, context?: object) => void;\n  warn: (msg: string, context?: object) => void;\n  error: (msg: string, context?: object) => void;\n  setDefaultLevel: (level: log.LogLevelDesc) => void;\n};\n\nlet livekitLogger = log.getLogger('livekit');\n\nlivekitLogger.setDefaultLevel(LogLevel.info);\n\nexport default livekitLogger as StructuredLogger;\n\n/**\n * @internal\n */\nexport function getLogger(name: string) {\n  const logger = log.getLogger(name);\n  logger.setDefaultLevel(livekitLogger.getLevel());\n  return logger as StructuredLogger;\n}\n\nexport function setLogLevel(level: LogLevel | LogLevelString, loggerName?: LoggerNames) {\n  if (loggerName) {\n    log.getLogger(loggerName).setLevel(level);\n  }\n  for (const logger of Object.entries(log.getLoggers())\n    .filter(([logrName]) => logrName.startsWith('livekit'))\n    .map(([, logr]) => logr)) {\n    logger.setLevel(level);\n  }\n}\n\nexport type LogExtension = (level: LogLevel, msg: string, context?: object) => void;\n\n/**\n * use this to hook into the logging function to allow sending internal livekit logs to third party services\n * if set, the browser logs will lose their stacktrace information (see https://github.com/pimterry/loglevel#writing-plugins)\n */\nexport function setLogExtension(extension: LogExtension, logger = livekitLogger) {\n  const originalFactory = logger.methodFactory;\n\n  logger.methodFactory = (methodName, configLevel, loggerName) => {\n    const rawMethod = originalFactory(methodName, configLevel, loggerName);\n\n    const logLevel = LogLevel[methodName as LogLevelString];\n    const needLog = logLevel >= configLevel && logLevel < LogLevel.silent;\n\n    return (msg, context?: [msg: string, context: object]) => {\n      if (context) rawMethod(msg, context);\n      else rawMethod(msg);\n      if (needLog) {\n        extension(logLevel, msg, context);\n      }\n    };\n  };\n  logger.setLevel(logger.getLevel()); // Be sure to call setLevel method in order to apply plugin\n}\n\nexport const workerLogger = log.getLogger('lk-e2ee') as StructuredLogger;\n", "// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Assert that condition is truthy or throw error (with message)\n */\nexport function assert(condition, msg) {\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions -- we want the implicit conversion to boolean\n    if (!condition) {\n        throw new Error(msg);\n    }\n}\nconst FLOAT32_MAX = 3.4028234663852886e38, FLOAT32_MIN = -3.4028234663852886e38, UINT32_MAX = 0xffffffff, INT32_MAX = 0x7fffffff, INT32_MIN = -0x80000000;\n/**\n * Assert a valid signed protobuf 32-bit integer.\n */\nexport function assertInt32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error(\"invalid int 32: \" + typeof arg);\n    if (!Number.isInteger(arg) || arg > INT32_MAX || arg < INT32_MIN)\n        throw new Error(\"invalid int 32: \" + arg); // eslint-disable-line @typescript-eslint/restrict-plus-operands -- we want the implicit conversion to string\n}\n/**\n * Assert a valid unsigned protobuf 32-bit integer.\n */\nexport function assertUInt32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error(\"invalid uint 32: \" + typeof arg);\n    if (!Number.isInteger(arg) || arg > UINT32_MAX || arg < 0)\n        throw new Error(\"invalid uint 32: \" + arg); // eslint-disable-line @typescript-eslint/restrict-plus-operands -- we want the implicit conversion to string\n}\n/**\n * Assert a valid protobuf float value.\n */\nexport function assertFloat32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error(\"invalid float 32: \" + typeof arg);\n    if (!Number.isFinite(arg))\n        return;\n    if (arg > FLOAT32_MAX || arg < FLOAT32_MIN)\n        throw new Error(\"invalid float 32: \" + arg); // eslint-disable-line @typescript-eslint/restrict-plus-operands -- we want the implicit conversion to string\n}\n", "// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { assert } from \"./assert.js\";\nconst enumTypeSymbol = Symbol(\"@bufbuild/protobuf/enum-type\");\n/**\n * Get reflection information from a generated enum.\n * If this function is called on something other than a generated\n * enum, it raises an error.\n */\nexport function getEnumType(enumObject) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-explicit-any\n    const t = enumObject[enumTypeSymbol];\n    assert(t, \"missing enum type on enum object\");\n    return t; // eslint-disable-line @typescript-eslint/no-unsafe-return\n}\n/**\n * Sets reflection information on a generated enum.\n */\nexport function setEnumType(enumObject, typeName, values, opt) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n    enumObject[enumTypeSymbol] = makeEnumType(typeName, values.map((v) => ({\n        no: v.no,\n        name: v.name,\n        localName: enumObject[v.no],\n    })), opt);\n}\n/**\n * Create a new EnumType with the given values.\n */\nexport function makeEnumType(typeName, values, \n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n_opt) {\n    const names = Object.create(null);\n    const numbers = Object.create(null);\n    const normalValues = [];\n    for (const value of values) {\n        // We do not surface options at this time\n        // const value: EnumValueInfo = {...v, options: v.options ?? emptyReadonlyObject};\n        const n = normalizeEnumValue(value);\n        normalValues.push(n);\n        names[value.name] = n;\n        numbers[value.no] = n;\n    }\n    return {\n        typeName,\n        values: normalValues,\n        // We do not surface options at this time\n        // options: opt?.options ?? Object.create(null),\n        findName(name) {\n            return names[name];\n        },\n        findNumber(no) {\n            return numbers[no];\n        },\n    };\n}\n/**\n * Create a new enum object with the given values.\n * Sets reflection information.\n */\nexport function makeEnum(typeName, values, opt) {\n    const enumObject = {};\n    for (const value of values) {\n        const n = normalizeEnumValue(value);\n        enumObject[n.localName] = n.no;\n        enumObject[n.no] = n.localName;\n    }\n    setEnumType(enumObject, typeName, values, opt);\n    return enumObject;\n}\nfunction normalizeEnumValue(value) {\n    if (\"localName\" in value) {\n        return value;\n    }\n    return Object.assign(Object.assign({}, value), { localName: value.name });\n}\n", "// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Message is the base class of every message, generated, or created at\n * runtime.\n *\n * It is _not_ safe to extend this class. If you want to create a message at\n * run time, use proto3.makeMessageType().\n */\nexport class Message {\n    /**\n     * Compare with a message of the same type.\n     */\n    equals(other) {\n        return this.getType().runtime.util.equals(this.getType(), this, other);\n    }\n    /**\n     * Create a deep copy.\n     */\n    clone() {\n        return this.getType().runtime.util.clone(this);\n    }\n    /**\n     * Parse from binary data, merging fields.\n     *\n     * Repeated fields are appended. Map entries are added, overwriting\n     * existing keys.\n     *\n     * If a message field is already present, it will be merged with the\n     * new data.\n     */\n    fromBinary(bytes, options) {\n        const type = this.getType(), format = type.runtime.bin, opt = format.makeReadOptions(options);\n        format.readMessage(this, opt.readerFactory(bytes), bytes.byteLength, opt);\n        return this;\n    }\n    /**\n     * Parse a message from a JSON value.\n     */\n    fromJson(jsonValue, options) {\n        const type = this.getType(), format = type.runtime.json, opt = format.makeReadOptions(options);\n        format.readMessage(type, jsonValue, opt, this);\n        return this;\n    }\n    /**\n     * Parse a message from a JSON string.\n     */\n    fromJsonString(jsonString, options) {\n        let json;\n        try {\n            json = JSON.parse(jsonString);\n        }\n        catch (e) {\n            throw new Error(`cannot decode ${this.getType().typeName} from JSON: ${e instanceof Error ? e.message : String(e)}`);\n        }\n        return this.fromJson(json, options);\n    }\n    /**\n     * Serialize the message to binary data.\n     */\n    toBinary(options) {\n        const type = this.getType(), bin = type.runtime.bin, opt = bin.makeWriteOptions(options), writer = opt.writerFactory();\n        bin.writeMessage(this, writer, opt);\n        return writer.finish();\n    }\n    /**\n     * Serialize the message to a JSON value, a JavaScript value that can be\n     * passed to JSON.stringify().\n     */\n    toJson(options) {\n        const type = this.getType(), json = type.runtime.json, opt = json.makeWriteOptions(options);\n        return json.writeMessage(this, opt);\n    }\n    /**\n     * Serialize the message to a JSON string.\n     */\n    toJsonString(options) {\n        var _a;\n        const value = this.toJson(options);\n        return JSON.stringify(value, null, (_a = options === null || options === void 0 ? void 0 : options.prettySpaces) !== null && _a !== void 0 ? _a : 0);\n    }\n    /**\n     * Override for serialization behavior. This will be invoked when calling\n     * JSON.stringify on this message (i.e. JSON.stringify(msg)).\n     *\n     * Note that this will not serialize google.protobuf.Any with a packed\n     * message because the protobuf JSON format specifies that it needs to be\n     * unpacked, and this is only possible with a type registry to look up the\n     * message type.  As a result, attempting to serialize a message with this\n     * type will throw an Error.\n     *\n     * This method is protected because you should not need to invoke it\n     * directly -- instead use JSON.stringify or toJsonString for\n     * stringified JSON.  Alternatively, if actual JSON is desired, you should\n     * use toJson.\n     */\n    toJSON() {\n        return this.toJson({\n            emitDefaultValues: true,\n        });\n    }\n    /**\n     * Retrieve the MessageType of this message - a singleton that represents\n     * the protobuf message declaration and provides metadata for reflection-\n     * based operations.\n     */\n    getType() {\n        // Any class that extends Message _must_ provide a complete static\n        // implementation of MessageType.\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-return\n        return Object.getPrototypeOf(this).constructor;\n    }\n}\n", "// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Message } from \"../message.js\";\n/**\n * Create a new message type using the given runtime.\n */\nexport function makeMessageType(runtime, typeName, fields, opt) {\n    var _a;\n    const localName = (_a = opt === null || opt === void 0 ? void 0 : opt.localName) !== null && _a !== void 0 ? _a : typeName.substring(typeName.lastIndexOf(\".\") + 1);\n    const type = {\n        [localName]: function (data) {\n            runtime.util.initFields(this);\n            runtime.util.initPartial(data, this);\n        },\n    }[localName];\n    Object.setPrototypeOf(type.prototype, new Message());\n    Object.assign(type, {\n        runtime,\n        typeName,\n        fields: runtime.util.newFieldList(fields),\n        fromBinary(bytes, options) {\n            return new type().fromBinary(bytes, options);\n        },\n        fromJson(jsonValue, options) {\n            return new type().fromJson(jsonValue, options);\n        },\n        fromJsonString(jsonString, options) {\n            return new type().fromJsonString(jsonString, options);\n        },\n        equals(a, b) {\n            return runtime.util.equals(type, a, b);\n        },\n    });\n    return type;\n}\n", "// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { getEnumType, makeEnum, makeEnumType } from \"./enum.js\";\nimport { makeMessageType } from \"./message-type.js\";\nexport function makeProtoRuntime(syntax, json, bin, util) {\n    return {\n        syntax,\n        json,\n        bin,\n        util,\n        makeMessageType(typeName, fields, opt) {\n            return makeMessageType(this, typeName, fields, opt);\n        },\n        makeEnum,\n        makeEnumType,\n        getEnumType,\n    };\n}\n", "// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Scalar value types. This is a subset of field types declared by protobuf\n * enum google.protobuf.FieldDescriptorProto.Type The types GROUP and MESSAGE\n * are omitted, but the numerical values are identical.\n */\nexport var ScalarType;\n(function (ScalarType) {\n    // 0 is reserved for errors.\n    // Order is weird for historical reasons.\n    ScalarType[ScalarType[\"DOUBLE\"] = 1] = \"DOUBLE\";\n    ScalarType[ScalarType[\"FLOAT\"] = 2] = \"FLOAT\";\n    // Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if\n    // negative values are likely.\n    ScalarType[ScalarType[\"INT64\"] = 3] = \"INT64\";\n    ScalarType[ScalarType[\"UINT64\"] = 4] = \"UINT64\";\n    // Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if\n    // negative values are likely.\n    ScalarType[ScalarType[\"INT32\"] = 5] = \"INT32\";\n    ScalarType[ScalarType[\"FIXED64\"] = 6] = \"FIXED64\";\n    ScalarType[ScalarType[\"FIXED32\"] = 7] = \"FIXED32\";\n    ScalarType[ScalarType[\"BOOL\"] = 8] = \"BOOL\";\n    ScalarType[ScalarType[\"STRING\"] = 9] = \"STRING\";\n    // Tag-delimited aggregate.\n    // Group type is deprecated and not supported in proto3. However, Proto3\n    // implementations should still be able to parse the group wire format and\n    // treat group fields as unknown fields.\n    // TYPE_GROUP = 10,\n    // TYPE_MESSAGE = 11,  // Length-delimited aggregate.\n    // New in version 2.\n    ScalarType[ScalarType[\"BYTES\"] = 12] = \"BYTES\";\n    ScalarType[ScalarType[\"UINT32\"] = 13] = \"UINT32\";\n    // TYPE_ENUM = 14,\n    ScalarType[ScalarType[\"SFIXED32\"] = 15] = \"SFIXED32\";\n    ScalarType[ScalarType[\"SFIXED64\"] = 16] = \"SFIXED64\";\n    ScalarType[ScalarType[\"SINT32\"] = 17] = \"SINT32\";\n    ScalarType[ScalarType[\"SINT64\"] = 18] = \"SINT64\";\n})(ScalarType || (ScalarType = {}));\n/**\n * JavaScript representation of fields with 64 bit integral types (int64, uint64,\n * sint64, fixed64, sfixed64).\n *\n * This is a subset of google.protobuf.FieldOptions.JSType, which defines JS_NORMAL,\n * JS_STRING, and JS_NUMBER. Protobuf-ES uses BigInt by default, but will use\n * String if `[jstype = JS_STRING]` is specified.\n *\n * ```protobuf\n * uint64 field_a = 1; // BigInt\n * uint64 field_b = 2 [jstype = JS_NORMAL]; // BigInt\n * uint64 field_b = 2 [jstype = JS_NUMBER]; // BigInt\n * uint64 field_b = 2 [jstype = JS_STRING]; // String\n * ```\n */\nexport var LongType;\n(function (LongType) {\n    /**\n     * Use JavaScript BigInt.\n     */\n    LongType[LongType[\"BIGINT\"] = 0] = \"BIGINT\";\n    /**\n     * Use JavaScript String.\n     *\n     * Field option `[jstype = JS_STRING]`.\n     */\n    LongType[LongType[\"STRING\"] = 1] = \"STRING\";\n})(LongType || (LongType = {}));\n", "// Copyright 2008 Google Inc.  All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n//\n// Code generated by the Protocol Buffer compiler is owned by the owner\n// of the input file used when generating it.  This code is not\n// standalone and requires a support library to be linked with it.  This\n// support library is itself covered by the above license.\n/* eslint-disable prefer-const,@typescript-eslint/restrict-plus-operands */\n/**\n * Read a 64 bit varint as two JS numbers.\n *\n * Returns tuple:\n * [0]: low bits\n * [1]: high bits\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L175\n */\nexport function varint64read() {\n    let lowBits = 0;\n    let highBits = 0;\n    for (let shift = 0; shift < 28; shift += 7) {\n        let b = this.buf[this.pos++];\n        lowBits |= (b & 0x7f) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [lowBits, highBits];\n        }\n    }\n    let middleByte = this.buf[this.pos++];\n    // last four bits of the first 32 bit number\n    lowBits |= (middleByte & 0x0f) << 28;\n    // 3 upper bits are part of the next 32 bit number\n    highBits = (middleByte & 0x70) >> 4;\n    if ((middleByte & 0x80) == 0) {\n        this.assertBounds();\n        return [lowBits, highBits];\n    }\n    for (let shift = 3; shift <= 31; shift += 7) {\n        let b = this.buf[this.pos++];\n        highBits |= (b & 0x7f) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [lowBits, highBits];\n        }\n    }\n    throw new Error(\"invalid varint\");\n}\n/**\n * Write a 64 bit varint, given as two JS numbers, to the given bytes array.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/writer.js#L344\n */\nexport function varint64write(lo, hi, bytes) {\n    for (let i = 0; i < 28; i = i + 7) {\n        const shift = lo >>> i;\n        const hasNext = !(shift >>> 7 == 0 && hi == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xff;\n        bytes.push(byte);\n        if (!hasNext) {\n            return;\n        }\n    }\n    const splitBits = ((lo >>> 28) & 0x0f) | ((hi & 0x07) << 4);\n    const hasMoreBits = !(hi >> 3 == 0);\n    bytes.push((hasMoreBits ? splitBits | 0x80 : splitBits) & 0xff);\n    if (!hasMoreBits) {\n        return;\n    }\n    for (let i = 3; i < 31; i = i + 7) {\n        const shift = hi >>> i;\n        const hasNext = !(shift >>> 7 == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xff;\n        bytes.push(byte);\n        if (!hasNext) {\n            return;\n        }\n    }\n    bytes.push((hi >>> 31) & 0x01);\n}\n// constants for binary math\nconst TWO_PWR_32_DBL = 0x100000000;\n/**\n * Parse decimal string of 64 bit integer value as two JS numbers.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nexport function int64FromString(dec) {\n    // Check for minus sign.\n    const minus = dec[0] === \"-\";\n    if (minus) {\n        dec = dec.slice(1);\n    }\n    // Work 6 decimal digits at a time, acting like we're converting base 1e6\n    // digits to binary. This is safe to do with floating point math because\n    // Number.isSafeInteger(ALL_32_BITS * 1e6) == true.\n    const base = 1e6;\n    let lowBits = 0;\n    let highBits = 0;\n    function add1e6digit(begin, end) {\n        // Note: Number('') is 0.\n        const digit1e6 = Number(dec.slice(begin, end));\n        highBits *= base;\n        lowBits = lowBits * base + digit1e6;\n        // Carry bits from lowBits to\n        if (lowBits >= TWO_PWR_32_DBL) {\n            highBits = highBits + ((lowBits / TWO_PWR_32_DBL) | 0);\n            lowBits = lowBits % TWO_PWR_32_DBL;\n        }\n    }\n    add1e6digit(-24, -18);\n    add1e6digit(-18, -12);\n    add1e6digit(-12, -6);\n    add1e6digit(-6);\n    return minus ? negate(lowBits, highBits) : newBits(lowBits, highBits);\n}\n/**\n * Losslessly converts a 64-bit signed integer in 32:32 split representation\n * into a decimal string.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nexport function int64ToString(lo, hi) {\n    let bits = newBits(lo, hi);\n    // If we're treating the input as a signed value and the high bit is set, do\n    // a manual two's complement conversion before the decimal conversion.\n    const negative = (bits.hi & 0x80000000);\n    if (negative) {\n        bits = negate(bits.lo, bits.hi);\n    }\n    const result = uInt64ToString(bits.lo, bits.hi);\n    return negative ? \"-\" + result : result;\n}\n/**\n * Losslessly converts a 64-bit unsigned integer in 32:32 split representation\n * into a decimal string.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nexport function uInt64ToString(lo, hi) {\n    ({ lo, hi } = toUnsigned(lo, hi));\n    // Skip the expensive conversion if the number is small enough to use the\n    // built-in conversions.\n    // Number.MAX_SAFE_INTEGER = 0x001FFFFF FFFFFFFF, thus any number with\n    // highBits <= 0x1FFFFF can be safely expressed with a double and retain\n    // integer precision.\n    // Proven by: Number.isSafeInteger(0x1FFFFF * 2**32 + 0xFFFFFFFF) == true.\n    if (hi <= 0x1FFFFF) {\n        return String(TWO_PWR_32_DBL * hi + lo);\n    }\n    // What this code is doing is essentially converting the input number from\n    // base-2 to base-1e7, which allows us to represent the 64-bit range with\n    // only 3 (very large) digits. Those digits are then trivial to convert to\n    // a base-10 string.\n    // The magic numbers used here are -\n    // 2^24 = 16777216 = (1,6777216) in base-1e7.\n    // 2^48 = 281474976710656 = (2,8147497,6710656) in base-1e7.\n    // Split 32:32 representation into 16:24:24 representation so our\n    // intermediate digits don't overflow.\n    const low = lo & 0xFFFFFF;\n    const mid = ((lo >>> 24) | (hi << 8)) & 0xFFFFFF;\n    const high = (hi >> 16) & 0xFFFF;\n    // Assemble our three base-1e7 digits, ignoring carries. The maximum\n    // value in a digit at this step is representable as a 48-bit integer, which\n    // can be stored in a 64-bit floating point number.\n    let digitA = low + (mid * 6777216) + (high * 6710656);\n    let digitB = mid + (high * 8147497);\n    let digitC = (high * 2);\n    // Apply carries from A to B and from B to C.\n    const base = 10000000;\n    if (digitA >= base) {\n        digitB += Math.floor(digitA / base);\n        digitA %= base;\n    }\n    if (digitB >= base) {\n        digitC += Math.floor(digitB / base);\n        digitB %= base;\n    }\n    // If digitC is 0, then we should have returned in the trivial code path\n    // at the top for non-safe integers. Given this, we can assume both digitB\n    // and digitA need leading zeros.\n    return digitC.toString() + decimalFrom1e7WithLeadingZeros(digitB) +\n        decimalFrom1e7WithLeadingZeros(digitA);\n}\nfunction toUnsigned(lo, hi) {\n    return { lo: lo >>> 0, hi: hi >>> 0 };\n}\nfunction newBits(lo, hi) {\n    return { lo: lo | 0, hi: hi | 0 };\n}\n/**\n * Returns two's compliment negation of input.\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators#Signed_32-bit_integers\n */\nfunction negate(lowBits, highBits) {\n    highBits = ~highBits;\n    if (lowBits) {\n        lowBits = ~lowBits + 1;\n    }\n    else {\n        // If lowBits is 0, then bitwise-not is 0xFFFFFFFF,\n        // adding 1 to that, results in 0x100000000, which leaves\n        // the low bits 0x0 and simply adds one to the high bits.\n        highBits += 1;\n    }\n    return newBits(lowBits, highBits);\n}\n/**\n * Returns decimal representation of digit1e7 with leading zeros.\n */\nconst decimalFrom1e7WithLeadingZeros = (digit1e7) => {\n    const partial = String(digit1e7);\n    return \"0000000\".slice(partial.length) + partial;\n};\n/**\n * Write a 32 bit varint, signed or unsigned. Same as `varint64write(0, value, bytes)`\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/1b18833f4f2a2f681f4e4a25cdf3b0a43115ec26/js/binary/encoder.js#L144\n */\nexport function varint32write(value, bytes) {\n    if (value >= 0) {\n        // write value as varint 32\n        while (value > 0x7f) {\n            bytes.push((value & 0x7f) | 0x80);\n            value = value >>> 7;\n        }\n        bytes.push(value);\n    }\n    else {\n        for (let i = 0; i < 9; i++) {\n            bytes.push((value & 127) | 128);\n            value = value >> 7;\n        }\n        bytes.push(1);\n    }\n}\n/**\n * Read an unsigned 32 bit varint.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L220\n */\nexport function varint32read() {\n    let b = this.buf[this.pos++];\n    let result = b & 0x7f;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 7;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 14;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 21;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    // Extract only last 4 bits\n    b = this.buf[this.pos++];\n    result |= (b & 0x0f) << 28;\n    for (let readBytes = 5; (b & 0x80) !== 0 && readBytes < 10; readBytes++)\n        b = this.buf[this.pos++];\n    if ((b & 0x80) != 0)\n        throw new Error(\"invalid varint\");\n    this.assertBounds();\n    // Result can have 32 bits, convert it to unsigned\n    return result >>> 0;\n}\n", "// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { assert } from \"./private/assert.js\";\nimport { int64FromString, int64ToString, uInt64ToString, } from \"./google/varint.js\";\nfunction makeInt64Support() {\n    const dv = new DataView(new ArrayBuffer(8));\n    // note that Safari 14 implements BigInt, but not the DataView methods\n    const ok = typeof BigInt === \"function\" &&\n        typeof dv.getBigInt64 === \"function\" &&\n        typeof dv.getBigUint64 === \"function\" &&\n        typeof dv.setBigInt64 === \"function\" &&\n        typeof dv.setBigUint64 === \"function\" &&\n        (typeof process != \"object\" ||\n            typeof process.env != \"object\" ||\n            process.env.BUF_BIGINT_DISABLE !== \"1\");\n    if (ok) {\n        const MIN = BigInt(\"-9223372036854775808\"), MAX = BigInt(\"9223372036854775807\"), UMIN = BigInt(\"0\"), UMAX = BigInt(\"18446744073709551615\");\n        return {\n            zero: BigInt(0),\n            supported: true,\n            parse(value) {\n                const bi = typeof value == \"bigint\" ? value : BigInt(value);\n                if (bi > MAX || bi < MIN) {\n                    throw new Error(`int64 invalid: ${value}`);\n                }\n                return bi;\n            },\n            uParse(value) {\n                const bi = typeof value == \"bigint\" ? value : BigInt(value);\n                if (bi > UMAX || bi < UMIN) {\n                    throw new Error(`uint64 invalid: ${value}`);\n                }\n                return bi;\n            },\n            enc(value) {\n                dv.setBigInt64(0, this.parse(value), true);\n                return {\n                    lo: dv.getInt32(0, true),\n                    hi: dv.getInt32(4, true),\n                };\n            },\n            uEnc(value) {\n                dv.setBigInt64(0, this.uParse(value), true);\n                return {\n                    lo: dv.getInt32(0, true),\n                    hi: dv.getInt32(4, true),\n                };\n            },\n            dec(lo, hi) {\n                dv.setInt32(0, lo, true);\n                dv.setInt32(4, hi, true);\n                return dv.getBigInt64(0, true);\n            },\n            uDec(lo, hi) {\n                dv.setInt32(0, lo, true);\n                dv.setInt32(4, hi, true);\n                return dv.getBigUint64(0, true);\n            },\n        };\n    }\n    const assertInt64String = (value) => assert(/^-?[0-9]+$/.test(value), `int64 invalid: ${value}`);\n    const assertUInt64String = (value) => assert(/^[0-9]+$/.test(value), `uint64 invalid: ${value}`);\n    return {\n        zero: \"0\",\n        supported: false,\n        parse(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertInt64String(value);\n            return value;\n        },\n        uParse(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertUInt64String(value);\n            return value;\n        },\n        enc(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertInt64String(value);\n            return int64FromString(value);\n        },\n        uEnc(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertUInt64String(value);\n            return int64FromString(value);\n        },\n        dec(lo, hi) {\n            return int64ToString(lo, hi);\n        },\n        uDec(lo, hi) {\n            return uInt64ToString(lo, hi);\n        },\n    };\n}\nexport const protoInt64 = makeInt64Support();\n", "// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { varint32read, varint32write, varint64read, varint64write, } from \"./google/varint.js\";\nimport { assertFloat32, assertInt32, assertUInt32 } from \"./private/assert.js\";\nimport { protoInt64 } from \"./proto-int64.js\";\n/* eslint-disable prefer-const,no-case-declarations,@typescript-eslint/restrict-plus-operands */\n/**\n * Protobuf binary format wire types.\n *\n * A wire type provides just enough information to find the length of the\n * following value.\n *\n * See https://developers.google.com/protocol-buffers/docs/encoding#structure\n */\nexport var WireType;\n(function (WireType) {\n    /**\n     * Used for int32, int64, uint32, uint64, sint32, sint64, bool, enum\n     */\n    WireType[WireType[\"Varint\"] = 0] = \"Varint\";\n    /**\n     * Used for fixed64, sfixed64, double.\n     * Always 8 bytes with little-endian byte order.\n     */\n    WireType[WireType[\"Bit64\"] = 1] = \"Bit64\";\n    /**\n     * Used for string, bytes, embedded messages, packed repeated fields\n     *\n     * Only repeated numeric types (types which use the varint, 32-bit,\n     * or 64-bit wire types) can be packed. In proto3, such fields are\n     * packed by default.\n     */\n    WireType[WireType[\"LengthDelimited\"] = 2] = \"LengthDelimited\";\n    /**\n     * Used for groups\n     * @deprecated\n     */\n    WireType[WireType[\"StartGroup\"] = 3] = \"StartGroup\";\n    /**\n     * Used for groups\n     * @deprecated\n     */\n    WireType[WireType[\"EndGroup\"] = 4] = \"EndGroup\";\n    /**\n     * Used for fixed32, sfixed32, float.\n     * Always 4 bytes with little-endian byte order.\n     */\n    WireType[WireType[\"Bit32\"] = 5] = \"Bit32\";\n})(WireType || (WireType = {}));\nexport class BinaryWriter {\n    constructor(textEncoder) {\n        /**\n         * Previous fork states.\n         */\n        this.stack = [];\n        this.textEncoder = textEncoder !== null && textEncoder !== void 0 ? textEncoder : new TextEncoder();\n        this.chunks = [];\n        this.buf = [];\n    }\n    /**\n     * Return all bytes written and reset this writer.\n     */\n    finish() {\n        this.chunks.push(new Uint8Array(this.buf)); // flush the buffer\n        let len = 0;\n        for (let i = 0; i < this.chunks.length; i++)\n            len += this.chunks[i].length;\n        let bytes = new Uint8Array(len);\n        let offset = 0;\n        for (let i = 0; i < this.chunks.length; i++) {\n            bytes.set(this.chunks[i], offset);\n            offset += this.chunks[i].length;\n        }\n        this.chunks = [];\n        return bytes;\n    }\n    /**\n     * Start a new fork for length-delimited data like a message\n     * or a packed repeated field.\n     *\n     * Must be joined later with `join()`.\n     */\n    fork() {\n        this.stack.push({ chunks: this.chunks, buf: this.buf });\n        this.chunks = [];\n        this.buf = [];\n        return this;\n    }\n    /**\n     * Join the last fork. Write its length and bytes, then\n     * return to the previous state.\n     */\n    join() {\n        // get chunk of fork\n        let chunk = this.finish();\n        // restore previous state\n        let prev = this.stack.pop();\n        if (!prev)\n            throw new Error(\"invalid state, fork stack empty\");\n        this.chunks = prev.chunks;\n        this.buf = prev.buf;\n        // write length of chunk as varint\n        this.uint32(chunk.byteLength);\n        return this.raw(chunk);\n    }\n    /**\n     * Writes a tag (field number and wire type).\n     *\n     * Equivalent to `uint32( (fieldNo << 3 | type) >>> 0 )`.\n     *\n     * Generated code should compute the tag ahead of time and call `uint32()`.\n     */\n    tag(fieldNo, type) {\n        return this.uint32(((fieldNo << 3) | type) >>> 0);\n    }\n    /**\n     * Write a chunk of raw bytes.\n     */\n    raw(chunk) {\n        if (this.buf.length) {\n            this.chunks.push(new Uint8Array(this.buf));\n            this.buf = [];\n        }\n        this.chunks.push(chunk);\n        return this;\n    }\n    /**\n     * Write a `uint32` value, an unsigned 32 bit varint.\n     */\n    uint32(value) {\n        assertUInt32(value);\n        // write value as varint 32, inlined for speed\n        while (value > 0x7f) {\n            this.buf.push((value & 0x7f) | 0x80);\n            value = value >>> 7;\n        }\n        this.buf.push(value);\n        return this;\n    }\n    /**\n     * Write a `int32` value, a signed 32 bit varint.\n     */\n    int32(value) {\n        assertInt32(value);\n        varint32write(value, this.buf);\n        return this;\n    }\n    /**\n     * Write a `bool` value, a variant.\n     */\n    bool(value) {\n        this.buf.push(value ? 1 : 0);\n        return this;\n    }\n    /**\n     * Write a `bytes` value, length-delimited arbitrary data.\n     */\n    bytes(value) {\n        this.uint32(value.byteLength); // write length of chunk as varint\n        return this.raw(value);\n    }\n    /**\n     * Write a `string` value, length-delimited data converted to UTF-8 text.\n     */\n    string(value) {\n        let chunk = this.textEncoder.encode(value);\n        this.uint32(chunk.byteLength); // write length of chunk as varint\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `float` value, 32-bit floating point number.\n     */\n    float(value) {\n        assertFloat32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setFloat32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `double` value, a 64-bit floating point number.\n     */\n    double(value) {\n        let chunk = new Uint8Array(8);\n        new DataView(chunk.buffer).setFloat64(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `fixed32` value, an unsigned, fixed-length 32-bit integer.\n     */\n    fixed32(value) {\n        assertUInt32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setUint32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `sfixed32` value, a signed, fixed-length 32-bit integer.\n     */\n    sfixed32(value) {\n        assertInt32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setInt32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `sint32` value, a signed, zigzag-encoded 32-bit varint.\n     */\n    sint32(value) {\n        assertInt32(value);\n        // zigzag encode\n        value = ((value << 1) ^ (value >> 31)) >>> 0;\n        varint32write(value, this.buf);\n        return this;\n    }\n    /**\n     * Write a `fixed64` value, a signed, fixed-length 64-bit integer.\n     */\n    sfixed64(value) {\n        let chunk = new Uint8Array(8), view = new DataView(chunk.buffer), tc = protoInt64.enc(value);\n        view.setInt32(0, tc.lo, true);\n        view.setInt32(4, tc.hi, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `fixed64` value, an unsigned, fixed-length 64 bit integer.\n     */\n    fixed64(value) {\n        let chunk = new Uint8Array(8), view = new DataView(chunk.buffer), tc = protoInt64.uEnc(value);\n        view.setInt32(0, tc.lo, true);\n        view.setInt32(4, tc.hi, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `int64` value, a signed 64-bit varint.\n     */\n    int64(value) {\n        let tc = protoInt64.enc(value);\n        varint64write(tc.lo, tc.hi, this.buf);\n        return this;\n    }\n    /**\n     * Write a `sint64` value, a signed, zig-zag-encoded 64-bit varint.\n     */\n    sint64(value) {\n        let tc = protoInt64.enc(value), \n        // zigzag encode\n        sign = tc.hi >> 31, lo = (tc.lo << 1) ^ sign, hi = ((tc.hi << 1) | (tc.lo >>> 31)) ^ sign;\n        varint64write(lo, hi, this.buf);\n        return this;\n    }\n    /**\n     * Write a `uint64` value, an unsigned 64-bit varint.\n     */\n    uint64(value) {\n        let tc = protoInt64.uEnc(value);\n        varint64write(tc.lo, tc.hi, this.buf);\n        return this;\n    }\n}\nexport class BinaryReader {\n    constructor(buf, textDecoder) {\n        this.varint64 = varint64read; // dirty cast for `this`\n        /**\n         * Read a `uint32` field, an unsigned 32 bit varint.\n         */\n        this.uint32 = varint32read; // dirty cast for `this` and access to protected `buf`\n        this.buf = buf;\n        this.len = buf.length;\n        this.pos = 0;\n        this.view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        this.textDecoder = textDecoder !== null && textDecoder !== void 0 ? textDecoder : new TextDecoder();\n    }\n    /**\n     * Reads a tag - field number and wire type.\n     */\n    tag() {\n        let tag = this.uint32(), fieldNo = tag >>> 3, wireType = tag & 7;\n        if (fieldNo <= 0 || wireType < 0 || wireType > 5)\n            throw new Error(\"illegal tag: field no \" + fieldNo + \" wire type \" + wireType);\n        return [fieldNo, wireType];\n    }\n    /**\n     * Skip one element on the wire and return the skipped data.\n     * Supports WireType.StartGroup since v2.0.0-alpha.23.\n     */\n    skip(wireType) {\n        let start = this.pos;\n        switch (wireType) {\n            case WireType.Varint:\n                while (this.buf[this.pos++] & 0x80) {\n                    // ignore\n                }\n                break;\n            // eslint-disable-next-line\n            // @ts-ignore TS7029: Fallthrough case in switch\n            case WireType.Bit64:\n                this.pos += 4;\n            // eslint-disable-next-line\n            // @ts-ignore TS7029: Fallthrough case in switch\n            case WireType.Bit32:\n                this.pos += 4;\n                break;\n            case WireType.LengthDelimited:\n                let len = this.uint32();\n                this.pos += len;\n                break;\n            case WireType.StartGroup:\n                // From descriptor.proto: Group type is deprecated, not supported in proto3.\n                // But we must still be able to parse and treat as unknown.\n                let t;\n                while ((t = this.tag()[1]) !== WireType.EndGroup) {\n                    this.skip(t);\n                }\n                break;\n            default:\n                throw new Error(\"cant skip wire type \" + wireType);\n        }\n        this.assertBounds();\n        return this.buf.subarray(start, this.pos);\n    }\n    /**\n     * Throws error if position in byte array is out of range.\n     */\n    assertBounds() {\n        if (this.pos > this.len)\n            throw new RangeError(\"premature EOF\");\n    }\n    /**\n     * Read a `int32` field, a signed 32 bit varint.\n     */\n    int32() {\n        return this.uint32() | 0;\n    }\n    /**\n     * Read a `sint32` field, a signed, zigzag-encoded 32-bit varint.\n     */\n    sint32() {\n        let zze = this.uint32();\n        // decode zigzag\n        return (zze >>> 1) ^ -(zze & 1);\n    }\n    /**\n     * Read a `int64` field, a signed 64-bit varint.\n     */\n    int64() {\n        return protoInt64.dec(...this.varint64());\n    }\n    /**\n     * Read a `uint64` field, an unsigned 64-bit varint.\n     */\n    uint64() {\n        return protoInt64.uDec(...this.varint64());\n    }\n    /**\n     * Read a `sint64` field, a signed, zig-zag-encoded 64-bit varint.\n     */\n    sint64() {\n        let [lo, hi] = this.varint64();\n        // decode zig zag\n        let s = -(lo & 1);\n        lo = ((lo >>> 1) | ((hi & 1) << 31)) ^ s;\n        hi = (hi >>> 1) ^ s;\n        return protoInt64.dec(lo, hi);\n    }\n    /**\n     * Read a `bool` field, a variant.\n     */\n    bool() {\n        let [lo, hi] = this.varint64();\n        return lo !== 0 || hi !== 0;\n    }\n    /**\n     * Read a `fixed32` field, an unsigned, fixed-length 32-bit integer.\n     */\n    fixed32() {\n        return this.view.getUint32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `sfixed32` field, a signed, fixed-length 32-bit integer.\n     */\n    sfixed32() {\n        return this.view.getInt32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `fixed64` field, an unsigned, fixed-length 64 bit integer.\n     */\n    fixed64() {\n        return protoInt64.uDec(this.sfixed32(), this.sfixed32());\n    }\n    /**\n     * Read a `fixed64` field, a signed, fixed-length 64-bit integer.\n     */\n    sfixed64() {\n        return protoInt64.dec(this.sfixed32(), this.sfixed32());\n    }\n    /**\n     * Read a `float` field, 32-bit floating point number.\n     */\n    float() {\n        return this.view.getFloat32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `double` field, a 64-bit floating point number.\n     */\n    double() {\n        return this.view.getFloat64((this.pos += 8) - 8, true);\n    }\n    /**\n     * Read a `bytes` field, length-delimited arbitrary data.\n     */\n    bytes() {\n        let len = this.uint32(), start = this.pos;\n        this.pos += len;\n        this.assertBounds();\n        return this.buf.subarray(start, start + len);\n    }\n    /**\n     * Read a `string` field, length-delimited data converted to UTF-8 text.\n     */\n    string() {\n        return this.textDecoder.decode(this.bytes());\n    }\n}\n", "// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Message } from \"../message.js\";\nimport { ScalarType } from \"../field.js\";\n/**\n * Wrap a primitive message field value in its corresponding wrapper\n * message. This function is idempotent.\n */\nexport function wrapField(type, value) {\n    if (value instanceof Message || !type.fieldWrapper) {\n        return value;\n    }\n    return type.fieldWrapper.wrapField(value);\n}\n/**\n * If the given field uses one of the well-known wrapper types, return\n * the primitive type it wraps.\n */\nexport function getUnwrappedFieldType(field) {\n    if (field.fieldKind !== \"message\") {\n        return undefined;\n    }\n    if (field.repeated) {\n        return undefined;\n    }\n    if (field.oneof != undefined) {\n        return undefined;\n    }\n    return wktWrapperToScalarType[field.message.typeName];\n}\nconst wktWrapperToScalarType = {\n    \"google.protobuf.DoubleValue\": ScalarType.DOUBLE,\n    \"google.protobuf.FloatValue\": ScalarType.FLOAT,\n    \"google.protobuf.Int64Value\": ScalarType.INT64,\n    \"google.protobuf.UInt64Value\": ScalarType.UINT64,\n    \"google.protobuf.Int32Value\": ScalarType.INT32,\n    \"google.protobuf.UInt32Value\": ScalarType.UINT32,\n    \"google.protobuf.BoolValue\": ScalarType.BOOL,\n    \"google.protobuf.StringValue\": ScalarType.STRING,\n    \"google.protobuf.BytesValue\": ScalarType.BYTES,\n};\n", "// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { LongType, ScalarType } from \"../field.js\";\nimport { WireType } from \"../binary-encoding.js\";\nimport { protoInt64 } from \"../proto-int64.js\";\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Returns true if both scalar values are equal.\n */\nexport function scalarEquals(type, a, b) {\n    if (a === b) {\n        // This correctly matches equal values except BYTES and (possibly) 64-bit integers.\n        return true;\n    }\n    // Special case BYTES - we need to compare each byte individually\n    if (type == ScalarType.BYTES) {\n        if (!(a instanceof Uint8Array) || !(b instanceof Uint8Array)) {\n            return false;\n        }\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n            if (a[i] !== b[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    // Special case 64-bit integers - we support number, string and bigint representation.\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n    switch (type) {\n        case ScalarType.UINT64:\n        case ScalarType.FIXED64:\n        case ScalarType.INT64:\n        case ScalarType.SFIXED64:\n        case ScalarType.SINT64:\n            // Loose comparison will match between 0n, 0 and \"0\".\n            return a == b;\n    }\n    // Anything that hasn't been caught by strict comparison or special cased\n    // BYTES and 64-bit integers is not equal.\n    return false;\n}\n/**\n * Returns the default value for the given scalar type, following\n * proto3 semantics.\n */\nexport function scalarDefaultValue(type, longType) {\n    switch (type) {\n        case ScalarType.BOOL:\n            return false;\n        case ScalarType.UINT64:\n        case ScalarType.FIXED64:\n        case ScalarType.INT64:\n        case ScalarType.SFIXED64:\n        case ScalarType.SINT64:\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison -- acceptable since it's covered by tests\n            return longType == 0 ? protoInt64.zero : \"0\";\n        case ScalarType.DOUBLE:\n        case ScalarType.FLOAT:\n            return 0.0;\n        case ScalarType.BYTES:\n            return new Uint8Array(0);\n        case ScalarType.STRING:\n            return \"\";\n        default:\n            // Handles INT32, UINT32, SINT32, FIXED32, SFIXED32.\n            // We do not use individual cases to save a few bytes code size.\n            return 0;\n    }\n}\n/**\n * Get information for writing a scalar value.\n *\n * Returns tuple:\n * [0]: appropriate WireType\n * [1]: name of the appropriate method of IBinaryWriter\n * [2]: whether the given value is a default value for proto3 semantics\n *\n * If argument `value` is omitted, [2] is always false.\n */\nexport function scalarTypeInfo(type, value) {\n    const isUndefined = value === undefined;\n    let wireType = WireType.Varint;\n    let isIntrinsicDefault = value === 0;\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- INT32, UINT32, SINT32 are covered by the defaults\n    switch (type) {\n        case ScalarType.STRING:\n            isIntrinsicDefault = isUndefined || !value.length;\n            wireType = WireType.LengthDelimited;\n            break;\n        case ScalarType.BOOL:\n            isIntrinsicDefault = value === false;\n            break;\n        case ScalarType.DOUBLE:\n            wireType = WireType.Bit64;\n            break;\n        case ScalarType.FLOAT:\n            wireType = WireType.Bit32;\n            break;\n        case ScalarType.INT64:\n            isIntrinsicDefault = isUndefined || value == 0; // Loose comparison matches 0n, 0 and \"0\"\n            break;\n        case ScalarType.UINT64:\n            isIntrinsicDefault = isUndefined || value == 0; // Loose comparison matches 0n, 0 and \"0\"\n            break;\n        case ScalarType.FIXED64:\n            isIntrinsicDefault = isUndefined || value == 0; // Loose comparison matches 0n, 0 and \"0\"\n            wireType = WireType.Bit64;\n            break;\n        case ScalarType.BYTES:\n            isIntrinsicDefault = isUndefined || !value.byteLength;\n            wireType = WireType.LengthDelimited;\n            break;\n        case ScalarType.FIXED32:\n            wireType = WireType.Bit32;\n            break;\n        case ScalarType.SFIXED32:\n            wireType = WireType.Bit32;\n            break;\n        case ScalarType.SFIXED64:\n            isIntrinsicDefault = isUndefined || value == 0;\n            wireType = WireType.Bit64;\n            break;\n        case ScalarType.SINT64:\n            isIntrinsicDefault = isUndefined || value == 0;\n            break;\n    }\n    const method = ScalarType[type].toLowerCase();\n    return [wireType, method, isUndefined || isIntrinsicDefault];\n}\n", "// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { BinaryReader, BinaryWriter, WireType } from \"../binary-encoding.js\";\nimport { Message } from \"../message.js\";\nimport { LongType, ScalarType } from \"../field.js\";\nimport { wrapField } from \"./field-wrapper.js\";\nimport { scalarDefaultValue, scalarTypeInfo } from \"./scalars.js\";\nimport { assert } from \"./assert.js\";\n/* eslint-disable @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unnecessary-condition, no-case-declarations, prefer-const */\nconst unknownFieldsSymbol = Symbol(\"@bufbuild/protobuf/unknown-fields\");\n// Default options for parsing binary data.\nconst readDefaults = {\n    readUnknownFields: true,\n    readerFactory: (bytes) => new BinaryReader(bytes),\n};\n// Default options for serializing binary data.\nconst writeDefaults = {\n    writeUnknownFields: true,\n    writerFactory: () => new BinaryWriter(),\n};\nfunction makeReadOptions(options) {\n    return options ? Object.assign(Object.assign({}, readDefaults), options) : readDefaults;\n}\nfunction makeWriteOptions(options) {\n    return options ? Object.assign(Object.assign({}, writeDefaults), options) : writeDefaults;\n}\nexport function makeBinaryFormatCommon() {\n    return {\n        makeReadOptions,\n        makeWriteOptions,\n        listUnknownFields(message) {\n            var _a;\n            return (_a = message[unknownFieldsSymbol]) !== null && _a !== void 0 ? _a : [];\n        },\n        discardUnknownFields(message) {\n            delete message[unknownFieldsSymbol];\n        },\n        writeUnknownFields(message, writer) {\n            const m = message;\n            const c = m[unknownFieldsSymbol];\n            if (c) {\n                for (const f of c) {\n                    writer.tag(f.no, f.wireType).raw(f.data);\n                }\n            }\n        },\n        onUnknownField(message, no, wireType, data) {\n            const m = message;\n            if (!Array.isArray(m[unknownFieldsSymbol])) {\n                m[unknownFieldsSymbol] = [];\n            }\n            m[unknownFieldsSymbol].push({ no, wireType, data });\n        },\n        readMessage(message, reader, length, options) {\n            const type = message.getType();\n            const end = length === undefined ? reader.len : reader.pos + length;\n            while (reader.pos < end) {\n                const [fieldNo, wireType] = reader.tag(), field = type.fields.find(fieldNo);\n                if (!field) {\n                    const data = reader.skip(wireType);\n                    if (options.readUnknownFields) {\n                        this.onUnknownField(message, fieldNo, wireType, data);\n                    }\n                    continue;\n                }\n                let target = message, repeated = field.repeated, localName = field.localName;\n                if (field.oneof) {\n                    target = target[field.oneof.localName];\n                    if (target.case != localName) {\n                        delete target.value;\n                    }\n                    target.case = localName;\n                    localName = \"value\";\n                }\n                switch (field.kind) {\n                    case \"scalar\":\n                    case \"enum\":\n                        const scalarType = field.kind == \"enum\" ? ScalarType.INT32 : field.T;\n                        let read = readScalar;\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison -- acceptable since it's covered by tests\n                        if (field.kind == \"scalar\" && field.L > 0) {\n                            read = readScalarLTString;\n                        }\n                        if (repeated) {\n                            let arr = target[localName]; // safe to assume presence of array, oneof cannot contain repeated values\n                            if (wireType == WireType.LengthDelimited &&\n                                scalarType != ScalarType.STRING &&\n                                scalarType != ScalarType.BYTES) {\n                                let e = reader.uint32() + reader.pos;\n                                while (reader.pos < e) {\n                                    arr.push(read(reader, scalarType));\n                                }\n                            }\n                            else {\n                                arr.push(read(reader, scalarType));\n                            }\n                        }\n                        else {\n                            target[localName] = read(reader, scalarType);\n                        }\n                        break;\n                    case \"message\":\n                        const messageType = field.T;\n                        if (repeated) {\n                            // safe to assume presence of array, oneof cannot contain repeated values\n                            target[localName].push(readMessageField(reader, new messageType(), options));\n                        }\n                        else {\n                            if (target[localName] instanceof Message) {\n                                readMessageField(reader, target[localName], options);\n                            }\n                            else {\n                                target[localName] = readMessageField(reader, new messageType(), options);\n                                if (messageType.fieldWrapper &&\n                                    !field.oneof &&\n                                    !field.repeated) {\n                                    target[localName] = messageType.fieldWrapper.unwrapField(target[localName]);\n                                }\n                            }\n                        }\n                        break;\n                    case \"map\":\n                        let [mapKey, mapVal] = readMapEntry(field, reader, options);\n                        // safe to assume presence of map object, oneof cannot contain repeated values\n                        target[localName][mapKey] = mapVal;\n                        break;\n                }\n            }\n        },\n    };\n}\n// Read a message, avoiding MessageType.fromBinary() to re-use the\n// BinaryReadOptions and the IBinaryReader.\nfunction readMessageField(reader, message, options) {\n    const format = message.getType().runtime.bin;\n    format.readMessage(message, reader, reader.uint32(), options);\n    return message;\n}\n// Read a map field, expecting key field = 1, value field = 2\nfunction readMapEntry(field, reader, options) {\n    const length = reader.uint32(), end = reader.pos + length;\n    let key, val;\n    while (reader.pos < end) {\n        let [fieldNo] = reader.tag();\n        switch (fieldNo) {\n            case 1:\n                key = readScalar(reader, field.K);\n                break;\n            case 2:\n                switch (field.V.kind) {\n                    case \"scalar\":\n                        val = readScalar(reader, field.V.T);\n                        break;\n                    case \"enum\":\n                        val = reader.int32();\n                        break;\n                    case \"message\":\n                        val = readMessageField(reader, new field.V.T(), options);\n                        break;\n                }\n                break;\n        }\n    }\n    if (key === undefined) {\n        let keyRaw = scalarDefaultValue(field.K, LongType.BIGINT);\n        key =\n            field.K == ScalarType.BOOL\n                ? keyRaw.toString()\n                : keyRaw;\n    }\n    if (typeof key != \"string\" && typeof key != \"number\") {\n        key = key.toString();\n    }\n    if (val === undefined) {\n        switch (field.V.kind) {\n            case \"scalar\":\n                val = scalarDefaultValue(field.V.T, LongType.BIGINT);\n                break;\n            case \"enum\":\n                val = 0;\n                break;\n            case \"message\":\n                val = new field.V.T();\n                break;\n        }\n    }\n    return [key, val];\n}\n// Read a scalar value, but return 64 bit integral types (int64, uint64,\n// sint64, fixed64, sfixed64) as string instead of bigint.\nexport function readScalarLTString(reader, type) {\n    const v = readScalar(reader, type);\n    return typeof v == \"bigint\" ? v.toString() : v;\n}\n// Does not use scalarTypeInfo() for better performance.\nfunction readScalar(reader, type) {\n    switch (type) {\n        case ScalarType.STRING:\n            return reader.string();\n        case ScalarType.BOOL:\n            return reader.bool();\n        case ScalarType.DOUBLE:\n            return reader.double();\n        case ScalarType.FLOAT:\n            return reader.float();\n        case ScalarType.INT32:\n            return reader.int32();\n        case ScalarType.INT64:\n            return reader.int64();\n        case ScalarType.UINT64:\n            return reader.uint64();\n        case ScalarType.FIXED64:\n            return reader.fixed64();\n        case ScalarType.BYTES:\n            return reader.bytes();\n        case ScalarType.FIXED32:\n            return reader.fixed32();\n        case ScalarType.SFIXED32:\n            return reader.sfixed32();\n        case ScalarType.SFIXED64:\n            return reader.sfixed64();\n        case ScalarType.SINT64:\n            return reader.sint64();\n        case ScalarType.UINT32:\n            return reader.uint32();\n        case ScalarType.SINT32:\n            return reader.sint32();\n    }\n}\nexport function writeMapEntry(writer, options, field, key, value) {\n    writer.tag(field.no, WireType.LengthDelimited);\n    writer.fork();\n    // javascript only allows number or string for object properties\n    // we convert from our representation to the protobuf type\n    let keyValue = key;\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- we deliberately handle just the special cases for map keys\n    switch (field.K) {\n        case ScalarType.INT32:\n        case ScalarType.FIXED32:\n        case ScalarType.UINT32:\n        case ScalarType.SFIXED32:\n        case ScalarType.SINT32:\n            keyValue = Number.parseInt(key);\n            break;\n        case ScalarType.BOOL:\n            assert(key == \"true\" || key == \"false\");\n            keyValue = key == \"true\";\n            break;\n    }\n    // write key, expecting key field number = 1\n    writeScalar(writer, field.K, 1, keyValue, true);\n    // write value, expecting value field number = 2\n    switch (field.V.kind) {\n        case \"scalar\":\n            writeScalar(writer, field.V.T, 2, value, true);\n            break;\n        case \"enum\":\n            writeScalar(writer, ScalarType.INT32, 2, value, true);\n            break;\n        case \"message\":\n            writeMessageField(writer, options, field.V.T, 2, value);\n            break;\n    }\n    writer.join();\n}\nexport function writeMessageField(writer, options, type, fieldNo, value) {\n    if (value !== undefined) {\n        const message = wrapField(type, value);\n        writer\n            .tag(fieldNo, WireType.LengthDelimited)\n            .bytes(message.toBinary(options));\n    }\n}\nexport function writeScalar(writer, type, fieldNo, value, emitIntrinsicDefault) {\n    let [wireType, method, isIntrinsicDefault] = scalarTypeInfo(type, value);\n    if (!isIntrinsicDefault || emitIntrinsicDefault) {\n        writer.tag(fieldNo, wireType)[method](value);\n    }\n}\nexport function writePacked(writer, type, fieldNo, value) {\n    if (!value.length) {\n        return;\n    }\n    writer.tag(fieldNo, WireType.LengthDelimited).fork();\n    let [, method] = scalarTypeInfo(type);\n    for (let i = 0; i < value.length; i++) {\n        writer[method](value[i]);\n    }\n    writer.join();\n}\n", "// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { ScalarType } from \"../field.js\";\nimport { makeBinaryFormatCommon, writeMapEntry, writeMessageField, writePacked, writeScalar, } from \"./binary-format-common.js\";\n/* eslint-disable @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unnecessary-condition, @typescript-eslint/strict-boolean-expressions, prefer-const, no-case-declarations */\nexport function makeBinaryFormatProto3() {\n    return Object.assign(Object.assign({}, makeBinaryFormatCommon()), { writeMessage(message, writer, options) {\n            const type = message.getType();\n            for (const field of type.fields.byNumber()) {\n                let value, // this will be our field value, whether it is member of a oneof or regular field\n                repeated = field.repeated, localName = field.localName;\n                if (field.oneof) {\n                    const oneof = message[field.oneof.localName];\n                    if (oneof.case !== localName) {\n                        continue; // field is not selected, skip\n                    }\n                    value = oneof.value;\n                }\n                else {\n                    value = message[localName];\n                }\n                switch (field.kind) {\n                    case \"scalar\":\n                    case \"enum\":\n                        let scalarType = field.kind == \"enum\" ? ScalarType.INT32 : field.T;\n                        if (repeated) {\n                            if (field.packed) {\n                                writePacked(writer, scalarType, field.no, value);\n                            }\n                            else {\n                                for (const item of value) {\n                                    writeScalar(writer, scalarType, field.no, item, true);\n                                }\n                            }\n                        }\n                        else {\n                            if (value !== undefined) {\n                                writeScalar(writer, scalarType, field.no, value, !!field.oneof || field.opt);\n                            }\n                        }\n                        break;\n                    case \"message\":\n                        if (repeated) {\n                            for (const item of value) {\n                                writeMessageField(writer, options, field.T, field.no, item);\n                            }\n                        }\n                        else {\n                            writeMessageField(writer, options, field.T, field.no, value);\n                        }\n                        break;\n                    case \"map\":\n                        for (const [key, val] of Object.entries(value)) {\n                            writeMapEntry(writer, options, field, key, val);\n                        }\n                        break;\n                }\n            }\n            if (options.writeUnknownFields) {\n                this.writeUnknownFields(message, writer);\n            }\n            return writer;\n        } });\n}\n", "// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/* eslint-disable @typescript-eslint/ban-ts-comment, @typescript-eslint/no-unnecessary-condition, prefer-const */\n// lookup table from base64 character to byte\nlet encTable = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".split(\"\");\n// lookup table from base64 character *code* to byte because lookup by number is fast\nlet decTable = [];\nfor (let i = 0; i < encTable.length; i++)\n    decTable[encTable[i].charCodeAt(0)] = i;\n// support base64url variants\ndecTable[\"-\".charCodeAt(0)] = encTable.indexOf(\"+\");\ndecTable[\"_\".charCodeAt(0)] = encTable.indexOf(\"/\");\nexport const protoBase64 = {\n    /**\n     * Decodes a base64 string to a byte array.\n     *\n     * - ignores white-space, including line breaks and tabs\n     * - allows inner padding (can decode concatenated base64 strings)\n     * - does not require padding\n     * - understands base64url encoding:\n     *   \"-\" instead of \"+\",\n     *   \"_\" instead of \"/\",\n     *   no padding\n     */\n    dec(base64Str) {\n        // estimate byte size, not accounting for inner padding and whitespace\n        let es = (base64Str.length * 3) / 4;\n        if (base64Str[base64Str.length - 2] == \"=\")\n            es -= 2;\n        else if (base64Str[base64Str.length - 1] == \"=\")\n            es -= 1;\n        let bytes = new Uint8Array(es), bytePos = 0, // position in byte array\n        groupPos = 0, // position in base64 group\n        b, // current byte\n        p = 0; // previous byte\n        for (let i = 0; i < base64Str.length; i++) {\n            b = decTable[base64Str.charCodeAt(i)];\n            if (b === undefined) {\n                switch (base64Str[i]) {\n                    // @ts-ignore TS7029: Fallthrough case in switch\n                    case \"=\":\n                        groupPos = 0; // reset state when padding found\n                    // @ts-ignore TS7029: Fallthrough case in switch\n                    case \"\\n\":\n                    case \"\\r\":\n                    case \"\\t\":\n                    case \" \":\n                        continue; // skip white-space, and padding\n                    default:\n                        throw Error(\"invalid base64 string.\");\n                }\n            }\n            switch (groupPos) {\n                case 0:\n                    p = b;\n                    groupPos = 1;\n                    break;\n                case 1:\n                    bytes[bytePos++] = (p << 2) | ((b & 48) >> 4);\n                    p = b;\n                    groupPos = 2;\n                    break;\n                case 2:\n                    bytes[bytePos++] = ((p & 15) << 4) | ((b & 60) >> 2);\n                    p = b;\n                    groupPos = 3;\n                    break;\n                case 3:\n                    bytes[bytePos++] = ((p & 3) << 6) | b;\n                    groupPos = 0;\n                    break;\n            }\n        }\n        if (groupPos == 1)\n            throw Error(\"invalid base64 string.\");\n        return bytes.subarray(0, bytePos);\n    },\n    /**\n     * Encode a byte array to a base64 string.\n     */\n    enc(bytes) {\n        let base64 = \"\", groupPos = 0, // position in base64 group\n        b, // current byte\n        p = 0; // carry over from previous byte\n        for (let i = 0; i < bytes.length; i++) {\n            b = bytes[i];\n            switch (groupPos) {\n                case 0:\n                    base64 += encTable[b >> 2];\n                    p = (b & 3) << 4;\n                    groupPos = 1;\n                    break;\n                case 1:\n                    base64 += encTable[p | (b >> 4)];\n                    p = (b & 15) << 2;\n                    groupPos = 2;\n                    break;\n                case 2:\n                    base64 += encTable[p | (b >> 6)];\n                    base64 += encTable[b & 63];\n                    groupPos = 0;\n                    break;\n            }\n        }\n        // add output padding\n        if (groupPos) {\n            base64 += encTable[p];\n            base64 += \"=\";\n            if (groupPos == 1)\n                base64 += \"=\";\n        }\n        return base64;\n    },\n};\n", "// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Message } from \"../message.js\";\nimport { LongType, ScalarType } from \"../field.js\";\nimport { assert, assertFloat32, assertInt32, assertUInt32 } from \"./assert.js\";\nimport { protoInt64 } from \"../proto-int64.js\";\nimport { protoBase64 } from \"../proto-base64.js\";\n/* eslint-disable no-case-declarations, @typescript-eslint/restrict-plus-operands,@typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-argument */\n// Default options for parsing JSON.\nconst jsonReadDefaults = {\n    ignoreUnknownFields: false,\n};\n// Default options for serializing to JSON.\nconst jsonWriteDefaults = {\n    emitDefaultValues: false,\n    enumAsInteger: false,\n    useProtoFieldName: false,\n    prettySpaces: 0,\n};\nfunction makeReadOptions(options) {\n    return options ? Object.assign(Object.assign({}, jsonReadDefaults), options) : jsonReadDefaults;\n}\nfunction makeWriteOptions(options) {\n    return options ? Object.assign(Object.assign({}, jsonWriteDefaults), options) : jsonWriteDefaults;\n}\nexport function makeJsonFormatCommon(makeWriteField) {\n    const writeField = makeWriteField(writeEnum, writeScalar);\n    return {\n        makeReadOptions,\n        makeWriteOptions,\n        readMessage(type, json, options, message) {\n            if (json == null || Array.isArray(json) || typeof json != \"object\") {\n                throw new Error(`cannot decode message ${type.typeName} from JSON: ${this.debug(json)}`);\n            }\n            message = message !== null && message !== void 0 ? message : new type();\n            const oneofSeen = {};\n            for (const [jsonKey, jsonValue] of Object.entries(json)) {\n                const field = type.fields.findJsonName(jsonKey);\n                if (!field) {\n                    if (!options.ignoreUnknownFields) {\n                        throw new Error(`cannot decode message ${type.typeName} from JSON: key \"${jsonKey}\" is unknown`);\n                    }\n                    continue;\n                }\n                let localName = field.localName;\n                let target = message;\n                if (field.oneof) {\n                    if (jsonValue === null && field.kind == \"scalar\") {\n                        // see conformance test Required.Proto3.JsonInput.OneofFieldNull{First,Second}\n                        continue;\n                    }\n                    const seen = oneofSeen[field.oneof.localName];\n                    if (seen) {\n                        throw new Error(`cannot decode message ${type.typeName} from JSON: multiple keys for oneof \"${field.oneof.name}\" present: \"${seen}\", \"${jsonKey}\"`);\n                    }\n                    oneofSeen[field.oneof.localName] = jsonKey;\n                    target = target[field.oneof.localName] = { case: localName };\n                    localName = \"value\";\n                }\n                if (field.repeated) {\n                    if (jsonValue === null) {\n                        continue;\n                    }\n                    if (!Array.isArray(jsonValue)) {\n                        throw new Error(`cannot decode field ${type.typeName}.${field.name} from JSON: ${this.debug(jsonValue)}`);\n                    }\n                    const targetArray = target[localName];\n                    for (const jsonItem of jsonValue) {\n                        if (jsonItem === null) {\n                            throw new Error(`cannot decode field ${type.typeName}.${field.name} from JSON: ${this.debug(jsonItem)}`);\n                        }\n                        let val;\n                        // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- \"map\" is invalid for repeated fields\n                        switch (field.kind) {\n                            case \"message\":\n                                val = field.T.fromJson(jsonItem, options);\n                                break;\n                            case \"enum\":\n                                val = readEnum(field.T, jsonItem, options.ignoreUnknownFields);\n                                if (val === undefined)\n                                    continue;\n                                break;\n                            case \"scalar\":\n                                try {\n                                    val = readScalar(field.T, jsonItem, field.L);\n                                }\n                                catch (e) {\n                                    let m = `cannot decode field ${type.typeName}.${field.name} from JSON: ${this.debug(jsonItem)}`;\n                                    if (e instanceof Error && e.message.length > 0) {\n                                        m += `: ${e.message}`;\n                                    }\n                                    throw new Error(m);\n                                }\n                                break;\n                        }\n                        targetArray.push(val);\n                    }\n                }\n                else if (field.kind == \"map\") {\n                    if (jsonValue === null) {\n                        continue;\n                    }\n                    if (Array.isArray(jsonValue) || typeof jsonValue != \"object\") {\n                        throw new Error(`cannot decode field ${type.typeName}.${field.name} from JSON: ${this.debug(jsonValue)}`);\n                    }\n                    const targetMap = target[localName];\n                    for (const [jsonMapKey, jsonMapValue] of Object.entries(jsonValue)) {\n                        if (jsonMapValue === null) {\n                            throw new Error(`cannot decode field ${type.typeName}.${field.name} from JSON: map value null`);\n                        }\n                        let val;\n                        switch (field.V.kind) {\n                            case \"message\":\n                                val = field.V.T.fromJson(jsonMapValue, options);\n                                break;\n                            case \"enum\":\n                                val = readEnum(field.V.T, jsonMapValue, options.ignoreUnknownFields);\n                                if (val === undefined)\n                                    continue;\n                                break;\n                            case \"scalar\":\n                                try {\n                                    val = readScalar(field.V.T, jsonMapValue, LongType.BIGINT);\n                                }\n                                catch (e) {\n                                    let m = `cannot decode map value for field ${type.typeName}.${field.name} from JSON: ${this.debug(jsonValue)}`;\n                                    if (e instanceof Error && e.message.length > 0) {\n                                        m += `: ${e.message}`;\n                                    }\n                                    throw new Error(m);\n                                }\n                                break;\n                        }\n                        try {\n                            targetMap[readScalar(field.K, field.K == ScalarType.BOOL\n                                ? jsonMapKey == \"true\"\n                                    ? true\n                                    : jsonMapKey == \"false\"\n                                        ? false\n                                        : jsonMapKey\n                                : jsonMapKey, LongType.BIGINT).toString()] = val;\n                        }\n                        catch (e) {\n                            let m = `cannot decode map key for field ${type.typeName}.${field.name} from JSON: ${this.debug(jsonValue)}`;\n                            if (e instanceof Error && e.message.length > 0) {\n                                m += `: ${e.message}`;\n                            }\n                            throw new Error(m);\n                        }\n                    }\n                }\n                else {\n                    switch (field.kind) {\n                        case \"message\":\n                            const messageType = field.T;\n                            if (jsonValue === null &&\n                                messageType.typeName != \"google.protobuf.Value\") {\n                                if (field.oneof) {\n                                    throw new Error(`cannot decode field ${type.typeName}.${field.name} from JSON: null is invalid for oneof field \"${jsonKey}\"`);\n                                }\n                                continue;\n                            }\n                            if (target[localName] instanceof Message) {\n                                target[localName].fromJson(jsonValue, options);\n                            }\n                            else {\n                                target[localName] = messageType.fromJson(jsonValue, options);\n                                if (messageType.fieldWrapper && !field.oneof) {\n                                    target[localName] = messageType.fieldWrapper.unwrapField(target[localName]);\n                                }\n                            }\n                            break;\n                        case \"enum\":\n                            const enumValue = readEnum(field.T, jsonValue, options.ignoreUnknownFields);\n                            if (enumValue !== undefined) {\n                                target[localName] = enumValue;\n                            }\n                            break;\n                        case \"scalar\":\n                            try {\n                                target[localName] = readScalar(field.T, jsonValue, field.L);\n                            }\n                            catch (e) {\n                                let m = `cannot decode field ${type.typeName}.${field.name} from JSON: ${this.debug(jsonValue)}`;\n                                if (e instanceof Error && e.message.length > 0) {\n                                    m += `: ${e.message}`;\n                                }\n                                throw new Error(m);\n                            }\n                            break;\n                    }\n                }\n            }\n            return message;\n        },\n        writeMessage(message, options) {\n            const type = message.getType();\n            const json = {};\n            let field;\n            try {\n                for (const member of type.fields.byMember()) {\n                    let jsonValue;\n                    if (member.kind == \"oneof\") {\n                        const oneof = message[member.localName];\n                        if (oneof.value === undefined) {\n                            continue;\n                        }\n                        field = member.findField(oneof.case);\n                        if (!field) {\n                            throw \"oneof case not found: \" + oneof.case;\n                        }\n                        jsonValue = writeField(field, oneof.value, options);\n                    }\n                    else {\n                        field = member;\n                        jsonValue = writeField(field, message[field.localName], options);\n                    }\n                    if (jsonValue !== undefined) {\n                        json[options.useProtoFieldName ? field.name : field.jsonName] =\n                            jsonValue;\n                    }\n                }\n            }\n            catch (e) {\n                const m = field\n                    ? `cannot encode field ${type.typeName}.${field.name} to JSON`\n                    : `cannot encode message ${type.typeName} to JSON`;\n                const r = e instanceof Error ? e.message : String(e);\n                throw new Error(m + (r.length > 0 ? `: ${r}` : \"\"));\n            }\n            return json;\n        },\n        readScalar,\n        writeScalar,\n        debug: debugJsonValue,\n    };\n}\nfunction debugJsonValue(json) {\n    if (json === null) {\n        return \"null\";\n    }\n    switch (typeof json) {\n        case \"object\":\n            return Array.isArray(json) ? \"array\" : \"object\";\n        case \"string\":\n            return json.length > 100 ? \"string\" : `\"${json.split('\"').join('\\\\\"')}\"`;\n        default:\n            return String(json);\n    }\n}\n// May throw an error. If the error message is non-blank, it should be shown.\n// It is up to the caller to provide context.\nfunction readScalar(type, json, longType) {\n    // every valid case in the switch below returns, and every fall\n    // through is regarded as a failure.\n    switch (type) {\n        // float, double: JSON value will be a number or one of the special string values \"NaN\", \"Infinity\", and \"-Infinity\".\n        // Either numbers or strings are accepted. Exponent notation is also accepted.\n        case ScalarType.DOUBLE:\n        case ScalarType.FLOAT:\n            if (json === null)\n                return 0.0;\n            if (json === \"NaN\")\n                return Number.NaN;\n            if (json === \"Infinity\")\n                return Number.POSITIVE_INFINITY;\n            if (json === \"-Infinity\")\n                return Number.NEGATIVE_INFINITY;\n            if (json === \"\") {\n                // empty string is not a number\n                break;\n            }\n            if (typeof json == \"string\" && json.trim().length !== json.length) {\n                // extra whitespace\n                break;\n            }\n            if (typeof json != \"string\" && typeof json != \"number\") {\n                break;\n            }\n            const float = Number(json);\n            if (Number.isNaN(float)) {\n                // not a number\n                break;\n            }\n            if (!Number.isFinite(float)) {\n                // infinity and -infinity are handled by string representation above, so this is an error\n                break;\n            }\n            if (type == ScalarType.FLOAT)\n                assertFloat32(float);\n            return float;\n        // int32, fixed32, uint32: JSON value will be a decimal number. Either numbers or strings are accepted.\n        case ScalarType.INT32:\n        case ScalarType.FIXED32:\n        case ScalarType.SFIXED32:\n        case ScalarType.SINT32:\n        case ScalarType.UINT32:\n            if (json === null)\n                return 0;\n            let int32;\n            if (typeof json == \"number\")\n                int32 = json;\n            else if (typeof json == \"string\" && json.length > 0) {\n                if (json.trim().length === json.length)\n                    int32 = Number(json);\n            }\n            if (int32 === undefined)\n                break;\n            if (type == ScalarType.UINT32)\n                assertUInt32(int32);\n            else\n                assertInt32(int32);\n            return int32;\n        // int64, fixed64, uint64: JSON value will be a decimal string. Either numbers or strings are accepted.\n        case ScalarType.INT64:\n        case ScalarType.SFIXED64:\n        case ScalarType.SINT64:\n            if (json === null)\n                return protoInt64.zero;\n            if (typeof json != \"number\" && typeof json != \"string\")\n                break;\n            const long = protoInt64.parse(json);\n            // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n            return longType ? long.toString() : long;\n        case ScalarType.FIXED64:\n        case ScalarType.UINT64:\n            if (json === null)\n                return protoInt64.zero;\n            if (typeof json != \"number\" && typeof json != \"string\")\n                break;\n            const uLong = protoInt64.uParse(json);\n            // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n            return longType ? uLong.toString() : uLong;\n        // bool:\n        case ScalarType.BOOL:\n            if (json === null)\n                return false;\n            if (typeof json !== \"boolean\")\n                break;\n            return json;\n        // string:\n        case ScalarType.STRING:\n            if (json === null)\n                return \"\";\n            if (typeof json !== \"string\") {\n                break;\n            }\n            // A string must always contain UTF-8 encoded or 7-bit ASCII.\n            // We validate with encodeURIComponent, which appears to be the fastest widely available option.\n            try {\n                encodeURIComponent(json);\n            }\n            catch (e) {\n                throw new Error(\"invalid UTF8\");\n            }\n            return json;\n        // bytes: JSON value will be the data encoded as a string using standard base64 encoding with paddings.\n        // Either standard or URL-safe base64 encoding with/without paddings are accepted.\n        case ScalarType.BYTES:\n            if (json === null || json === \"\")\n                return new Uint8Array(0);\n            if (typeof json !== \"string\")\n                break;\n            return protoBase64.dec(json);\n    }\n    throw new Error();\n}\nfunction readEnum(type, json, ignoreUnknownFields) {\n    if (json === null) {\n        // proto3 requires 0 to be default value for all enums\n        return 0;\n    }\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n    switch (typeof json) {\n        case \"number\":\n            if (Number.isInteger(json)) {\n                return json;\n            }\n            break;\n        case \"string\":\n            const value = type.findName(json);\n            // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n            if (value || ignoreUnknownFields) {\n                return value === null || value === void 0 ? void 0 : value.no;\n            }\n            break;\n    }\n    throw new Error(`cannot decode enum ${type.typeName} from JSON: ${debugJsonValue(json)}`);\n}\nfunction writeEnum(type, value, emitIntrinsicDefault, enumAsInteger) {\n    var _a;\n    if (value === undefined) {\n        return value;\n    }\n    if (value === 0 && !emitIntrinsicDefault) {\n        // proto3 requires 0 to be default value for all enums\n        return undefined;\n    }\n    if (enumAsInteger) {\n        return value;\n    }\n    if (type.typeName == \"google.protobuf.NullValue\") {\n        return null;\n    }\n    const val = type.findNumber(value);\n    return (_a = val === null || val === void 0 ? void 0 : val.name) !== null && _a !== void 0 ? _a : value; // if we don't know the enum value, just return the number\n}\nfunction writeScalar(type, value, emitIntrinsicDefault) {\n    if (value === undefined) {\n        return undefined;\n    }\n    switch (type) {\n        // int32, fixed32, uint32: JSON value will be a decimal number. Either numbers or strings are accepted.\n        case ScalarType.INT32:\n        case ScalarType.SFIXED32:\n        case ScalarType.SINT32:\n        case ScalarType.FIXED32:\n        case ScalarType.UINT32:\n            assert(typeof value == \"number\");\n            return value != 0 || emitIntrinsicDefault ? value : undefined;\n        // float, double: JSON value will be a number or one of the special string values \"NaN\", \"Infinity\", and \"-Infinity\".\n        // Either numbers or strings are accepted. Exponent notation is also accepted.\n        case ScalarType.FLOAT:\n        // assertFloat32(value);\n        case ScalarType.DOUBLE: // eslint-disable-line no-fallthrough\n            assert(typeof value == \"number\");\n            if (Number.isNaN(value))\n                return \"NaN\";\n            if (value === Number.POSITIVE_INFINITY)\n                return \"Infinity\";\n            if (value === Number.NEGATIVE_INFINITY)\n                return \"-Infinity\";\n            return value !== 0 || emitIntrinsicDefault ? value : undefined;\n        // string:\n        case ScalarType.STRING:\n            assert(typeof value == \"string\");\n            return value.length > 0 || emitIntrinsicDefault ? value : undefined;\n        // bool:\n        case ScalarType.BOOL:\n            assert(typeof value == \"boolean\");\n            return value || emitIntrinsicDefault ? value : undefined;\n        // JSON value will be a decimal string. Either numbers or strings are accepted.\n        case ScalarType.UINT64:\n        case ScalarType.FIXED64:\n        case ScalarType.INT64:\n        case ScalarType.SFIXED64:\n        case ScalarType.SINT64:\n            assert(typeof value == \"bigint\" ||\n                typeof value == \"string\" ||\n                typeof value == \"number\");\n            // We use implicit conversion with `value != 0` to catch both 0n and \"0\"\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            return emitIntrinsicDefault || value != 0\n                ? value.toString(10)\n                : undefined;\n        // bytes: JSON value will be the data encoded as a string using standard base64 encoding with paddings.\n        // Either standard or URL-safe base64 encoding with/without paddings are accepted.\n        case ScalarType.BYTES:\n            assert(value instanceof Uint8Array);\n            return emitIntrinsicDefault || value.byteLength > 0\n                ? protoBase64.enc(value)\n                : undefined;\n    }\n}\n", "// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { wrapField } from \"./field-wrapper.js\";\nimport { assert } from \"./assert.js\";\nimport { makeJsonFormatCommon } from \"./json-format-common.js\";\n/* eslint-disable no-case-declarations, @typescript-eslint/restrict-plus-operands,@typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-argument */\nexport function makeJsonFormatProto3() {\n    return makeJsonFormatCommon((writeEnum, writeScalar) => {\n        return function writeField(field, value, options) {\n            if (field.kind == \"map\") {\n                const jsonObj = {};\n                switch (field.V.kind) {\n                    case \"scalar\":\n                        for (const [entryKey, entryValue] of Object.entries(value)) {\n                            const val = writeScalar(field.V.T, entryValue, true);\n                            assert(val !== undefined);\n                            jsonObj[entryKey.toString()] = val; // JSON standard allows only (double quoted) string as property key\n                        }\n                        break;\n                    case \"message\":\n                        for (const [entryKey, entryValue] of Object.entries(value)) {\n                            // JSON standard allows only (double quoted) string as property key\n                            jsonObj[entryKey.toString()] = entryValue.toJson(options);\n                        }\n                        break;\n                    case \"enum\":\n                        const enumType = field.V.T;\n                        for (const [entryKey, entryValue] of Object.entries(value)) {\n                            assert(entryValue === undefined || typeof entryValue == \"number\");\n                            const val = writeEnum(enumType, entryValue, true, options.enumAsInteger);\n                            assert(val !== undefined);\n                            jsonObj[entryKey.toString()] = val; // JSON standard allows only (double quoted) string as property key\n                        }\n                        break;\n                }\n                return options.emitDefaultValues || Object.keys(jsonObj).length > 0\n                    ? jsonObj\n                    : undefined;\n            }\n            else if (field.repeated) {\n                const jsonArr = [];\n                switch (field.kind) {\n                    case \"scalar\":\n                        for (let i = 0; i < value.length; i++) {\n                            jsonArr.push(writeScalar(field.T, value[i], true));\n                        }\n                        break;\n                    case \"enum\":\n                        for (let i = 0; i < value.length; i++) {\n                            jsonArr.push(writeEnum(field.T, value[i], true, options.enumAsInteger));\n                        }\n                        break;\n                    case \"message\":\n                        for (let i = 0; i < value.length; i++) {\n                            jsonArr.push(wrapField(field.T, value[i]).toJson(options));\n                        }\n                        break;\n                }\n                return options.emitDefaultValues || jsonArr.length > 0\n                    ? jsonArr\n                    : undefined;\n            }\n            else {\n                switch (field.kind) {\n                    case \"scalar\":\n                        return writeScalar(field.T, value, !!field.oneof || field.opt || options.emitDefaultValues);\n                    case \"enum\":\n                        return writeEnum(field.T, value, !!field.oneof || field.opt || options.emitDefaultValues, options.enumAsInteger);\n                    case \"message\":\n                        return value !== undefined\n                            ? wrapField(field.T, value).toJson(options)\n                            : undefined;\n                }\n            }\n        };\n    });\n}\n", "// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { setEnumType } from \"./enum.js\";\nimport { Message } from \"../message.js\";\nimport { ScalarType } from \"../field.js\";\nimport { scalarEquals } from \"./scalars.js\";\n/* eslint-disable @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-argument,no-case-declarations */\nexport function makeUtilCommon() {\n    return {\n        setEnumType,\n        initPartial(source, target) {\n            if (source === undefined) {\n                return;\n            }\n            const type = target.getType();\n            for (const member of type.fields.byMember()) {\n                const localName = member.localName, t = target, s = source;\n                if (s[localName] === undefined) {\n                    continue;\n                }\n                switch (member.kind) {\n                    case \"oneof\":\n                        const sk = s[localName].case;\n                        if (sk === undefined) {\n                            continue;\n                        }\n                        const sourceField = member.findField(sk);\n                        let val = s[localName].value;\n                        if (sourceField &&\n                            sourceField.kind == \"message\" &&\n                            !(val instanceof sourceField.T)) {\n                            val = new sourceField.T(val);\n                        }\n                        else if (sourceField &&\n                            sourceField.kind === \"scalar\" &&\n                            sourceField.T === ScalarType.BYTES) {\n                            val = toU8Arr(val);\n                        }\n                        t[localName] = { case: sk, value: val };\n                        break;\n                    case \"scalar\":\n                    case \"enum\":\n                        let copy = s[localName];\n                        if (member.T === ScalarType.BYTES) {\n                            copy = member.repeated\n                                ? copy.map(toU8Arr)\n                                : toU8Arr(copy);\n                        }\n                        t[localName] = copy;\n                        break;\n                    case \"map\":\n                        switch (member.V.kind) {\n                            case \"scalar\":\n                            case \"enum\":\n                                if (member.V.T === ScalarType.BYTES) {\n                                    for (const [k, v] of Object.entries(s[localName])) {\n                                        t[localName][k] = toU8Arr(v);\n                                    }\n                                }\n                                else {\n                                    Object.assign(t[localName], s[localName]);\n                                }\n                                break;\n                            case \"message\":\n                                const messageType = member.V.T;\n                                for (const k of Object.keys(s[localName])) {\n                                    let val = s[localName][k];\n                                    if (!messageType.fieldWrapper) {\n                                        // We only take partial input for messages that are not a wrapper type.\n                                        // For those messages, we recursively normalize the partial input.\n                                        val = new messageType(val);\n                                    }\n                                    t[localName][k] = val;\n                                }\n                                break;\n                        }\n                        break;\n                    case \"message\":\n                        const mt = member.T;\n                        if (member.repeated) {\n                            t[localName] = s[localName].map((val) => val instanceof mt ? val : new mt(val));\n                        }\n                        else if (s[localName] !== undefined) {\n                            const val = s[localName];\n                            if (mt.fieldWrapper) {\n                                if (\n                                // We can't use BytesValue.typeName as that will create a circular import\n                                mt.typeName === \"google.protobuf.BytesValue\") {\n                                    t[localName] = toU8Arr(val);\n                                }\n                                else {\n                                    t[localName] = val;\n                                }\n                            }\n                            else {\n                                t[localName] = val instanceof mt ? val : new mt(val);\n                            }\n                        }\n                        break;\n                }\n            }\n        },\n        equals(type, a, b) {\n            if (a === b) {\n                return true;\n            }\n            if (!a || !b) {\n                return false;\n            }\n            return type.fields.byMember().every((m) => {\n                const va = a[m.localName];\n                const vb = b[m.localName];\n                if (m.repeated) {\n                    if (va.length !== vb.length) {\n                        return false;\n                    }\n                    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- repeated fields are never \"map\"\n                    switch (m.kind) {\n                        case \"message\":\n                            return va.every((a, i) => m.T.equals(a, vb[i]));\n                        case \"scalar\":\n                            return va.every((a, i) => scalarEquals(m.T, a, vb[i]));\n                        case \"enum\":\n                            return va.every((a, i) => scalarEquals(ScalarType.INT32, a, vb[i]));\n                    }\n                    throw new Error(`repeated cannot contain ${m.kind}`);\n                }\n                switch (m.kind) {\n                    case \"message\":\n                        return m.T.equals(va, vb);\n                    case \"enum\":\n                        return scalarEquals(ScalarType.INT32, va, vb);\n                    case \"scalar\":\n                        return scalarEquals(m.T, va, vb);\n                    case \"oneof\":\n                        if (va.case !== vb.case) {\n                            return false;\n                        }\n                        const s = m.findField(va.case);\n                        if (s === undefined) {\n                            return true;\n                        }\n                        // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- oneof fields are never \"map\"\n                        switch (s.kind) {\n                            case \"message\":\n                                return s.T.equals(va.value, vb.value);\n                            case \"enum\":\n                                return scalarEquals(ScalarType.INT32, va.value, vb.value);\n                            case \"scalar\":\n                                return scalarEquals(s.T, va.value, vb.value);\n                        }\n                        throw new Error(`oneof cannot contain ${s.kind}`);\n                    case \"map\":\n                        const keys = Object.keys(va).concat(Object.keys(vb));\n                        switch (m.V.kind) {\n                            case \"message\":\n                                const messageType = m.V.T;\n                                return keys.every((k) => messageType.equals(va[k], vb[k]));\n                            case \"enum\":\n                                return keys.every((k) => scalarEquals(ScalarType.INT32, va[k], vb[k]));\n                            case \"scalar\":\n                                const scalarType = m.V.T;\n                                return keys.every((k) => scalarEquals(scalarType, va[k], vb[k]));\n                        }\n                        break;\n                }\n            });\n        },\n        clone(message) {\n            const type = message.getType(), target = new type(), any = target;\n            for (const member of type.fields.byMember()) {\n                const source = message[member.localName];\n                let copy;\n                if (member.repeated) {\n                    copy = source.map(cloneSingularField);\n                }\n                else if (member.kind == \"map\") {\n                    copy = any[member.localName];\n                    for (const [key, v] of Object.entries(source)) {\n                        copy[key] = cloneSingularField(v);\n                    }\n                }\n                else if (member.kind == \"oneof\") {\n                    const f = member.findField(source.case);\n                    copy = f\n                        ? { case: source.case, value: cloneSingularField(source.value) }\n                        : { case: undefined };\n                }\n                else {\n                    copy = cloneSingularField(source);\n                }\n                any[member.localName] = copy;\n            }\n            return target;\n        },\n    };\n}\n// clone a single field value - i.e. the element type of repeated fields, the value type of maps\nfunction cloneSingularField(value) {\n    if (value === undefined) {\n        return value;\n    }\n    if (value instanceof Message) {\n        return value.clone();\n    }\n    if (value instanceof Uint8Array) {\n        const c = new Uint8Array(value.byteLength);\n        c.set(value);\n        return c;\n    }\n    return value;\n}\n// converts any ArrayLike<number> to Uint8Array if necessary.\nfunction toU8Arr(input) {\n    return input instanceof Uint8Array ? input : new Uint8Array(input);\n}\n", "// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nexport class InternalFieldList {\n    constructor(fields, normalizer) {\n        this._fields = fields;\n        this._normalizer = normalizer;\n    }\n    findJsonName(jsonName) {\n        if (!this.jsonNames) {\n            const t = {};\n            for (const f of this.list()) {\n                t[f.jsonName] = t[f.name] = f;\n            }\n            this.jsonNames = t;\n        }\n        return this.jsonNames[jsonName];\n    }\n    find(fieldNo) {\n        if (!this.numbers) {\n            const t = {};\n            for (const f of this.list()) {\n                t[f.no] = f;\n            }\n            this.numbers = t;\n        }\n        return this.numbers[fieldNo];\n    }\n    list() {\n        if (!this.all) {\n            this.all = this._normalizer(this._fields);\n        }\n        return this.all;\n    }\n    byNumber() {\n        if (!this.numbersAsc) {\n            this.numbersAsc = this.list()\n                .concat()\n                .sort((a, b) => a.no - b.no);\n        }\n        return this.numbersAsc;\n    }\n    byMember() {\n        if (!this.members) {\n            this.members = [];\n            const a = this.members;\n            let o;\n            for (const f of this.list()) {\n                if (f.oneof) {\n                    if (f.oneof !== o) {\n                        o = f.oneof;\n                        a.push(o);\n                    }\n                }\n                else {\n                    a.push(f);\n                }\n            }\n        }\n        return this.members;\n    }\n}\n", "// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Returns the name of a protobuf element in generated code.\n *\n * Field names - including oneofs - are converted to lowerCamelCase. For\n * messages, enumerations and services, the package name is stripped from\n * the type name. For nested messages and enumerations, the names are joined\n * with an underscore. For methods, the first character is made lowercase.\n */\nexport function localName(desc) {\n    switch (desc.kind) {\n        case \"field\":\n            return localFieldName(desc.name, desc.oneof !== undefined);\n        case \"oneof\":\n            return localOneofName(desc.name);\n        case \"enum\":\n        case \"message\":\n        case \"service\": {\n            const pkg = desc.file.proto.package;\n            const offset = pkg === undefined ? 0 : pkg.length + 1;\n            const name = desc.typeName.substring(offset).replace(/\\./g, \"_\");\n            // For services, we only care about safe identifiers, not safe object properties,\n            // but we have shipped v1 with a bug that respected object properties, and we\n            // do not want to introduce a breaking change, so we continue to escape for\n            // safe object properties.\n            // See https://github.com/bufbuild/protobuf-es/pull/391\n            return safeObjectProperty(safeIdentifier(name));\n        }\n        case \"enum_value\": {\n            const sharedPrefix = desc.parent.sharedPrefix;\n            if (sharedPrefix === undefined) {\n                return desc.name;\n            }\n            const name = desc.name.substring(sharedPrefix.length);\n            return safeObjectProperty(name);\n        }\n        case \"rpc\": {\n            let name = desc.name;\n            if (name.length == 0) {\n                return name;\n            }\n            name = name[0].toLowerCase() + name.substring(1);\n            return safeObjectProperty(name);\n        }\n    }\n}\n/**\n * Returns the name of a field in generated code.\n */\nexport function localFieldName(protoName, inOneof) {\n    const name = protoCamelCase(protoName);\n    if (inOneof) {\n        // oneof member names are not properties, but values of the `case` property.\n        return name;\n    }\n    return safeObjectProperty(safeMessageProperty(name));\n}\n/**\n * Returns the name of a oneof group in generated code.\n */\nexport function localOneofName(protoName) {\n    return localFieldName(protoName, false);\n}\n/**\n * Returns the JSON name for a protobuf field, exactly like protoc does.\n */\nexport const fieldJsonName = protoCamelCase;\n/**\n * Finds a prefix shared by enum values, for example `MY_ENUM_` for\n * `enum MyEnum {MY_ENUM_A=0; MY_ENUM_B=1;}`.\n */\nexport function findEnumSharedPrefix(enumName, valueNames) {\n    const prefix = camelToSnakeCase(enumName) + \"_\";\n    for (const name of valueNames) {\n        if (!name.toLowerCase().startsWith(prefix)) {\n            return undefined;\n        }\n        const shortName = name.substring(prefix.length);\n        if (shortName.length == 0) {\n            return undefined;\n        }\n        if (/^\\d/.test(shortName)) {\n            // identifiers must not start with numbers\n            return undefined;\n        }\n    }\n    return prefix;\n}\n/**\n * Converts lowerCamelCase or UpperCamelCase into lower_snake_case.\n * This is used to find shared prefixes in an enum.\n */\nfunction camelToSnakeCase(camel) {\n    return (camel.substring(0, 1) + camel.substring(1).replace(/[A-Z]/g, (c) => \"_\" + c)).toLowerCase();\n}\n/**\n * Converts snake_case to protoCamelCase according to the convention\n * used by protoc to convert a field name to a JSON name.\n */\nfunction protoCamelCase(snakeCase) {\n    let capNext = false;\n    const b = [];\n    for (let i = 0; i < snakeCase.length; i++) {\n        let c = snakeCase.charAt(i);\n        switch (c) {\n            case \"_\":\n                capNext = true;\n                break;\n            case \"0\":\n            case \"1\":\n            case \"2\":\n            case \"3\":\n            case \"4\":\n            case \"5\":\n            case \"6\":\n            case \"7\":\n            case \"8\":\n            case \"9\":\n                b.push(c);\n                capNext = false;\n                break;\n            default:\n                if (capNext) {\n                    capNext = false;\n                    c = c.toUpperCase();\n                }\n                b.push(c);\n                break;\n        }\n    }\n    return b.join(\"\");\n}\n/**\n * Names that cannot be used for identifiers, such as class names,\n * but _can_ be used for object properties.\n */\nconst reservedIdentifiers = new Set([\n    // ECMAScript 2015 keywords\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"class\",\n    \"const\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"delete\",\n    \"do\",\n    \"else\",\n    \"export\",\n    \"extends\",\n    \"false\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"import\",\n    \"in\",\n    \"instanceof\",\n    \"new\",\n    \"null\",\n    \"return\",\n    \"super\",\n    \"switch\",\n    \"this\",\n    \"throw\",\n    \"true\",\n    \"try\",\n    \"typeof\",\n    \"var\",\n    \"void\",\n    \"while\",\n    \"with\",\n    \"yield\",\n    // ECMAScript 2015 future reserved keywords\n    \"enum\",\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    // Class name cannot be 'Object' when targeting ES5 with module CommonJS\n    \"Object\",\n    // TypeScript keywords that cannot be used for types (as opposed to variables)\n    \"bigint\",\n    \"number\",\n    \"boolean\",\n    \"string\",\n    \"object\",\n    // Identifiers reserved for the runtime, so we can generate legible code\n    \"globalThis\",\n    \"Uint8Array\",\n    \"Partial\",\n]);\n/**\n * Names that cannot be used for object properties because they are reserved\n * by built-in JavaScript properties.\n */\nconst reservedObjectProperties = new Set([\n    // names reserved by JavaScript\n    \"constructor\",\n    \"toString\",\n    \"toJSON\",\n    \"valueOf\",\n]);\n/**\n * Names that cannot be used for object properties because they are reserved\n * by the runtime.\n */\nconst reservedMessageProperties = new Set([\n    // names reserved by the runtime\n    \"getType\",\n    \"clone\",\n    \"equals\",\n    \"fromBinary\",\n    \"fromJson\",\n    \"fromJsonString\",\n    \"toBinary\",\n    \"toJson\",\n    \"toJsonString\",\n    // names reserved by the runtime for the future\n    \"toObject\",\n]);\nconst fallback = (name) => `${name}$`;\n/**\n * Will wrap names that are Object prototype properties or names reserved\n * for `Message`s.\n */\nconst safeMessageProperty = (name) => {\n    if (reservedMessageProperties.has(name)) {\n        return fallback(name);\n    }\n    return name;\n};\n/**\n * Names that cannot be used for object properties because they are reserved\n * by built-in JavaScript properties.\n */\nexport const safeObjectProperty = (name) => {\n    if (reservedObjectProperties.has(name)) {\n        return fallback(name);\n    }\n    return name;\n};\n/**\n * Names that can be used for identifiers or class properties\n */\nexport const safeIdentifier = (name) => {\n    if (reservedIdentifiers.has(name)) {\n        return fallback(name);\n    }\n    return name;\n};\n", "// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { localOneofName } from \"./names.js\";\nimport { assert } from \"./assert.js\";\nexport class InternalOneofInfo {\n    constructor(name) {\n        this.kind = \"oneof\";\n        this.repeated = false;\n        this.packed = false;\n        this.opt = false;\n        this.default = undefined;\n        this.fields = [];\n        this.name = name;\n        this.localName = localOneofName(name);\n    }\n    addField(field) {\n        assert(field.oneof === this, `field ${field.name} not one of ${this.name}`);\n        this.fields.push(field);\n    }\n    findField(localName) {\n        if (!this._lookup) {\n            this._lookup = Object.create(null);\n            for (let i = 0; i < this.fields.length; i++) {\n                this._lookup[this.fields[i].localName] = this.fields[i];\n            }\n        }\n        return this._lookup[localName];\n    }\n}\n", "// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { makeProtoRuntime } from \"./private/proto-runtime.js\";\nimport { makeBinaryFormatProto3 } from \"./private/binary-format-proto3.js\";\nimport { makeJsonFormatProto3 } from \"./private/json-format-proto3.js\";\nimport { makeUtilCommon } from \"./private/util-common.js\";\nimport { InternalFieldList } from \"./private/field-list.js\";\nimport { scalarDefaultValue } from \"./private/scalars.js\";\nimport { LongType, ScalarType } from \"./field.js\";\nimport { InternalOneofInfo } from \"./private/field.js\";\nimport { localFieldName, fieldJsonName } from \"./private/names.js\";\n/**\n * Provides functionality for messages defined with the proto3 syntax.\n */\nexport const proto3 = makeProtoRuntime(\"proto3\", makeJsonFormatProto3(), makeBinaryFormatProto3(), Object.assign(Object.assign({}, makeUtilCommon()), { newFieldList(fields) {\n        return new InternalFieldList(fields, normalizeFieldInfosProto3);\n    },\n    initFields(target) {\n        for (const member of target.getType().fields.byMember()) {\n            if (member.opt) {\n                continue;\n            }\n            const name = member.localName, t = target;\n            if (member.repeated) {\n                t[name] = [];\n                continue;\n            }\n            switch (member.kind) {\n                case \"oneof\":\n                    t[name] = { case: undefined };\n                    break;\n                case \"enum\":\n                    t[name] = 0;\n                    break;\n                case \"map\":\n                    t[name] = {};\n                    break;\n                case \"scalar\":\n                    t[name] = scalarDefaultValue(member.T, member.L); // eslint-disable-line @typescript-eslint/no-unsafe-assignment\n                    break;\n                case \"message\":\n                    // message fields are always optional in proto3\n                    break;\n            }\n        }\n    } }));\n/* eslint-disable @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-argument */\nfunction normalizeFieldInfosProto3(fieldInfos) {\n    var _a, _b, _c, _d;\n    const r = [];\n    let o;\n    for (const field of typeof fieldInfos == \"function\"\n        ? fieldInfos()\n        : fieldInfos) {\n        const f = field;\n        f.localName = localFieldName(field.name, field.oneof !== undefined);\n        f.jsonName = (_a = field.jsonName) !== null && _a !== void 0 ? _a : fieldJsonName(field.name);\n        f.repeated = (_b = field.repeated) !== null && _b !== void 0 ? _b : false;\n        if (field.kind == \"scalar\") {\n            f.L = (_c = field.L) !== null && _c !== void 0 ? _c : LongType.BIGINT;\n        }\n        // From the proto3 language guide:\n        // > In proto3, repeated fields of scalar numeric types are packed by default.\n        // This information is incomplete - according to the conformance tests, BOOL\n        // and ENUM are packed by default as well. This means only STRING and BYTES\n        // are not packed by default, which makes sense because they are length-delimited.\n        f.packed =\n            (_d = field.packed) !== null && _d !== void 0 ? _d : (field.kind == \"enum\" ||\n                (field.kind == \"scalar\" &&\n                    field.T != ScalarType.BYTES &&\n                    field.T != ScalarType.STRING));\n        // We do not surface options at this time\n        // f.options = field.options ?? emptyReadonlyObject;\n        if (field.oneof !== undefined) {\n            const ooname = typeof field.oneof == \"string\" ? field.oneof : field.oneof.name;\n            if (!o || o.name != ooname) {\n                o = new InternalOneofInfo(ooname);\n            }\n            f.oneof = o;\n            o.addField(f);\n        }\n        r.push(f);\n    }\n    return r;\n}\n", "// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Message } from \"../../message.js\";\nimport { protoInt64 } from \"../../proto-int64.js\";\nimport { proto3 } from \"../../proto3.js\";\n/**\n * A Timestamp represents a point in time independent of any time zone or local\n * calendar, encoded as a count of seconds and fractions of seconds at\n * nanosecond resolution. The count is relative to an epoch at UTC midnight on\n * January 1, 1970, in the proleptic Gregorian calendar which extends the\n * Gregorian calendar backwards to year one.\n *\n * All minutes are 60 seconds long. Leap seconds are \"smeared\" so that no leap\n * second table is needed for interpretation, using a [24-hour linear\n * smear](https://developers.google.com/time/smear).\n *\n * The range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By\n * restricting to that range, we ensure that we can convert to and from [RFC\n * 3339](https://www.ietf.org/rfc/rfc3339.txt) date strings.\n *\n * # Examples\n *\n * Example 1: Compute Timestamp from POSIX `time()`.\n *\n *     Timestamp timestamp;\n *     timestamp.set_seconds(time(NULL));\n *     timestamp.set_nanos(0);\n *\n * Example 2: Compute Timestamp from POSIX `gettimeofday()`.\n *\n *     struct timeval tv;\n *     gettimeofday(&tv, NULL);\n *\n *     Timestamp timestamp;\n *     timestamp.set_seconds(tv.tv_sec);\n *     timestamp.set_nanos(tv.tv_usec * 1000);\n *\n * Example 3: Compute Timestamp from Win32 `GetSystemTimeAsFileTime()`.\n *\n *     FILETIME ft;\n *     GetSystemTimeAsFileTime(&ft);\n *     UINT64 ticks = (((UINT64)ft.dwHighDateTime) << 32) | ft.dwLowDateTime;\n *\n *     // A Windows tick is 100 nanoseconds. Windows epoch 1601-01-01T00:00:00Z\n *     // is 11644473600 seconds before Unix epoch 1970-01-01T00:00:00Z.\n *     Timestamp timestamp;\n *     timestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL));\n *     timestamp.set_nanos((INT32) ((ticks % 10000000) * 100));\n *\n * Example 4: Compute Timestamp from Java `System.currentTimeMillis()`.\n *\n *     long millis = System.currentTimeMillis();\n *\n *     Timestamp timestamp = Timestamp.newBuilder().setSeconds(millis / 1000)\n *         .setNanos((int) ((millis % 1000) * 1000000)).build();\n *\n * Example 5: Compute Timestamp from Java `Instant.now()`.\n *\n *     Instant now = Instant.now();\n *\n *     Timestamp timestamp =\n *         Timestamp.newBuilder().setSeconds(now.getEpochSecond())\n *             .setNanos(now.getNano()).build();\n *\n * Example 6: Compute Timestamp from current time in Python.\n *\n *     timestamp = Timestamp()\n *     timestamp.GetCurrentTime()\n *\n * # JSON Mapping\n *\n * In JSON format, the Timestamp type is encoded as a string in the\n * [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format. That is, the\n * format is \"{year}-{month}-{day}T{hour}:{min}:{sec}[.{frac_sec}]Z\"\n * where {year} is always expressed using four digits while {month}, {day},\n * {hour}, {min}, and {sec} are zero-padded to two digits each. The fractional\n * seconds, which can go up to 9 digits (i.e. up to 1 nanosecond resolution),\n * are optional. The \"Z\" suffix indicates the timezone (\"UTC\"); the timezone\n * is required. A proto3 JSON serializer should always use UTC (as indicated by\n * \"Z\") when printing the Timestamp type and a proto3 JSON parser should be\n * able to accept both UTC and other timezones (as indicated by an offset).\n *\n * For example, \"2017-01-15T01:30:15.01Z\" encodes 15.01 seconds past\n * 01:30 UTC on January 15, 2017.\n *\n * In JavaScript, one can convert a Date object to this format using the\n * standard\n * [toISOString()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString)\n * method. In Python, a standard `datetime.datetime` object can be converted\n * to this format using\n * [`strftime`](https://docs.python.org/2/library/time.html#time.strftime) with\n * the time format spec '%Y-%m-%dT%H:%M:%S.%fZ'. Likewise, in Java, one can use\n * the Joda Time's [`ISODateTimeFormat.dateTime()`](\n * http://joda-time.sourceforge.net/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime()\n * ) to obtain a formatter capable of generating timestamps in this format.\n *\n *\n * @generated from message google.protobuf.Timestamp\n */\nexport class Timestamp extends Message {\n    constructor(data) {\n        super();\n        /**\n         * Represents seconds of UTC time since Unix epoch\n         * 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n         * 9999-12-31T23:59:59Z inclusive.\n         *\n         * @generated from field: int64 seconds = 1;\n         */\n        this.seconds = protoInt64.zero;\n        /**\n         * Non-negative fractions of a second at nanosecond resolution. Negative\n         * second values with fractions must still have non-negative nanos values\n         * that count forward in time. Must be from 0 to 999,999,999\n         * inclusive.\n         *\n         * @generated from field: int32 nanos = 2;\n         */\n        this.nanos = 0;\n        proto3.util.initPartial(data, this);\n    }\n    fromJson(json, options) {\n        if (typeof json !== \"string\") {\n            throw new Error(`cannot decode google.protobuf.Timestamp from JSON: ${proto3.json.debug(json)}`);\n        }\n        const matches = json.match(/^([0-9]{4})-([0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2}):([0-9]{2})(?:Z|\\.([0-9]{3,9})Z|([+-][0-9][0-9]:[0-9][0-9]))$/);\n        if (!matches) {\n            throw new Error(`cannot decode google.protobuf.Timestamp from JSON: invalid RFC 3339 string`);\n        }\n        const ms = Date.parse(matches[1] + \"-\" + matches[2] + \"-\" + matches[3] + \"T\" + matches[4] + \":\" + matches[5] + \":\" + matches[6] + (matches[8] ? matches[8] : \"Z\"));\n        if (Number.isNaN(ms)) {\n            throw new Error(`cannot decode google.protobuf.Timestamp from JSON: invalid RFC 3339 string`);\n        }\n        if (ms < Date.parse(\"0001-01-01T00:00:00Z\") || ms > Date.parse(\"9999-12-31T23:59:59Z\")) {\n            throw new Error(`cannot decode message google.protobuf.Timestamp from JSON: must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive`);\n        }\n        this.seconds = protoInt64.parse(ms / 1000);\n        this.nanos = 0;\n        if (matches[7]) {\n            this.nanos = (parseInt(\"1\" + matches[7] + \"0\".repeat(9 - matches[7].length)) - 1000000000);\n        }\n        return this;\n    }\n    toJson(options) {\n        const ms = Number(this.seconds) * 1000;\n        if (ms < Date.parse(\"0001-01-01T00:00:00Z\") || ms > Date.parse(\"9999-12-31T23:59:59Z\")) {\n            throw new Error(`cannot encode google.protobuf.Timestamp to JSON: must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive`);\n        }\n        if (this.nanos < 0) {\n            throw new Error(`cannot encode google.protobuf.Timestamp to JSON: nanos must not be negative`);\n        }\n        let z = \"Z\";\n        if (this.nanos > 0) {\n            const nanosStr = (this.nanos + 1000000000).toString().substring(1);\n            if (nanosStr.substring(3) === \"000000\") {\n                z = \".\" + nanosStr.substring(0, 3) + \"Z\";\n            }\n            else if (nanosStr.substring(6) === \"000\") {\n                z = \".\" + nanosStr.substring(0, 6) + \"Z\";\n            }\n            else {\n                z = \".\" + nanosStr + \"Z\";\n            }\n        }\n        return new Date(ms).toISOString().replace(\".000Z\", z);\n    }\n    toDate() {\n        return new Date(Number(this.seconds) * 1000 + Math.ceil(this.nanos / 1000000));\n    }\n    static now() {\n        return Timestamp.fromDate(new Date());\n    }\n    static fromDate(date) {\n        const ms = date.getTime();\n        return new Timestamp({\n            seconds: protoInt64.parse(Math.floor(ms / 1000)),\n            nanos: (ms % 1000) * 1000000,\n        });\n    }\n    static fromBinary(bytes, options) {\n        return new Timestamp().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Timestamp().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Timestamp().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(Timestamp, a, b);\n    }\n}\nTimestamp.runtime = proto3;\nTimestamp.typeName = \"google.protobuf.Timestamp\";\nTimestamp.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"seconds\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 2, name: \"nanos\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n]);\n", "// Copyright 2023 LiveKit, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// @generated by protoc-gen-es v1.4.2 with parameter \"target=ts\"\n// @generated from file livekit_models.proto (package livekit, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\n\nimport type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from \"@bufbuild/protobuf\";\nimport { Message, proto3, protoInt64, Timestamp } from \"@bufbuild/protobuf\";\n\n/**\n * @generated from enum livekit.AudioCodec\n */\nexport enum AudioCodec {\n  /**\n   * @generated from enum value: DEFAULT_AC = 0;\n   */\n  DEFAULT_AC = 0,\n\n  /**\n   * @generated from enum value: OPUS = 1;\n   */\n  OPUS = 1,\n\n  /**\n   * @generated from enum value: AAC = 2;\n   */\n  AAC = 2,\n}\n// Retrieve enum metadata with: proto3.getEnumType(AudioCodec)\nproto3.util.setEnumType(AudioCodec, \"livekit.AudioCodec\", [\n  { no: 0, name: \"DEFAULT_AC\" },\n  { no: 1, name: \"OPUS\" },\n  { no: 2, name: \"AAC\" },\n]);\n\n/**\n * @generated from enum livekit.VideoCodec\n */\nexport enum VideoCodec {\n  /**\n   * @generated from enum value: DEFAULT_VC = 0;\n   */\n  DEFAULT_VC = 0,\n\n  /**\n   * @generated from enum value: H264_BASELINE = 1;\n   */\n  H264_BASELINE = 1,\n\n  /**\n   * @generated from enum value: H264_MAIN = 2;\n   */\n  H264_MAIN = 2,\n\n  /**\n   * @generated from enum value: H264_HIGH = 3;\n   */\n  H264_HIGH = 3,\n\n  /**\n   * @generated from enum value: VP8 = 4;\n   */\n  VP8 = 4,\n}\n// Retrieve enum metadata with: proto3.getEnumType(VideoCodec)\nproto3.util.setEnumType(VideoCodec, \"livekit.VideoCodec\", [\n  { no: 0, name: \"DEFAULT_VC\" },\n  { no: 1, name: \"H264_BASELINE\" },\n  { no: 2, name: \"H264_MAIN\" },\n  { no: 3, name: \"H264_HIGH\" },\n  { no: 4, name: \"VP8\" },\n]);\n\n/**\n * @generated from enum livekit.ImageCodec\n */\nexport enum ImageCodec {\n  /**\n   * @generated from enum value: IC_DEFAULT = 0;\n   */\n  IC_DEFAULT = 0,\n\n  /**\n   * @generated from enum value: IC_JPEG = 1;\n   */\n  IC_JPEG = 1,\n}\n// Retrieve enum metadata with: proto3.getEnumType(ImageCodec)\nproto3.util.setEnumType(ImageCodec, \"livekit.ImageCodec\", [\n  { no: 0, name: \"IC_DEFAULT\" },\n  { no: 1, name: \"IC_JPEG\" },\n]);\n\n/**\n * @generated from enum livekit.TrackType\n */\nexport enum TrackType {\n  /**\n   * @generated from enum value: AUDIO = 0;\n   */\n  AUDIO = 0,\n\n  /**\n   * @generated from enum value: VIDEO = 1;\n   */\n  VIDEO = 1,\n\n  /**\n   * @generated from enum value: DATA = 2;\n   */\n  DATA = 2,\n}\n// Retrieve enum metadata with: proto3.getEnumType(TrackType)\nproto3.util.setEnumType(TrackType, \"livekit.TrackType\", [\n  { no: 0, name: \"AUDIO\" },\n  { no: 1, name: \"VIDEO\" },\n  { no: 2, name: \"DATA\" },\n]);\n\n/**\n * @generated from enum livekit.TrackSource\n */\nexport enum TrackSource {\n  /**\n   * @generated from enum value: UNKNOWN = 0;\n   */\n  UNKNOWN = 0,\n\n  /**\n   * @generated from enum value: CAMERA = 1;\n   */\n  CAMERA = 1,\n\n  /**\n   * @generated from enum value: MICROPHONE = 2;\n   */\n  MICROPHONE = 2,\n\n  /**\n   * @generated from enum value: SCREEN_SHARE = 3;\n   */\n  SCREEN_SHARE = 3,\n\n  /**\n   * @generated from enum value: SCREEN_SHARE_AUDIO = 4;\n   */\n  SCREEN_SHARE_AUDIO = 4,\n}\n// Retrieve enum metadata with: proto3.getEnumType(TrackSource)\nproto3.util.setEnumType(TrackSource, \"livekit.TrackSource\", [\n  { no: 0, name: \"UNKNOWN\" },\n  { no: 1, name: \"CAMERA\" },\n  { no: 2, name: \"MICROPHONE\" },\n  { no: 3, name: \"SCREEN_SHARE\" },\n  { no: 4, name: \"SCREEN_SHARE_AUDIO\" },\n]);\n\n/**\n * @generated from enum livekit.VideoQuality\n */\nexport enum VideoQuality {\n  /**\n   * @generated from enum value: LOW = 0;\n   */\n  LOW = 0,\n\n  /**\n   * @generated from enum value: MEDIUM = 1;\n   */\n  MEDIUM = 1,\n\n  /**\n   * @generated from enum value: HIGH = 2;\n   */\n  HIGH = 2,\n\n  /**\n   * @generated from enum value: OFF = 3;\n   */\n  OFF = 3,\n}\n// Retrieve enum metadata with: proto3.getEnumType(VideoQuality)\nproto3.util.setEnumType(VideoQuality, \"livekit.VideoQuality\", [\n  { no: 0, name: \"LOW\" },\n  { no: 1, name: \"MEDIUM\" },\n  { no: 2, name: \"HIGH\" },\n  { no: 3, name: \"OFF\" },\n]);\n\n/**\n * @generated from enum livekit.ConnectionQuality\n */\nexport enum ConnectionQuality {\n  /**\n   * @generated from enum value: POOR = 0;\n   */\n  POOR = 0,\n\n  /**\n   * @generated from enum value: GOOD = 1;\n   */\n  GOOD = 1,\n\n  /**\n   * @generated from enum value: EXCELLENT = 2;\n   */\n  EXCELLENT = 2,\n\n  /**\n   * @generated from enum value: LOST = 3;\n   */\n  LOST = 3,\n}\n// Retrieve enum metadata with: proto3.getEnumType(ConnectionQuality)\nproto3.util.setEnumType(ConnectionQuality, \"livekit.ConnectionQuality\", [\n  { no: 0, name: \"POOR\" },\n  { no: 1, name: \"GOOD\" },\n  { no: 2, name: \"EXCELLENT\" },\n  { no: 3, name: \"LOST\" },\n]);\n\n/**\n * @generated from enum livekit.ClientConfigSetting\n */\nexport enum ClientConfigSetting {\n  /**\n   * @generated from enum value: UNSET = 0;\n   */\n  UNSET = 0,\n\n  /**\n   * @generated from enum value: DISABLED = 1;\n   */\n  DISABLED = 1,\n\n  /**\n   * @generated from enum value: ENABLED = 2;\n   */\n  ENABLED = 2,\n}\n// Retrieve enum metadata with: proto3.getEnumType(ClientConfigSetting)\nproto3.util.setEnumType(ClientConfigSetting, \"livekit.ClientConfigSetting\", [\n  { no: 0, name: \"UNSET\" },\n  { no: 1, name: \"DISABLED\" },\n  { no: 2, name: \"ENABLED\" },\n]);\n\n/**\n * @generated from enum livekit.DisconnectReason\n */\nexport enum DisconnectReason {\n  /**\n   * @generated from enum value: UNKNOWN_REASON = 0;\n   */\n  UNKNOWN_REASON = 0,\n\n  /**\n   * @generated from enum value: CLIENT_INITIATED = 1;\n   */\n  CLIENT_INITIATED = 1,\n\n  /**\n   * @generated from enum value: DUPLICATE_IDENTITY = 2;\n   */\n  DUPLICATE_IDENTITY = 2,\n\n  /**\n   * @generated from enum value: SERVER_SHUTDOWN = 3;\n   */\n  SERVER_SHUTDOWN = 3,\n\n  /**\n   * @generated from enum value: PARTICIPANT_REMOVED = 4;\n   */\n  PARTICIPANT_REMOVED = 4,\n\n  /**\n   * @generated from enum value: ROOM_DELETED = 5;\n   */\n  ROOM_DELETED = 5,\n\n  /**\n   * @generated from enum value: STATE_MISMATCH = 6;\n   */\n  STATE_MISMATCH = 6,\n\n  /**\n   * @generated from enum value: JOIN_FAILURE = 7;\n   */\n  JOIN_FAILURE = 7,\n}\n// Retrieve enum metadata with: proto3.getEnumType(DisconnectReason)\nproto3.util.setEnumType(DisconnectReason, \"livekit.DisconnectReason\", [\n  { no: 0, name: \"UNKNOWN_REASON\" },\n  { no: 1, name: \"CLIENT_INITIATED\" },\n  { no: 2, name: \"DUPLICATE_IDENTITY\" },\n  { no: 3, name: \"SERVER_SHUTDOWN\" },\n  { no: 4, name: \"PARTICIPANT_REMOVED\" },\n  { no: 5, name: \"ROOM_DELETED\" },\n  { no: 6, name: \"STATE_MISMATCH\" },\n  { no: 7, name: \"JOIN_FAILURE\" },\n]);\n\n/**\n * @generated from enum livekit.ReconnectReason\n */\nexport enum ReconnectReason {\n  /**\n   * @generated from enum value: RR_UNKNOWN = 0;\n   */\n  RR_UNKNOWN = 0,\n\n  /**\n   * @generated from enum value: RR_SIGNAL_DISCONNECTED = 1;\n   */\n  RR_SIGNAL_DISCONNECTED = 1,\n\n  /**\n   * @generated from enum value: RR_PUBLISHER_FAILED = 2;\n   */\n  RR_PUBLISHER_FAILED = 2,\n\n  /**\n   * @generated from enum value: RR_SUBSCRIBER_FAILED = 3;\n   */\n  RR_SUBSCRIBER_FAILED = 3,\n\n  /**\n   * @generated from enum value: RR_SWITCH_CANDIDATE = 4;\n   */\n  RR_SWITCH_CANDIDATE = 4,\n}\n// Retrieve enum metadata with: proto3.getEnumType(ReconnectReason)\nproto3.util.setEnumType(ReconnectReason, \"livekit.ReconnectReason\", [\n  { no: 0, name: \"RR_UNKNOWN\" },\n  { no: 1, name: \"RR_SIGNAL_DISCONNECTED\" },\n  { no: 2, name: \"RR_PUBLISHER_FAILED\" },\n  { no: 3, name: \"RR_SUBSCRIBER_FAILED\" },\n  { no: 4, name: \"RR_SWITCH_CANDIDATE\" },\n]);\n\n/**\n * @generated from enum livekit.SubscriptionError\n */\nexport enum SubscriptionError {\n  /**\n   * @generated from enum value: SE_UNKNOWN = 0;\n   */\n  SE_UNKNOWN = 0,\n\n  /**\n   * @generated from enum value: SE_CODEC_UNSUPPORTED = 1;\n   */\n  SE_CODEC_UNSUPPORTED = 1,\n\n  /**\n   * @generated from enum value: SE_TRACK_NOTFOUND = 2;\n   */\n  SE_TRACK_NOTFOUND = 2,\n}\n// Retrieve enum metadata with: proto3.getEnumType(SubscriptionError)\nproto3.util.setEnumType(SubscriptionError, \"livekit.SubscriptionError\", [\n  { no: 0, name: \"SE_UNKNOWN\" },\n  { no: 1, name: \"SE_CODEC_UNSUPPORTED\" },\n  { no: 2, name: \"SE_TRACK_NOTFOUND\" },\n]);\n\n/**\n * @generated from message livekit.Room\n */\nexport class Room extends Message<Room> {\n  /**\n   * @generated from field: string sid = 1;\n   */\n  sid = \"\";\n\n  /**\n   * @generated from field: string name = 2;\n   */\n  name = \"\";\n\n  /**\n   * @generated from field: uint32 empty_timeout = 3;\n   */\n  emptyTimeout = 0;\n\n  /**\n   * @generated from field: uint32 max_participants = 4;\n   */\n  maxParticipants = 0;\n\n  /**\n   * @generated from field: int64 creation_time = 5;\n   */\n  creationTime = protoInt64.zero;\n\n  /**\n   * @generated from field: string turn_password = 6;\n   */\n  turnPassword = \"\";\n\n  /**\n   * @generated from field: repeated livekit.Codec enabled_codecs = 7;\n   */\n  enabledCodecs: Codec[] = [];\n\n  /**\n   * @generated from field: string metadata = 8;\n   */\n  metadata = \"\";\n\n  /**\n   * @generated from field: uint32 num_participants = 9;\n   */\n  numParticipants = 0;\n\n  /**\n   * @generated from field: uint32 num_publishers = 11;\n   */\n  numPublishers = 0;\n\n  /**\n   * @generated from field: bool active_recording = 10;\n   */\n  activeRecording = false;\n\n  constructor(data?: PartialMessage<Room>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.Room\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"empty_timeout\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 4, name: \"max_participants\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 5, name: \"creation_time\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 6, name: \"turn_password\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 7, name: \"enabled_codecs\", kind: \"message\", T: Codec, repeated: true },\n    { no: 8, name: \"metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 9, name: \"num_participants\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 11, name: \"num_publishers\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 10, name: \"active_recording\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Room {\n    return new Room().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Room {\n    return new Room().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Room {\n    return new Room().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: Room | PlainMessage<Room> | undefined, b: Room | PlainMessage<Room> | undefined): boolean {\n    return proto3.util.equals(Room, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.Codec\n */\nexport class Codec extends Message<Codec> {\n  /**\n   * @generated from field: string mime = 1;\n   */\n  mime = \"\";\n\n  /**\n   * @generated from field: string fmtp_line = 2;\n   */\n  fmtpLine = \"\";\n\n  constructor(data?: PartialMessage<Codec>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.Codec\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"mime\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"fmtp_line\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Codec {\n    return new Codec().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Codec {\n    return new Codec().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Codec {\n    return new Codec().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: Codec | PlainMessage<Codec> | undefined, b: Codec | PlainMessage<Codec> | undefined): boolean {\n    return proto3.util.equals(Codec, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.PlayoutDelay\n */\nexport class PlayoutDelay extends Message<PlayoutDelay> {\n  /**\n   * @generated from field: bool enabled = 1;\n   */\n  enabled = false;\n\n  /**\n   * @generated from field: uint32 min = 2;\n   */\n  min = 0;\n\n  /**\n   * @generated from field: uint32 max = 3;\n   */\n  max = 0;\n\n  constructor(data?: PartialMessage<PlayoutDelay>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.PlayoutDelay\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"enabled\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 2, name: \"min\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 3, name: \"max\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PlayoutDelay {\n    return new PlayoutDelay().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PlayoutDelay {\n    return new PlayoutDelay().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PlayoutDelay {\n    return new PlayoutDelay().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: PlayoutDelay | PlainMessage<PlayoutDelay> | undefined, b: PlayoutDelay | PlainMessage<PlayoutDelay> | undefined): boolean {\n    return proto3.util.equals(PlayoutDelay, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.ParticipantPermission\n */\nexport class ParticipantPermission extends Message<ParticipantPermission> {\n  /**\n   * allow participant to subscribe to other tracks in the room\n   *\n   * @generated from field: bool can_subscribe = 1;\n   */\n  canSubscribe = false;\n\n  /**\n   * allow participant to publish new tracks to room\n   *\n   * @generated from field: bool can_publish = 2;\n   */\n  canPublish = false;\n\n  /**\n   * allow participant to publish data\n   *\n   * @generated from field: bool can_publish_data = 3;\n   */\n  canPublishData = false;\n\n  /**\n   * sources that are allowed to be published\n   *\n   * @generated from field: repeated livekit.TrackSource can_publish_sources = 9;\n   */\n  canPublishSources: TrackSource[] = [];\n\n  /**\n   * indicates that it's hidden to others\n   *\n   * @generated from field: bool hidden = 7;\n   */\n  hidden = false;\n\n  /**\n   * indicates it's a recorder instance\n   *\n   * @generated from field: bool recorder = 8;\n   */\n  recorder = false;\n\n  /**\n   * indicates that participant can update own metadata\n   *\n   * @generated from field: bool can_update_metadata = 10;\n   */\n  canUpdateMetadata = false;\n\n  /**\n   * indicates that participant is an agent\n   *\n   * @generated from field: bool agent = 11;\n   */\n  agent = false;\n\n  constructor(data?: PartialMessage<ParticipantPermission>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.ParticipantPermission\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"can_subscribe\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 2, name: \"can_publish\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 3, name: \"can_publish_data\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 9, name: \"can_publish_sources\", kind: \"enum\", T: proto3.getEnumType(TrackSource), repeated: true },\n    { no: 7, name: \"hidden\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 8, name: \"recorder\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 10, name: \"can_update_metadata\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 11, name: \"agent\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ParticipantPermission {\n    return new ParticipantPermission().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ParticipantPermission {\n    return new ParticipantPermission().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ParticipantPermission {\n    return new ParticipantPermission().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ParticipantPermission | PlainMessage<ParticipantPermission> | undefined, b: ParticipantPermission | PlainMessage<ParticipantPermission> | undefined): boolean {\n    return proto3.util.equals(ParticipantPermission, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.ParticipantInfo\n */\nexport class ParticipantInfo extends Message<ParticipantInfo> {\n  /**\n   * @generated from field: string sid = 1;\n   */\n  sid = \"\";\n\n  /**\n   * @generated from field: string identity = 2;\n   */\n  identity = \"\";\n\n  /**\n   * @generated from field: livekit.ParticipantInfo.State state = 3;\n   */\n  state = ParticipantInfo_State.JOINING;\n\n  /**\n   * @generated from field: repeated livekit.TrackInfo tracks = 4;\n   */\n  tracks: TrackInfo[] = [];\n\n  /**\n   * @generated from field: string metadata = 5;\n   */\n  metadata = \"\";\n\n  /**\n   * timestamp when participant joined room, in seconds\n   *\n   * @generated from field: int64 joined_at = 6;\n   */\n  joinedAt = protoInt64.zero;\n\n  /**\n   * @generated from field: string name = 9;\n   */\n  name = \"\";\n\n  /**\n   * @generated from field: uint32 version = 10;\n   */\n  version = 0;\n\n  /**\n   * @generated from field: livekit.ParticipantPermission permission = 11;\n   */\n  permission?: ParticipantPermission;\n\n  /**\n   * @generated from field: string region = 12;\n   */\n  region = \"\";\n\n  /**\n   * indicates the participant has an active publisher connection\n   * and can publish to the server\n   *\n   * @generated from field: bool is_publisher = 13;\n   */\n  isPublisher = false;\n\n  constructor(data?: PartialMessage<ParticipantInfo>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.ParticipantInfo\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"identity\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"state\", kind: \"enum\", T: proto3.getEnumType(ParticipantInfo_State) },\n    { no: 4, name: \"tracks\", kind: \"message\", T: TrackInfo, repeated: true },\n    { no: 5, name: \"metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 6, name: \"joined_at\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 9, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 10, name: \"version\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 11, name: \"permission\", kind: \"message\", T: ParticipantPermission },\n    { no: 12, name: \"region\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 13, name: \"is_publisher\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ParticipantInfo {\n    return new ParticipantInfo().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ParticipantInfo {\n    return new ParticipantInfo().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ParticipantInfo {\n    return new ParticipantInfo().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ParticipantInfo | PlainMessage<ParticipantInfo> | undefined, b: ParticipantInfo | PlainMessage<ParticipantInfo> | undefined): boolean {\n    return proto3.util.equals(ParticipantInfo, a, b);\n  }\n}\n\n/**\n * @generated from enum livekit.ParticipantInfo.State\n */\nexport enum ParticipantInfo_State {\n  /**\n   * websocket' connected, but not offered yet\n   *\n   * @generated from enum value: JOINING = 0;\n   */\n  JOINING = 0,\n\n  /**\n   * server received client offer\n   *\n   * @generated from enum value: JOINED = 1;\n   */\n  JOINED = 1,\n\n  /**\n   * ICE connectivity established\n   *\n   * @generated from enum value: ACTIVE = 2;\n   */\n  ACTIVE = 2,\n\n  /**\n   * WS disconnected\n   *\n   * @generated from enum value: DISCONNECTED = 3;\n   */\n  DISCONNECTED = 3,\n}\n// Retrieve enum metadata with: proto3.getEnumType(ParticipantInfo_State)\nproto3.util.setEnumType(ParticipantInfo_State, \"livekit.ParticipantInfo.State\", [\n  { no: 0, name: \"JOINING\" },\n  { no: 1, name: \"JOINED\" },\n  { no: 2, name: \"ACTIVE\" },\n  { no: 3, name: \"DISCONNECTED\" },\n]);\n\n/**\n * @generated from message livekit.Encryption\n */\nexport class Encryption extends Message<Encryption> {\n  constructor(data?: PartialMessage<Encryption>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.Encryption\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Encryption {\n    return new Encryption().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Encryption {\n    return new Encryption().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Encryption {\n    return new Encryption().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: Encryption | PlainMessage<Encryption> | undefined, b: Encryption | PlainMessage<Encryption> | undefined): boolean {\n    return proto3.util.equals(Encryption, a, b);\n  }\n}\n\n/**\n * @generated from enum livekit.Encryption.Type\n */\nexport enum Encryption_Type {\n  /**\n   * @generated from enum value: NONE = 0;\n   */\n  NONE = 0,\n\n  /**\n   * @generated from enum value: GCM = 1;\n   */\n  GCM = 1,\n\n  /**\n   * @generated from enum value: CUSTOM = 2;\n   */\n  CUSTOM = 2,\n}\n// Retrieve enum metadata with: proto3.getEnumType(Encryption_Type)\nproto3.util.setEnumType(Encryption_Type, \"livekit.Encryption.Type\", [\n  { no: 0, name: \"NONE\" },\n  { no: 1, name: \"GCM\" },\n  { no: 2, name: \"CUSTOM\" },\n]);\n\n/**\n * @generated from message livekit.SimulcastCodecInfo\n */\nexport class SimulcastCodecInfo extends Message<SimulcastCodecInfo> {\n  /**\n   * @generated from field: string mime_type = 1;\n   */\n  mimeType = \"\";\n\n  /**\n   * @generated from field: string mid = 2;\n   */\n  mid = \"\";\n\n  /**\n   * @generated from field: string cid = 3;\n   */\n  cid = \"\";\n\n  /**\n   * @generated from field: repeated livekit.VideoLayer layers = 4;\n   */\n  layers: VideoLayer[] = [];\n\n  constructor(data?: PartialMessage<SimulcastCodecInfo>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.SimulcastCodecInfo\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"mime_type\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"mid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"cid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"layers\", kind: \"message\", T: VideoLayer, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SimulcastCodecInfo {\n    return new SimulcastCodecInfo().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SimulcastCodecInfo {\n    return new SimulcastCodecInfo().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SimulcastCodecInfo {\n    return new SimulcastCodecInfo().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: SimulcastCodecInfo | PlainMessage<SimulcastCodecInfo> | undefined, b: SimulcastCodecInfo | PlainMessage<SimulcastCodecInfo> | undefined): boolean {\n    return proto3.util.equals(SimulcastCodecInfo, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.TrackInfo\n */\nexport class TrackInfo extends Message<TrackInfo> {\n  /**\n   * @generated from field: string sid = 1;\n   */\n  sid = \"\";\n\n  /**\n   * @generated from field: livekit.TrackType type = 2;\n   */\n  type = TrackType.AUDIO;\n\n  /**\n   * @generated from field: string name = 3;\n   */\n  name = \"\";\n\n  /**\n   * @generated from field: bool muted = 4;\n   */\n  muted = false;\n\n  /**\n   * original width of video (unset for audio)\n   * clients may receive a lower resolution version with simulcast\n   *\n   * @generated from field: uint32 width = 5;\n   */\n  width = 0;\n\n  /**\n   * original height of video (unset for audio)\n   *\n   * @generated from field: uint32 height = 6;\n   */\n  height = 0;\n\n  /**\n   * true if track is simulcasted\n   *\n   * @generated from field: bool simulcast = 7;\n   */\n  simulcast = false;\n\n  /**\n   * true if DTX (Discontinuous Transmission) is disabled for audio\n   *\n   * @generated from field: bool disable_dtx = 8;\n   */\n  disableDtx = false;\n\n  /**\n   * source of media\n   *\n   * @generated from field: livekit.TrackSource source = 9;\n   */\n  source = TrackSource.UNKNOWN;\n\n  /**\n   * @generated from field: repeated livekit.VideoLayer layers = 10;\n   */\n  layers: VideoLayer[] = [];\n\n  /**\n   * mime type of codec\n   *\n   * @generated from field: string mime_type = 11;\n   */\n  mimeType = \"\";\n\n  /**\n   * @generated from field: string mid = 12;\n   */\n  mid = \"\";\n\n  /**\n   * @generated from field: repeated livekit.SimulcastCodecInfo codecs = 13;\n   */\n  codecs: SimulcastCodecInfo[] = [];\n\n  /**\n   * @generated from field: bool stereo = 14;\n   */\n  stereo = false;\n\n  /**\n   * true if RED (Redundant Encoding) is disabled for audio\n   *\n   * @generated from field: bool disable_red = 15;\n   */\n  disableRed = false;\n\n  /**\n   * @generated from field: livekit.Encryption.Type encryption = 16;\n   */\n  encryption = Encryption_Type.NONE;\n\n  /**\n   * @generated from field: string stream = 17;\n   */\n  stream = \"\";\n\n  constructor(data?: PartialMessage<TrackInfo>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.TrackInfo\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"type\", kind: \"enum\", T: proto3.getEnumType(TrackType) },\n    { no: 3, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"muted\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 5, name: \"width\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 6, name: \"height\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 7, name: \"simulcast\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 8, name: \"disable_dtx\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 9, name: \"source\", kind: \"enum\", T: proto3.getEnumType(TrackSource) },\n    { no: 10, name: \"layers\", kind: \"message\", T: VideoLayer, repeated: true },\n    { no: 11, name: \"mime_type\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 12, name: \"mid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 13, name: \"codecs\", kind: \"message\", T: SimulcastCodecInfo, repeated: true },\n    { no: 14, name: \"stereo\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 15, name: \"disable_red\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 16, name: \"encryption\", kind: \"enum\", T: proto3.getEnumType(Encryption_Type) },\n    { no: 17, name: \"stream\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TrackInfo {\n    return new TrackInfo().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TrackInfo {\n    return new TrackInfo().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TrackInfo {\n    return new TrackInfo().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: TrackInfo | PlainMessage<TrackInfo> | undefined, b: TrackInfo | PlainMessage<TrackInfo> | undefined): boolean {\n    return proto3.util.equals(TrackInfo, a, b);\n  }\n}\n\n/**\n * provide information about available spatial layers\n *\n * @generated from message livekit.VideoLayer\n */\nexport class VideoLayer extends Message<VideoLayer> {\n  /**\n   * for tracks with a single layer, this should be HIGH\n   *\n   * @generated from field: livekit.VideoQuality quality = 1;\n   */\n  quality = VideoQuality.LOW;\n\n  /**\n   * @generated from field: uint32 width = 2;\n   */\n  width = 0;\n\n  /**\n   * @generated from field: uint32 height = 3;\n   */\n  height = 0;\n\n  /**\n   * target bitrate in bit per second (bps), server will measure actual\n   *\n   * @generated from field: uint32 bitrate = 4;\n   */\n  bitrate = 0;\n\n  /**\n   * @generated from field: uint32 ssrc = 5;\n   */\n  ssrc = 0;\n\n  constructor(data?: PartialMessage<VideoLayer>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.VideoLayer\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"quality\", kind: \"enum\", T: proto3.getEnumType(VideoQuality) },\n    { no: 2, name: \"width\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 3, name: \"height\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 4, name: \"bitrate\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 5, name: \"ssrc\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VideoLayer {\n    return new VideoLayer().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VideoLayer {\n    return new VideoLayer().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VideoLayer {\n    return new VideoLayer().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: VideoLayer | PlainMessage<VideoLayer> | undefined, b: VideoLayer | PlainMessage<VideoLayer> | undefined): boolean {\n    return proto3.util.equals(VideoLayer, a, b);\n  }\n}\n\n/**\n * new DataPacket API\n *\n * @generated from message livekit.DataPacket\n */\nexport class DataPacket extends Message<DataPacket> {\n  /**\n   * @generated from field: livekit.DataPacket.Kind kind = 1;\n   */\n  kind = DataPacket_Kind.RELIABLE;\n\n  /**\n   * @generated from oneof livekit.DataPacket.value\n   */\n  value: {\n    /**\n     * @generated from field: livekit.UserPacket user = 2;\n     */\n    value: UserPacket;\n    case: \"user\";\n  } | {\n    /**\n     * @generated from field: livekit.ActiveSpeakerUpdate speaker = 3;\n     */\n    value: ActiveSpeakerUpdate;\n    case: \"speaker\";\n  } | { case: undefined; value?: undefined } = { case: undefined };\n\n  constructor(data?: PartialMessage<DataPacket>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.DataPacket\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"kind\", kind: \"enum\", T: proto3.getEnumType(DataPacket_Kind) },\n    { no: 2, name: \"user\", kind: \"message\", T: UserPacket, oneof: \"value\" },\n    { no: 3, name: \"speaker\", kind: \"message\", T: ActiveSpeakerUpdate, oneof: \"value\" },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataPacket {\n    return new DataPacket().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataPacket {\n    return new DataPacket().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataPacket {\n    return new DataPacket().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: DataPacket | PlainMessage<DataPacket> | undefined, b: DataPacket | PlainMessage<DataPacket> | undefined): boolean {\n    return proto3.util.equals(DataPacket, a, b);\n  }\n}\n\n/**\n * @generated from enum livekit.DataPacket.Kind\n */\nexport enum DataPacket_Kind {\n  /**\n   * @generated from enum value: RELIABLE = 0;\n   */\n  RELIABLE = 0,\n\n  /**\n   * @generated from enum value: LOSSY = 1;\n   */\n  LOSSY = 1,\n}\n// Retrieve enum metadata with: proto3.getEnumType(DataPacket_Kind)\nproto3.util.setEnumType(DataPacket_Kind, \"livekit.DataPacket.Kind\", [\n  { no: 0, name: \"RELIABLE\" },\n  { no: 1, name: \"LOSSY\" },\n]);\n\n/**\n * @generated from message livekit.ActiveSpeakerUpdate\n */\nexport class ActiveSpeakerUpdate extends Message<ActiveSpeakerUpdate> {\n  /**\n   * @generated from field: repeated livekit.SpeakerInfo speakers = 1;\n   */\n  speakers: SpeakerInfo[] = [];\n\n  constructor(data?: PartialMessage<ActiveSpeakerUpdate>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.ActiveSpeakerUpdate\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"speakers\", kind: \"message\", T: SpeakerInfo, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ActiveSpeakerUpdate {\n    return new ActiveSpeakerUpdate().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ActiveSpeakerUpdate {\n    return new ActiveSpeakerUpdate().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ActiveSpeakerUpdate {\n    return new ActiveSpeakerUpdate().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ActiveSpeakerUpdate | PlainMessage<ActiveSpeakerUpdate> | undefined, b: ActiveSpeakerUpdate | PlainMessage<ActiveSpeakerUpdate> | undefined): boolean {\n    return proto3.util.equals(ActiveSpeakerUpdate, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.SpeakerInfo\n */\nexport class SpeakerInfo extends Message<SpeakerInfo> {\n  /**\n   * @generated from field: string sid = 1;\n   */\n  sid = \"\";\n\n  /**\n   * audio level, 0-1.0, 1 is loudest\n   *\n   * @generated from field: float level = 2;\n   */\n  level = 0;\n\n  /**\n   * true if speaker is currently active\n   *\n   * @generated from field: bool active = 3;\n   */\n  active = false;\n\n  constructor(data?: PartialMessage<SpeakerInfo>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.SpeakerInfo\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"level\", kind: \"scalar\", T: 2 /* ScalarType.FLOAT */ },\n    { no: 3, name: \"active\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SpeakerInfo {\n    return new SpeakerInfo().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SpeakerInfo {\n    return new SpeakerInfo().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SpeakerInfo {\n    return new SpeakerInfo().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: SpeakerInfo | PlainMessage<SpeakerInfo> | undefined, b: SpeakerInfo | PlainMessage<SpeakerInfo> | undefined): boolean {\n    return proto3.util.equals(SpeakerInfo, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.UserPacket\n */\nexport class UserPacket extends Message<UserPacket> {\n  /**\n   * participant ID of user that sent the message\n   *\n   * @generated from field: string participant_sid = 1;\n   */\n  participantSid = \"\";\n\n  /**\n   * @generated from field: string participant_identity = 5;\n   */\n  participantIdentity = \"\";\n\n  /**\n   * user defined payload\n   *\n   * @generated from field: bytes payload = 2;\n   */\n  payload = new Uint8Array(0);\n\n  /**\n   * the ID of the participants who will receive the message (sent to all by default)\n   *\n   * @generated from field: repeated string destination_sids = 3;\n   */\n  destinationSids: string[] = [];\n\n  /**\n   * identities of participants who will receive the message (sent to all by default)\n   *\n   * @generated from field: repeated string destination_identities = 6;\n   */\n  destinationIdentities: string[] = [];\n\n  /**\n   * topic under which the message was published\n   *\n   * @generated from field: optional string topic = 4;\n   */\n  topic?: string;\n\n  constructor(data?: PartialMessage<UserPacket>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.UserPacket\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"participant_sid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"participant_identity\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"payload\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 3, name: \"destination_sids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 6, name: \"destination_identities\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 4, name: \"topic\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserPacket {\n    return new UserPacket().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserPacket {\n    return new UserPacket().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserPacket {\n    return new UserPacket().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: UserPacket | PlainMessage<UserPacket> | undefined, b: UserPacket | PlainMessage<UserPacket> | undefined): boolean {\n    return proto3.util.equals(UserPacket, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.ParticipantTracks\n */\nexport class ParticipantTracks extends Message<ParticipantTracks> {\n  /**\n   * participant ID of participant to whom the tracks belong\n   *\n   * @generated from field: string participant_sid = 1;\n   */\n  participantSid = \"\";\n\n  /**\n   * @generated from field: repeated string track_sids = 2;\n   */\n  trackSids: string[] = [];\n\n  constructor(data?: PartialMessage<ParticipantTracks>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.ParticipantTracks\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"participant_sid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"track_sids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ParticipantTracks {\n    return new ParticipantTracks().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ParticipantTracks {\n    return new ParticipantTracks().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ParticipantTracks {\n    return new ParticipantTracks().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ParticipantTracks | PlainMessage<ParticipantTracks> | undefined, b: ParticipantTracks | PlainMessage<ParticipantTracks> | undefined): boolean {\n    return proto3.util.equals(ParticipantTracks, a, b);\n  }\n}\n\n/**\n * details about the server\n *\n * @generated from message livekit.ServerInfo\n */\nexport class ServerInfo extends Message<ServerInfo> {\n  /**\n   * @generated from field: livekit.ServerInfo.Edition edition = 1;\n   */\n  edition = ServerInfo_Edition.Standard;\n\n  /**\n   * @generated from field: string version = 2;\n   */\n  version = \"\";\n\n  /**\n   * @generated from field: int32 protocol = 3;\n   */\n  protocol = 0;\n\n  /**\n   * @generated from field: string region = 4;\n   */\n  region = \"\";\n\n  /**\n   * @generated from field: string node_id = 5;\n   */\n  nodeId = \"\";\n\n  /**\n   * additional debugging information. sent only if server is in development mode\n   *\n   * @generated from field: string debug_info = 6;\n   */\n  debugInfo = \"\";\n\n  constructor(data?: PartialMessage<ServerInfo>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.ServerInfo\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"edition\", kind: \"enum\", T: proto3.getEnumType(ServerInfo_Edition) },\n    { no: 2, name: \"version\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"protocol\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 4, name: \"region\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"node_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 6, name: \"debug_info\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ServerInfo {\n    return new ServerInfo().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ServerInfo {\n    return new ServerInfo().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ServerInfo {\n    return new ServerInfo().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ServerInfo | PlainMessage<ServerInfo> | undefined, b: ServerInfo | PlainMessage<ServerInfo> | undefined): boolean {\n    return proto3.util.equals(ServerInfo, a, b);\n  }\n}\n\n/**\n * @generated from enum livekit.ServerInfo.Edition\n */\nexport enum ServerInfo_Edition {\n  /**\n   * @generated from enum value: Standard = 0;\n   */\n  Standard = 0,\n\n  /**\n   * @generated from enum value: Cloud = 1;\n   */\n  Cloud = 1,\n}\n// Retrieve enum metadata with: proto3.getEnumType(ServerInfo_Edition)\nproto3.util.setEnumType(ServerInfo_Edition, \"livekit.ServerInfo.Edition\", [\n  { no: 0, name: \"Standard\" },\n  { no: 1, name: \"Cloud\" },\n]);\n\n/**\n * details about the client\n *\n * @generated from message livekit.ClientInfo\n */\nexport class ClientInfo extends Message<ClientInfo> {\n  /**\n   * @generated from field: livekit.ClientInfo.SDK sdk = 1;\n   */\n  sdk = ClientInfo_SDK.UNKNOWN;\n\n  /**\n   * @generated from field: string version = 2;\n   */\n  version = \"\";\n\n  /**\n   * @generated from field: int32 protocol = 3;\n   */\n  protocol = 0;\n\n  /**\n   * @generated from field: string os = 4;\n   */\n  os = \"\";\n\n  /**\n   * @generated from field: string os_version = 5;\n   */\n  osVersion = \"\";\n\n  /**\n   * @generated from field: string device_model = 6;\n   */\n  deviceModel = \"\";\n\n  /**\n   * @generated from field: string browser = 7;\n   */\n  browser = \"\";\n\n  /**\n   * @generated from field: string browser_version = 8;\n   */\n  browserVersion = \"\";\n\n  /**\n   * @generated from field: string address = 9;\n   */\n  address = \"\";\n\n  /**\n   * wifi, wired, cellular, vpn, empty if not known\n   *\n   * @generated from field: string network = 10;\n   */\n  network = \"\";\n\n  constructor(data?: PartialMessage<ClientInfo>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.ClientInfo\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sdk\", kind: \"enum\", T: proto3.getEnumType(ClientInfo_SDK) },\n    { no: 2, name: \"version\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"protocol\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 4, name: \"os\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"os_version\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 6, name: \"device_model\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 7, name: \"browser\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 8, name: \"browser_version\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 9, name: \"address\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 10, name: \"network\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClientInfo {\n    return new ClientInfo().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClientInfo {\n    return new ClientInfo().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClientInfo {\n    return new ClientInfo().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ClientInfo | PlainMessage<ClientInfo> | undefined, b: ClientInfo | PlainMessage<ClientInfo> | undefined): boolean {\n    return proto3.util.equals(ClientInfo, a, b);\n  }\n}\n\n/**\n * @generated from enum livekit.ClientInfo.SDK\n */\nexport enum ClientInfo_SDK {\n  /**\n   * @generated from enum value: UNKNOWN = 0;\n   */\n  UNKNOWN = 0,\n\n  /**\n   * @generated from enum value: JS = 1;\n   */\n  JS = 1,\n\n  /**\n   * @generated from enum value: SWIFT = 2;\n   */\n  SWIFT = 2,\n\n  /**\n   * @generated from enum value: ANDROID = 3;\n   */\n  ANDROID = 3,\n\n  /**\n   * @generated from enum value: FLUTTER = 4;\n   */\n  FLUTTER = 4,\n\n  /**\n   * @generated from enum value: GO = 5;\n   */\n  GO = 5,\n\n  /**\n   * @generated from enum value: UNITY = 6;\n   */\n  UNITY = 6,\n\n  /**\n   * @generated from enum value: REACT_NATIVE = 7;\n   */\n  REACT_NATIVE = 7,\n\n  /**\n   * @generated from enum value: RUST = 8;\n   */\n  RUST = 8,\n\n  /**\n   * @generated from enum value: PYTHON = 9;\n   */\n  PYTHON = 9,\n\n  /**\n   * @generated from enum value: CPP = 10;\n   */\n  CPP = 10,\n}\n// Retrieve enum metadata with: proto3.getEnumType(ClientInfo_SDK)\nproto3.util.setEnumType(ClientInfo_SDK, \"livekit.ClientInfo.SDK\", [\n  { no: 0, name: \"UNKNOWN\" },\n  { no: 1, name: \"JS\" },\n  { no: 2, name: \"SWIFT\" },\n  { no: 3, name: \"ANDROID\" },\n  { no: 4, name: \"FLUTTER\" },\n  { no: 5, name: \"GO\" },\n  { no: 6, name: \"UNITY\" },\n  { no: 7, name: \"REACT_NATIVE\" },\n  { no: 8, name: \"RUST\" },\n  { no: 9, name: \"PYTHON\" },\n  { no: 10, name: \"CPP\" },\n]);\n\n/**\n * server provided client configuration\n *\n * @generated from message livekit.ClientConfiguration\n */\nexport class ClientConfiguration extends Message<ClientConfiguration> {\n  /**\n   * @generated from field: livekit.VideoConfiguration video = 1;\n   */\n  video?: VideoConfiguration;\n\n  /**\n   * @generated from field: livekit.VideoConfiguration screen = 2;\n   */\n  screen?: VideoConfiguration;\n\n  /**\n   * @generated from field: livekit.ClientConfigSetting resume_connection = 3;\n   */\n  resumeConnection = ClientConfigSetting.UNSET;\n\n  /**\n   * @generated from field: livekit.DisabledCodecs disabled_codecs = 4;\n   */\n  disabledCodecs?: DisabledCodecs;\n\n  /**\n   * @generated from field: livekit.ClientConfigSetting force_relay = 5;\n   */\n  forceRelay = ClientConfigSetting.UNSET;\n\n  constructor(data?: PartialMessage<ClientConfiguration>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.ClientConfiguration\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"video\", kind: \"message\", T: VideoConfiguration },\n    { no: 2, name: \"screen\", kind: \"message\", T: VideoConfiguration },\n    { no: 3, name: \"resume_connection\", kind: \"enum\", T: proto3.getEnumType(ClientConfigSetting) },\n    { no: 4, name: \"disabled_codecs\", kind: \"message\", T: DisabledCodecs },\n    { no: 5, name: \"force_relay\", kind: \"enum\", T: proto3.getEnumType(ClientConfigSetting) },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClientConfiguration {\n    return new ClientConfiguration().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClientConfiguration {\n    return new ClientConfiguration().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClientConfiguration {\n    return new ClientConfiguration().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ClientConfiguration | PlainMessage<ClientConfiguration> | undefined, b: ClientConfiguration | PlainMessage<ClientConfiguration> | undefined): boolean {\n    return proto3.util.equals(ClientConfiguration, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.VideoConfiguration\n */\nexport class VideoConfiguration extends Message<VideoConfiguration> {\n  /**\n   * @generated from field: livekit.ClientConfigSetting hardware_encoder = 1;\n   */\n  hardwareEncoder = ClientConfigSetting.UNSET;\n\n  constructor(data?: PartialMessage<VideoConfiguration>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.VideoConfiguration\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"hardware_encoder\", kind: \"enum\", T: proto3.getEnumType(ClientConfigSetting) },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VideoConfiguration {\n    return new VideoConfiguration().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VideoConfiguration {\n    return new VideoConfiguration().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VideoConfiguration {\n    return new VideoConfiguration().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: VideoConfiguration | PlainMessage<VideoConfiguration> | undefined, b: VideoConfiguration | PlainMessage<VideoConfiguration> | undefined): boolean {\n    return proto3.util.equals(VideoConfiguration, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.DisabledCodecs\n */\nexport class DisabledCodecs extends Message<DisabledCodecs> {\n  /**\n   * disabled for both publish and subscribe\n   *\n   * @generated from field: repeated livekit.Codec codecs = 1;\n   */\n  codecs: Codec[] = [];\n\n  /**\n   * only disable for publish\n   *\n   * @generated from field: repeated livekit.Codec publish = 2;\n   */\n  publish: Codec[] = [];\n\n  constructor(data?: PartialMessage<DisabledCodecs>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.DisabledCodecs\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"codecs\", kind: \"message\", T: Codec, repeated: true },\n    { no: 2, name: \"publish\", kind: \"message\", T: Codec, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DisabledCodecs {\n    return new DisabledCodecs().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DisabledCodecs {\n    return new DisabledCodecs().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DisabledCodecs {\n    return new DisabledCodecs().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: DisabledCodecs | PlainMessage<DisabledCodecs> | undefined, b: DisabledCodecs | PlainMessage<DisabledCodecs> | undefined): boolean {\n    return proto3.util.equals(DisabledCodecs, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.RTPDrift\n */\nexport class RTPDrift extends Message<RTPDrift> {\n  /**\n   * @generated from field: google.protobuf.Timestamp start_time = 1;\n   */\n  startTime?: Timestamp;\n\n  /**\n   * @generated from field: google.protobuf.Timestamp end_time = 2;\n   */\n  endTime?: Timestamp;\n\n  /**\n   * @generated from field: double duration = 3;\n   */\n  duration = 0;\n\n  /**\n   * @generated from field: uint64 start_timestamp = 4;\n   */\n  startTimestamp = protoInt64.zero;\n\n  /**\n   * @generated from field: uint64 end_timestamp = 5;\n   */\n  endTimestamp = protoInt64.zero;\n\n  /**\n   * @generated from field: uint64 rtp_clock_ticks = 6;\n   */\n  rtpClockTicks = protoInt64.zero;\n\n  /**\n   * @generated from field: int64 drift_samples = 7;\n   */\n  driftSamples = protoInt64.zero;\n\n  /**\n   * @generated from field: double drift_ms = 8;\n   */\n  driftMs = 0;\n\n  /**\n   * @generated from field: double clock_rate = 9;\n   */\n  clockRate = 0;\n\n  constructor(data?: PartialMessage<RTPDrift>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.RTPDrift\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"start_time\", kind: \"message\", T: Timestamp },\n    { no: 2, name: \"end_time\", kind: \"message\", T: Timestamp },\n    { no: 3, name: \"duration\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */ },\n    { no: 4, name: \"start_timestamp\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */ },\n    { no: 5, name: \"end_timestamp\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */ },\n    { no: 6, name: \"rtp_clock_ticks\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */ },\n    { no: 7, name: \"drift_samples\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 8, name: \"drift_ms\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */ },\n    { no: 9, name: \"clock_rate\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RTPDrift {\n    return new RTPDrift().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RTPDrift {\n    return new RTPDrift().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RTPDrift {\n    return new RTPDrift().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: RTPDrift | PlainMessage<RTPDrift> | undefined, b: RTPDrift | PlainMessage<RTPDrift> | undefined): boolean {\n    return proto3.util.equals(RTPDrift, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.RTPStats\n */\nexport class RTPStats extends Message<RTPStats> {\n  /**\n   * @generated from field: google.protobuf.Timestamp start_time = 1;\n   */\n  startTime?: Timestamp;\n\n  /**\n   * @generated from field: google.protobuf.Timestamp end_time = 2;\n   */\n  endTime?: Timestamp;\n\n  /**\n   * @generated from field: double duration = 3;\n   */\n  duration = 0;\n\n  /**\n   * @generated from field: uint32 packets = 4;\n   */\n  packets = 0;\n\n  /**\n   * @generated from field: double packet_rate = 5;\n   */\n  packetRate = 0;\n\n  /**\n   * @generated from field: uint64 bytes = 6;\n   */\n  bytes = protoInt64.zero;\n\n  /**\n   * @generated from field: uint64 header_bytes = 39;\n   */\n  headerBytes = protoInt64.zero;\n\n  /**\n   * @generated from field: double bitrate = 7;\n   */\n  bitrate = 0;\n\n  /**\n   * @generated from field: uint32 packets_lost = 8;\n   */\n  packetsLost = 0;\n\n  /**\n   * @generated from field: double packet_loss_rate = 9;\n   */\n  packetLossRate = 0;\n\n  /**\n   * @generated from field: float packet_loss_percentage = 10;\n   */\n  packetLossPercentage = 0;\n\n  /**\n   * @generated from field: uint32 packets_duplicate = 11;\n   */\n  packetsDuplicate = 0;\n\n  /**\n   * @generated from field: double packet_duplicate_rate = 12;\n   */\n  packetDuplicateRate = 0;\n\n  /**\n   * @generated from field: uint64 bytes_duplicate = 13;\n   */\n  bytesDuplicate = protoInt64.zero;\n\n  /**\n   * @generated from field: uint64 header_bytes_duplicate = 40;\n   */\n  headerBytesDuplicate = protoInt64.zero;\n\n  /**\n   * @generated from field: double bitrate_duplicate = 14;\n   */\n  bitrateDuplicate = 0;\n\n  /**\n   * @generated from field: uint32 packets_padding = 15;\n   */\n  packetsPadding = 0;\n\n  /**\n   * @generated from field: double packet_padding_rate = 16;\n   */\n  packetPaddingRate = 0;\n\n  /**\n   * @generated from field: uint64 bytes_padding = 17;\n   */\n  bytesPadding = protoInt64.zero;\n\n  /**\n   * @generated from field: uint64 header_bytes_padding = 41;\n   */\n  headerBytesPadding = protoInt64.zero;\n\n  /**\n   * @generated from field: double bitrate_padding = 18;\n   */\n  bitratePadding = 0;\n\n  /**\n   * @generated from field: uint32 packets_out_of_order = 19;\n   */\n  packetsOutOfOrder = 0;\n\n  /**\n   * @generated from field: uint32 frames = 20;\n   */\n  frames = 0;\n\n  /**\n   * @generated from field: double frame_rate = 21;\n   */\n  frameRate = 0;\n\n  /**\n   * @generated from field: double jitter_current = 22;\n   */\n  jitterCurrent = 0;\n\n  /**\n   * @generated from field: double jitter_max = 23;\n   */\n  jitterMax = 0;\n\n  /**\n   * @generated from field: map<int32, uint32> gap_histogram = 24;\n   */\n  gapHistogram: { [key: number]: number } = {};\n\n  /**\n   * @generated from field: uint32 nacks = 25;\n   */\n  nacks = 0;\n\n  /**\n   * @generated from field: uint32 nack_acks = 37;\n   */\n  nackAcks = 0;\n\n  /**\n   * @generated from field: uint32 nack_misses = 26;\n   */\n  nackMisses = 0;\n\n  /**\n   * @generated from field: uint32 nack_repeated = 38;\n   */\n  nackRepeated = 0;\n\n  /**\n   * @generated from field: uint32 plis = 27;\n   */\n  plis = 0;\n\n  /**\n   * @generated from field: google.protobuf.Timestamp last_pli = 28;\n   */\n  lastPli?: Timestamp;\n\n  /**\n   * @generated from field: uint32 firs = 29;\n   */\n  firs = 0;\n\n  /**\n   * @generated from field: google.protobuf.Timestamp last_fir = 30;\n   */\n  lastFir?: Timestamp;\n\n  /**\n   * @generated from field: uint32 rtt_current = 31;\n   */\n  rttCurrent = 0;\n\n  /**\n   * @generated from field: uint32 rtt_max = 32;\n   */\n  rttMax = 0;\n\n  /**\n   * @generated from field: uint32 key_frames = 33;\n   */\n  keyFrames = 0;\n\n  /**\n   * @generated from field: google.protobuf.Timestamp last_key_frame = 34;\n   */\n  lastKeyFrame?: Timestamp;\n\n  /**\n   * @generated from field: uint32 layer_lock_plis = 35;\n   */\n  layerLockPlis = 0;\n\n  /**\n   * @generated from field: google.protobuf.Timestamp last_layer_lock_pli = 36;\n   */\n  lastLayerLockPli?: Timestamp;\n\n  /**\n   * @generated from field: livekit.RTPDrift packet_drift = 44;\n   */\n  packetDrift?: RTPDrift;\n\n  /**\n   * NEXT_ID: 46\n   *\n   * @generated from field: livekit.RTPDrift report_drift = 45;\n   */\n  reportDrift?: RTPDrift;\n\n  constructor(data?: PartialMessage<RTPStats>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.RTPStats\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"start_time\", kind: \"message\", T: Timestamp },\n    { no: 2, name: \"end_time\", kind: \"message\", T: Timestamp },\n    { no: 3, name: \"duration\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */ },\n    { no: 4, name: \"packets\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 5, name: \"packet_rate\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */ },\n    { no: 6, name: \"bytes\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */ },\n    { no: 39, name: \"header_bytes\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */ },\n    { no: 7, name: \"bitrate\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */ },\n    { no: 8, name: \"packets_lost\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 9, name: \"packet_loss_rate\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */ },\n    { no: 10, name: \"packet_loss_percentage\", kind: \"scalar\", T: 2 /* ScalarType.FLOAT */ },\n    { no: 11, name: \"packets_duplicate\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 12, name: \"packet_duplicate_rate\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */ },\n    { no: 13, name: \"bytes_duplicate\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */ },\n    { no: 40, name: \"header_bytes_duplicate\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */ },\n    { no: 14, name: \"bitrate_duplicate\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */ },\n    { no: 15, name: \"packets_padding\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 16, name: \"packet_padding_rate\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */ },\n    { no: 17, name: \"bytes_padding\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */ },\n    { no: 41, name: \"header_bytes_padding\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */ },\n    { no: 18, name: \"bitrate_padding\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */ },\n    { no: 19, name: \"packets_out_of_order\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 20, name: \"frames\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 21, name: \"frame_rate\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */ },\n    { no: 22, name: \"jitter_current\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */ },\n    { no: 23, name: \"jitter_max\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */ },\n    { no: 24, name: \"gap_histogram\", kind: \"map\", K: 5 /* ScalarType.INT32 */, V: {kind: \"scalar\", T: 13 /* ScalarType.UINT32 */} },\n    { no: 25, name: \"nacks\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 37, name: \"nack_acks\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 26, name: \"nack_misses\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 38, name: \"nack_repeated\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 27, name: \"plis\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 28, name: \"last_pli\", kind: \"message\", T: Timestamp },\n    { no: 29, name: \"firs\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 30, name: \"last_fir\", kind: \"message\", T: Timestamp },\n    { no: 31, name: \"rtt_current\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 32, name: \"rtt_max\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 33, name: \"key_frames\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 34, name: \"last_key_frame\", kind: \"message\", T: Timestamp },\n    { no: 35, name: \"layer_lock_plis\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 36, name: \"last_layer_lock_pli\", kind: \"message\", T: Timestamp },\n    { no: 44, name: \"packet_drift\", kind: \"message\", T: RTPDrift },\n    { no: 45, name: \"report_drift\", kind: \"message\", T: RTPDrift },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RTPStats {\n    return new RTPStats().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RTPStats {\n    return new RTPStats().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RTPStats {\n    return new RTPStats().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: RTPStats | PlainMessage<RTPStats> | undefined, b: RTPStats | PlainMessage<RTPStats> | undefined): boolean {\n    return proto3.util.equals(RTPStats, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.TimedVersion\n */\nexport class TimedVersion extends Message<TimedVersion> {\n  /**\n   * @generated from field: int64 unix_micro = 1;\n   */\n  unixMicro = protoInt64.zero;\n\n  /**\n   * @generated from field: int32 ticks = 2;\n   */\n  ticks = 0;\n\n  constructor(data?: PartialMessage<TimedVersion>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.TimedVersion\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"unix_micro\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 2, name: \"ticks\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TimedVersion {\n    return new TimedVersion().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TimedVersion {\n    return new TimedVersion().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TimedVersion {\n    return new TimedVersion().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: TimedVersion | PlainMessage<TimedVersion> | undefined, b: TimedVersion | PlainMessage<TimedVersion> | undefined): boolean {\n    return proto3.util.equals(TimedVersion, a, b);\n  }\n}\n\n", "import type { ReconnectContext, ReconnectPolicy } from './ReconnectPolicy';\n\nconst maxRetryDelay = 7000;\n\nconst DEFAULT_RETRY_DELAYS_IN_MS = [\n  0,\n  300,\n  2 * 2 * 300,\n  3 * 3 * 300,\n  4 * 4 * 300,\n  maxRetryDelay,\n  maxRetryDelay,\n  maxRetryDelay,\n  maxRetryDelay,\n  maxRetryDelay,\n];\n\nclass DefaultReconnectPolicy implements ReconnectPolicy {\n  private readonly _retryDelays: number[];\n\n  constructor(retryDelays?: number[]) {\n    this._retryDelays = retryDelays !== undefined ? [...retryDelays] : DEFAULT_RETRY_DELAYS_IN_MS;\n  }\n\n  public nextRetryDelayInMs(context: ReconnectContext): number | null {\n    if (context.retryCount >= this._retryDelays.length) return null;\n\n    const retryDelay = this._retryDelays[context.retryCount];\n    if (context.retryCount <= 1) return retryDelay;\n\n    return retryDelay + Math.random() * 1_000;\n  }\n}\n\nexport default DefaultReconnectPolicy;\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nlet logDisabled_ = true;\nlet deprecationWarnings_ = true;\n\n/**\n * Extract browser version out of the provided user agent string.\n *\n * @param {!string} uastring userAgent string.\n * @param {!string} expr Regular expression used as match criteria.\n * @param {!number} pos position in the version string to be returned.\n * @return {!number} browser version.\n */\nexport function extractVersion(uastring, expr, pos) {\n  const match = uastring.match(expr);\n  return match && match.length >= pos && parseInt(match[pos], 10);\n}\n\n// Wraps the peerconnection event eventNameToWrap in a function\n// which returns the modified event object (or false to prevent\n// the event).\nexport function wrapPeerConnectionEvent(window, eventNameToWrap, wrapper) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  const nativeAddEventListener = proto.addEventListener;\n  proto.addEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap) {\n      return nativeAddEventListener.apply(this, arguments);\n    }\n    const wrappedCallback = (e) => {\n      const modifiedEvent = wrapper(e);\n      if (modifiedEvent) {\n        if (cb.handleEvent) {\n          cb.handleEvent(modifiedEvent);\n        } else {\n          cb(modifiedEvent);\n        }\n      }\n    };\n    this._eventMap = this._eventMap || {};\n    if (!this._eventMap[eventNameToWrap]) {\n      this._eventMap[eventNameToWrap] = new Map();\n    }\n    this._eventMap[eventNameToWrap].set(cb, wrappedCallback);\n    return nativeAddEventListener.apply(this, [nativeEventName,\n      wrappedCallback]);\n  };\n\n  const nativeRemoveEventListener = proto.removeEventListener;\n  proto.removeEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap || !this._eventMap\n        || !this._eventMap[eventNameToWrap]) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    if (!this._eventMap[eventNameToWrap].has(cb)) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    const unwrappedCb = this._eventMap[eventNameToWrap].get(cb);\n    this._eventMap[eventNameToWrap].delete(cb);\n    if (this._eventMap[eventNameToWrap].size === 0) {\n      delete this._eventMap[eventNameToWrap];\n    }\n    if (Object.keys(this._eventMap).length === 0) {\n      delete this._eventMap;\n    }\n    return nativeRemoveEventListener.apply(this, [nativeEventName,\n      unwrappedCb]);\n  };\n\n  Object.defineProperty(proto, 'on' + eventNameToWrap, {\n    get() {\n      return this['_on' + eventNameToWrap];\n    },\n    set(cb) {\n      if (this['_on' + eventNameToWrap]) {\n        this.removeEventListener(eventNameToWrap,\n          this['_on' + eventNameToWrap]);\n        delete this['_on' + eventNameToWrap];\n      }\n      if (cb) {\n        this.addEventListener(eventNameToWrap,\n          this['_on' + eventNameToWrap] = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n}\n\nexport function disableLog(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  logDisabled_ = bool;\n  return (bool) ? 'adapter.js logging disabled' :\n    'adapter.js logging enabled';\n}\n\n/**\n * Disable or enable deprecation warnings\n * @param {!boolean} bool set to true to disable warnings.\n */\nexport function disableWarnings(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  deprecationWarnings_ = !bool;\n  return 'adapter.js deprecation warnings ' + (bool ? 'disabled' : 'enabled');\n}\n\nexport function log() {\n  if (typeof window === 'object') {\n    if (logDisabled_) {\n      return;\n    }\n    if (typeof console !== 'undefined' && typeof console.log === 'function') {\n      console.log.apply(console, arguments);\n    }\n  }\n}\n\n/**\n * Shows a deprecation warning suggesting the modern and spec-compatible API.\n */\nexport function deprecated(oldMethod, newMethod) {\n  if (!deprecationWarnings_) {\n    return;\n  }\n  console.warn(oldMethod + ' is deprecated, please use ' + newMethod +\n      ' instead.');\n}\n\n/**\n * Browser detector.\n *\n * @return {object} result containing browser and version\n *     properties.\n */\nexport function detectBrowser(window) {\n  // Returned result object.\n  const result = {browser: null, version: null};\n\n  // Fail early if it's not a browser\n  if (typeof window === 'undefined' || !window.navigator ||\n      !window.navigator.userAgent) {\n    result.browser = 'Not a browser.';\n    return result;\n  }\n\n  const {navigator} = window;\n\n  if (navigator.mozGetUserMedia) { // Firefox.\n    result.browser = 'firefox';\n    result.version = extractVersion(navigator.userAgent,\n      /Firefox\\/(\\d+)\\./, 1);\n  } else if (navigator.webkitGetUserMedia ||\n      (window.isSecureContext === false && window.webkitRTCPeerConnection)) {\n    // Chrome, Chromium, Webview, Opera.\n    // Version matches Chrome/WebRTC version.\n    // Chrome 74 removed webkitGetUserMedia on http as well so we need the\n    // more complicated fallback to webkitRTCPeerConnection.\n    result.browser = 'chrome';\n    result.version = extractVersion(navigator.userAgent,\n      /Chrom(e|ium)\\/(\\d+)\\./, 2);\n  } else if (window.RTCPeerConnection &&\n      navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) { // Safari.\n    result.browser = 'safari';\n    result.version = extractVersion(navigator.userAgent,\n      /AppleWebKit\\/(\\d+)\\./, 1);\n    result.supportsUnifiedPlan = window.RTCRtpTransceiver &&\n        'currentDirection' in window.RTCRtpTransceiver.prototype;\n  } else { // Default fallthrough: not supported.\n    result.browser = 'Not a supported browser.';\n    return result;\n  }\n\n  return result;\n}\n\n/**\n * Checks if something is an object.\n *\n * @param {*} val The something you want to check.\n * @return true if val is an object, false otherwise.\n */\nfunction isObject(val) {\n  return Object.prototype.toString.call(val) === '[object Object]';\n}\n\n/**\n * Remove all empty objects and undefined values\n * from a nested object -- an enhanced and vanilla version\n * of Lodash's `compact`.\n */\nexport function compactObject(data) {\n  if (!isObject(data)) {\n    return data;\n  }\n\n  return Object.keys(data).reduce(function(accumulator, key) {\n    const isObj = isObject(data[key]);\n    const value = isObj ? compactObject(data[key]) : data[key];\n    const isEmptyObject = isObj && !Object.keys(value).length;\n    if (value === undefined || isEmptyObject) {\n      return accumulator;\n    }\n    return Object.assign(accumulator, {[key]: value});\n  }, {});\n}\n\n/* iterates the stats graph recursively. */\nexport function walkStats(stats, base, resultSet) {\n  if (!base || resultSet.has(base.id)) {\n    return;\n  }\n  resultSet.set(base.id, base);\n  Object.keys(base).forEach(name => {\n    if (name.endsWith('Id')) {\n      walkStats(stats, stats.get(base[name]), resultSet);\n    } else if (name.endsWith('Ids')) {\n      base[name].forEach(id => {\n        walkStats(stats, stats.get(id), resultSet);\n      });\n    }\n  });\n}\n\n/* filter getStats for a sender/receiver track. */\nexport function filterStats(result, track, outbound) {\n  const streamStatsType = outbound ? 'outbound-rtp' : 'inbound-rtp';\n  const filteredResult = new Map();\n  if (track === null) {\n    return filteredResult;\n  }\n  const trackStats = [];\n  result.forEach(value => {\n    if (value.type === 'track' &&\n        value.trackIdentifier === track.id) {\n      trackStats.push(value);\n    }\n  });\n  trackStats.forEach(trackStat => {\n    result.forEach(stats => {\n      if (stats.type === streamStatsType && stats.trackId === trackStat.id) {\n        walkStats(result, stats, filteredResult);\n      }\n    });\n  });\n  return filteredResult;\n}\n\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\nconst logging = utils.log;\n\nexport function shimGetUserMedia(window, browserDetails) {\n  const navigator = window && window.navigator;\n\n  if (!navigator.mediaDevices) {\n    return;\n  }\n\n  const constraintsToChrome_ = function(c) {\n    if (typeof c !== 'object' || c.mandatory || c.optional) {\n      return c;\n    }\n    const cc = {};\n    Object.keys(c).forEach(key => {\n      if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n        return;\n      }\n      const r = (typeof c[key] === 'object') ? c[key] : {ideal: c[key]};\n      if (r.exact !== undefined && typeof r.exact === 'number') {\n        r.min = r.max = r.exact;\n      }\n      const oldname_ = function(prefix, name) {\n        if (prefix) {\n          return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n        }\n        return (name === 'deviceId') ? 'sourceId' : name;\n      };\n      if (r.ideal !== undefined) {\n        cc.optional = cc.optional || [];\n        let oc = {};\n        if (typeof r.ideal === 'number') {\n          oc[oldname_('min', key)] = r.ideal;\n          cc.optional.push(oc);\n          oc = {};\n          oc[oldname_('max', key)] = r.ideal;\n          cc.optional.push(oc);\n        } else {\n          oc[oldname_('', key)] = r.ideal;\n          cc.optional.push(oc);\n        }\n      }\n      if (r.exact !== undefined && typeof r.exact !== 'number') {\n        cc.mandatory = cc.mandatory || {};\n        cc.mandatory[oldname_('', key)] = r.exact;\n      } else {\n        ['min', 'max'].forEach(mix => {\n          if (r[mix] !== undefined) {\n            cc.mandatory = cc.mandatory || {};\n            cc.mandatory[oldname_(mix, key)] = r[mix];\n          }\n        });\n      }\n    });\n    if (c.advanced) {\n      cc.optional = (cc.optional || []).concat(c.advanced);\n    }\n    return cc;\n  };\n\n  const shimConstraints_ = function(constraints, func) {\n    if (browserDetails.version >= 61) {\n      return func(constraints);\n    }\n    constraints = JSON.parse(JSON.stringify(constraints));\n    if (constraints && typeof constraints.audio === 'object') {\n      const remap = function(obj, a, b) {\n        if (a in obj && !(b in obj)) {\n          obj[b] = obj[a];\n          delete obj[a];\n        }\n      };\n      constraints = JSON.parse(JSON.stringify(constraints));\n      remap(constraints.audio, 'autoGainControl', 'googAutoGainControl');\n      remap(constraints.audio, 'noiseSuppression', 'googNoiseSuppression');\n      constraints.audio = constraintsToChrome_(constraints.audio);\n    }\n    if (constraints && typeof constraints.video === 'object') {\n      // Shim facingMode for mobile & surface pro.\n      let face = constraints.video.facingMode;\n      face = face && ((typeof face === 'object') ? face : {ideal: face});\n      const getSupportedFacingModeLies = browserDetails.version < 66;\n\n      if ((face && (face.exact === 'user' || face.exact === 'environment' ||\n                    face.ideal === 'user' || face.ideal === 'environment')) &&\n          !(navigator.mediaDevices.getSupportedConstraints &&\n            navigator.mediaDevices.getSupportedConstraints().facingMode &&\n            !getSupportedFacingModeLies)) {\n        delete constraints.video.facingMode;\n        let matches;\n        if (face.exact === 'environment' || face.ideal === 'environment') {\n          matches = ['back', 'rear'];\n        } else if (face.exact === 'user' || face.ideal === 'user') {\n          matches = ['front'];\n        }\n        if (matches) {\n          // Look for matches in label, or use last cam for back (typical).\n          return navigator.mediaDevices.enumerateDevices()\n            .then(devices => {\n              devices = devices.filter(d => d.kind === 'videoinput');\n              let dev = devices.find(d => matches.some(match =>\n                d.label.toLowerCase().includes(match)));\n              if (!dev && devices.length && matches.includes('back')) {\n                dev = devices[devices.length - 1]; // more likely the back cam\n              }\n              if (dev) {\n                constraints.video.deviceId = face.exact\n                  ? {exact: dev.deviceId}\n                  : {ideal: dev.deviceId};\n              }\n              constraints.video = constraintsToChrome_(constraints.video);\n              logging('chrome: ' + JSON.stringify(constraints));\n              return func(constraints);\n            });\n        }\n      }\n      constraints.video = constraintsToChrome_(constraints.video);\n    }\n    logging('chrome: ' + JSON.stringify(constraints));\n    return func(constraints);\n  };\n\n  const shimError_ = function(e) {\n    if (browserDetails.version >= 64) {\n      return e;\n    }\n    return {\n      name: {\n        PermissionDeniedError: 'NotAllowedError',\n        PermissionDismissedError: 'NotAllowedError',\n        InvalidStateError: 'NotAllowedError',\n        DevicesNotFoundError: 'NotFoundError',\n        ConstraintNotSatisfiedError: 'OverconstrainedError',\n        TrackStartError: 'NotReadableError',\n        MediaDeviceFailedDueToShutdown: 'NotAllowedError',\n        MediaDeviceKillSwitchOn: 'NotAllowedError',\n        TabCaptureError: 'AbortError',\n        ScreenCaptureError: 'AbortError',\n        DeviceCaptureError: 'AbortError'\n      }[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint || e.constraintName,\n      toString() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n\n  const getUserMedia_ = function(constraints, onSuccess, onError) {\n    shimConstraints_(constraints, c => {\n      navigator.webkitGetUserMedia(c, onSuccess, e => {\n        if (onError) {\n          onError(shimError_(e));\n        }\n      });\n    });\n  };\n  navigator.getUserMedia = getUserMedia_.bind(navigator);\n\n  // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\n  // function which returns a Promise, it does not accept spec-style\n  // constraints.\n  if (navigator.mediaDevices.getUserMedia) {\n    const origGetUserMedia = navigator.mediaDevices.getUserMedia.\n      bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(cs) {\n      return shimConstraints_(cs, c => origGetUserMedia(c).then(stream => {\n        if (c.audio && !stream.getAudioTracks().length ||\n            c.video && !stream.getVideoTracks().length) {\n          stream.getTracks().forEach(track => {\n            track.stop();\n          });\n          throw new DOMException('', 'NotFoundError');\n        }\n        return stream;\n      }, e => Promise.reject(shimError_(e))));\n    };\n  }\n}\n", "/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nexport function shimGetDisplayMedia(window, getSourceId) {\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  // getSourceId is a function that returns a promise resolving with\n  // the sourceId of the screen/window/tab to be shared.\n  if (typeof getSourceId !== 'function') {\n    console.error('shimGetDisplayMedia: getSourceId argument is not ' +\n        'a function');\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    function getDisplayMedia(constraints) {\n      return getSourceId(constraints)\n        .then(sourceId => {\n          const widthSpecified = constraints.video && constraints.video.width;\n          const heightSpecified = constraints.video &&\n            constraints.video.height;\n          const frameRateSpecified = constraints.video &&\n            constraints.video.frameRate;\n          constraints.video = {\n            mandatory: {\n              chromeMediaSource: 'desktop',\n              chromeMediaSourceId: sourceId,\n              maxFrameRate: frameRateSpecified || 3\n            }\n          };\n          if (widthSpecified) {\n            constraints.video.mandatory.maxWidth = widthSpecified;\n          }\n          if (heightSpecified) {\n            constraints.video.mandatory.maxHeight = heightSpecified;\n          }\n          return window.navigator.mediaDevices.getUserMedia(constraints);\n        });\n    };\n}\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\n\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimMediaStream(window) {\n  window.MediaStream = window.MediaStream || window.webkitMediaStream;\n}\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n      window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n      get() {\n        return this._ontrack;\n      },\n      set(f) {\n        if (this._ontrack) {\n          this.removeEventListener('track', this._ontrack);\n        }\n        this.addEventListener('track', this._ontrack = f);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    const origSetRemoteDescription =\n        window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription =\n      function setRemoteDescription() {\n        if (!this._ontrackpoly) {\n          this._ontrackpoly = (e) => {\n            // onaddstream does not fire when a track is added to an existing\n            // stream. But stream.onaddtrack is implemented so we use that.\n            e.stream.addEventListener('addtrack', te => {\n              let receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = this.getReceivers()\n                  .find(r => r.track && r.track.id === te.track.id);\n              } else {\n                receiver = {track: te.track};\n              }\n\n              const event = new Event('track');\n              event.track = te.track;\n              event.receiver = receiver;\n              event.transceiver = {receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            });\n            e.stream.getTracks().forEach(track => {\n              let receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = this.getReceivers()\n                  .find(r => r.track && r.track.id === track.id);\n              } else {\n                receiver = {track};\n              }\n              const event = new Event('track');\n              event.track = track;\n              event.receiver = receiver;\n              event.transceiver = {receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            });\n          };\n          this.addEventListener('addstream', this._ontrackpoly);\n        }\n        return origSetRemoteDescription.apply(this, arguments);\n      };\n  } else {\n    // even if RTCRtpTransceiver is in window, it is only used and\n    // emitted in unified-plan. Unfortunately this means we need\n    // to unconditionally wrap the event.\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      if (!e.transceiver) {\n        Object.defineProperty(e, 'transceiver',\n          {value: {receiver: e.receiver}});\n      }\n      return e;\n    });\n  }\n}\n\nexport function shimGetSendersWithDtmf(window) {\n  // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.\n  if (typeof window === 'object' && window.RTCPeerConnection &&\n      !('getSenders' in window.RTCPeerConnection.prototype) &&\n      'createDTMFSender' in window.RTCPeerConnection.prototype) {\n    const shimSenderWithDtmf = function(pc, track) {\n      return {\n        track,\n        get dtmf() {\n          if (this._dtmf === undefined) {\n            if (track.kind === 'audio') {\n              this._dtmf = pc.createDTMFSender(track);\n            } else {\n              this._dtmf = null;\n            }\n          }\n          return this._dtmf;\n        },\n        _pc: pc\n      };\n    };\n\n    // augment addTrack when getSenders is not available.\n    if (!window.RTCPeerConnection.prototype.getSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        this._senders = this._senders || [];\n        return this._senders.slice(); // return a copy of the internal state.\n      };\n      const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n      window.RTCPeerConnection.prototype.addTrack =\n        function addTrack(track, stream) {\n          let sender = origAddTrack.apply(this, arguments);\n          if (!sender) {\n            sender = shimSenderWithDtmf(this, track);\n            this._senders.push(sender);\n          }\n          return sender;\n        };\n\n      const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n      window.RTCPeerConnection.prototype.removeTrack =\n        function removeTrack(sender) {\n          origRemoveTrack.apply(this, arguments);\n          const idx = this._senders.indexOf(sender);\n          if (idx !== -1) {\n            this._senders.splice(idx, 1);\n          }\n        };\n    }\n    const origAddStream = window.RTCPeerConnection.prototype.addStream;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      this._senders = this._senders || [];\n      origAddStream.apply(this, [stream]);\n      stream.getTracks().forEach(track => {\n        this._senders.push(shimSenderWithDtmf(this, track));\n      });\n    };\n\n    const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n    window.RTCPeerConnection.prototype.removeStream =\n      function removeStream(stream) {\n        this._senders = this._senders || [];\n        origRemoveStream.apply(this, [stream]);\n\n        stream.getTracks().forEach(track => {\n          const sender = this._senders.find(s => s.track === track);\n          if (sender) { // remove sender\n            this._senders.splice(this._senders.indexOf(sender), 1);\n          }\n        });\n      };\n  } else if (typeof window === 'object' && window.RTCPeerConnection &&\n             'getSenders' in window.RTCPeerConnection.prototype &&\n             'createDTMFSender' in window.RTCPeerConnection.prototype &&\n             window.RTCRtpSender &&\n             !('dtmf' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = this._pc.createDTMFSender(this.track);\n          } else {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n}\n\nexport function shimGetStats(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    const [selector, onSucc, onErr] = arguments;\n\n    // If selector is a function then we are in the old style stats so just\n    // pass back the original getStats format to avoid breaking old users.\n    if (arguments.length > 0 && typeof selector === 'function') {\n      return origGetStats.apply(this, arguments);\n    }\n\n    // When spec-style getStats is supported, return those when called with\n    // either no arguments or the selector argument is null.\n    if (origGetStats.length === 0 && (arguments.length === 0 ||\n        typeof selector !== 'function')) {\n      return origGetStats.apply(this, []);\n    }\n\n    const fixChromeStats_ = function(response) {\n      const standardReport = {};\n      const reports = response.result();\n      reports.forEach(report => {\n        const standardStats = {\n          id: report.id,\n          timestamp: report.timestamp,\n          type: {\n            localcandidate: 'local-candidate',\n            remotecandidate: 'remote-candidate'\n          }[report.type] || report.type\n        };\n        report.names().forEach(name => {\n          standardStats[name] = report.stat(name);\n        });\n        standardReport[standardStats.id] = standardStats;\n      });\n\n      return standardReport;\n    };\n\n    // shim getStats with maplike support\n    const makeMapStats = function(stats) {\n      return new Map(Object.keys(stats).map(key => [key, stats[key]]));\n    };\n\n    if (arguments.length >= 2) {\n      const successCallbackWrapper_ = function(response) {\n        onSucc(makeMapStats(fixChromeStats_(response)));\n      };\n\n      return origGetStats.apply(this, [successCallbackWrapper_,\n        selector]);\n    }\n\n    // promise-support\n    return new Promise((resolve, reject) => {\n      origGetStats.apply(this, [\n        function(response) {\n          resolve(makeMapStats(fixChromeStats_(response)));\n        }, reject]);\n    }).then(onSucc, onErr);\n  };\n}\n\nexport function shimSenderReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender && window.RTCRtpReceiver)) {\n    return;\n  }\n\n  // shim sender stats.\n  if (!('getStats' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    if (origGetSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        const senders = origGetSenders.apply(this, []);\n        senders.forEach(sender => sender._pc = this);\n        return senders;\n      };\n    }\n\n    const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n    if (origAddTrack) {\n      window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n        const sender = origAddTrack.apply(this, arguments);\n        sender._pc = this;\n        return sender;\n      };\n    }\n    window.RTCRtpSender.prototype.getStats = function getStats() {\n      const sender = this;\n      return this._pc.getStats().then(result =>\n        /* Note: this will include stats of all senders that\n         *   send a track with the same id as sender.track as\n         *   it is not possible to identify the RTCRtpSender.\n         */\n        utils.filterStats(result, sender.track, true));\n    };\n  }\n\n  // shim receiver stats.\n  if (!('getStats' in window.RTCRtpReceiver.prototype)) {\n    const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n    if (origGetReceivers) {\n      window.RTCPeerConnection.prototype.getReceivers =\n        function getReceivers() {\n          const receivers = origGetReceivers.apply(this, []);\n          receivers.forEach(receiver => receiver._pc = this);\n          return receivers;\n        };\n    }\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      e.receiver._pc = e.srcElement;\n      return e;\n    });\n    window.RTCRtpReceiver.prototype.getStats = function getStats() {\n      const receiver = this;\n      return this._pc.getStats().then(result =>\n        utils.filterStats(result, receiver.track, false));\n    };\n  }\n\n  if (!('getStats' in window.RTCRtpSender.prototype &&\n      'getStats' in window.RTCRtpReceiver.prototype)) {\n    return;\n  }\n\n  // shim RTCPeerConnection.getStats(track).\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    if (arguments.length > 0 &&\n        arguments[0] instanceof window.MediaStreamTrack) {\n      const track = arguments[0];\n      let sender;\n      let receiver;\n      let err;\n      this.getSenders().forEach(s => {\n        if (s.track === track) {\n          if (sender) {\n            err = true;\n          } else {\n            sender = s;\n          }\n        }\n      });\n      this.getReceivers().forEach(r => {\n        if (r.track === track) {\n          if (receiver) {\n            err = true;\n          } else {\n            receiver = r;\n          }\n        }\n        return r.track === track;\n      });\n      if (err || (sender && receiver)) {\n        return Promise.reject(new DOMException(\n          'There are more than one sender or receiver for the track.',\n          'InvalidAccessError'));\n      } else if (sender) {\n        return sender.getStats();\n      } else if (receiver) {\n        return receiver.getStats();\n      }\n      return Promise.reject(new DOMException(\n        'There is no sender or receiver for the track.',\n        'InvalidAccessError'));\n    }\n    return origGetStats.apply(this, arguments);\n  };\n}\n\nexport function shimAddTrackRemoveTrackWithNative(window) {\n  // shim addTrack/removeTrack with native variants in order to make\n  // the interactions with legacy getLocalStreams behave as in other browsers.\n  // Keeps a mapping stream.id => [stream, rtpsenders...]\n  window.RTCPeerConnection.prototype.getLocalStreams =\n    function getLocalStreams() {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      return Object.keys(this._shimmedLocalStreams)\n        .map(streamId => this._shimmedLocalStreams[streamId][0]);\n    };\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  window.RTCPeerConnection.prototype.addTrack =\n    function addTrack(track, stream) {\n      if (!stream) {\n        return origAddTrack.apply(this, arguments);\n      }\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n      const sender = origAddTrack.apply(this, arguments);\n      if (!this._shimmedLocalStreams[stream.id]) {\n        this._shimmedLocalStreams[stream.id] = [stream, sender];\n      } else if (this._shimmedLocalStreams[stream.id].indexOf(sender) === -1) {\n        this._shimmedLocalStreams[stream.id].push(sender);\n      }\n      return sender;\n    };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n          'InvalidAccessError');\n      }\n    });\n    const existingSenders = this.getSenders();\n    origAddStream.apply(this, arguments);\n    const newSenders = this.getSenders()\n      .filter(newSender => existingSenders.indexOf(newSender) === -1);\n    this._shimmedLocalStreams[stream.id] = [stream].concat(newSenders);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      delete this._shimmedLocalStreams[stream.id];\n      return origRemoveStream.apply(this, arguments);\n    };\n\n  const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n  window.RTCPeerConnection.prototype.removeTrack =\n    function removeTrack(sender) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      if (sender) {\n        Object.keys(this._shimmedLocalStreams).forEach(streamId => {\n          const idx = this._shimmedLocalStreams[streamId].indexOf(sender);\n          if (idx !== -1) {\n            this._shimmedLocalStreams[streamId].splice(idx, 1);\n          }\n          if (this._shimmedLocalStreams[streamId].length === 1) {\n            delete this._shimmedLocalStreams[streamId];\n          }\n        });\n      }\n      return origRemoveTrack.apply(this, arguments);\n    };\n}\n\nexport function shimAddTrackRemoveTrack(window, browserDetails) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  // shim addTrack and removeTrack.\n  if (window.RTCPeerConnection.prototype.addTrack &&\n      browserDetails.version >= 65) {\n    return shimAddTrackRemoveTrackWithNative(window);\n  }\n\n  // also shim pc.getLocalStreams when addTrack is shimmed\n  // to return the original streams.\n  const origGetLocalStreams = window.RTCPeerConnection.prototype\n    .getLocalStreams;\n  window.RTCPeerConnection.prototype.getLocalStreams =\n    function getLocalStreams() {\n      const nativeStreams = origGetLocalStreams.apply(this);\n      this._reverseStreams = this._reverseStreams || {};\n      return nativeStreams.map(stream => this._reverseStreams[stream.id]);\n    };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n          'InvalidAccessError');\n      }\n    });\n    // Add identity mapping for consistency with addTrack.\n    // Unless this is being used with a stream from addTrack.\n    if (!this._reverseStreams[stream.id]) {\n      const newStream = new window.MediaStream(stream.getTracks());\n      this._streams[stream.id] = newStream;\n      this._reverseStreams[newStream.id] = stream;\n      stream = newStream;\n    }\n    origAddStream.apply(this, [stream]);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      this._streams = this._streams || {};\n      this._reverseStreams = this._reverseStreams || {};\n\n      origRemoveStream.apply(this, [(this._streams[stream.id] || stream)]);\n      delete this._reverseStreams[(this._streams[stream.id] ?\n        this._streams[stream.id].id : stream.id)];\n      delete this._streams[stream.id];\n    };\n\n  window.RTCPeerConnection.prototype.addTrack =\n    function addTrack(track, stream) {\n      if (this.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      const streams = [].slice.call(arguments, 1);\n      if (streams.length !== 1 ||\n          !streams[0].getTracks().find(t => t === track)) {\n        // this is not fully correct but all we can manage without\n        // [[associated MediaStreams]] internal slot.\n        throw new DOMException(\n          'The adapter.js addTrack polyfill only supports a single ' +\n          ' stream which is associated with the specified track.',\n          'NotSupportedError');\n      }\n\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n          'InvalidAccessError');\n      }\n\n      this._streams = this._streams || {};\n      this._reverseStreams = this._reverseStreams || {};\n      const oldStream = this._streams[stream.id];\n      if (oldStream) {\n        // this is using odd Chrome behaviour, use with caution:\n        // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815\n        // Note: we rely on the high-level addTrack/dtmf shim to\n        // create the sender with a dtmf sender.\n        oldStream.addTrack(track);\n\n        // Trigger ONN async.\n        Promise.resolve().then(() => {\n          this.dispatchEvent(new Event('negotiationneeded'));\n        });\n      } else {\n        const newStream = new window.MediaStream([track]);\n        this._streams[stream.id] = newStream;\n        this._reverseStreams[newStream.id] = stream;\n        this.addStream(newStream);\n      }\n      return this.getSenders().find(s => s.track === track);\n    };\n\n  // replace the internal stream id with the external one and\n  // vice versa.\n  function replaceInternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(internalStream.id, 'g'),\n        externalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  function replaceExternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(externalStream.id, 'g'),\n        internalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  ['createOffer', 'createAnswer'].forEach(function(method) {\n    const nativeMethod = window.RTCPeerConnection.prototype[method];\n    const methodObj = {[method]() {\n      const args = arguments;\n      const isLegacyCall = arguments.length &&\n          typeof arguments[0] === 'function';\n      if (isLegacyCall) {\n        return nativeMethod.apply(this, [\n          (description) => {\n            const desc = replaceInternalStreamId(this, description);\n            args[0].apply(null, [desc]);\n          },\n          (err) => {\n            if (args[1]) {\n              args[1].apply(null, err);\n            }\n          }, arguments[2]\n        ]);\n      }\n      return nativeMethod.apply(this, arguments)\n        .then(description => replaceInternalStreamId(this, description));\n    }};\n    window.RTCPeerConnection.prototype[method] = methodObj[method];\n  });\n\n  const origSetLocalDescription =\n      window.RTCPeerConnection.prototype.setLocalDescription;\n  window.RTCPeerConnection.prototype.setLocalDescription =\n    function setLocalDescription() {\n      if (!arguments.length || !arguments[0].type) {\n        return origSetLocalDescription.apply(this, arguments);\n      }\n      arguments[0] = replaceExternalStreamId(this, arguments[0]);\n      return origSetLocalDescription.apply(this, arguments);\n    };\n\n  // TODO: mangle getStats: https://w3c.github.io/webrtc-stats/#dom-rtcmediastreamstats-streamidentifier\n\n  const origLocalDescription = Object.getOwnPropertyDescriptor(\n    window.RTCPeerConnection.prototype, 'localDescription');\n  Object.defineProperty(window.RTCPeerConnection.prototype,\n    'localDescription', {\n      get() {\n        const description = origLocalDescription.get.apply(this);\n        if (description.type === '') {\n          return description;\n        }\n        return replaceInternalStreamId(this, description);\n      }\n    });\n\n  window.RTCPeerConnection.prototype.removeTrack =\n    function removeTrack(sender) {\n      if (this.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      // We can not yet check for sender instanceof RTCRtpSender\n      // since we shim RTPSender. So we check if sender._pc is set.\n      if (!sender._pc) {\n        throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack ' +\n            'does not implement interface RTCRtpSender.', 'TypeError');\n      }\n      const isLocal = sender._pc === this;\n      if (!isLocal) {\n        throw new DOMException('Sender was not created by this connection.',\n          'InvalidAccessError');\n      }\n\n      // Search for the native stream the senders track belongs to.\n      this._streams = this._streams || {};\n      let stream;\n      Object.keys(this._streams).forEach(streamid => {\n        const hasTrack = this._streams[streamid].getTracks()\n          .find(track => sender.track === track);\n        if (hasTrack) {\n          stream = this._streams[streamid];\n        }\n      });\n\n      if (stream) {\n        if (stream.getTracks().length === 1) {\n          // if this is the last track of the stream, remove the stream. This\n          // takes care of any shimmed _senders.\n          this.removeStream(this._reverseStreams[stream.id]);\n        } else {\n          // relying on the same odd chrome behaviour as above.\n          stream.removeTrack(sender.track);\n        }\n        this.dispatchEvent(new Event('negotiationneeded'));\n      }\n    };\n}\n\nexport function shimPeerConnection(window, browserDetails) {\n  if (!window.RTCPeerConnection && window.webkitRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.webkitRTCPeerConnection;\n  }\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  // shim implicit creation of RTCSessionDescription/RTCIceCandidate\n  if (browserDetails.version < 53) {\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n      .forEach(function(method) {\n        const nativeMethod = window.RTCPeerConnection.prototype[method];\n        const methodObj = {[method]() {\n          arguments[0] = new ((method === 'addIceCandidate') ?\n            window.RTCIceCandidate :\n            window.RTCSessionDescription)(arguments[0]);\n          return nativeMethod.apply(this, arguments);\n        }};\n        window.RTCPeerConnection.prototype[method] = methodObj[method];\n      });\n  }\n}\n\n// Attempt to fix ONN in plan-b mode.\nexport function fixNegotiationNeeded(window, browserDetails) {\n  utils.wrapPeerConnectionEvent(window, 'negotiationneeded', e => {\n    const pc = e.target;\n    if (browserDetails.version < 72 || (pc.getConfiguration &&\n        pc.getConfiguration().sdpSemantics === 'plan-b')) {\n      if (pc.signalingState !== 'stable') {\n        return;\n      }\n    }\n    return e;\n  });\n}\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\n\nexport function shimGetUserMedia(window, browserDetails) {\n  const navigator = window && window.navigator;\n  const MediaStreamTrack = window && window.MediaStreamTrack;\n\n  navigator.getUserMedia = function(constraints, onSuccess, onError) {\n    // Replace Firefox 44+'s deprecation warning with unprefixed version.\n    utils.deprecated('navigator.getUserMedia',\n      'navigator.mediaDevices.getUserMedia');\n    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\n  };\n\n  if (!(browserDetails.version > 55 &&\n      'autoGainControl' in navigator.mediaDevices.getSupportedConstraints())) {\n    const remap = function(obj, a, b) {\n      if (a in obj && !(b in obj)) {\n        obj[b] = obj[a];\n        delete obj[a];\n      }\n    };\n\n    const nativeGetUserMedia = navigator.mediaDevices.getUserMedia.\n      bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(c) {\n      if (typeof c === 'object' && typeof c.audio === 'object') {\n        c = JSON.parse(JSON.stringify(c));\n        remap(c.audio, 'autoGainControl', 'mozAutoGainControl');\n        remap(c.audio, 'noiseSuppression', 'mozNoiseSuppression');\n      }\n      return nativeGetUserMedia(c);\n    };\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.getSettings) {\n      const nativeGetSettings = MediaStreamTrack.prototype.getSettings;\n      MediaStreamTrack.prototype.getSettings = function() {\n        const obj = nativeGetSettings.apply(this, arguments);\n        remap(obj, 'mozAutoGainControl', 'autoGainControl');\n        remap(obj, 'mozNoiseSuppression', 'noiseSuppression');\n        return obj;\n      };\n    }\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.applyConstraints) {\n      const nativeApplyConstraints =\n        MediaStreamTrack.prototype.applyConstraints;\n      MediaStreamTrack.prototype.applyConstraints = function(c) {\n        if (this.kind === 'audio' && typeof c === 'object') {\n          c = JSON.parse(JSON.stringify(c));\n          remap(c, 'autoGainControl', 'mozAutoGainControl');\n          remap(c, 'noiseSuppression', 'mozNoiseSuppression');\n        }\n        return nativeApplyConstraints.apply(this, [c]);\n      };\n    }\n  }\n}\n", "/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nexport function shimGetDisplayMedia(window, preferredMediaSource) {\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    function getDisplayMedia(constraints) {\n      if (!(constraints && constraints.video)) {\n        const err = new DOMException('getDisplayMedia without video ' +\n            'constraints is undefined');\n        err.name = 'NotFoundError';\n        // from https://heycam.github.io/webidl/#idl-DOMException-error-names\n        err.code = 8;\n        return Promise.reject(err);\n      }\n      if (constraints.video === true) {\n        constraints.video = {mediaSource: preferredMediaSource};\n      } else {\n        constraints.video.mediaSource = preferredMediaSource;\n      }\n      return window.navigator.mediaDevices.getUserMedia(constraints);\n    };\n}\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      ('receiver' in window.RTCTrackEvent.prototype) &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimPeerConnection(window, browserDetails) {\n  if (typeof window !== 'object' ||\n      !(window.RTCPeerConnection || window.mozRTCPeerConnection)) {\n    return; // probably media.peerconnection.enabled=false in about:config\n  }\n  if (!window.RTCPeerConnection && window.mozRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.mozRTCPeerConnection;\n  }\n\n  if (browserDetails.version < 53) {\n    // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n      .forEach(function(method) {\n        const nativeMethod = window.RTCPeerConnection.prototype[method];\n        const methodObj = {[method]() {\n          arguments[0] = new ((method === 'addIceCandidate') ?\n            window.RTCIceCandidate :\n            window.RTCSessionDescription)(arguments[0]);\n          return nativeMethod.apply(this, arguments);\n        }};\n        window.RTCPeerConnection.prototype[method] = methodObj[method];\n      });\n  }\n\n  const modernStatsTypes = {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  };\n\n  const nativeGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    const [selector, onSucc, onErr] = arguments;\n    return nativeGetStats.apply(this, [selector || null])\n      .then(stats => {\n        if (browserDetails.version < 53 && !onSucc) {\n          // Shim only promise getStats with spec-hyphens in type names\n          // Leave callback version alone; misc old uses of forEach before Map\n          try {\n            stats.forEach(stat => {\n              stat.type = modernStatsTypes[stat.type] || stat.type;\n            });\n          } catch (e) {\n            if (e.name !== 'TypeError') {\n              throw e;\n            }\n            // Avoid TypeError: \"type\" is read-only, in old versions. 34-43ish\n            stats.forEach((stat, i) => {\n              stats.set(i, Object.assign({}, stat, {\n                type: modernStatsTypes[stat.type] || stat.type\n              }));\n            });\n          }\n        }\n        return stats;\n      })\n      .then(onSucc, onErr);\n  };\n}\n\nexport function shimSenderGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpSender.prototype) {\n    return;\n  }\n  const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n  if (origGetSenders) {\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n  }\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  if (origAddTrack) {\n    window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n      const sender = origAddTrack.apply(this, arguments);\n      sender._pc = this;\n      return sender;\n    };\n  }\n  window.RTCRtpSender.prototype.getStats = function getStats() {\n    return this.track ? this._pc.getStats(this.track) :\n      Promise.resolve(new Map());\n  };\n}\n\nexport function shimReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpReceiver.prototype) {\n    return;\n  }\n  const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n  if (origGetReceivers) {\n    window.RTCPeerConnection.prototype.getReceivers = function getReceivers() {\n      const receivers = origGetReceivers.apply(this, []);\n      receivers.forEach(receiver => receiver._pc = this);\n      return receivers;\n    };\n  }\n  utils.wrapPeerConnectionEvent(window, 'track', e => {\n    e.receiver._pc = e.srcElement;\n    return e;\n  });\n  window.RTCRtpReceiver.prototype.getStats = function getStats() {\n    return this._pc.getStats(this.track);\n  };\n}\n\nexport function shimRemoveStream(window) {\n  if (!window.RTCPeerConnection ||\n      'removeStream' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      utils.deprecated('removeStream', 'removeTrack');\n      this.getSenders().forEach(sender => {\n        if (sender.track && stream.getTracks().includes(sender.track)) {\n          this.removeTrack(sender);\n        }\n      });\n    };\n}\n\nexport function shimRTCDataChannel(window) {\n  // rename DataChannel to RTCDataChannel (native fix in FF60):\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1173851\n  if (window.DataChannel && !window.RTCDataChannel) {\n    window.RTCDataChannel = window.DataChannel;\n  }\n}\n\nexport function shimAddTransceiver(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origAddTransceiver = window.RTCPeerConnection.prototype.addTransceiver;\n  if (origAddTransceiver) {\n    window.RTCPeerConnection.prototype.addTransceiver =\n      function addTransceiver() {\n        this.setParametersPromises = [];\n        // WebIDL input coercion and validation\n        let sendEncodings = arguments[1] && arguments[1].sendEncodings;\n        if (sendEncodings === undefined) {\n          sendEncodings = [];\n        }\n        sendEncodings = [...sendEncodings];\n        const shouldPerformCheck = sendEncodings.length > 0;\n        if (shouldPerformCheck) {\n          // If sendEncodings params are provided, validate grammar\n          sendEncodings.forEach((encodingParam) => {\n            if ('rid' in encodingParam) {\n              const ridRegex = /^[a-z0-9]{0,16}$/i;\n              if (!ridRegex.test(encodingParam.rid)) {\n                throw new TypeError('Invalid RID value provided.');\n              }\n            }\n            if ('scaleResolutionDownBy' in encodingParam) {\n              if (!(parseFloat(encodingParam.scaleResolutionDownBy) >= 1.0)) {\n                throw new RangeError('scale_resolution_down_by must be >= 1.0');\n              }\n            }\n            if ('maxFramerate' in encodingParam) {\n              if (!(parseFloat(encodingParam.maxFramerate) >= 0)) {\n                throw new RangeError('max_framerate must be >= 0.0');\n              }\n            }\n          });\n        }\n        const transceiver = origAddTransceiver.apply(this, arguments);\n        if (shouldPerformCheck) {\n          // Check if the init options were applied. If not we do this in an\n          // asynchronous way and save the promise reference in a global object.\n          // This is an ugly hack, but at the same time is way more robust than\n          // checking the sender parameters before and after the createOffer\n          // Also note that after the createoffer we are not 100% sure that\n          // the params were asynchronously applied so we might miss the\n          // opportunity to recreate offer.\n          const {sender} = transceiver;\n          const params = sender.getParameters();\n          if (!('encodings' in params) ||\n              // Avoid being fooled by patched getParameters() below.\n              (params.encodings.length === 1 &&\n               Object.keys(params.encodings[0]).length === 0)) {\n            params.encodings = sendEncodings;\n            sender.sendEncodings = sendEncodings;\n            this.setParametersPromises.push(sender.setParameters(params)\n              .then(() => {\n                delete sender.sendEncodings;\n              }).catch(() => {\n                delete sender.sendEncodings;\n              })\n            );\n          }\n        }\n        return transceiver;\n      };\n  }\n}\n\nexport function shimGetParameters(window) {\n  if (!(typeof window === 'object' && window.RTCRtpSender)) {\n    return;\n  }\n  const origGetParameters = window.RTCRtpSender.prototype.getParameters;\n  if (origGetParameters) {\n    window.RTCRtpSender.prototype.getParameters =\n      function getParameters() {\n        const params = origGetParameters.apply(this, arguments);\n        if (!('encodings' in params)) {\n          params.encodings = [].concat(this.sendEncodings || [{}]);\n        }\n        return params;\n      };\n  }\n}\n\nexport function shimCreateOffer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer = function createOffer() {\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises)\n        .then(() => {\n          return origCreateOffer.apply(this, arguments);\n        })\n        .finally(() => {\n          this.setParametersPromises = [];\n        });\n    }\n    return origCreateOffer.apply(this, arguments);\n  };\n}\n\nexport function shimCreateAnswer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origCreateAnswer = window.RTCPeerConnection.prototype.createAnswer;\n  window.RTCPeerConnection.prototype.createAnswer = function createAnswer() {\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises)\n        .then(() => {\n          return origCreateAnswer.apply(this, arguments);\n        })\n        .finally(() => {\n          this.setParametersPromises = [];\n        });\n    }\n    return origCreateAnswer.apply(this, arguments);\n  };\n}\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n'use strict';\nimport * as utils from '../utils';\n\nexport function shimLocalStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getLocalStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getLocalStreams =\n      function getLocalStreams() {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        return this._localStreams;\n      };\n  }\n  if (!('addStream' in window.RTCPeerConnection.prototype)) {\n    const _addTrack = window.RTCPeerConnection.prototype.addTrack;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      if (!this._localStreams) {\n        this._localStreams = [];\n      }\n      if (!this._localStreams.includes(stream)) {\n        this._localStreams.push(stream);\n      }\n      // Try to emulate Chrome's behaviour of adding in audio-video order.\n      // Safari orders by track id.\n      stream.getAudioTracks().forEach(track => _addTrack.call(this, track,\n        stream));\n      stream.getVideoTracks().forEach(track => _addTrack.call(this, track,\n        stream));\n    };\n\n    window.RTCPeerConnection.prototype.addTrack =\n      function addTrack(track, ...streams) {\n        if (streams) {\n          streams.forEach((stream) => {\n            if (!this._localStreams) {\n              this._localStreams = [stream];\n            } else if (!this._localStreams.includes(stream)) {\n              this._localStreams.push(stream);\n            }\n          });\n        }\n        return _addTrack.apply(this, arguments);\n      };\n  }\n  if (!('removeStream' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.removeStream =\n      function removeStream(stream) {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        const index = this._localStreams.indexOf(stream);\n        if (index === -1) {\n          return;\n        }\n        this._localStreams.splice(index, 1);\n        const tracks = stream.getTracks();\n        this.getSenders().forEach(sender => {\n          if (tracks.includes(sender.track)) {\n            this.removeTrack(sender);\n          }\n        });\n      };\n  }\n}\n\nexport function shimRemoteStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getRemoteStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getRemoteStreams =\n      function getRemoteStreams() {\n        return this._remoteStreams ? this._remoteStreams : [];\n      };\n  }\n  if (!('onaddstream' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'onaddstream', {\n      get() {\n        return this._onaddstream;\n      },\n      set(f) {\n        if (this._onaddstream) {\n          this.removeEventListener('addstream', this._onaddstream);\n          this.removeEventListener('track', this._onaddstreampoly);\n        }\n        this.addEventListener('addstream', this._onaddstream = f);\n        this.addEventListener('track', this._onaddstreampoly = (e) => {\n          e.streams.forEach(stream => {\n            if (!this._remoteStreams) {\n              this._remoteStreams = [];\n            }\n            if (this._remoteStreams.includes(stream)) {\n              return;\n            }\n            this._remoteStreams.push(stream);\n            const event = new Event('addstream');\n            event.stream = stream;\n            this.dispatchEvent(event);\n          });\n        });\n      }\n    });\n    const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription =\n      function setRemoteDescription() {\n        const pc = this;\n        if (!this._onaddstreampoly) {\n          this.addEventListener('track', this._onaddstreampoly = function(e) {\n            e.streams.forEach(stream => {\n              if (!pc._remoteStreams) {\n                pc._remoteStreams = [];\n              }\n              if (pc._remoteStreams.indexOf(stream) >= 0) {\n                return;\n              }\n              pc._remoteStreams.push(stream);\n              const event = new Event('addstream');\n              event.stream = stream;\n              pc.dispatchEvent(event);\n            });\n          });\n        }\n        return origSetRemoteDescription.apply(pc, arguments);\n      };\n  }\n}\n\nexport function shimCallbacksAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  const prototype = window.RTCPeerConnection.prototype;\n  const origCreateOffer = prototype.createOffer;\n  const origCreateAnswer = prototype.createAnswer;\n  const setLocalDescription = prototype.setLocalDescription;\n  const setRemoteDescription = prototype.setRemoteDescription;\n  const addIceCandidate = prototype.addIceCandidate;\n\n  prototype.createOffer =\n    function createOffer(successCallback, failureCallback) {\n      const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      const promise = origCreateOffer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n  prototype.createAnswer =\n    function createAnswer(successCallback, failureCallback) {\n      const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      const promise = origCreateAnswer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n  let withCallback = function(description, successCallback, failureCallback) {\n    const promise = setLocalDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setLocalDescription = withCallback;\n\n  withCallback = function(description, successCallback, failureCallback) {\n    const promise = setRemoteDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setRemoteDescription = withCallback;\n\n  withCallback = function(candidate, successCallback, failureCallback) {\n    const promise = addIceCandidate.apply(this, [candidate]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.addIceCandidate = withCallback;\n}\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    // shim not needed in Safari 12.1\n    const mediaDevices = navigator.mediaDevices;\n    const _getUserMedia = mediaDevices.getUserMedia.bind(mediaDevices);\n    navigator.mediaDevices.getUserMedia = (constraints) => {\n      return _getUserMedia(shimConstraints(constraints));\n    };\n  }\n\n  if (!navigator.getUserMedia && navigator.mediaDevices &&\n    navigator.mediaDevices.getUserMedia) {\n    navigator.getUserMedia = function getUserMedia(constraints, cb, errcb) {\n      navigator.mediaDevices.getUserMedia(constraints)\n        .then(cb, errcb);\n    }.bind(navigator);\n  }\n}\n\nexport function shimConstraints(constraints) {\n  if (constraints && constraints.video !== undefined) {\n    return Object.assign({},\n      constraints,\n      {video: utils.compactObject(constraints.video)}\n    );\n  }\n\n  return constraints;\n}\n\nexport function shimRTCIceServerUrls(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\n  const OrigPeerConnection = window.RTCPeerConnection;\n  window.RTCPeerConnection =\n    function RTCPeerConnection(pcConfig, pcConstraints) {\n      if (pcConfig && pcConfig.iceServers) {\n        const newIceServers = [];\n        for (let i = 0; i < pcConfig.iceServers.length; i++) {\n          let server = pcConfig.iceServers[i];\n          if (server.urls === undefined && server.url) {\n            utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n            server = JSON.parse(JSON.stringify(server));\n            server.urls = server.url;\n            delete server.url;\n            newIceServers.push(server);\n          } else {\n            newIceServers.push(pcConfig.iceServers[i]);\n          }\n        }\n        pcConfig.iceServers = newIceServers;\n      }\n      return new OrigPeerConnection(pcConfig, pcConstraints);\n    };\n  window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\n  // wrap static methods. Currently just generateCertificate.\n  if ('generateCertificate' in OrigPeerConnection) {\n    Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n      get() {\n        return OrigPeerConnection.generateCertificate;\n      }\n    });\n  }\n}\n\nexport function shimTrackEventTransceiver(window) {\n  // Add event.transceiver member over deprecated event.receiver\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      'receiver' in window.RTCTrackEvent.prototype &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimCreateOfferLegacy(window) {\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer =\n    function createOffer(offerOptions) {\n      if (offerOptions) {\n        if (typeof offerOptions.offerToReceiveAudio !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveAudio =\n            !!offerOptions.offerToReceiveAudio;\n        }\n        const audioTransceiver = this.getTransceivers().find(transceiver =>\n          transceiver.receiver.track.kind === 'audio');\n        if (offerOptions.offerToReceiveAudio === false && audioTransceiver) {\n          if (audioTransceiver.direction === 'sendrecv') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('sendonly');\n            } else {\n              audioTransceiver.direction = 'sendonly';\n            }\n          } else if (audioTransceiver.direction === 'recvonly') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('inactive');\n            } else {\n              audioTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveAudio === true &&\n            !audioTransceiver) {\n          this.addTransceiver('audio', {direction: 'recvonly'});\n        }\n\n        if (typeof offerOptions.offerToReceiveVideo !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveVideo =\n            !!offerOptions.offerToReceiveVideo;\n        }\n        const videoTransceiver = this.getTransceivers().find(transceiver =>\n          transceiver.receiver.track.kind === 'video');\n        if (offerOptions.offerToReceiveVideo === false && videoTransceiver) {\n          if (videoTransceiver.direction === 'sendrecv') {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection('sendonly');\n            } else {\n              videoTransceiver.direction = 'sendonly';\n            }\n          } else if (videoTransceiver.direction === 'recvonly') {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection('inactive');\n            } else {\n              videoTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveVideo === true &&\n            !videoTransceiver) {\n          this.addTransceiver('video', {direction: 'recvonly'});\n        }\n      }\n      return origCreateOffer.apply(this, arguments);\n    };\n}\n\nexport function shimAudioContext(window) {\n  if (typeof window !== 'object' || window.AudioContext) {\n    return;\n  }\n  window.AudioContext = window.webkitAudioContext;\n}\n\n", "/* eslint-env node */\n'use strict';\n\n// SDP helpers.\nconst SDPUtils = {};\n\n// Generate an alphanumeric identifier for cname or mids.\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\nSDPUtils.generateIdentifier = function() {\n  return Math.random().toString(36).substring(2, 12);\n};\n\n// The RTCP CNAME used by all peerconnections from the same JS.\nSDPUtils.localCName = SDPUtils.generateIdentifier();\n\n// Splits SDP into lines, dealing with both CRLF and LF.\nSDPUtils.splitLines = function(blob) {\n  return blob.trim().split('\\n').map(line => line.trim());\n};\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\nSDPUtils.splitSections = function(blob) {\n  const parts = blob.split('\\nm=');\n  return parts.map((part, index) => (index > 0 ?\n    'm=' + part : part).trim() + '\\r\\n');\n};\n\n// Returns the session description.\nSDPUtils.getDescription = function(blob) {\n  const sections = SDPUtils.splitSections(blob);\n  return sections && sections[0];\n};\n\n// Returns the individual media sections.\nSDPUtils.getMediaSections = function(blob) {\n  const sections = SDPUtils.splitSections(blob);\n  sections.shift();\n  return sections;\n};\n\n// Returns lines that start with a certain prefix.\nSDPUtils.matchPrefix = function(blob, prefix) {\n  return SDPUtils.splitLines(blob).filter(line => line.indexOf(prefix) === 0);\n};\n\n// Parses an ICE candidate line. Sample input:\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n// rport 55996\"\n// Input can be prefixed with a=.\nSDPUtils.parseCandidate = function(line) {\n  let parts;\n  // Parse both variants.\n  if (line.indexOf('a=candidate:') === 0) {\n    parts = line.substring(12).split(' ');\n  } else {\n    parts = line.substring(10).split(' ');\n  }\n\n  const candidate = {\n    foundation: parts[0],\n    component: {1: 'rtp', 2: 'rtcp'}[parts[1]] || parts[1],\n    protocol: parts[2].toLowerCase(),\n    priority: parseInt(parts[3], 10),\n    ip: parts[4],\n    address: parts[4], // address is an alias for ip.\n    port: parseInt(parts[5], 10),\n    // skip parts[6] == 'typ'\n    type: parts[7],\n  };\n\n  for (let i = 8; i < parts.length; i += 2) {\n    switch (parts[i]) {\n      case 'raddr':\n        candidate.relatedAddress = parts[i + 1];\n        break;\n      case 'rport':\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\n        break;\n      case 'tcptype':\n        candidate.tcpType = parts[i + 1];\n        break;\n      case 'ufrag':\n        candidate.ufrag = parts[i + 1]; // for backward compatibility.\n        candidate.usernameFragment = parts[i + 1];\n        break;\n      default: // extension handling, in particular ufrag. Don't overwrite.\n        if (candidate[parts[i]] === undefined) {\n          candidate[parts[i]] = parts[i + 1];\n        }\n        break;\n    }\n  }\n  return candidate;\n};\n\n// Translates a candidate object into SDP candidate attribute.\n// This does not include the a= prefix!\nSDPUtils.writeCandidate = function(candidate) {\n  const sdp = [];\n  sdp.push(candidate.foundation);\n\n  const component = candidate.component;\n  if (component === 'rtp') {\n    sdp.push(1);\n  } else if (component === 'rtcp') {\n    sdp.push(2);\n  } else {\n    sdp.push(component);\n  }\n  sdp.push(candidate.protocol.toUpperCase());\n  sdp.push(candidate.priority);\n  sdp.push(candidate.address || candidate.ip);\n  sdp.push(candidate.port);\n\n  const type = candidate.type;\n  sdp.push('typ');\n  sdp.push(type);\n  if (type !== 'host' && candidate.relatedAddress &&\n      candidate.relatedPort) {\n    sdp.push('raddr');\n    sdp.push(candidate.relatedAddress);\n    sdp.push('rport');\n    sdp.push(candidate.relatedPort);\n  }\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n    sdp.push('tcptype');\n    sdp.push(candidate.tcpType);\n  }\n  if (candidate.usernameFragment || candidate.ufrag) {\n    sdp.push('ufrag');\n    sdp.push(candidate.usernameFragment || candidate.ufrag);\n  }\n  return 'candidate:' + sdp.join(' ');\n};\n\n// Parses an ice-options line, returns an array of option tags.\n// Sample input:\n// a=ice-options:foo bar\nSDPUtils.parseIceOptions = function(line) {\n  return line.substring(14).split(' ');\n};\n\n// Parses a rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n// a=rtpmap:111 opus/48000/2\nSDPUtils.parseRtpMap = function(line) {\n  let parts = line.substring(9).split(' ');\n  const parsed = {\n    payloadType: parseInt(parts.shift(), 10), // was: id\n  };\n\n  parts = parts[0].split('/');\n\n  parsed.name = parts[0];\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n  parsed.channels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\n  // legacy alias, got renamed back to channels in ORTC.\n  parsed.numChannels = parsed.channels;\n  return parsed;\n};\n\n// Generates a rtpmap line from RTCRtpCodecCapability or\n// RTCRtpCodecParameters.\nSDPUtils.writeRtpMap = function(codec) {\n  let pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  const channels = codec.channels || codec.numChannels || 1;\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +\n      (channels !== 1 ? '/' + channels : '') + '\\r\\n';\n};\n\n// Parses a extmap line (headerextension from RFC 5285). Sample input:\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\nSDPUtils.parseExtmap = function(line) {\n  const parts = line.substring(9).split(' ');\n  return {\n    id: parseInt(parts[0], 10),\n    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\n    uri: parts[1],\n    attributes: parts.slice(2).join(' '),\n  };\n};\n\n// Generates an extmap line from RTCRtpHeaderExtensionParameters or\n// RTCRtpHeaderExtension.\nSDPUtils.writeExtmap = function(headerExtension) {\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +\n      (headerExtension.direction && headerExtension.direction !== 'sendrecv'\n        ? '/' + headerExtension.direction\n        : '') +\n      ' ' + headerExtension.uri +\n      (headerExtension.attributes ? ' ' + headerExtension.attributes : '') +\n      '\\r\\n';\n};\n\n// Parses a fmtp line, returns dictionary. Sample input:\n// a=fmtp:96 vbr=on;cng=on\n// Also deals with vbr=on; cng=on\nSDPUtils.parseFmtp = function(line) {\n  const parsed = {};\n  let kv;\n  const parts = line.substring(line.indexOf(' ') + 1).split(';');\n  for (let j = 0; j < parts.length; j++) {\n    kv = parts[j].trim().split('=');\n    parsed[kv[0].trim()] = kv[1];\n  }\n  return parsed;\n};\n\n// Generates a fmtp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeFmtp = function(codec) {\n  let line = '';\n  let pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.parameters && Object.keys(codec.parameters).length) {\n    const params = [];\n    Object.keys(codec.parameters).forEach(param => {\n      if (codec.parameters[param] !== undefined) {\n        params.push(param + '=' + codec.parameters[param]);\n      } else {\n        params.push(param);\n      }\n    });\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n  }\n  return line;\n};\n\n// Parses a rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n// a=rtcp-fb:98 nack rpsi\nSDPUtils.parseRtcpFb = function(line) {\n  const parts = line.substring(line.indexOf(' ') + 1).split(' ');\n  return {\n    type: parts.shift(),\n    parameter: parts.join(' '),\n  };\n};\n\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeRtcpFb = function(codec) {\n  let lines = '';\n  let pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n    // FIXME: special handling for trr-int?\n    codec.rtcpFeedback.forEach(fb => {\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +\n      (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +\n          '\\r\\n';\n    });\n  }\n  return lines;\n};\n\n// Parses a RFC 5576 ssrc media attribute. Sample input:\n// a=ssrc:3735928559 cname:something\nSDPUtils.parseSsrcMedia = function(line) {\n  const sp = line.indexOf(' ');\n  const parts = {\n    ssrc: parseInt(line.substring(7, sp), 10),\n  };\n  const colon = line.indexOf(':', sp);\n  if (colon > -1) {\n    parts.attribute = line.substring(sp + 1, colon);\n    parts.value = line.substring(colon + 1);\n  } else {\n    parts.attribute = line.substring(sp + 1);\n  }\n  return parts;\n};\n\n// Parse a ssrc-group line (see RFC 5576). Sample input:\n// a=ssrc-group:semantics 12 34\nSDPUtils.parseSsrcGroup = function(line) {\n  const parts = line.substring(13).split(' ');\n  return {\n    semantics: parts.shift(),\n    ssrcs: parts.map(ssrc => parseInt(ssrc, 10)),\n  };\n};\n\n// Extracts the MID (RFC 5888) from a media section.\n// Returns the MID or undefined if no mid line was found.\nSDPUtils.getMid = function(mediaSection) {\n  const mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n  if (mid) {\n    return mid.substring(6);\n  }\n};\n\n// Parses a fingerprint line for DTLS-SRTP.\nSDPUtils.parseFingerprint = function(line) {\n  const parts = line.substring(14).split(' ');\n  return {\n    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.\n    value: parts[1].toUpperCase(), // the definition is upper-case in RFC 4572.\n  };\n};\n\n// Extracts DTLS parameters from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the fingerprint line as input. See also getIceParameters.\nSDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {\n  const lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=fingerprint:');\n  // Note: a=setup line is ignored since we use the 'auto' role in Edge.\n  return {\n    role: 'auto',\n    fingerprints: lines.map(SDPUtils.parseFingerprint),\n  };\n};\n\n// Serializes DTLS parameters to SDP.\nSDPUtils.writeDtlsParameters = function(params, setupType) {\n  let sdp = 'a=setup:' + setupType + '\\r\\n';\n  params.fingerprints.forEach(fp => {\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n  });\n  return sdp;\n};\n\n// Parses a=crypto lines into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#dictionary-rtcsrtpsdesparameters-members\nSDPUtils.parseCryptoLine = function(line) {\n  const parts = line.substring(9).split(' ');\n  return {\n    tag: parseInt(parts[0], 10),\n    cryptoSuite: parts[1],\n    keyParams: parts[2],\n    sessionParams: parts.slice(3),\n  };\n};\n\nSDPUtils.writeCryptoLine = function(parameters) {\n  return 'a=crypto:' + parameters.tag + ' ' +\n    parameters.cryptoSuite + ' ' +\n    (typeof parameters.keyParams === 'object'\n      ? SDPUtils.writeCryptoKeyParams(parameters.keyParams)\n      : parameters.keyParams) +\n    (parameters.sessionParams ? ' ' + parameters.sessionParams.join(' ') : '') +\n    '\\r\\n';\n};\n\n// Parses the crypto key parameters into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#rtcsrtpkeyparam*\nSDPUtils.parseCryptoKeyParams = function(keyParams) {\n  if (keyParams.indexOf('inline:') !== 0) {\n    return null;\n  }\n  const parts = keyParams.substring(7).split('|');\n  return {\n    keyMethod: 'inline',\n    keySalt: parts[0],\n    lifeTime: parts[1],\n    mkiValue: parts[2] ? parts[2].split(':')[0] : undefined,\n    mkiLength: parts[2] ? parts[2].split(':')[1] : undefined,\n  };\n};\n\nSDPUtils.writeCryptoKeyParams = function(keyParams) {\n  return keyParams.keyMethod + ':'\n    + keyParams.keySalt +\n    (keyParams.lifeTime ? '|' + keyParams.lifeTime : '') +\n    (keyParams.mkiValue && keyParams.mkiLength\n      ? '|' + keyParams.mkiValue + ':' + keyParams.mkiLength\n      : '');\n};\n\n// Extracts all SDES parameters.\nSDPUtils.getCryptoParameters = function(mediaSection, sessionpart) {\n  const lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=crypto:');\n  return lines.map(SDPUtils.parseCryptoLine);\n};\n\n// Parses ICE information from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the ice-ufrag and ice-pwd lines as input.\nSDPUtils.getIceParameters = function(mediaSection, sessionpart) {\n  const ufrag = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-ufrag:')[0];\n  const pwd = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-pwd:')[0];\n  if (!(ufrag && pwd)) {\n    return null;\n  }\n  return {\n    usernameFragment: ufrag.substring(12),\n    password: pwd.substring(10),\n  };\n};\n\n// Serializes ICE parameters to SDP.\nSDPUtils.writeIceParameters = function(params) {\n  let sdp = 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' +\n      'a=ice-pwd:' + params.password + '\\r\\n';\n  if (params.iceLite) {\n    sdp += 'a=ice-lite\\r\\n';\n  }\n  return sdp;\n};\n\n// Parses the SDP media section and returns RTCRtpParameters.\nSDPUtils.parseRtpParameters = function(mediaSection) {\n  const description = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: [],\n    rtcp: [],\n  };\n  const lines = SDPUtils.splitLines(mediaSection);\n  const mline = lines[0].split(' ');\n  description.profile = mline[2];\n  for (let i = 3; i < mline.length; i++) { // find all codecs from mline[3..]\n    const pt = mline[i];\n    const rtpmapline = SDPUtils.matchPrefix(\n      mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n    if (rtpmapline) {\n      const codec = SDPUtils.parseRtpMap(rtpmapline);\n      const fmtps = SDPUtils.matchPrefix(\n        mediaSection, 'a=fmtp:' + pt + ' ');\n      // Only the first a=fmtp:<pt> is considered.\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n      codec.rtcpFeedback = SDPUtils.matchPrefix(\n        mediaSection, 'a=rtcp-fb:' + pt + ' ')\n        .map(SDPUtils.parseRtcpFb);\n      description.codecs.push(codec);\n      // parse FEC mechanisms from rtpmap lines.\n      switch (codec.name.toUpperCase()) {\n        case 'RED':\n        case 'ULPFEC':\n          description.fecMechanisms.push(codec.name.toUpperCase());\n          break;\n        default: // only RED and ULPFEC are recognized as FEC mechanisms.\n          break;\n      }\n    }\n  }\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(line => {\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\n  });\n  const wildcardRtcpFb = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-fb:* ')\n    .map(SDPUtils.parseRtcpFb);\n  description.codecs.forEach(codec => {\n    wildcardRtcpFb.forEach(fb=> {\n      const duplicate = codec.rtcpFeedback.find(existingFeedback => {\n        return existingFeedback.type === fb.type &&\n          existingFeedback.parameter === fb.parameter;\n      });\n      if (!duplicate) {\n        codec.rtcpFeedback.push(fb);\n      }\n    });\n  });\n  // FIXME: parse rtcp.\n  return description;\n};\n\n// Generates parts of the SDP media section describing the capabilities /\n// parameters.\nSDPUtils.writeRtpDescription = function(kind, caps) {\n  let sdp = '';\n\n  // Build the mline.\n  sdp += 'm=' + kind + ' ';\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n  sdp += ' ' + (caps.profile || 'UDP/TLS/RTP/SAVPF') + ' ';\n  sdp += caps.codecs.map(codec => {\n    if (codec.preferredPayloadType !== undefined) {\n      return codec.preferredPayloadType;\n    }\n    return codec.payloadType;\n  }).join(' ') + '\\r\\n';\n\n  sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\n\n  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n  caps.codecs.forEach(codec => {\n    sdp += SDPUtils.writeRtpMap(codec);\n    sdp += SDPUtils.writeFmtp(codec);\n    sdp += SDPUtils.writeRtcpFb(codec);\n  });\n  let maxptime = 0;\n  caps.codecs.forEach(codec => {\n    if (codec.maxptime > maxptime) {\n      maxptime = codec.maxptime;\n    }\n  });\n  if (maxptime > 0) {\n    sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n  }\n\n  if (caps.headerExtensions) {\n    caps.headerExtensions.forEach(extension => {\n      sdp += SDPUtils.writeExtmap(extension);\n    });\n  }\n  // FIXME: write fecMechanisms.\n  return sdp;\n};\n\n// Parses the SDP media section and returns an array of\n// RTCRtpEncodingParameters.\nSDPUtils.parseRtpEncodingParameters = function(mediaSection) {\n  const encodingParameters = [];\n  const description = SDPUtils.parseRtpParameters(mediaSection);\n  const hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n  const hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\n\n  // filter a=ssrc:... cname:, ignore PlanB-msid\n  const ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(line => SDPUtils.parseSsrcMedia(line))\n    .filter(parts => parts.attribute === 'cname');\n  const primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n  let secondarySsrc;\n\n  const flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')\n    .map(line => {\n      const parts = line.substring(17).split(' ');\n      return parts.map(part => parseInt(part, 10));\n    });\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n    secondarySsrc = flows[0][1];\n  }\n\n  description.codecs.forEach(codec => {\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n      let encParam = {\n        ssrc: primarySsrc,\n        codecPayloadType: parseInt(codec.parameters.apt, 10),\n      };\n      if (primarySsrc && secondarySsrc) {\n        encParam.rtx = {ssrc: secondarySsrc};\n      }\n      encodingParameters.push(encParam);\n      if (hasRed) {\n        encParam = JSON.parse(JSON.stringify(encParam));\n        encParam.fec = {\n          ssrc: primarySsrc,\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red',\n        };\n        encodingParameters.push(encParam);\n      }\n    }\n  });\n  if (encodingParameters.length === 0 && primarySsrc) {\n    encodingParameters.push({\n      ssrc: primarySsrc,\n    });\n  }\n\n  // we support both b=AS and b=TIAS but interpret AS as TIAS.\n  let bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n  if (bandwidth.length) {\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n      bandwidth = parseInt(bandwidth[0].substring(7), 10);\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n      // use formula from JSEP to convert b=AS to TIAS value.\n      bandwidth = parseInt(bandwidth[0].substring(5), 10) * 1000 * 0.95\n          - (50 * 40 * 8);\n    } else {\n      bandwidth = undefined;\n    }\n    encodingParameters.forEach(params => {\n      params.maxBitrate = bandwidth;\n    });\n  }\n  return encodingParameters;\n};\n\n// parses http://draft.ortc.org/#rtcrtcpparameters*\nSDPUtils.parseRtcpParameters = function(mediaSection) {\n  const rtcpParameters = {};\n\n  // Gets the first SSRC. Note that with RTX there might be multiple\n  // SSRCs.\n  const remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(line => SDPUtils.parseSsrcMedia(line))\n    .filter(obj => obj.attribute === 'cname')[0];\n  if (remoteSsrc) {\n    rtcpParameters.cname = remoteSsrc.value;\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\n  }\n\n  // Edge uses the compound attribute instead of reducedSize\n  // compound is !reducedSize\n  const rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n  rtcpParameters.reducedSize = rsize.length > 0;\n  rtcpParameters.compound = rsize.length === 0;\n\n  // parses the rtcp-mux attrіbute.\n  // Note that Edge does not support unmuxed RTCP.\n  const mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n  rtcpParameters.mux = mux.length > 0;\n\n  return rtcpParameters;\n};\n\nSDPUtils.writeRtcpParameters = function(rtcpParameters) {\n  let sdp = '';\n  if (rtcpParameters.reducedSize) {\n    sdp += 'a=rtcp-rsize\\r\\n';\n  }\n  if (rtcpParameters.mux) {\n    sdp += 'a=rtcp-mux\\r\\n';\n  }\n  if (rtcpParameters.ssrc !== undefined && rtcpParameters.cname) {\n    sdp += 'a=ssrc:' + rtcpParameters.ssrc +\n      ' cname:' + rtcpParameters.cname + '\\r\\n';\n  }\n  return sdp;\n};\n\n\n// parses either a=msid: or a=ssrc:... msid lines and returns\n// the id of the MediaStream and MediaStreamTrack.\nSDPUtils.parseMsid = function(mediaSection) {\n  let parts;\n  const spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n  if (spec.length === 1) {\n    parts = spec[0].substring(7).split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n  const planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(line => SDPUtils.parseSsrcMedia(line))\n    .filter(msidParts => msidParts.attribute === 'msid');\n  if (planB.length > 0) {\n    parts = planB[0].value.split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n};\n\n// SCTP\n// parses draft-ietf-mmusic-sctp-sdp-26 first and falls back\n// to draft-ietf-mmusic-sctp-sdp-05\nSDPUtils.parseSctpDescription = function(mediaSection) {\n  const mline = SDPUtils.parseMLine(mediaSection);\n  const maxSizeLine = SDPUtils.matchPrefix(mediaSection, 'a=max-message-size:');\n  let maxMessageSize;\n  if (maxSizeLine.length > 0) {\n    maxMessageSize = parseInt(maxSizeLine[0].substring(19), 10);\n  }\n  if (isNaN(maxMessageSize)) {\n    maxMessageSize = 65536;\n  }\n  const sctpPort = SDPUtils.matchPrefix(mediaSection, 'a=sctp-port:');\n  if (sctpPort.length > 0) {\n    return {\n      port: parseInt(sctpPort[0].substring(12), 10),\n      protocol: mline.fmt,\n      maxMessageSize,\n    };\n  }\n  const sctpMapLines = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:');\n  if (sctpMapLines.length > 0) {\n    const parts = sctpMapLines[0]\n      .substring(10)\n      .split(' ');\n    return {\n      port: parseInt(parts[0], 10),\n      protocol: parts[1],\n      maxMessageSize,\n    };\n  }\n};\n\n// SCTP\n// outputs the draft-ietf-mmusic-sctp-sdp-26 version that all browsers\n// support by now receiving in this format, unless we originally parsed\n// as the draft-ietf-mmusic-sctp-sdp-05 format (indicated by the m-line\n// protocol of DTLS/SCTP -- without UDP/ or TCP/)\nSDPUtils.writeSctpDescription = function(media, sctp) {\n  let output = [];\n  if (media.protocol !== 'DTLS/SCTP') {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.protocol + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctp-port:' + sctp.port + '\\r\\n',\n    ];\n  } else {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.port + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctpmap:' + sctp.port + ' ' + sctp.protocol + ' 65535\\r\\n',\n    ];\n  }\n  if (sctp.maxMessageSize !== undefined) {\n    output.push('a=max-message-size:' + sctp.maxMessageSize + '\\r\\n');\n  }\n  return output.join('');\n};\n\n// Generate a session ID for SDP.\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\n// recommends using a cryptographically random +ve 64-bit value\n// but right now this should be acceptable and within the right range\nSDPUtils.generateSessionId = function() {\n  return Math.random().toString().substr(2, 22);\n};\n\n// Write boiler plate for start of SDP\n// sessId argument is optional - if not supplied it will\n// be generated randomly\n// sessVersion is optional and defaults to 2\n// sessUser is optional and defaults to 'thisisadapterortc'\nSDPUtils.writeSessionBoilerplate = function(sessId, sessVer, sessUser) {\n  let sessionId;\n  const version = sessVer !== undefined ? sessVer : 2;\n  if (sessId) {\n    sessionId = sessId;\n  } else {\n    sessionId = SDPUtils.generateSessionId();\n  }\n  const user = sessUser || 'thisisadapterortc';\n  // FIXME: sess-id should be an NTP timestamp.\n  return 'v=0\\r\\n' +\n      'o=' + user + ' ' + sessionId + ' ' + version +\n        ' IN IP4 127.0.0.1\\r\\n' +\n      's=-\\r\\n' +\n      't=0 0\\r\\n';\n};\n\n// Gets the direction from the mediaSection or the sessionpart.\nSDPUtils.getDirection = function(mediaSection, sessionpart) {\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n  const lines = SDPUtils.splitLines(mediaSection);\n  for (let i = 0; i < lines.length; i++) {\n    switch (lines[i]) {\n      case 'a=sendrecv':\n      case 'a=sendonly':\n      case 'a=recvonly':\n      case 'a=inactive':\n        return lines[i].substring(2);\n      default:\n        // FIXME: What should happen here?\n    }\n  }\n  if (sessionpart) {\n    return SDPUtils.getDirection(sessionpart);\n  }\n  return 'sendrecv';\n};\n\nSDPUtils.getKind = function(mediaSection) {\n  const lines = SDPUtils.splitLines(mediaSection);\n  const mline = lines[0].split(' ');\n  return mline[0].substring(2);\n};\n\nSDPUtils.isRejected = function(mediaSection) {\n  return mediaSection.split(' ', 2)[1] === '0';\n};\n\nSDPUtils.parseMLine = function(mediaSection) {\n  const lines = SDPUtils.splitLines(mediaSection);\n  const parts = lines[0].substring(2).split(' ');\n  return {\n    kind: parts[0],\n    port: parseInt(parts[1], 10),\n    protocol: parts[2],\n    fmt: parts.slice(3).join(' '),\n  };\n};\n\nSDPUtils.parseOLine = function(mediaSection) {\n  const line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];\n  const parts = line.substring(2).split(' ');\n  return {\n    username: parts[0],\n    sessionId: parts[1],\n    sessionVersion: parseInt(parts[2], 10),\n    netType: parts[3],\n    addressType: parts[4],\n    address: parts[5],\n  };\n};\n\n// a very naive interpretation of a valid SDP.\nSDPUtils.isValidSDP = function(blob) {\n  if (typeof blob !== 'string' || blob.length === 0) {\n    return false;\n  }\n  const lines = SDPUtils.splitLines(blob);\n  for (let i = 0; i < lines.length; i++) {\n    if (lines[i].length < 2 || lines[i].charAt(1) !== '=') {\n      return false;\n    }\n    // TODO: check the modifier a bit more.\n  }\n  return true;\n};\n\n// Expose public methods.\nif (typeof module === 'object') {\n  module.exports = SDPUtils;\n}\n", "/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport SDPUtils from 'sdp';\nimport * as utils from './utils';\n\nexport function shimRTCIceCandidate(window) {\n  // foundation is arbitrarily chosen as an indicator for full support for\n  // https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface\n  if (!window.RTCIceCandidate || (window.RTCIceCandidate && 'foundation' in\n      window.RTCIceCandidate.prototype)) {\n    return;\n  }\n\n  const NativeRTCIceCandidate = window.RTCIceCandidate;\n  window.RTCIceCandidate = function RTCIceCandidate(args) {\n    // Remove the a= which shouldn't be part of the candidate string.\n    if (typeof args === 'object' && args.candidate &&\n        args.candidate.indexOf('a=') === 0) {\n      args = JSON.parse(JSON.stringify(args));\n      args.candidate = args.candidate.substring(2);\n    }\n\n    if (args.candidate && args.candidate.length) {\n      // Augment the native candidate with the parsed fields.\n      const nativeCandidate = new NativeRTCIceCandidate(args);\n      const parsedCandidate = SDPUtils.parseCandidate(args.candidate);\n      for (const key in parsedCandidate) {\n        if (!(key in nativeCandidate)) {\n          Object.defineProperty(nativeCandidate, key,\n            {value: parsedCandidate[key]});\n        }\n      }\n\n      // Override serializer to not serialize the extra attributes.\n      nativeCandidate.toJSON = function toJSON() {\n        return {\n          candidate: nativeCandidate.candidate,\n          sdpMid: nativeCandidate.sdpMid,\n          sdpMLineIndex: nativeCandidate.sdpMLineIndex,\n          usernameFragment: nativeCandidate.usernameFragment,\n        };\n      };\n      return nativeCandidate;\n    }\n    return new NativeRTCIceCandidate(args);\n  };\n  window.RTCIceCandidate.prototype = NativeRTCIceCandidate.prototype;\n\n  // Hook up the augmented candidate in onicecandidate and\n  // addEventListener('icecandidate', ...)\n  utils.wrapPeerConnectionEvent(window, 'icecandidate', e => {\n    if (e.candidate) {\n      Object.defineProperty(e, 'candidate', {\n        value: new window.RTCIceCandidate(e.candidate),\n        writable: 'false'\n      });\n    }\n    return e;\n  });\n}\n\nexport function shimRTCIceCandidateRelayProtocol(window) {\n  if (!window.RTCIceCandidate || (window.RTCIceCandidate && 'relayProtocol' in\n      window.RTCIceCandidate.prototype)) {\n    return;\n  }\n\n  // Hook up the augmented candidate in onicecandidate and\n  // addEventListener('icecandidate', ...)\n  utils.wrapPeerConnectionEvent(window, 'icecandidate', e => {\n    if (e.candidate) {\n      const parsedCandidate = SDPUtils.parseCandidate(e.candidate.candidate);\n      if (parsedCandidate.type === 'relay') {\n        // This is a libwebrtc-specific mapping of local type preference\n        // to relayProtocol.\n        e.candidate.relayProtocol = {\n          0: 'tls',\n          1: 'tcp',\n          2: 'udp',\n        }[parsedCandidate.priority >> 24];\n      }\n    }\n    return e;\n  });\n}\n\nexport function shimMaxMessageSize(window, browserDetails) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  if (!('sctp' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'sctp', {\n      get() {\n        return typeof this._sctp === 'undefined' ? null : this._sctp;\n      }\n    });\n  }\n\n  const sctpInDescription = function(description) {\n    if (!description || !description.sdp) {\n      return false;\n    }\n    const sections = SDPUtils.splitSections(description.sdp);\n    sections.shift();\n    return sections.some(mediaSection => {\n      const mLine = SDPUtils.parseMLine(mediaSection);\n      return mLine && mLine.kind === 'application'\n          && mLine.protocol.indexOf('SCTP') !== -1;\n    });\n  };\n\n  const getRemoteFirefoxVersion = function(description) {\n    // TODO: Is there a better solution for detecting Firefox?\n    const match = description.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);\n    if (match === null || match.length < 2) {\n      return -1;\n    }\n    const version = parseInt(match[1], 10);\n    // Test for NaN (yes, this is ugly)\n    return version !== version ? -1 : version;\n  };\n\n  const getCanSendMaxMessageSize = function(remoteIsFirefox) {\n    // Every implementation we know can send at least 64 KiB.\n    // Note: Although Chrome is technically able to send up to 256 KiB, the\n    //       data does not reach the other peer reliably.\n    //       See: https://bugs.chromium.org/p/webrtc/issues/detail?id=8419\n    let canSendMaxMessageSize = 65536;\n    if (browserDetails.browser === 'firefox') {\n      if (browserDetails.version < 57) {\n        if (remoteIsFirefox === -1) {\n          // FF < 57 will send in 16 KiB chunks using the deprecated PPID\n          // fragmentation.\n          canSendMaxMessageSize = 16384;\n        } else {\n          // However, other FF (and RAWRTC) can reassemble PPID-fragmented\n          // messages. Thus, supporting ~2 GiB when sending.\n          canSendMaxMessageSize = 2147483637;\n        }\n      } else if (browserDetails.version < 60) {\n        // Currently, all FF >= 57 will reset the remote maximum message size\n        // to the default value when a data channel is created at a later\n        // stage. :(\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n        canSendMaxMessageSize =\n          browserDetails.version === 57 ? 65535 : 65536;\n      } else {\n        // FF >= 60 supports sending ~2 GiB\n        canSendMaxMessageSize = 2147483637;\n      }\n    }\n    return canSendMaxMessageSize;\n  };\n\n  const getMaxMessageSize = function(description, remoteIsFirefox) {\n    // Note: 65536 bytes is the default value from the SDP spec. Also,\n    //       every implementation we know supports receiving 65536 bytes.\n    let maxMessageSize = 65536;\n\n    // FF 57 has a slightly incorrect default remote max message size, so\n    // we need to adjust it here to avoid a failure when sending.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1425697\n    if (browserDetails.browser === 'firefox'\n         && browserDetails.version === 57) {\n      maxMessageSize = 65535;\n    }\n\n    const match = SDPUtils.matchPrefix(description.sdp,\n      'a=max-message-size:');\n    if (match.length > 0) {\n      maxMessageSize = parseInt(match[0].substring(19), 10);\n    } else if (browserDetails.browser === 'firefox' &&\n                remoteIsFirefox !== -1) {\n      // If the maximum message size is not present in the remote SDP and\n      // both local and remote are Firefox, the remote peer can receive\n      // ~2 GiB.\n      maxMessageSize = 2147483637;\n    }\n    return maxMessageSize;\n  };\n\n  const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription =\n    function setRemoteDescription() {\n      this._sctp = null;\n      // Chrome decided to not expose .sctp in plan-b mode.\n      // As usual, adapter.js has to do an 'ugly worakaround'\n      // to cover up the mess.\n      if (browserDetails.browser === 'chrome' && browserDetails.version >= 76) {\n        const {sdpSemantics} = this.getConfiguration();\n        if (sdpSemantics === 'plan-b') {\n          Object.defineProperty(this, 'sctp', {\n            get() {\n              return typeof this._sctp === 'undefined' ? null : this._sctp;\n            },\n            enumerable: true,\n            configurable: true,\n          });\n        }\n      }\n\n      if (sctpInDescription(arguments[0])) {\n        // Check if the remote is FF.\n        const isFirefox = getRemoteFirefoxVersion(arguments[0]);\n\n        // Get the maximum message size the local peer is capable of sending\n        const canSendMMS = getCanSendMaxMessageSize(isFirefox);\n\n        // Get the maximum message size of the remote peer.\n        const remoteMMS = getMaxMessageSize(arguments[0], isFirefox);\n\n        // Determine final maximum message size\n        let maxMessageSize;\n        if (canSendMMS === 0 && remoteMMS === 0) {\n          maxMessageSize = Number.POSITIVE_INFINITY;\n        } else if (canSendMMS === 0 || remoteMMS === 0) {\n          maxMessageSize = Math.max(canSendMMS, remoteMMS);\n        } else {\n          maxMessageSize = Math.min(canSendMMS, remoteMMS);\n        }\n\n        // Create a dummy RTCSctpTransport object and the 'maxMessageSize'\n        // attribute.\n        const sctp = {};\n        Object.defineProperty(sctp, 'maxMessageSize', {\n          get() {\n            return maxMessageSize;\n          }\n        });\n        this._sctp = sctp;\n      }\n\n      return origSetRemoteDescription.apply(this, arguments);\n    };\n}\n\nexport function shimSendThrowTypeError(window) {\n  if (!(window.RTCPeerConnection &&\n      'createDataChannel' in window.RTCPeerConnection.prototype)) {\n    return;\n  }\n\n  // Note: Although Firefox >= 57 has a native implementation, the maximum\n  //       message size can be reset for all data channels at a later stage.\n  //       See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n\n  function wrapDcSend(dc, pc) {\n    const origDataChannelSend = dc.send;\n    dc.send = function send() {\n      const data = arguments[0];\n      const length = data.length || data.size || data.byteLength;\n      if (dc.readyState === 'open' &&\n          pc.sctp && length > pc.sctp.maxMessageSize) {\n        throw new TypeError('Message too large (can send a maximum of ' +\n          pc.sctp.maxMessageSize + ' bytes)');\n      }\n      return origDataChannelSend.apply(dc, arguments);\n    };\n  }\n  const origCreateDataChannel =\n    window.RTCPeerConnection.prototype.createDataChannel;\n  window.RTCPeerConnection.prototype.createDataChannel =\n    function createDataChannel() {\n      const dataChannel = origCreateDataChannel.apply(this, arguments);\n      wrapDcSend(dataChannel, this);\n      return dataChannel;\n    };\n  utils.wrapPeerConnectionEvent(window, 'datachannel', e => {\n    wrapDcSend(e.channel, e.target);\n    return e;\n  });\n}\n\n\n/* shims RTCConnectionState by pretending it is the same as iceConnectionState.\n * See https://bugs.chromium.org/p/webrtc/issues/detail?id=6145#c12\n * for why this is a valid hack in Chrome. In Firefox it is slightly incorrect\n * since DTLS failures would be hidden. See\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1265827\n * for the Firefox tracking bug.\n */\nexport function shimConnectionState(window) {\n  if (!window.RTCPeerConnection ||\n      'connectionState' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  Object.defineProperty(proto, 'connectionState', {\n    get() {\n      return {\n        completed: 'connected',\n        checking: 'connecting'\n      }[this.iceConnectionState] || this.iceConnectionState;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(proto, 'onconnectionstatechange', {\n    get() {\n      return this._onconnectionstatechange || null;\n    },\n    set(cb) {\n      if (this._onconnectionstatechange) {\n        this.removeEventListener('connectionstatechange',\n          this._onconnectionstatechange);\n        delete this._onconnectionstatechange;\n      }\n      if (cb) {\n        this.addEventListener('connectionstatechange',\n          this._onconnectionstatechange = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ['setLocalDescription', 'setRemoteDescription'].forEach((method) => {\n    const origMethod = proto[method];\n    proto[method] = function() {\n      if (!this._connectionstatechangepoly) {\n        this._connectionstatechangepoly = e => {\n          const pc = e.target;\n          if (pc._lastConnectionState !== pc.connectionState) {\n            pc._lastConnectionState = pc.connectionState;\n            const newEvent = new Event('connectionstatechange', e);\n            pc.dispatchEvent(newEvent);\n          }\n          return e;\n        };\n        this.addEventListener('iceconnectionstatechange',\n          this._connectionstatechangepoly);\n      }\n      return origMethod.apply(this, arguments);\n    };\n  });\n}\n\nexport function removeExtmapAllowMixed(window, browserDetails) {\n  /* remove a=extmap-allow-mixed for webrtc.org < M71 */\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  if (browserDetails.browser === 'chrome' && browserDetails.version >= 71) {\n    return;\n  }\n  if (browserDetails.browser === 'safari' && browserDetails.version >= 605) {\n    return;\n  }\n  const nativeSRD = window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription =\n  function setRemoteDescription(desc) {\n    if (desc && desc.sdp && desc.sdp.indexOf('\\na=extmap-allow-mixed') !== -1) {\n      const sdp = desc.sdp.split('\\n').filter((line) => {\n        return line.trim() !== 'a=extmap-allow-mixed';\n      }).join('\\n');\n      // Safari enforces read-only-ness of RTCSessionDescription fields.\n      if (window.RTCSessionDescription &&\n          desc instanceof window.RTCSessionDescription) {\n        arguments[0] = new window.RTCSessionDescription({\n          type: desc.type,\n          sdp,\n        });\n      } else {\n        desc.sdp = sdp;\n      }\n    }\n    return nativeSRD.apply(this, arguments);\n  };\n}\n\nexport function shimAddIceCandidateNullOrEmpty(window, browserDetails) {\n  // Support for addIceCandidate(null or undefined)\n  // as well as addIceCandidate({candidate: \"\", ...})\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=978582\n  // Note: must be called before other polyfills which change the signature.\n  if (!(window.RTCPeerConnection && window.RTCPeerConnection.prototype)) {\n    return;\n  }\n  const nativeAddIceCandidate =\n      window.RTCPeerConnection.prototype.addIceCandidate;\n  if (!nativeAddIceCandidate || nativeAddIceCandidate.length === 0) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.addIceCandidate =\n    function addIceCandidate() {\n      if (!arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n        return Promise.resolve();\n      }\n      // Firefox 68+ emits and processes {candidate: \"\", ...}, ignore\n      // in older versions.\n      // Native support for ignoring exists for Chrome M77+.\n      // Safari ignores as well, exact version unknown but works in the same\n      // version that also ignores addIceCandidate(null).\n      if (((browserDetails.browser === 'chrome' && browserDetails.version < 78)\n           || (browserDetails.browser === 'firefox'\n               && browserDetails.version < 68)\n           || (browserDetails.browser === 'safari'))\n          && arguments[0] && arguments[0].candidate === '') {\n        return Promise.resolve();\n      }\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n}\n\n// Note: Make sure to call this ahead of APIs that modify\n// setLocalDescription.length\nexport function shimParameterlessSetLocalDescription(window, browserDetails) {\n  if (!(window.RTCPeerConnection && window.RTCPeerConnection.prototype)) {\n    return;\n  }\n  const nativeSetLocalDescription =\n      window.RTCPeerConnection.prototype.setLocalDescription;\n  if (!nativeSetLocalDescription || nativeSetLocalDescription.length === 0) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.setLocalDescription =\n    function setLocalDescription() {\n      let desc = arguments[0] || {};\n      if (typeof desc !== 'object' || (desc.type && desc.sdp)) {\n        return nativeSetLocalDescription.apply(this, arguments);\n      }\n      // The remaining steps should technically happen when SLD comes off the\n      // RTCPeerConnection's operations chain (not ahead of going on it), but\n      // this is too difficult to shim. Instead, this shim only covers the\n      // common case where the operations chain is empty. This is imperfect, but\n      // should cover many cases. Rationale: Even if we can't reduce the glare\n      // window to zero on imperfect implementations, there's value in tapping\n      // into the perfect negotiation pattern that several browsers support.\n      desc = {type: desc.type, sdp: desc.sdp};\n      if (!desc.type) {\n        switch (this.signalingState) {\n          case 'stable':\n          case 'have-local-offer':\n          case 'have-remote-pranswer':\n            desc.type = 'offer';\n            break;\n          default:\n            desc.type = 'answer';\n            break;\n        }\n      }\n      if (desc.sdp || (desc.type !== 'offer' && desc.type !== 'answer')) {\n        return nativeSetLocalDescription.apply(this, [desc]);\n      }\n      const func = desc.type === 'offer' ? this.createOffer : this.createAnswer;\n      return func.apply(this)\n        .then(d => nativeSetLocalDescription.apply(this, [d]));\n    };\n}\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\nimport * as utils from './utils';\n\n// Browser shims.\nimport * as chromeShim from './chrome/chrome_shim';\nimport * as firefoxShim from './firefox/firefox_shim';\nimport * as safariShim from './safari/safari_shim';\nimport * as commonShim from './common_shim';\nimport * as sdp from 'sdp';\n\n// Shimming starts here.\nexport function adapterFactory({window} = {}, options = {\n  shimChrome: true,\n  shimFirefox: true,\n  shimSafari: true,\n}) {\n  // Utils.\n  const logging = utils.log;\n  const browserDetails = utils.detectBrowser(window);\n\n  const adapter = {\n    browserDetails,\n    commonShim,\n    extractVersion: utils.extractVersion,\n    disableLog: utils.disableLog,\n    disableWarnings: utils.disableWarnings,\n    // Expose sdp as a convenience. For production apps include directly.\n    sdp,\n  };\n\n  // Shim browser if found.\n  switch (browserDetails.browser) {\n    case 'chrome':\n      if (!chromeShim || !chromeShim.shimPeerConnection ||\n          !options.shimChrome) {\n        logging('Chrome shim is not included in this adapter release.');\n        return adapter;\n      }\n      if (browserDetails.version === null) {\n        logging('Chrome shim can not determine version, not shimming.');\n        return adapter;\n      }\n      logging('adapter.js shimming chrome.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = chromeShim;\n\n      // Must be called before shimPeerConnection.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n      commonShim.shimParameterlessSetLocalDescription(window, browserDetails);\n\n      chromeShim.shimGetUserMedia(window, browserDetails);\n      chromeShim.shimMediaStream(window, browserDetails);\n      chromeShim.shimPeerConnection(window, browserDetails);\n      chromeShim.shimOnTrack(window, browserDetails);\n      chromeShim.shimAddTrackRemoveTrack(window, browserDetails);\n      chromeShim.shimGetSendersWithDtmf(window, browserDetails);\n      chromeShim.shimGetStats(window, browserDetails);\n      chromeShim.shimSenderReceiverGetStats(window, browserDetails);\n      chromeShim.fixNegotiationNeeded(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimRTCIceCandidateRelayProtocol(window, browserDetails);\n      commonShim.shimConnectionState(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\n      break;\n    case 'firefox':\n      if (!firefoxShim || !firefoxShim.shimPeerConnection ||\n          !options.shimFirefox) {\n        logging('Firefox shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming firefox.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = firefoxShim;\n\n      // Must be called before shimPeerConnection.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n      commonShim.shimParameterlessSetLocalDescription(window, browserDetails);\n\n      firefoxShim.shimGetUserMedia(window, browserDetails);\n      firefoxShim.shimPeerConnection(window, browserDetails);\n      firefoxShim.shimOnTrack(window, browserDetails);\n      firefoxShim.shimRemoveStream(window, browserDetails);\n      firefoxShim.shimSenderGetStats(window, browserDetails);\n      firefoxShim.shimReceiverGetStats(window, browserDetails);\n      firefoxShim.shimRTCDataChannel(window, browserDetails);\n      firefoxShim.shimAddTransceiver(window, browserDetails);\n      firefoxShim.shimGetParameters(window, browserDetails);\n      firefoxShim.shimCreateOffer(window, browserDetails);\n      firefoxShim.shimCreateAnswer(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimConnectionState(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      break;\n    case 'safari':\n      if (!safariShim || !options.shimSafari) {\n        logging('Safari shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming safari.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = safariShim;\n\n      // Must be called before shimCallbackAPI.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n      commonShim.shimParameterlessSetLocalDescription(window, browserDetails);\n\n      safariShim.shimRTCIceServerUrls(window, browserDetails);\n      safariShim.shimCreateOfferLegacy(window, browserDetails);\n      safariShim.shimCallbacksAPI(window, browserDetails);\n      safariShim.shimLocalStreamsAPI(window, browserDetails);\n      safariShim.shimRemoteStreamsAPI(window, browserDetails);\n      safariShim.shimTrackEventTransceiver(window, browserDetails);\n      safariShim.shimGetUserMedia(window, browserDetails);\n      safariShim.shimAudioContext(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimRTCIceCandidateRelayProtocol(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\n      break;\n    default:\n      logging('Unsupported browser!');\n      break;\n  }\n\n  return adapter;\n}\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n\n'use strict';\n\nimport {adapterFactory} from './adapter_factory.js';\n\nconst adapter =\n  adapterFactory({window: typeof window === 'undefined' ? undefined : window});\nexport default adapter;\n", "import type { KeyProviderOptions } from './types';\n\nexport const ENCRYPTION_ALGORITHM = 'AES-GCM';\n\n// We use a ringbuffer of keys so we can change them and still decode packets that were\n// encrypted with an old key. We use a size of 16 which corresponds to the four bits\n// in the frame trailer.\nexport const KEYRING_SIZE = 16;\n\n// How many consecutive frames can fail decrypting before a particular key gets marked as invalid\nexport const DECRYPTION_FAILURE_TOLERANCE = 10;\n\n// We copy the first bytes of the VP8 payload unencrypted.\n// For keyframes this is 10 bytes, for non-keyframes (delta) 3. See\n//   https://tools.ietf.org/html/rfc6386#section-9.1\n// This allows the bridge to continue detecting keyframes (only one byte needed in the JVB)\n// and is also a bit easier for the VP8 decoder (i.e. it generates funny garbage pictures\n// instead of being unable to decode).\n// This is a bit for show and we might want to reduce to 1 unconditionally in the final version.\n//\n// For audio (where frame.type is not set) we do not encrypt the opus TOC byte:\n//   https://tools.ietf.org/html/rfc6716#section-3.1\nexport const UNENCRYPTED_BYTES = {\n  key: 10,\n  delta: 3,\n  audio: 1, // frame.type is not set on audio, so this is set manually\n  empty: 0,\n} as const;\n\n/* We use a 12 byte bit IV. This is signalled in plain together with the\n packet. See https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/encrypt#parameters */\nexport const IV_LENGTH = 12;\n\n// flag set to indicate that e2ee has been setup for sender/receiver;\nexport const E2EE_FLAG = 'lk_e2ee';\n\nexport const SALT = 'LKFrameEncryptionKey';\n\nexport const KEY_PROVIDER_DEFAULTS: KeyProviderOptions = {\n  sharedKey: false,\n  ratchetSalt: SALT,\n  ratchetWindowSize: 8,\n  failureTolerance: DECRYPTION_FAILURE_TOLERANCE,\n} as const;\n\nexport const MAX_SIF_COUNT = 100;\nexport const MAX_SIF_DURATION = 2000;\n", "import type Participant from '../room/participant/Participant';\nimport type { CryptorError } from './errors';\nimport type { KeyInfo } from './types';\n\nexport enum KeyProviderEvent {\n  SetKey = 'setKey',\n  RatchetRequest = 'ratchetRequest',\n  KeyRatcheted = 'keyRatcheted',\n}\n\nexport type KeyProviderCallbacks = {\n  [KeyProviderEvent.SetKey]: (keyInfo: KeyInfo) => void;\n  [KeyProviderEvent.RatchetRequest]: (participantIdentity?: string, keyIndex?: number) => void;\n  [KeyProviderEvent.KeyRatcheted]: (material: CryptoKey, keyIndex?: number) => void;\n};\n\nexport enum KeyHandlerEvent {\n  KeyRatcheted = 'keyRatcheted',\n}\n\nexport type ParticipantKeyHandlerCallbacks = {\n  [KeyHandlerEvent.KeyRatcheted]: (\n    material: CryptoKey,\n    participantIdentity: string,\n    keyIndex?: number,\n  ) => void;\n};\n\nexport enum EncryptionEvent {\n  ParticipantEncryptionStatusChanged = 'participantEncryptionStatusChanged',\n  EncryptionError = 'encryptionError',\n}\n\nexport type E2EEManagerCallbacks = {\n  [EncryptionEvent.ParticipantEncryptionStatusChanged]: (\n    enabled: boolean,\n    participant: Participant,\n  ) => void;\n  [EncryptionEvent.EncryptionError]: (error: Error) => void;\n};\n\nexport type CryptorCallbacks = {\n  [CryptorEvent.Error]: (error: CryptorError) => void;\n};\n\nexport enum CryptorEvent {\n  Error = 'cryptorError',\n}\n", "import { ENCRYPTION_ALGORITHM } from './constants';\n\nexport function isE2EESupported() {\n  return isInsertableStreamSupported() || isScriptTransformSupported();\n}\n\nexport function isScriptTransformSupported() {\n  // @ts-ignore\n  return typeof window.RTCRtpScriptTransform !== 'undefined';\n}\n\nexport function isInsertableStreamSupported() {\n  return (\n    typeof window.RTCRtpSender !== 'undefined' &&\n    // @ts-ignore\n    typeof window.RTCRtpSender.prototype.createEncodedStreams !== 'undefined'\n  );\n}\n\nexport function isVideoFrame(\n  frame: RTCEncodedAudioFrame | RTCEncodedVideoFrame,\n): frame is RTCEncodedVideoFrame {\n  return 'type' in frame;\n}\n\nexport async function importKey(\n  keyBytes: Uint8Array | ArrayBuffer,\n  algorithm: string | { name: string } = { name: ENCRYPTION_ALGORITHM },\n  usage: 'derive' | 'encrypt' = 'encrypt',\n) {\n  // https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/importKey\n  return crypto.subtle.importKey(\n    'raw',\n    keyBytes,\n    algorithm,\n    false,\n    usage === 'derive' ? ['deriveBits', 'deriveKey'] : ['encrypt', 'decrypt'],\n  );\n}\n\nexport async function createKeyMaterialFromString(password: string) {\n  let enc = new TextEncoder();\n\n  const keyMaterial = await crypto.subtle.importKey(\n    'raw',\n    enc.encode(password),\n    {\n      name: 'PBKDF2',\n    },\n    false,\n    ['deriveBits', 'deriveKey'],\n  );\n\n  return keyMaterial;\n}\n\nexport async function createKeyMaterialFromBuffer(cryptoBuffer: ArrayBuffer) {\n  const keyMaterial = await crypto.subtle.importKey('raw', cryptoBuffer, 'HKDF', false, [\n    'deriveBits',\n    'deriveKey',\n  ]);\n\n  return keyMaterial;\n}\n\nfunction getAlgoOptions(algorithmName: string, salt: string) {\n  const textEncoder = new TextEncoder();\n  const encodedSalt = textEncoder.encode(salt);\n  switch (algorithmName) {\n    case 'HKDF':\n      return {\n        name: 'HKDF',\n        salt: encodedSalt,\n        hash: 'SHA-256',\n        info: new ArrayBuffer(128),\n      };\n    case 'PBKDF2': {\n      return {\n        name: 'PBKDF2',\n        salt: encodedSalt,\n        hash: 'SHA-256',\n        iterations: 100000,\n      };\n    }\n    default:\n      throw new Error(`algorithm ${algorithmName} is currently unsupported`);\n  }\n}\n\n/**\n * Derives a set of keys from the master key.\n * See https://tools.ietf.org/html/draft-omara-sframe-00#section-4.3.1\n */\nexport async function deriveKeys(material: CryptoKey, salt: string) {\n  const algorithmOptions = getAlgoOptions(material.algorithm.name, salt);\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/deriveKey#HKDF\n  // https://developer.mozilla.org/en-US/docs/Web/API/HkdfParams\n  const encryptionKey = await crypto.subtle.deriveKey(\n    algorithmOptions,\n    material,\n    {\n      name: ENCRYPTION_ALGORITHM,\n      length: 128,\n    },\n    false,\n    ['encrypt', 'decrypt'],\n  );\n\n  return { material, encryptionKey };\n}\n\nexport function createE2EEKey(): Uint8Array {\n  return window.crypto.getRandomValues(new Uint8Array(32));\n}\n\n/**\n * Ratchets a key. See\n * https://tools.ietf.org/html/draft-omara-sframe-00#section-4.3.5.1\n */\nexport async function ratchet(material: CryptoKey, salt: string): Promise<ArrayBuffer> {\n  const algorithmOptions = getAlgoOptions(material.algorithm.name, salt);\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/deriveBits\n  return crypto.subtle.deriveBits(algorithmOptions, material, 256);\n}\n\nexport function needsRbspUnescaping(frameData: Uint8Array) {\n  for (var i = 0; i < frameData.length - 3; i++) {\n    if (frameData[i] == 0 && frameData[i + 1] == 0 && frameData[i + 2] == 3) return true;\n  }\n  return false;\n}\n\nexport function parseRbsp(stream: Uint8Array): Uint8Array {\n  const dataOut: number[] = [];\n  var length = stream.length;\n  for (var i = 0; i < stream.length; ) {\n    // Be careful about over/underflow here. byte_length_ - 3 can underflow, and\n    // i + 3 can overflow, but byte_length_ - i can't, because i < byte_length_\n    // above, and that expression will produce the number of bytes left in\n    // the stream including the byte at i.\n    if (length - i >= 3 && !stream[i] && !stream[i + 1] && stream[i + 2] == 3) {\n      // Two rbsp bytes.\n      dataOut.push(stream[i++]);\n      dataOut.push(stream[i++]);\n      // Skip the emulation byte.\n      i++;\n    } else {\n      // Single rbsp byte.\n      dataOut.push(stream[i++]);\n    }\n  }\n  return new Uint8Array(dataOut);\n}\n\nconst kZerosInStartSequence = 2;\nconst kEmulationByte = 3;\n\nexport function writeRbsp(data_in: Uint8Array): Uint8Array {\n  const dataOut: number[] = [];\n  var numConsecutiveZeros = 0;\n  for (var i = 0; i < data_in.length; ++i) {\n    var byte = data_in[i];\n    if (byte <= kEmulationByte && numConsecutiveZeros >= kZerosInStartSequence) {\n      // Need to escape.\n      dataOut.push(kEmulationByte);\n      numConsecutiveZeros = 0;\n    }\n    dataOut.push(byte);\n    if (byte == 0) {\n      ++numConsecutiveZeros;\n    } else {\n      numConsecutiveZeros = 0;\n    }\n  }\n  return new Uint8Array(dataOut);\n}\n", "import { EventEmitter } from 'events';\nimport type TypedEventEmitter from 'typed-emitter';\nimport log from '../logger';\nimport { KEY_PROVIDER_DEFAULTS } from './constants';\nimport { type KeyProviderCallbacks, KeyProviderEvent } from './events';\nimport type { KeyInfo, KeyProviderOptions } from './types';\nimport { createKeyMaterialFromBuffer, createKeyMaterialFromString } from './utils';\n\n/**\n * @experimental\n */\nexport class BaseKeyProvider extends (EventEmitter as new () => TypedEventEmitter<KeyProviderCallbacks>) {\n  private keyInfoMap: Map<string, KeyInfo>;\n\n  private options: KeyProviderOptions;\n\n  constructor(options: Partial<KeyProviderOptions> = {}) {\n    super();\n    this.keyInfoMap = new Map();\n    this.options = { ...KEY_PROVIDER_DEFAULTS, ...options };\n    this.on(KeyProviderEvent.KeyRatcheted, this.onKeyRatcheted);\n  }\n\n  /**\n   * callback to invoke once a key has been set for a participant\n   * @param key\n   * @param participantIdentity\n   * @param keyIndex\n   */\n  protected onSetEncryptionKey(key: CryptoKey, participantIdentity?: string, keyIndex?: number) {\n    const keyInfo: KeyInfo = { key, participantIdentity, keyIndex };\n    this.keyInfoMap.set(`${participantIdentity ?? 'shared'}-${keyIndex ?? 0}`, keyInfo);\n    this.emit(KeyProviderEvent.SetKey, keyInfo);\n  }\n\n  /**\n   * callback being invoked after a ratchet request has been performed on a participant\n   * that surfaces the new key material.\n   * @param material\n   * @param keyIndex\n   */\n  protected onKeyRatcheted = (material: CryptoKey, keyIndex?: number) => {\n    log.debug('key ratcheted event received', { material, keyIndex });\n  };\n\n  getKeys() {\n    return Array.from(this.keyInfoMap.values());\n  }\n\n  getOptions() {\n    return this.options;\n  }\n\n  ratchetKey(participantIdentity?: string, keyIndex?: number) {\n    this.emit(KeyProviderEvent.RatchetRequest, participantIdentity, keyIndex);\n  }\n}\n\n/**\n * A basic KeyProvider implementation intended for a single shared\n * passphrase between all participants\n * @experimental\n */\nexport class ExternalE2EEKeyProvider extends BaseKeyProvider {\n  ratchetInterval: number | undefined;\n\n  constructor(options: Partial<Omit<KeyProviderOptions, 'sharedKey'>> = {}) {\n    const opts: Partial<KeyProviderOptions> = {\n      ...options,\n      sharedKey: true,\n      // for a shared key provider failing to decrypt for a specific participant\n      // should not mark the key as invalid, so we accept wrong keys forever\n      // and won't try to auto-ratchet\n      ratchetWindowSize: 0,\n      failureTolerance: -1,\n    };\n    super(opts);\n  }\n\n  /**\n   * Accepts a passphrase that's used to create the crypto keys.\n   * When passing in a string, PBKDF2 is used.\n   * When passing in an Array buffer of cryptographically random numbers, HKDF is being used. (recommended)\n   * @param key\n   */\n  async setKey(key: string | ArrayBuffer) {\n    const derivedKey =\n      typeof key === 'string'\n        ? await createKeyMaterialFromString(key)\n        : await createKeyMaterialFromBuffer(key);\n    this.onSetEncryptionKey(derivedKey);\n  }\n}\n", "export class LivekitError extends Error {\n  code: number;\n\n  constructor(code: number, message?: string) {\n    super(message || 'an error has occured');\n    this.code = code;\n  }\n}\n\nexport const enum ConnectionErrorReason {\n  NotAllowed,\n  ServerUnreachable,\n  InternalError,\n  Cancelled,\n  LeaveRequest,\n}\n\nexport class ConnectionError extends LivekitError {\n  status?: number;\n\n  reason?: ConnectionErrorReason;\n\n  constructor(message?: string, reason?: ConnectionErrorReason, status?: number) {\n    super(1, message);\n    this.status = status;\n    this.reason = reason;\n  }\n}\n\nexport class DeviceUnsupportedError extends LivekitError {\n  constructor(message?: string) {\n    super(21, message ?? 'device is unsupported');\n  }\n}\n\nexport class TrackInvalidError extends LivekitError {\n  constructor(message?: string) {\n    super(20, message ?? 'track is invalid');\n  }\n}\n\nexport class UnsupportedServer extends LivekitError {\n  constructor(message?: string) {\n    super(10, message ?? 'unsupported server');\n  }\n}\n\nexport class UnexpectedConnectionState extends LivekitError {\n  constructor(message?: string) {\n    super(12, message ?? 'unexpected connection state');\n  }\n}\n\nexport class NegotiationError extends LivekitError {\n  constructor(message?: string) {\n    super(13, message ?? 'unable to negotiate');\n  }\n}\n\nexport class PublishDataError extends LivekitError {\n  constructor(message?: string) {\n    super(13, message ?? 'unable to publish data');\n  }\n}\n\nexport enum MediaDeviceFailure {\n  // user rejected permissions\n  PermissionDenied = 'PermissionDenied',\n  // device is not available\n  NotFound = 'NotFound',\n  // device is in use. On Windows, only a single tab may get access to a device at a time.\n  DeviceInUse = 'DeviceInUse',\n  Other = 'Other',\n}\n\nexport namespace MediaDeviceFailure {\n  export function getFailure(error: any): MediaDeviceFailure | undefined {\n    if (error && 'name' in error) {\n      if (error.name === 'NotFoundError' || error.name === 'DevicesNotFoundError') {\n        return MediaDeviceFailure.NotFound;\n      }\n      if (error.name === 'NotAllowedError' || error.name === 'PermissionDeniedError') {\n        return MediaDeviceFailure.PermissionDenied;\n      }\n      if (error.name === 'NotReadableError' || error.name === 'TrackStartError') {\n        return MediaDeviceFailure.DeviceInUse;\n      }\n      return MediaDeviceFailure.Other;\n    }\n  }\n}\n", "/**\n * Events are the primary way LiveKit notifies your application of changes.\n *\n * The following are events emitted by [[Room]], listen to room events like\n *\n * ```typescript\n * room.on(RoomEvent.TrackPublished, (track, publication, participant) => {})\n * ```\n */\n\nexport enum RoomEvent {\n  /**\n   * When the connection to the server has been established\n   */\n  Connected = 'connected',\n\n  /**\n   * When the connection to the server has been interrupted and it's attempting\n   * to reconnect.\n   */\n  Reconnecting = 'reconnecting',\n\n  /**\n   * Fires when a reconnection has been successful.\n   */\n  Reconnected = 'reconnected',\n\n  /**\n   * When disconnected from room. This fires when room.disconnect() is called or\n   * when an unrecoverable connection issue had occured\n   */\n  Disconnected = 'disconnected',\n\n  /**\n   * Whenever the connection state of the room changes\n   *\n   * args: ([[ConnectionState]])\n   */\n  ConnectionStateChanged = 'connectionStateChanged',\n\n  /**\n   * @deprecated StateChanged has been renamed to ConnectionStateChanged\n   */\n  StateChanged = 'connectionStateChanged',\n\n  /**\n   * When input or output devices on the machine have changed.\n   */\n  MediaDevicesChanged = 'mediaDevicesChanged',\n\n  /**\n   * When a [[RemoteParticipant]] joins *after* the local\n   * participant. It will not emit events for participants that are already\n   * in the room\n   *\n   * args: ([[RemoteParticipant]])\n   */\n  ParticipantConnected = 'participantConnected',\n\n  /**\n   * When a [[RemoteParticipant]] leaves *after* the local\n   * participant has joined.\n   *\n   * args: ([[RemoteParticipant]])\n   */\n  ParticipantDisconnected = 'participantDisconnected',\n\n  /**\n   * When a new track is published to room *after* the local\n   * participant has joined. It will not fire for tracks that are already published.\n   *\n   * A track published doesn't mean the participant has subscribed to it. It's\n   * simply reflecting the state of the room.\n   *\n   * args: ([[RemoteTrackPublication]], [[RemoteParticipant]])\n   */\n  TrackPublished = 'trackPublished',\n\n  /**\n   * The [[LocalParticipant]] has subscribed to a new track. This event will **always**\n   * fire as long as new tracks are ready for use.\n   *\n   * args: ([[RemoteTrack]], [[RemoteTrackPublication]], [[RemoteParticipant]])\n   */\n  TrackSubscribed = 'trackSubscribed',\n\n  /**\n   * Could not subscribe to a track\n   *\n   * args: (track sid, [[RemoteParticipant]])\n   */\n  TrackSubscriptionFailed = 'trackSubscriptionFailed',\n\n  /**\n   * A [[RemoteParticipant]] has unpublished a track\n   *\n   * args: ([[RemoteTrackPublication]], [[RemoteParticipant]])\n   */\n  TrackUnpublished = 'trackUnpublished',\n\n  /**\n   * A subscribed track is no longer available. Clients should listen to this\n   * event and ensure they detach tracks.\n   *\n   * args: ([[Track]], [[RemoteTrackPublication]], [[RemoteParticipant]])\n   */\n  TrackUnsubscribed = 'trackUnsubscribed',\n\n  /**\n   * A track that was muted, fires on both [[RemoteParticipant]]s and [[LocalParticipant]]\n   *\n   * args: ([[TrackPublication]], [[Participant]])\n   */\n  TrackMuted = 'trackMuted',\n\n  /**\n   * A track that was unmuted, fires on both [[RemoteParticipant]]s and [[LocalParticipant]]\n   *\n   * args: ([[TrackPublication]], [[Participant]])\n   */\n  TrackUnmuted = 'trackUnmuted',\n\n  /**\n   * A local track was published successfully. This event is helpful to know\n   * when to update your local UI with the newly published track.\n   *\n   * args: ([[LocalTrackPublication]], [[LocalParticipant]])\n   */\n  LocalTrackPublished = 'localTrackPublished',\n\n  /**\n   * A local track was unpublished. This event is helpful to know when to remove\n   * the local track from your UI.\n   *\n   * When a user stops sharing their screen by pressing \"End\" on the browser UI,\n   * this event will also fire.\n   *\n   * args: ([[LocalTrackPublication]], [[LocalParticipant]])\n   */\n  LocalTrackUnpublished = 'localTrackUnpublished',\n\n  /**\n   * When a local audio track is published the SDK checks whether there is complete silence\n   * on that track and emits the LocalAudioSilenceDetected event in that case.\n   * This allows for applications to show UI informing users that they might have to\n   * reset their audio hardware or check for proper device connectivity.\n   */\n  LocalAudioSilenceDetected = 'localAudioSilenceDetected',\n\n  /**\n   * Active speakers changed. List of speakers are ordered by their audio level.\n   * loudest speakers first. This will include the LocalParticipant too.\n   *\n   * Speaker updates are sent only to the publishing participant and their subscribers.\n   *\n   * args: (Array<[[Participant]]>)\n   */\n  ActiveSpeakersChanged = 'activeSpeakersChanged',\n\n  /**\n   * Participant metadata is a simple way for app-specific state to be pushed to\n   * all users.\n   * When RoomService.UpdateParticipantMetadata is called to change a participant's\n   * state, *all*  participants in the room will fire this event.\n   *\n   * args: (prevMetadata: string, [[Participant]])\n   *\n   */\n  ParticipantMetadataChanged = 'participantMetadataChanged',\n\n  /**\n   * Participant's display name changed\n   *\n   * args: (name: string, [[Participant]])\n   *\n   */\n  ParticipantNameChanged = 'participantNameChanged',\n\n  /**\n   * Room metadata is a simple way for app-specific state to be pushed to\n   * all users.\n   * When RoomService.UpdateRoomMetadata is called to change a room's state,\n   * *all*  participants in the room will fire this event.\n   *\n   * args: (string)\n   */\n  RoomMetadataChanged = 'roomMetadataChanged',\n\n  /**\n   * Data received from another participant.\n   * Data packets provides the ability to use LiveKit to send/receive arbitrary payloads.\n   * All participants in the room will receive the messages sent to the room.\n   *\n   * args: (payload: Uint8Array, participant: [[Participant]], kind: [[DataPacket_Kind]], topic?: string)\n   */\n  DataReceived = 'dataReceived',\n\n  /**\n   * Connection quality was changed for a Participant. It'll receive updates\n   * from the local participant, as well as any [[RemoteParticipant]]s that we are\n   * subscribed to.\n   *\n   * args: (connectionQuality: [[ConnectionQuality]], participant: [[Participant]])\n   */\n  ConnectionQualityChanged = 'connectionQualityChanged',\n\n  /**\n   * StreamState indicates if a subscribed (remote) track has been paused by the SFU\n   * (typically this happens because of subscriber's bandwidth constraints)\n   *\n   * When bandwidth conditions allow, the track will be resumed automatically.\n   * TrackStreamStateChanged will also be emitted when that happens.\n   *\n   * args: (pub: [[RemoteTrackPublication]], streamState: [[Track.StreamState]],\n   *        participant: [[RemoteParticipant]])\n   */\n  TrackStreamStateChanged = 'trackStreamStateChanged',\n\n  /**\n   * One of subscribed tracks have changed its permissions for the current\n   * participant. If permission was revoked, then the track will no longer\n   * be subscribed. If permission was granted, a TrackSubscribed event will\n   * be emitted.\n   *\n   * args: (pub: [[RemoteTrackPublication]],\n   *        status: [[TrackPublication.PermissionStatus]],\n   *        participant: [[RemoteParticipant]])\n   */\n  TrackSubscriptionPermissionChanged = 'trackSubscriptionPermissionChanged',\n\n  /**\n   * One of subscribed tracks have changed its status for the current\n   * participant.\n   *\n   * args: (pub: [[RemoteTrackPublication]],\n   *        status: [[TrackPublication.SubscriptionStatus]],\n   *        participant: [[RemoteParticipant]])\n   */\n  TrackSubscriptionStatusChanged = 'trackSubscriptionStatusChanged',\n\n  /**\n   * LiveKit will attempt to autoplay all audio tracks when you attach them to\n   * audio elements. However, if that fails, we'll notify you via AudioPlaybackStatusChanged.\n   * `Room.canPlaybackAudio` will indicate if audio playback is permitted.\n   */\n  AudioPlaybackStatusChanged = 'audioPlaybackChanged',\n\n  /**\n   * LiveKit will attempt to autoplay all video tracks when you attach them to\n   * a video element. However, if that fails, we'll notify you via VideoPlaybackStatusChanged.\n   * Calling `room.startVideo()` in a user gesture event handler will resume the video playback.\n   */\n  VideoPlaybackStatusChanged = 'videoPlaybackChanged',\n\n  /**\n   * When we have encountered an error while attempting to create a track.\n   * The errors take place in getUserMedia().\n   * Use MediaDeviceFailure.getFailure(error) to get the reason of failure.\n   * [[LocalParticipant.lastCameraError]] and [[LocalParticipant.lastMicrophoneError]]\n   * will indicate if it had an error while creating the audio or video track respectively.\n   *\n   * args: (error: Error)\n   */\n  MediaDevicesError = 'mediaDevicesError',\n\n  /**\n   * A participant's permission has changed. Currently only fired on LocalParticipant.\n   * args: (prevPermissions: [[ParticipantPermission]], participant: [[Participant]])\n   */\n  ParticipantPermissionsChanged = 'participantPermissionsChanged',\n\n  /**\n   * Signal connected, can publish tracks.\n   */\n  SignalConnected = 'signalConnected',\n\n  /**\n   * Recording of a room has started/stopped. Room.isRecording will be updated too.\n   * args: (isRecording: boolean)\n   */\n  RecordingStatusChanged = 'recordingStatusChanged',\n\n  ParticipantEncryptionStatusChanged = 'participantEncryptionStatusChanged',\n\n  EncryptionError = 'encryptionError',\n  /**\n   * Emits whenever the current buffer status of a data channel changes\n   * args: (isLow: boolean, kind: [[DataPacket_Kind]])\n   */\n  DCBufferStatusChanged = 'dcBufferStatusChanged',\n\n  /**\n   * Triggered by a call to room.switchActiveDevice\n   * args: (kind: MediaDeviceKind, deviceId: string)\n   */\n  ActiveDeviceChanged = 'activeDeviceChanged',\n}\n\nexport enum ParticipantEvent {\n  /**\n   * When a new track is published to room *after* the local\n   * participant has joined. It will not fire for tracks that are already published.\n   *\n   * A track published doesn't mean the participant has subscribed to it. It's\n   * simply reflecting the state of the room.\n   *\n   * args: ([[RemoteTrackPublication]])\n   */\n  TrackPublished = 'trackPublished',\n\n  /**\n   * Successfully subscribed to the [[RemoteParticipant]]'s track.\n   * This event will **always** fire as long as new tracks are ready for use.\n   *\n   * args: ([[RemoteTrack]], [[RemoteTrackPublication]])\n   */\n  TrackSubscribed = 'trackSubscribed',\n\n  /**\n   * Could not subscribe to a track\n   *\n   * args: (track sid)\n   */\n  TrackSubscriptionFailed = 'trackSubscriptionFailed',\n\n  /**\n   * A [[RemoteParticipant]] has unpublished a track\n   *\n   * args: ([[RemoteTrackPublication]])\n   */\n  TrackUnpublished = 'trackUnpublished',\n\n  /**\n   * A subscribed track is no longer available. Clients should listen to this\n   * event and ensure they detach tracks.\n   *\n   * args: ([[RemoteTrack]], [[RemoteTrackPublication]])\n   */\n  TrackUnsubscribed = 'trackUnsubscribed',\n\n  /**\n   * A track that was muted, fires on both [[RemoteParticipant]]s and [[LocalParticipant]]\n   *\n   * args: ([[TrackPublication]])\n   */\n  TrackMuted = 'trackMuted',\n\n  /**\n   * A track that was unmuted, fires on both [[RemoteParticipant]]s and [[LocalParticipant]]\n   *\n   * args: ([[TrackPublication]])\n   */\n  TrackUnmuted = 'trackUnmuted',\n\n  /**\n   * A local track was published successfully. This event is helpful to know\n   * when to update your local UI with the newly published track.\n   *\n   * args: ([[LocalTrackPublication]])\n   */\n  LocalTrackPublished = 'localTrackPublished',\n\n  /**\n   * A local track was unpublished. This event is helpful to know when to remove\n   * the local track from your UI.\n   *\n   * When a user stops sharing their screen by pressing \"End\" on the browser UI,\n   * this event will also fire.\n   *\n   * args: ([[LocalTrackPublication]])\n   */\n  LocalTrackUnpublished = 'localTrackUnpublished',\n\n  /**\n   * Participant metadata is a simple way for app-specific state to be pushed to\n   * all users.\n   * When RoomService.UpdateParticipantMetadata is called to change a participant's\n   * state, *all*  participants in the room will fire this event.\n   * To access the current metadata, see [[Participant.metadata]].\n   *\n   * args: (prevMetadata: string)\n   *\n   */\n  ParticipantMetadataChanged = 'participantMetadataChanged',\n\n  /**\n   * Participant's display name changed\n   *\n   * args: (name: string, [[Participant]])\n   *\n   */\n  ParticipantNameChanged = 'participantNameChanged',\n\n  /**\n   * Data received from this participant as sender.\n   * Data packets provides the ability to use LiveKit to send/receive arbitrary payloads.\n   * All participants in the room will receive the messages sent to the room.\n   *\n   * args: (payload: Uint8Array, kind: [[DataPacket_Kind]])\n   */\n  DataReceived = 'dataReceived',\n\n  /**\n   * Has speaking status changed for the current participant\n   *\n   * args: (speaking: boolean)\n   */\n  IsSpeakingChanged = 'isSpeakingChanged',\n\n  /**\n   * Connection quality was changed for a Participant. It'll receive updates\n   * from the local participant, as well as any [[RemoteParticipant]]s that we are\n   * subscribed to.\n   *\n   * args: (connectionQuality: [[ConnectionQuality]])\n   */\n  ConnectionQualityChanged = 'connectionQualityChanged',\n\n  /**\n   * StreamState indicates if a subscribed track has been paused by the SFU\n   * (typically this happens because of subscriber's bandwidth constraints)\n   *\n   * When bandwidth conditions allow, the track will be resumed automatically.\n   * TrackStreamStateChanged will also be emitted when that happens.\n   *\n   * args: (pub: [[RemoteTrackPublication]], streamState: [[Track.StreamState]])\n   */\n  TrackStreamStateChanged = 'trackStreamStateChanged',\n\n  /**\n   * One of subscribed tracks have changed its permissions for the current\n   * participant. If permission was revoked, then the track will no longer\n   * be subscribed. If permission was granted, a TrackSubscribed event will\n   * be emitted.\n   *\n   * args: (pub: [[RemoteTrackPublication]],\n   *        status: [[TrackPublication.SubscriptionStatus]])\n   */\n  TrackSubscriptionPermissionChanged = 'trackSubscriptionPermissionChanged',\n\n  /**\n   * One of the remote participants publications has changed its subscription status.\n   *\n   */\n  TrackSubscriptionStatusChanged = 'trackSubscriptionStatusChanged',\n\n  // fired only on LocalParticipant\n  /** @internal */\n  MediaDevicesError = 'mediaDevicesError',\n\n  // fired only on LocalParticipant\n  /** @internal */\n  AudioStreamAcquired = 'audioStreamAcquired',\n\n  /**\n   * A participant's permission has changed. Currently only fired on LocalParticipant.\n   * args: (prevPermissions: [[ParticipantPermission]])\n   */\n  ParticipantPermissionsChanged = 'participantPermissionsChanged',\n\n  /** @internal */\n  PCTrackAdded = 'pcTrackAdded',\n}\n\n/** @internal */\nexport enum EngineEvent {\n  TransportsCreated = 'transportsCreated',\n  Connected = 'connected',\n  Disconnected = 'disconnected',\n  Resuming = 'resuming',\n  Resumed = 'resumed',\n  Restarting = 'restarting',\n  Restarted = 'restarted',\n  SignalResumed = 'signalResumed',\n  SignalRestarted = 'signalRestarted',\n  Closing = 'closing',\n  MediaTrackAdded = 'mediaTrackAdded',\n  ActiveSpeakersUpdate = 'activeSpeakersUpdate',\n  DataPacketReceived = 'dataPacketReceived',\n  RTPVideoMapUpdate = 'rtpVideoMapUpdate',\n  DCBufferStatusChanged = 'dcBufferStatusChanged',\n  ParticipantUpdate = 'participantUpdate',\n  RoomUpdate = 'roomUpdate',\n  SpeakersChanged = 'speakersChanged',\n  StreamStateChanged = 'streamStateChanged',\n  ConnectionQualityUpdate = 'connectionQualityUpdate',\n  SubscriptionError = 'subscriptionError',\n  SubscriptionPermissionUpdate = 'subscriptionPermissionUpdate',\n  RemoteMute = 'remoteMute',\n  SubscribedQualityUpdate = 'subscribedQualityUpdate',\n  LocalTrackUnpublished = 'localTrackUnpublished',\n}\n\nexport enum TrackEvent {\n  Message = 'message',\n  Muted = 'muted',\n  Unmuted = 'unmuted',\n  /**\n   * Only fires on LocalTracks\n   */\n  Restarted = 'restarted',\n  Ended = 'ended',\n  Subscribed = 'subscribed',\n  Unsubscribed = 'unsubscribed',\n  /** @internal */\n  UpdateSettings = 'updateSettings',\n  /** @internal */\n  UpdateSubscription = 'updateSubscription',\n  /** @internal */\n  AudioPlaybackStarted = 'audioPlaybackStarted',\n  /** @internal */\n  AudioPlaybackFailed = 'audioPlaybackFailed',\n  /**\n   * @internal\n   * Only fires on LocalAudioTrack instances\n   */\n  AudioSilenceDetected = 'audioSilenceDetected',\n  /** @internal */\n  VisibilityChanged = 'visibilityChanged',\n  /** @internal */\n  VideoDimensionsChanged = 'videoDimensionsChanged',\n  /** @internal */\n  VideoPlaybackStarted = 'videoPlaybackStarted',\n  /** @internal */\n  VideoPlaybackFailed = 'videoPlaybackFailed',\n  /** @internal */\n  ElementAttached = 'elementAttached',\n  /** @internal */\n  ElementDetached = 'elementDetached',\n  /**\n   * @internal\n   * Only fires on LocalTracks\n   */\n  UpstreamPaused = 'upstreamPaused',\n  /**\n   * @internal\n   * Only fires on LocalTracks\n   */\n  UpstreamResumed = 'upstreamResumed',\n  /**\n   * @internal\n   * Fires on RemoteTrackPublication\n   */\n  SubscriptionPermissionChanged = 'subscriptionPermissionChanged',\n  /**\n   * Fires on RemoteTrackPublication\n   */\n  SubscriptionStatusChanged = 'subscriptionStatusChanged',\n  /**\n   * Fires on RemoteTrackPublication\n   */\n  SubscriptionFailed = 'subscriptionFailed',\n}\n", "function r(r,e,n){var i,t,o;void 0===e&&(e=50),void 0===n&&(n={});var a=null!=(i=n.isImmediate)&&i,u=null!=(t=n.callback)&&t,c=n.maxWait,v=Date.now(),l=[];function f(){if(void 0!==c){var r=Date.now()-v;if(r+e>=c)return c-r}return e}var d=function(){var e=[].slice.call(arguments),n=this;return new Promise(function(i,t){var c=a&&void 0===o;if(void 0!==o&&clearTimeout(o),o=setTimeout(function(){if(o=void 0,v=Date.now(),!a){var i=r.apply(n,e);u&&u(i),l.forEach(function(r){return(0,r.resolve)(i)}),l=[]}},f()),c){var d=r.apply(n,e);return u&&u(d),i(d)}l.push({resolve:i,reject:t})})};return d.cancel=function(r){void 0!==o&&clearTimeout(o),l.forEach(function(e){return(0,e.reject)(r)}),l=[]},d}export{r as debounce};\n//# sourceMappingURL=index.esm.js.map\n", "// tiny, simplified version of https://github.com/lancedikson/bowser/blob/master/src/parser-browsers.js\n// reduced to only differentiate Chrome(ium) based browsers / Firefox / Safari\n\nconst commonVersionIdentifier = /version\\/(\\d+(\\.?_?\\d+)+)/i;\n\nexport type DetectableBrowser = 'Chrome' | 'Firefox' | 'Safari';\nexport type DetectableOS = 'iOS' | 'macOS';\n\nexport type BrowserDetails = {\n  name: DetectableBrowser;\n  version: string;\n  os?: DetectableOS;\n};\n\nlet browserDetails: BrowserDetails | undefined;\n\n/**\n * @internal\n */\nexport function getBrowser(userAgent?: string, force = true) {\n  if (typeof userAgent === 'undefined' && typeof navigator === 'undefined') {\n    return;\n  }\n  const ua = (userAgent ?? navigator.userAgent).toLowerCase();\n  if (browserDetails === undefined || force) {\n    const browser = browsersList.find(({ test }) => test.test(ua));\n    browserDetails = browser?.describe(ua);\n  }\n  return browserDetails;\n}\n\nconst browsersList = [\n  {\n    test: /firefox|iceweasel|fxios/i,\n    describe(ua: string) {\n      const browser: BrowserDetails = {\n        name: 'Firefox',\n        version: getMatch(/(?:firefox|iceweasel|fxios)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua),\n        os: ua.toLowerCase().includes('fxios') ? 'iOS' : undefined,\n      };\n      return browser;\n    },\n  },\n  {\n    test: /chrom|crios|crmo/i,\n    describe(ua: string) {\n      const browser: BrowserDetails = {\n        name: 'Chrome',\n        version: getMatch(/(?:chrome|chromium|crios|crmo)\\/(\\d+(\\.?_?\\d+)+)/i, ua),\n        os: ua.toLowerCase().includes('crios') ? 'iOS' : undefined,\n      };\n\n      return browser;\n    },\n  },\n  /* Safari */\n  {\n    test: /safari|applewebkit/i,\n    describe(ua: string) {\n      const browser: BrowserDetails = {\n        name: 'Safari',\n        version: getMatch(commonVersionIdentifier, ua),\n        os: ua.includes('mobile/') ? 'iOS' : 'macOS',\n      };\n\n      return browser;\n    },\n  },\n];\n\nfunction getMatch(exp: RegExp, ua: string, id = 1) {\n  const match = ua.match(exp);\n  return (match && match.length >= id && match[id]) || '';\n}\n", "import { version as v } from '../package.json';\n\nexport const version = v;\nexport const protocolVersion = 11;\n", "/**\n * Timers that can be overridden with platform specific implementations\n * that ensure that they are fired. These should be used when it is critical\n * that the timer fires on time.\n */\nexport default class CriticalTimers {\n  // eslint-disable-next-line @typescript-eslint/no-implied-eval\n  static setTimeout = (...args: Parameters<typeof setTimeout>) => setTimeout(...args);\n\n  // eslint-disable-next-line @typescript-eslint/no-implied-eval\n  static setInterval = (...args: Parameters<typeof setInterval>) => setInterval(...args);\n\n  static clearTimeout = (...args: Parameters<typeof clearTimeout>) => clearTimeout(...args);\n\n  static clearInterval = (...args: Parameters<typeof clearInterval>) => clearInterval(...args);\n}\n", "import type { Track } from './Track';\n\nexport interface TrackPublishDefaults {\n  /**\n   * encoding parameters for camera track\n   */\n  videoEncoding?: VideoEncoding;\n\n  /**\n   * Multi-codec Simulcast\n   * VP9 and AV1 are not supported by all browser clients. When backupCodec is\n   * set, when an incompatible client attempts to subscribe to the track, LiveKit\n   * will automatically publish a secondary track encoded with the backup codec.\n   *\n   * You could customize specific encoding parameters of the backup track by\n   * explicitly setting codec and encoding fields.\n   *\n   * Defaults to `true`\n   */\n  backupCodec?: true | false | { codec: BackupVideoCodec; encoding?: VideoEncoding };\n\n  /**\n   * encoding parameters for screen share track\n   */\n  screenShareEncoding?: VideoEncoding;\n\n  /**\n   * codec, defaults to vp8; for svc codecs, auto enable vp8\n   * as backup. (TBD)\n   */\n  videoCodec?: VideoCodec;\n\n  /**\n   * max audio bitrate, defaults to [[AudioPresets.music]]\n   * @deprecated use `audioPreset` instead\n   */\n  audioBitrate?: number;\n\n  /**\n   * which audio preset should be used for publishing (audio) tracks\n   * defaults to [[AudioPresets.music]]\n   */\n  audioPreset?: AudioPreset;\n\n  /**\n   * dtx (Discontinuous Transmission of audio), enabled by default for mono tracks.\n   */\n  dtx?: boolean;\n\n  /**\n   * red (Redundant Audio Data), enabled by default for mono tracks.\n   */\n  red?: boolean;\n\n  /**\n   * publish track in stereo mode (or set to false to disable). defaults determined by capture channel count.\n   */\n  forceStereo?: boolean;\n\n  /**\n   * use simulcast, defaults to true.\n   * When using simulcast, LiveKit will publish up to three versions of the stream\n   * at various resolutions.\n   */\n  simulcast?: boolean;\n\n  /**\n   * scalability mode for svc codecs, defaults to 'L3T3'.\n   * for svc codecs, simulcast is disabled.\n   */\n  scalabilityMode?: ScalabilityMode;\n\n  /**\n   * Up to two additional simulcast layers to publish in addition to the original\n   * Track.\n   * When left blank, it defaults to h180, h360.\n   * If a SVC codec is used (VP9 or AV1), this field has no effect.\n   *\n   * To publish three total layers, you would specify:\n   * {\n   *   videoEncoding: {...}, // encoding of the primary layer\n   *   videoSimulcastLayers: [\n   *     VideoPresets.h540,\n   *     VideoPresets.h216,\n   *   ],\n   * }\n   */\n  videoSimulcastLayers?: Array<VideoPreset>;\n\n  /**\n   * custom video simulcast layers for screen tracks\n   * Note: the layers need to be ordered from lowest to highest quality\n   */\n  screenShareSimulcastLayers?: Array<VideoPreset>;\n\n  /**\n   * For local tracks, stop the underlying MediaStreamTrack when the track is muted (or paused)\n   * on some platforms, this option is necessary to disable the microphone recording indicator.\n   * Note: when this is enabled, and BT devices are connected, they will transition between\n   * profiles (e.g. HFP to A2DP) and there will be an audible difference in playback.\n   *\n   * defaults to false\n   */\n  stopMicTrackOnMute?: boolean;\n}\n\n/**\n * Options when publishing tracks\n */\nexport interface TrackPublishOptions extends TrackPublishDefaults {\n  /**\n   * set a track name\n   */\n  name?: string;\n\n  /**\n   * Source of track, camera, microphone, or screen\n   */\n  source?: Track.Source;\n\n  /**\n   * Set stream name for the track. Audio and video tracks with the same stream name\n   * will be placed in the same `MediaStream` and offer better synchronization.\n   * By default, camera and microphone will be placed in a stream; as would screen_share and screen_share_audio\n   */\n  stream?: string;\n}\n\nexport interface CreateLocalTracksOptions {\n  /**\n   * audio track options, true to create with defaults. false if audio shouldn't be created\n   * default true\n   */\n  audio?: boolean | AudioCaptureOptions;\n\n  /**\n   * video track options, true to create with defaults. false if video shouldn't be created\n   * default true\n   */\n  video?: boolean | VideoCaptureOptions;\n}\n\nexport interface VideoCaptureOptions {\n  /**\n   * A ConstrainDOMString object specifying a device ID or an array of device\n   * IDs which are acceptable and/or required.\n   */\n  deviceId?: ConstrainDOMString;\n\n  /**\n   * a facing or an array of facings which are acceptable and/or required.\n   */\n  facingMode?: 'user' | 'environment' | 'left' | 'right';\n\n  resolution?: VideoResolution;\n}\n\nexport interface ScreenShareCaptureOptions {\n  /**\n   * true to capture audio shared. browser support for audio capturing in\n   * screenshare is limited: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getDisplayMedia#browser_compatibility\n   */\n  audio?: boolean | AudioCaptureOptions;\n\n  /**\n   * only allows for 'true' and chrome allows for additional options to be passed in\n   * https://developer.chrome.com/docs/web-platform/screen-sharing-controls/#displaySurface\n   */\n  video?: true | { displaySurface?: 'window' | 'browser' | 'monitor' };\n\n  /**\n   * capture resolution, defaults to 1080 for all browsers other than Safari\n   * On Safari 17, default resolution is not capped, due to a bug, specifying\n   * any resolution at all would lead to a low-resolution capture.\n   * https://bugs.webkit.org/show_bug.cgi?id=263015\n   */\n  resolution?: VideoResolution;\n\n  /** a CaptureController object instance containing methods that can be used to further manipulate the capture session if included. */\n  controller?: unknown; // TODO replace type with CaptureController once it lands in TypeScript\n\n  /** specifies whether the browser should allow the user to select the current tab for capture */\n  selfBrowserSurface?: 'include' | 'exclude';\n\n  /** specifies whether the browser should display a control to allow the user to dynamically switch the shared tab during screen-sharing. */\n  surfaceSwitching?: 'include' | 'exclude';\n\n  /** specifies whether the browser should include the system audio among the possible audio sources offered to the user */\n  systemAudio?: 'include' | 'exclude';\n\n  /** specify the type of content, see: https://www.w3.org/TR/mst-content-hint/#video-content-hints */\n  contentHint?: 'detail' | 'text' | 'motion';\n\n  /**\n   * Experimental option to control whether the audio playing in a tab will continue to be played out of a user's\n   * local speakers when the tab is captured.\n   */\n  suppressLocalAudioPlayback?: boolean;\n}\n\nexport interface AudioCaptureOptions {\n  /**\n   * specifies whether automatic gain control is preferred and/or required\n   */\n  autoGainControl?: ConstrainBoolean;\n\n  /**\n   * the channel count or range of channel counts which are acceptable and/or required\n   */\n  channelCount?: ConstrainULong;\n\n  /**\n   * A ConstrainDOMString object specifying a device ID or an array of device\n   * IDs which are acceptable and/or required.\n   */\n  deviceId?: ConstrainDOMString;\n\n  /**\n   * whether or not echo cancellation is preferred and/or required\n   */\n  echoCancellation?: ConstrainBoolean;\n\n  /**\n   * the latency or range of latencies which are acceptable and/or required.\n   */\n  latency?: ConstrainDouble;\n\n  /**\n   * whether noise suppression is preferred and/or required.\n   */\n  noiseSuppression?: ConstrainBoolean;\n\n  /**\n   * the sample rate or range of sample rates which are acceptable and/or required.\n   */\n  sampleRate?: ConstrainULong;\n\n  /**\n   * sample size or range of sample sizes which are acceptable and/or required.\n   */\n  sampleSize?: ConstrainULong;\n}\n\nexport interface AudioOutputOptions {\n  /**\n   * deviceId to output audio\n   *\n   * Only supported on browsers where `setSinkId` is available\n   */\n  deviceId?: string;\n}\n\nexport interface VideoResolution {\n  width: number;\n  height: number;\n  frameRate?: number;\n  aspectRatio?: number;\n}\n\nexport interface VideoEncoding {\n  maxBitrate: number;\n  maxFramerate?: number;\n  priority?: RTCPriorityType;\n}\n\nexport class VideoPreset {\n  encoding: VideoEncoding;\n\n  width: number;\n\n  height: number;\n\n  constructor(\n    width: number,\n    height: number,\n    maxBitrate: number,\n    maxFramerate?: number,\n    priority?: RTCPriorityType,\n  ) {\n    this.width = width;\n    this.height = height;\n    this.encoding = {\n      maxBitrate,\n      maxFramerate,\n      priority,\n    };\n  }\n\n  get resolution(): VideoResolution {\n    return {\n      width: this.width,\n      height: this.height,\n      frameRate: this.encoding.maxFramerate,\n      aspectRatio: this.width / this.height,\n    };\n  }\n}\n\nexport interface AudioPreset {\n  maxBitrate: number;\n  priority?: RTCPriorityType;\n}\n\nconst backupCodecs = ['vp8', 'h264'] as const;\n\nexport const videoCodecs = ['vp8', 'h264', 'vp9', 'av1'] as const;\n\nexport type VideoCodec = (typeof videoCodecs)[number];\n\nexport type BackupVideoCodec = (typeof backupCodecs)[number];\n\nexport function isBackupCodec(codec: string): codec is BackupVideoCodec {\n  return !!backupCodecs.find((backup) => backup === codec);\n}\n\n/**\n * scalability modes for svc.\n */\nexport type ScalabilityMode = 'L1T3' | 'L2T3' | 'L2T3_KEY' | 'L3T3' | 'L3T3_KEY';\n\nexport namespace AudioPresets {\n  export const telephone: AudioPreset = {\n    maxBitrate: 12_000,\n  };\n  export const speech: AudioPreset = {\n    maxBitrate: 20_000,\n  };\n  export const music: AudioPreset = {\n    maxBitrate: 32_000,\n  };\n  export const musicStereo: AudioPreset = {\n    maxBitrate: 48_000,\n  };\n  export const musicHighQuality: AudioPreset = {\n    maxBitrate: 64_000,\n  };\n  export const musicHighQualityStereo: AudioPreset = {\n    maxBitrate: 96_000,\n  };\n}\n\n/**\n * Sane presets for video resolution/encoding\n */\nexport const VideoPresets = {\n  h90: new VideoPreset(160, 90, 90_000, 20),\n  h180: new VideoPreset(320, 180, 160_000, 20),\n  h216: new VideoPreset(384, 216, 180_000, 20),\n  h360: new VideoPreset(640, 360, 450_000, 20),\n  h540: new VideoPreset(960, 540, 800_000, 25),\n  h720: new VideoPreset(1280, 720, 1_700_000, 30),\n  h1080: new VideoPreset(1920, 1080, 3_000_000, 30),\n  h1440: new VideoPreset(2560, 1440, 5_000_000, 30),\n  h2160: new VideoPreset(3840, 2160, 8_000_000, 30),\n} as const;\n\n/**\n * Four by three presets\n */\nexport const VideoPresets43 = {\n  h120: new VideoPreset(160, 120, 70_000, 20),\n  h180: new VideoPreset(240, 180, 125_000, 20),\n  h240: new VideoPreset(320, 240, 140_000, 20),\n  h360: new VideoPreset(480, 360, 330_000, 20),\n  h480: new VideoPreset(640, 480, 500_000, 20),\n  h540: new VideoPreset(720, 540, 600_000, 25),\n  h720: new VideoPreset(960, 720, 1_300_000, 30),\n  h1080: new VideoPreset(1440, 1080, 2_300_000, 30),\n  h1440: new VideoPreset(1920, 1440, 3_800_000, 30),\n} as const;\n\nexport const ScreenSharePresets = {\n  h360fps3: new VideoPreset(640, 360, 200_000, 3, 'medium'),\n  h360fps15: new VideoPreset(640, 360, 400_000, 15, 'medium'),\n  h720fps5: new VideoPreset(1280, 720, 800_000, 5, 'medium'),\n  h720fps15: new VideoPreset(1280, 720, 1_500_000, 15, 'medium'),\n  h720fps30: new VideoPreset(1280, 720, 2_000_000, 30, 'medium'),\n  h1080fps15: new VideoPreset(1920, 1080, 2_500_000, 15, 'medium'),\n  h1080fps30: new VideoPreset(1920, 1080, 5_000_000, 30, 'medium'),\n  // original resolution, without resizing\n  original: new VideoPreset(0, 0, 7_000_000, 30, 'medium'),\n} as const;\n", "// Copyright 2023 LiveKit, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// @generated by protoc-gen-es v1.4.2 with parameter \"target=ts\"\n// @generated from file livekit_rtc.proto (package livekit, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\n\nimport type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from \"@bufbuild/protobuf\";\nimport { Message, proto3, protoInt64 } from \"@bufbuild/protobuf\";\nimport { ClientConfiguration, ConnectionQuality, DisconnectReason, Encryption_Type, ParticipantInfo, ParticipantTracks, Room, ServerInfo, SpeakerInfo, SubscriptionError, TrackInfo, TrackSource, TrackType, VideoLayer, VideoQuality } from \"./livekit_models_pb.js\";\n\n/**\n * @generated from enum livekit.SignalTarget\n */\nexport enum SignalTarget {\n  /**\n   * @generated from enum value: PUBLISHER = 0;\n   */\n  PUBLISHER = 0,\n\n  /**\n   * @generated from enum value: SUBSCRIBER = 1;\n   */\n  SUBSCRIBER = 1,\n}\n// Retrieve enum metadata with: proto3.getEnumType(SignalTarget)\nproto3.util.setEnumType(SignalTarget, \"livekit.SignalTarget\", [\n  { no: 0, name: \"PUBLISHER\" },\n  { no: 1, name: \"SUBSCRIBER\" },\n]);\n\n/**\n * @generated from enum livekit.StreamState\n */\nexport enum StreamState {\n  /**\n   * @generated from enum value: ACTIVE = 0;\n   */\n  ACTIVE = 0,\n\n  /**\n   * @generated from enum value: PAUSED = 1;\n   */\n  PAUSED = 1,\n}\n// Retrieve enum metadata with: proto3.getEnumType(StreamState)\nproto3.util.setEnumType(StreamState, \"livekit.StreamState\", [\n  { no: 0, name: \"ACTIVE\" },\n  { no: 1, name: \"PAUSED\" },\n]);\n\n/**\n * @generated from enum livekit.CandidateProtocol\n */\nexport enum CandidateProtocol {\n  /**\n   * @generated from enum value: UDP = 0;\n   */\n  UDP = 0,\n\n  /**\n   * @generated from enum value: TCP = 1;\n   */\n  TCP = 1,\n\n  /**\n   * @generated from enum value: TLS = 2;\n   */\n  TLS = 2,\n}\n// Retrieve enum metadata with: proto3.getEnumType(CandidateProtocol)\nproto3.util.setEnumType(CandidateProtocol, \"livekit.CandidateProtocol\", [\n  { no: 0, name: \"UDP\" },\n  { no: 1, name: \"TCP\" },\n  { no: 2, name: \"TLS\" },\n]);\n\n/**\n * @generated from message livekit.SignalRequest\n */\nexport class SignalRequest extends Message<SignalRequest> {\n  /**\n   * @generated from oneof livekit.SignalRequest.message\n   */\n  message: {\n    /**\n     * initial join exchange, for publisher\n     *\n     * @generated from field: livekit.SessionDescription offer = 1;\n     */\n    value: SessionDescription;\n    case: \"offer\";\n  } | {\n    /**\n     * participant answering publisher offer\n     *\n     * @generated from field: livekit.SessionDescription answer = 2;\n     */\n    value: SessionDescription;\n    case: \"answer\";\n  } | {\n    /**\n     * @generated from field: livekit.TrickleRequest trickle = 3;\n     */\n    value: TrickleRequest;\n    case: \"trickle\";\n  } | {\n    /**\n     * @generated from field: livekit.AddTrackRequest add_track = 4;\n     */\n    value: AddTrackRequest;\n    case: \"addTrack\";\n  } | {\n    /**\n     * mute the participant's published tracks\n     *\n     * @generated from field: livekit.MuteTrackRequest mute = 5;\n     */\n    value: MuteTrackRequest;\n    case: \"mute\";\n  } | {\n    /**\n     * Subscribe or unsubscribe from tracks\n     *\n     * @generated from field: livekit.UpdateSubscription subscription = 6;\n     */\n    value: UpdateSubscription;\n    case: \"subscription\";\n  } | {\n    /**\n     * Update settings of subscribed tracks\n     *\n     * @generated from field: livekit.UpdateTrackSettings track_setting = 7;\n     */\n    value: UpdateTrackSettings;\n    case: \"trackSetting\";\n  } | {\n    /**\n     * Immediately terminate session\n     *\n     * @generated from field: livekit.LeaveRequest leave = 8;\n     */\n    value: LeaveRequest;\n    case: \"leave\";\n  } | {\n    /**\n     * Update published video layers\n     *\n     * @generated from field: livekit.UpdateVideoLayers update_layers = 10;\n     */\n    value: UpdateVideoLayers;\n    case: \"updateLayers\";\n  } | {\n    /**\n     * Update subscriber permissions\n     *\n     * @generated from field: livekit.SubscriptionPermission subscription_permission = 11;\n     */\n    value: SubscriptionPermission;\n    case: \"subscriptionPermission\";\n  } | {\n    /**\n     * sync client's subscribe state to server during reconnect\n     *\n     * @generated from field: livekit.SyncState sync_state = 12;\n     */\n    value: SyncState;\n    case: \"syncState\";\n  } | {\n    /**\n     * Simulate conditions, for client validations\n     *\n     * @generated from field: livekit.SimulateScenario simulate = 13;\n     */\n    value: SimulateScenario;\n    case: \"simulate\";\n  } | {\n    /**\n     * client triggered ping to server\n     *\n     * deprecated by ping_req (message Ping)\n     *\n     * @generated from field: int64 ping = 14;\n     */\n    value: bigint;\n    case: \"ping\";\n  } | {\n    /**\n     * update a participant's own metadata and/or name\n     *\n     * @generated from field: livekit.UpdateParticipantMetadata update_metadata = 15;\n     */\n    value: UpdateParticipantMetadata;\n    case: \"updateMetadata\";\n  } | {\n    /**\n     * @generated from field: livekit.Ping ping_req = 16;\n     */\n    value: Ping;\n    case: \"pingReq\";\n  } | { case: undefined; value?: undefined } = { case: undefined };\n\n  constructor(data?: PartialMessage<SignalRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.SignalRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"offer\", kind: \"message\", T: SessionDescription, oneof: \"message\" },\n    { no: 2, name: \"answer\", kind: \"message\", T: SessionDescription, oneof: \"message\" },\n    { no: 3, name: \"trickle\", kind: \"message\", T: TrickleRequest, oneof: \"message\" },\n    { no: 4, name: \"add_track\", kind: \"message\", T: AddTrackRequest, oneof: \"message\" },\n    { no: 5, name: \"mute\", kind: \"message\", T: MuteTrackRequest, oneof: \"message\" },\n    { no: 6, name: \"subscription\", kind: \"message\", T: UpdateSubscription, oneof: \"message\" },\n    { no: 7, name: \"track_setting\", kind: \"message\", T: UpdateTrackSettings, oneof: \"message\" },\n    { no: 8, name: \"leave\", kind: \"message\", T: LeaveRequest, oneof: \"message\" },\n    { no: 10, name: \"update_layers\", kind: \"message\", T: UpdateVideoLayers, oneof: \"message\" },\n    { no: 11, name: \"subscription_permission\", kind: \"message\", T: SubscriptionPermission, oneof: \"message\" },\n    { no: 12, name: \"sync_state\", kind: \"message\", T: SyncState, oneof: \"message\" },\n    { no: 13, name: \"simulate\", kind: \"message\", T: SimulateScenario, oneof: \"message\" },\n    { no: 14, name: \"ping\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */, oneof: \"message\" },\n    { no: 15, name: \"update_metadata\", kind: \"message\", T: UpdateParticipantMetadata, oneof: \"message\" },\n    { no: 16, name: \"ping_req\", kind: \"message\", T: Ping, oneof: \"message\" },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SignalRequest {\n    return new SignalRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SignalRequest {\n    return new SignalRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SignalRequest {\n    return new SignalRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: SignalRequest | PlainMessage<SignalRequest> | undefined, b: SignalRequest | PlainMessage<SignalRequest> | undefined): boolean {\n    return proto3.util.equals(SignalRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.SignalResponse\n */\nexport class SignalResponse extends Message<SignalResponse> {\n  /**\n   * @generated from oneof livekit.SignalResponse.message\n   */\n  message: {\n    /**\n     * sent when join is accepted\n     *\n     * @generated from field: livekit.JoinResponse join = 1;\n     */\n    value: JoinResponse;\n    case: \"join\";\n  } | {\n    /**\n     * sent when server answers publisher\n     *\n     * @generated from field: livekit.SessionDescription answer = 2;\n     */\n    value: SessionDescription;\n    case: \"answer\";\n  } | {\n    /**\n     * sent when server is sending subscriber an offer\n     *\n     * @generated from field: livekit.SessionDescription offer = 3;\n     */\n    value: SessionDescription;\n    case: \"offer\";\n  } | {\n    /**\n     * sent when an ICE candidate is available\n     *\n     * @generated from field: livekit.TrickleRequest trickle = 4;\n     */\n    value: TrickleRequest;\n    case: \"trickle\";\n  } | {\n    /**\n     * sent when participants in the room has changed\n     *\n     * @generated from field: livekit.ParticipantUpdate update = 5;\n     */\n    value: ParticipantUpdate;\n    case: \"update\";\n  } | {\n    /**\n     * sent to the participant when their track has been published\n     *\n     * @generated from field: livekit.TrackPublishedResponse track_published = 6;\n     */\n    value: TrackPublishedResponse;\n    case: \"trackPublished\";\n  } | {\n    /**\n     * Immediately terminate session\n     *\n     * @generated from field: livekit.LeaveRequest leave = 8;\n     */\n    value: LeaveRequest;\n    case: \"leave\";\n  } | {\n    /**\n     * server initiated mute\n     *\n     * @generated from field: livekit.MuteTrackRequest mute = 9;\n     */\n    value: MuteTrackRequest;\n    case: \"mute\";\n  } | {\n    /**\n     * indicates changes to speaker status, including when they've gone to not speaking\n     *\n     * @generated from field: livekit.SpeakersChanged speakers_changed = 10;\n     */\n    value: SpeakersChanged;\n    case: \"speakersChanged\";\n  } | {\n    /**\n     * sent when metadata of the room has changed\n     *\n     * @generated from field: livekit.RoomUpdate room_update = 11;\n     */\n    value: RoomUpdate;\n    case: \"roomUpdate\";\n  } | {\n    /**\n     * when connection quality changed\n     *\n     * @generated from field: livekit.ConnectionQualityUpdate connection_quality = 12;\n     */\n    value: ConnectionQualityUpdate;\n    case: \"connectionQuality\";\n  } | {\n    /**\n     * when streamed tracks state changed, used to notify when any of the streams were paused due to\n     * congestion\n     *\n     * @generated from field: livekit.StreamStateUpdate stream_state_update = 13;\n     */\n    value: StreamStateUpdate;\n    case: \"streamStateUpdate\";\n  } | {\n    /**\n     * when max subscribe quality changed, used by dynamic broadcasting to disable unused layers\n     *\n     * @generated from field: livekit.SubscribedQualityUpdate subscribed_quality_update = 14;\n     */\n    value: SubscribedQualityUpdate;\n    case: \"subscribedQualityUpdate\";\n  } | {\n    /**\n     * when subscription permission changed\n     *\n     * @generated from field: livekit.SubscriptionPermissionUpdate subscription_permission_update = 15;\n     */\n    value: SubscriptionPermissionUpdate;\n    case: \"subscriptionPermissionUpdate\";\n  } | {\n    /**\n     * update the token the client was using, to prevent an active client from using an expired token\n     *\n     * @generated from field: string refresh_token = 16;\n     */\n    value: string;\n    case: \"refreshToken\";\n  } | {\n    /**\n     * server initiated track unpublish\n     *\n     * @generated from field: livekit.TrackUnpublishedResponse track_unpublished = 17;\n     */\n    value: TrackUnpublishedResponse;\n    case: \"trackUnpublished\";\n  } | {\n    /**\n     * respond to ping\n     *\n     * deprecated by pong_resp (message Pong)\n     *\n     * @generated from field: int64 pong = 18;\n     */\n    value: bigint;\n    case: \"pong\";\n  } | {\n    /**\n     * sent when client reconnects\n     *\n     * @generated from field: livekit.ReconnectResponse reconnect = 19;\n     */\n    value: ReconnectResponse;\n    case: \"reconnect\";\n  } | {\n    /**\n     * respond to Ping\n     *\n     * @generated from field: livekit.Pong pong_resp = 20;\n     */\n    value: Pong;\n    case: \"pongResp\";\n  } | {\n    /**\n     * Subscription response, client should not expect any media from this subscription if it fails\n     *\n     * @generated from field: livekit.SubscriptionResponse subscription_response = 21;\n     */\n    value: SubscriptionResponse;\n    case: \"subscriptionResponse\";\n  } | { case: undefined; value?: undefined } = { case: undefined };\n\n  constructor(data?: PartialMessage<SignalResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.SignalResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"join\", kind: \"message\", T: JoinResponse, oneof: \"message\" },\n    { no: 2, name: \"answer\", kind: \"message\", T: SessionDescription, oneof: \"message\" },\n    { no: 3, name: \"offer\", kind: \"message\", T: SessionDescription, oneof: \"message\" },\n    { no: 4, name: \"trickle\", kind: \"message\", T: TrickleRequest, oneof: \"message\" },\n    { no: 5, name: \"update\", kind: \"message\", T: ParticipantUpdate, oneof: \"message\" },\n    { no: 6, name: \"track_published\", kind: \"message\", T: TrackPublishedResponse, oneof: \"message\" },\n    { no: 8, name: \"leave\", kind: \"message\", T: LeaveRequest, oneof: \"message\" },\n    { no: 9, name: \"mute\", kind: \"message\", T: MuteTrackRequest, oneof: \"message\" },\n    { no: 10, name: \"speakers_changed\", kind: \"message\", T: SpeakersChanged, oneof: \"message\" },\n    { no: 11, name: \"room_update\", kind: \"message\", T: RoomUpdate, oneof: \"message\" },\n    { no: 12, name: \"connection_quality\", kind: \"message\", T: ConnectionQualityUpdate, oneof: \"message\" },\n    { no: 13, name: \"stream_state_update\", kind: \"message\", T: StreamStateUpdate, oneof: \"message\" },\n    { no: 14, name: \"subscribed_quality_update\", kind: \"message\", T: SubscribedQualityUpdate, oneof: \"message\" },\n    { no: 15, name: \"subscription_permission_update\", kind: \"message\", T: SubscriptionPermissionUpdate, oneof: \"message\" },\n    { no: 16, name: \"refresh_token\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, oneof: \"message\" },\n    { no: 17, name: \"track_unpublished\", kind: \"message\", T: TrackUnpublishedResponse, oneof: \"message\" },\n    { no: 18, name: \"pong\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */, oneof: \"message\" },\n    { no: 19, name: \"reconnect\", kind: \"message\", T: ReconnectResponse, oneof: \"message\" },\n    { no: 20, name: \"pong_resp\", kind: \"message\", T: Pong, oneof: \"message\" },\n    { no: 21, name: \"subscription_response\", kind: \"message\", T: SubscriptionResponse, oneof: \"message\" },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SignalResponse {\n    return new SignalResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SignalResponse {\n    return new SignalResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SignalResponse {\n    return new SignalResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: SignalResponse | PlainMessage<SignalResponse> | undefined, b: SignalResponse | PlainMessage<SignalResponse> | undefined): boolean {\n    return proto3.util.equals(SignalResponse, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.SimulcastCodec\n */\nexport class SimulcastCodec extends Message<SimulcastCodec> {\n  /**\n   * @generated from field: string codec = 1;\n   */\n  codec = \"\";\n\n  /**\n   * @generated from field: string cid = 2;\n   */\n  cid = \"\";\n\n  constructor(data?: PartialMessage<SimulcastCodec>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.SimulcastCodec\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"codec\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"cid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SimulcastCodec {\n    return new SimulcastCodec().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SimulcastCodec {\n    return new SimulcastCodec().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SimulcastCodec {\n    return new SimulcastCodec().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: SimulcastCodec | PlainMessage<SimulcastCodec> | undefined, b: SimulcastCodec | PlainMessage<SimulcastCodec> | undefined): boolean {\n    return proto3.util.equals(SimulcastCodec, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.AddTrackRequest\n */\nexport class AddTrackRequest extends Message<AddTrackRequest> {\n  /**\n   * client ID of track, to match it when RTC track is received\n   *\n   * @generated from field: string cid = 1;\n   */\n  cid = \"\";\n\n  /**\n   * @generated from field: string name = 2;\n   */\n  name = \"\";\n\n  /**\n   * @generated from field: livekit.TrackType type = 3;\n   */\n  type = TrackType.AUDIO;\n\n  /**\n   * to be deprecated in favor of layers\n   *\n   * @generated from field: uint32 width = 4;\n   */\n  width = 0;\n\n  /**\n   * @generated from field: uint32 height = 5;\n   */\n  height = 0;\n\n  /**\n   * true to add track and initialize to muted\n   *\n   * @generated from field: bool muted = 6;\n   */\n  muted = false;\n\n  /**\n   * true if DTX (Discontinuous Transmission) is disabled for audio\n   *\n   * @generated from field: bool disable_dtx = 7;\n   */\n  disableDtx = false;\n\n  /**\n   * @generated from field: livekit.TrackSource source = 8;\n   */\n  source = TrackSource.UNKNOWN;\n\n  /**\n   * @generated from field: repeated livekit.VideoLayer layers = 9;\n   */\n  layers: VideoLayer[] = [];\n\n  /**\n   * @generated from field: repeated livekit.SimulcastCodec simulcast_codecs = 10;\n   */\n  simulcastCodecs: SimulcastCodec[] = [];\n\n  /**\n   * server ID of track, publish new codec to exist track\n   *\n   * @generated from field: string sid = 11;\n   */\n  sid = \"\";\n\n  /**\n   * @generated from field: bool stereo = 12;\n   */\n  stereo = false;\n\n  /**\n   * true if RED (Redundant Encoding) is disabled for audio\n   *\n   * @generated from field: bool disable_red = 13;\n   */\n  disableRed = false;\n\n  /**\n   * @generated from field: livekit.Encryption.Type encryption = 14;\n   */\n  encryption = Encryption_Type.NONE;\n\n  /**\n   * which stream the track belongs to, used to group tracks together.\n   * if not specified, server will infer it from track source to bundle camera/microphone, screenshare/audio together\n   *\n   * @generated from field: string stream = 15;\n   */\n  stream = \"\";\n\n  constructor(data?: PartialMessage<AddTrackRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.AddTrackRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"cid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"type\", kind: \"enum\", T: proto3.getEnumType(TrackType) },\n    { no: 4, name: \"width\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 5, name: \"height\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 6, name: \"muted\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 7, name: \"disable_dtx\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 8, name: \"source\", kind: \"enum\", T: proto3.getEnumType(TrackSource) },\n    { no: 9, name: \"layers\", kind: \"message\", T: VideoLayer, repeated: true },\n    { no: 10, name: \"simulcast_codecs\", kind: \"message\", T: SimulcastCodec, repeated: true },\n    { no: 11, name: \"sid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 12, name: \"stereo\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 13, name: \"disable_red\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 14, name: \"encryption\", kind: \"enum\", T: proto3.getEnumType(Encryption_Type) },\n    { no: 15, name: \"stream\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddTrackRequest {\n    return new AddTrackRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddTrackRequest {\n    return new AddTrackRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddTrackRequest {\n    return new AddTrackRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: AddTrackRequest | PlainMessage<AddTrackRequest> | undefined, b: AddTrackRequest | PlainMessage<AddTrackRequest> | undefined): boolean {\n    return proto3.util.equals(AddTrackRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.TrickleRequest\n */\nexport class TrickleRequest extends Message<TrickleRequest> {\n  /**\n   * @generated from field: string candidateInit = 1;\n   */\n  candidateInit = \"\";\n\n  /**\n   * @generated from field: livekit.SignalTarget target = 2;\n   */\n  target = SignalTarget.PUBLISHER;\n\n  constructor(data?: PartialMessage<TrickleRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.TrickleRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"candidateInit\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"target\", kind: \"enum\", T: proto3.getEnumType(SignalTarget) },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TrickleRequest {\n    return new TrickleRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TrickleRequest {\n    return new TrickleRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TrickleRequest {\n    return new TrickleRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: TrickleRequest | PlainMessage<TrickleRequest> | undefined, b: TrickleRequest | PlainMessage<TrickleRequest> | undefined): boolean {\n    return proto3.util.equals(TrickleRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.MuteTrackRequest\n */\nexport class MuteTrackRequest extends Message<MuteTrackRequest> {\n  /**\n   * @generated from field: string sid = 1;\n   */\n  sid = \"\";\n\n  /**\n   * @generated from field: bool muted = 2;\n   */\n  muted = false;\n\n  constructor(data?: PartialMessage<MuteTrackRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.MuteTrackRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"sid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"muted\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MuteTrackRequest {\n    return new MuteTrackRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MuteTrackRequest {\n    return new MuteTrackRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MuteTrackRequest {\n    return new MuteTrackRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: MuteTrackRequest | PlainMessage<MuteTrackRequest> | undefined, b: MuteTrackRequest | PlainMessage<MuteTrackRequest> | undefined): boolean {\n    return proto3.util.equals(MuteTrackRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.JoinResponse\n */\nexport class JoinResponse extends Message<JoinResponse> {\n  /**\n   * @generated from field: livekit.Room room = 1;\n   */\n  room?: Room;\n\n  /**\n   * @generated from field: livekit.ParticipantInfo participant = 2;\n   */\n  participant?: ParticipantInfo;\n\n  /**\n   * @generated from field: repeated livekit.ParticipantInfo other_participants = 3;\n   */\n  otherParticipants: ParticipantInfo[] = [];\n\n  /**\n   * deprecated. use server_info.version instead.\n   *\n   * @generated from field: string server_version = 4;\n   */\n  serverVersion = \"\";\n\n  /**\n   * @generated from field: repeated livekit.ICEServer ice_servers = 5;\n   */\n  iceServers: ICEServer[] = [];\n\n  /**\n   * use subscriber as the primary PeerConnection\n   *\n   * @generated from field: bool subscriber_primary = 6;\n   */\n  subscriberPrimary = false;\n\n  /**\n   * when the current server isn't available, return alternate url to retry connection\n   * when this is set, the other fields will be largely empty\n   *\n   * @generated from field: string alternative_url = 7;\n   */\n  alternativeUrl = \"\";\n\n  /**\n   * @generated from field: livekit.ClientConfiguration client_configuration = 8;\n   */\n  clientConfiguration?: ClientConfiguration;\n\n  /**\n   * deprecated. use server_info.region instead.\n   *\n   * @generated from field: string server_region = 9;\n   */\n  serverRegion = \"\";\n\n  /**\n   * @generated from field: int32 ping_timeout = 10;\n   */\n  pingTimeout = 0;\n\n  /**\n   * @generated from field: int32 ping_interval = 11;\n   */\n  pingInterval = 0;\n\n  /**\n   * @generated from field: livekit.ServerInfo server_info = 12;\n   */\n  serverInfo?: ServerInfo;\n\n  /**\n   * Server-Injected-Frame byte trailer, used to identify unencrypted frames when e2ee is enabled\n   *\n   * @generated from field: bytes sif_trailer = 13;\n   */\n  sifTrailer = new Uint8Array(0);\n\n  constructor(data?: PartialMessage<JoinResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.JoinResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"room\", kind: \"message\", T: Room },\n    { no: 2, name: \"participant\", kind: \"message\", T: ParticipantInfo },\n    { no: 3, name: \"other_participants\", kind: \"message\", T: ParticipantInfo, repeated: true },\n    { no: 4, name: \"server_version\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"ice_servers\", kind: \"message\", T: ICEServer, repeated: true },\n    { no: 6, name: \"subscriber_primary\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 7, name: \"alternative_url\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 8, name: \"client_configuration\", kind: \"message\", T: ClientConfiguration },\n    { no: 9, name: \"server_region\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 10, name: \"ping_timeout\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 11, name: \"ping_interval\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 12, name: \"server_info\", kind: \"message\", T: ServerInfo },\n    { no: 13, name: \"sif_trailer\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): JoinResponse {\n    return new JoinResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): JoinResponse {\n    return new JoinResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): JoinResponse {\n    return new JoinResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: JoinResponse | PlainMessage<JoinResponse> | undefined, b: JoinResponse | PlainMessage<JoinResponse> | undefined): boolean {\n    return proto3.util.equals(JoinResponse, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.ReconnectResponse\n */\nexport class ReconnectResponse extends Message<ReconnectResponse> {\n  /**\n   * @generated from field: repeated livekit.ICEServer ice_servers = 1;\n   */\n  iceServers: ICEServer[] = [];\n\n  /**\n   * @generated from field: livekit.ClientConfiguration client_configuration = 2;\n   */\n  clientConfiguration?: ClientConfiguration;\n\n  constructor(data?: PartialMessage<ReconnectResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.ReconnectResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"ice_servers\", kind: \"message\", T: ICEServer, repeated: true },\n    { no: 2, name: \"client_configuration\", kind: \"message\", T: ClientConfiguration },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReconnectResponse {\n    return new ReconnectResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReconnectResponse {\n    return new ReconnectResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReconnectResponse {\n    return new ReconnectResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ReconnectResponse | PlainMessage<ReconnectResponse> | undefined, b: ReconnectResponse | PlainMessage<ReconnectResponse> | undefined): boolean {\n    return proto3.util.equals(ReconnectResponse, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.TrackPublishedResponse\n */\nexport class TrackPublishedResponse extends Message<TrackPublishedResponse> {\n  /**\n   * @generated from field: string cid = 1;\n   */\n  cid = \"\";\n\n  /**\n   * @generated from field: livekit.TrackInfo track = 2;\n   */\n  track?: TrackInfo;\n\n  constructor(data?: PartialMessage<TrackPublishedResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.TrackPublishedResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"cid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"track\", kind: \"message\", T: TrackInfo },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TrackPublishedResponse {\n    return new TrackPublishedResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TrackPublishedResponse {\n    return new TrackPublishedResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TrackPublishedResponse {\n    return new TrackPublishedResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: TrackPublishedResponse | PlainMessage<TrackPublishedResponse> | undefined, b: TrackPublishedResponse | PlainMessage<TrackPublishedResponse> | undefined): boolean {\n    return proto3.util.equals(TrackPublishedResponse, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.TrackUnpublishedResponse\n */\nexport class TrackUnpublishedResponse extends Message<TrackUnpublishedResponse> {\n  /**\n   * @generated from field: string track_sid = 1;\n   */\n  trackSid = \"\";\n\n  constructor(data?: PartialMessage<TrackUnpublishedResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.TrackUnpublishedResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"track_sid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TrackUnpublishedResponse {\n    return new TrackUnpublishedResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TrackUnpublishedResponse {\n    return new TrackUnpublishedResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TrackUnpublishedResponse {\n    return new TrackUnpublishedResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: TrackUnpublishedResponse | PlainMessage<TrackUnpublishedResponse> | undefined, b: TrackUnpublishedResponse | PlainMessage<TrackUnpublishedResponse> | undefined): boolean {\n    return proto3.util.equals(TrackUnpublishedResponse, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.SessionDescription\n */\nexport class SessionDescription extends Message<SessionDescription> {\n  /**\n   * \"answer\" | \"offer\" | \"pranswer\" | \"rollback\"\n   *\n   * @generated from field: string type = 1;\n   */\n  type = \"\";\n\n  /**\n   * @generated from field: string sdp = 2;\n   */\n  sdp = \"\";\n\n  constructor(data?: PartialMessage<SessionDescription>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.SessionDescription\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"type\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"sdp\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SessionDescription {\n    return new SessionDescription().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SessionDescription {\n    return new SessionDescription().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SessionDescription {\n    return new SessionDescription().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: SessionDescription | PlainMessage<SessionDescription> | undefined, b: SessionDescription | PlainMessage<SessionDescription> | undefined): boolean {\n    return proto3.util.equals(SessionDescription, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.ParticipantUpdate\n */\nexport class ParticipantUpdate extends Message<ParticipantUpdate> {\n  /**\n   * @generated from field: repeated livekit.ParticipantInfo participants = 1;\n   */\n  participants: ParticipantInfo[] = [];\n\n  constructor(data?: PartialMessage<ParticipantUpdate>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.ParticipantUpdate\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"participants\", kind: \"message\", T: ParticipantInfo, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ParticipantUpdate {\n    return new ParticipantUpdate().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ParticipantUpdate {\n    return new ParticipantUpdate().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ParticipantUpdate {\n    return new ParticipantUpdate().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ParticipantUpdate | PlainMessage<ParticipantUpdate> | undefined, b: ParticipantUpdate | PlainMessage<ParticipantUpdate> | undefined): boolean {\n    return proto3.util.equals(ParticipantUpdate, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.UpdateSubscription\n */\nexport class UpdateSubscription extends Message<UpdateSubscription> {\n  /**\n   * @generated from field: repeated string track_sids = 1;\n   */\n  trackSids: string[] = [];\n\n  /**\n   * @generated from field: bool subscribe = 2;\n   */\n  subscribe = false;\n\n  /**\n   * @generated from field: repeated livekit.ParticipantTracks participant_tracks = 3;\n   */\n  participantTracks: ParticipantTracks[] = [];\n\n  constructor(data?: PartialMessage<UpdateSubscription>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.UpdateSubscription\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"track_sids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 2, name: \"subscribe\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 3, name: \"participant_tracks\", kind: \"message\", T: ParticipantTracks, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateSubscription {\n    return new UpdateSubscription().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateSubscription {\n    return new UpdateSubscription().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateSubscription {\n    return new UpdateSubscription().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: UpdateSubscription | PlainMessage<UpdateSubscription> | undefined, b: UpdateSubscription | PlainMessage<UpdateSubscription> | undefined): boolean {\n    return proto3.util.equals(UpdateSubscription, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.UpdateTrackSettings\n */\nexport class UpdateTrackSettings extends Message<UpdateTrackSettings> {\n  /**\n   * @generated from field: repeated string track_sids = 1;\n   */\n  trackSids: string[] = [];\n\n  /**\n   * when true, the track is placed in a paused state, with no new data returned\n   *\n   * @generated from field: bool disabled = 3;\n   */\n  disabled = false;\n\n  /**\n   * deprecated in favor of width & height\n   *\n   * @generated from field: livekit.VideoQuality quality = 4;\n   */\n  quality = VideoQuality.LOW;\n\n  /**\n   * for video, width to receive\n   *\n   * @generated from field: uint32 width = 5;\n   */\n  width = 0;\n\n  /**\n   * for video, height to receive\n   *\n   * @generated from field: uint32 height = 6;\n   */\n  height = 0;\n\n  /**\n   * @generated from field: uint32 fps = 7;\n   */\n  fps = 0;\n\n  /**\n   * subscription priority. 1 being the highest (0 is unset)\n   * when unset, server sill assign priority based on the order of subscription\n   * server will use priority in the following ways:\n   * 1. when subscribed tracks exceed per-participant subscription limit, server will\n   *    pause the lowest priority tracks\n   * 2. when the network is congested, server will assign available bandwidth to\n   *    higher priority tracks first. lowest priority tracks can be paused\n   *\n   * @generated from field: uint32 priority = 8;\n   */\n  priority = 0;\n\n  constructor(data?: PartialMessage<UpdateTrackSettings>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.UpdateTrackSettings\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"track_sids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 3, name: \"disabled\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 4, name: \"quality\", kind: \"enum\", T: proto3.getEnumType(VideoQuality) },\n    { no: 5, name: \"width\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 6, name: \"height\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 7, name: \"fps\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 8, name: \"priority\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateTrackSettings {\n    return new UpdateTrackSettings().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateTrackSettings {\n    return new UpdateTrackSettings().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateTrackSettings {\n    return new UpdateTrackSettings().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: UpdateTrackSettings | PlainMessage<UpdateTrackSettings> | undefined, b: UpdateTrackSettings | PlainMessage<UpdateTrackSettings> | undefined): boolean {\n    return proto3.util.equals(UpdateTrackSettings, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.LeaveRequest\n */\nexport class LeaveRequest extends Message<LeaveRequest> {\n  /**\n   * sent when server initiates the disconnect due to server-restart\n   * indicates clients should attempt full-reconnect sequence\n   *\n   * @generated from field: bool can_reconnect = 1;\n   */\n  canReconnect = false;\n\n  /**\n   * @generated from field: livekit.DisconnectReason reason = 2;\n   */\n  reason = DisconnectReason.UNKNOWN_REASON;\n\n  constructor(data?: PartialMessage<LeaveRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.LeaveRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"can_reconnect\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 2, name: \"reason\", kind: \"enum\", T: proto3.getEnumType(DisconnectReason) },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LeaveRequest {\n    return new LeaveRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LeaveRequest {\n    return new LeaveRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LeaveRequest {\n    return new LeaveRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: LeaveRequest | PlainMessage<LeaveRequest> | undefined, b: LeaveRequest | PlainMessage<LeaveRequest> | undefined): boolean {\n    return proto3.util.equals(LeaveRequest, a, b);\n  }\n}\n\n/**\n * message to indicate published video track dimensions are changing\n *\n * @generated from message livekit.UpdateVideoLayers\n */\nexport class UpdateVideoLayers extends Message<UpdateVideoLayers> {\n  /**\n   * @generated from field: string track_sid = 1;\n   */\n  trackSid = \"\";\n\n  /**\n   * @generated from field: repeated livekit.VideoLayer layers = 2;\n   */\n  layers: VideoLayer[] = [];\n\n  constructor(data?: PartialMessage<UpdateVideoLayers>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.UpdateVideoLayers\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"track_sid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"layers\", kind: \"message\", T: VideoLayer, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateVideoLayers {\n    return new UpdateVideoLayers().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateVideoLayers {\n    return new UpdateVideoLayers().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateVideoLayers {\n    return new UpdateVideoLayers().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: UpdateVideoLayers | PlainMessage<UpdateVideoLayers> | undefined, b: UpdateVideoLayers | PlainMessage<UpdateVideoLayers> | undefined): boolean {\n    return proto3.util.equals(UpdateVideoLayers, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.UpdateParticipantMetadata\n */\nexport class UpdateParticipantMetadata extends Message<UpdateParticipantMetadata> {\n  /**\n   * @generated from field: string metadata = 1;\n   */\n  metadata = \"\";\n\n  /**\n   * @generated from field: string name = 2;\n   */\n  name = \"\";\n\n  constructor(data?: PartialMessage<UpdateParticipantMetadata>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.UpdateParticipantMetadata\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateParticipantMetadata {\n    return new UpdateParticipantMetadata().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateParticipantMetadata {\n    return new UpdateParticipantMetadata().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateParticipantMetadata {\n    return new UpdateParticipantMetadata().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: UpdateParticipantMetadata | PlainMessage<UpdateParticipantMetadata> | undefined, b: UpdateParticipantMetadata | PlainMessage<UpdateParticipantMetadata> | undefined): boolean {\n    return proto3.util.equals(UpdateParticipantMetadata, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.ICEServer\n */\nexport class ICEServer extends Message<ICEServer> {\n  /**\n   * @generated from field: repeated string urls = 1;\n   */\n  urls: string[] = [];\n\n  /**\n   * @generated from field: string username = 2;\n   */\n  username = \"\";\n\n  /**\n   * @generated from field: string credential = 3;\n   */\n  credential = \"\";\n\n  constructor(data?: PartialMessage<ICEServer>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.ICEServer\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"urls\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 2, name: \"username\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"credential\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ICEServer {\n    return new ICEServer().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ICEServer {\n    return new ICEServer().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ICEServer {\n    return new ICEServer().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ICEServer | PlainMessage<ICEServer> | undefined, b: ICEServer | PlainMessage<ICEServer> | undefined): boolean {\n    return proto3.util.equals(ICEServer, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.SpeakersChanged\n */\nexport class SpeakersChanged extends Message<SpeakersChanged> {\n  /**\n   * @generated from field: repeated livekit.SpeakerInfo speakers = 1;\n   */\n  speakers: SpeakerInfo[] = [];\n\n  constructor(data?: PartialMessage<SpeakersChanged>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.SpeakersChanged\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"speakers\", kind: \"message\", T: SpeakerInfo, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SpeakersChanged {\n    return new SpeakersChanged().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SpeakersChanged {\n    return new SpeakersChanged().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SpeakersChanged {\n    return new SpeakersChanged().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: SpeakersChanged | PlainMessage<SpeakersChanged> | undefined, b: SpeakersChanged | PlainMessage<SpeakersChanged> | undefined): boolean {\n    return proto3.util.equals(SpeakersChanged, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.RoomUpdate\n */\nexport class RoomUpdate extends Message<RoomUpdate> {\n  /**\n   * @generated from field: livekit.Room room = 1;\n   */\n  room?: Room;\n\n  constructor(data?: PartialMessage<RoomUpdate>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.RoomUpdate\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"room\", kind: \"message\", T: Room },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RoomUpdate {\n    return new RoomUpdate().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RoomUpdate {\n    return new RoomUpdate().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RoomUpdate {\n    return new RoomUpdate().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: RoomUpdate | PlainMessage<RoomUpdate> | undefined, b: RoomUpdate | PlainMessage<RoomUpdate> | undefined): boolean {\n    return proto3.util.equals(RoomUpdate, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.ConnectionQualityInfo\n */\nexport class ConnectionQualityInfo extends Message<ConnectionQualityInfo> {\n  /**\n   * @generated from field: string participant_sid = 1;\n   */\n  participantSid = \"\";\n\n  /**\n   * @generated from field: livekit.ConnectionQuality quality = 2;\n   */\n  quality = ConnectionQuality.POOR;\n\n  /**\n   * @generated from field: float score = 3;\n   */\n  score = 0;\n\n  constructor(data?: PartialMessage<ConnectionQualityInfo>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.ConnectionQualityInfo\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"participant_sid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"quality\", kind: \"enum\", T: proto3.getEnumType(ConnectionQuality) },\n    { no: 3, name: \"score\", kind: \"scalar\", T: 2 /* ScalarType.FLOAT */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConnectionQualityInfo {\n    return new ConnectionQualityInfo().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConnectionQualityInfo {\n    return new ConnectionQualityInfo().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConnectionQualityInfo {\n    return new ConnectionQualityInfo().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ConnectionQualityInfo | PlainMessage<ConnectionQualityInfo> | undefined, b: ConnectionQualityInfo | PlainMessage<ConnectionQualityInfo> | undefined): boolean {\n    return proto3.util.equals(ConnectionQualityInfo, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.ConnectionQualityUpdate\n */\nexport class ConnectionQualityUpdate extends Message<ConnectionQualityUpdate> {\n  /**\n   * @generated from field: repeated livekit.ConnectionQualityInfo updates = 1;\n   */\n  updates: ConnectionQualityInfo[] = [];\n\n  constructor(data?: PartialMessage<ConnectionQualityUpdate>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.ConnectionQualityUpdate\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"updates\", kind: \"message\", T: ConnectionQualityInfo, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConnectionQualityUpdate {\n    return new ConnectionQualityUpdate().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConnectionQualityUpdate {\n    return new ConnectionQualityUpdate().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConnectionQualityUpdate {\n    return new ConnectionQualityUpdate().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ConnectionQualityUpdate | PlainMessage<ConnectionQualityUpdate> | undefined, b: ConnectionQualityUpdate | PlainMessage<ConnectionQualityUpdate> | undefined): boolean {\n    return proto3.util.equals(ConnectionQualityUpdate, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.StreamStateInfo\n */\nexport class StreamStateInfo extends Message<StreamStateInfo> {\n  /**\n   * @generated from field: string participant_sid = 1;\n   */\n  participantSid = \"\";\n\n  /**\n   * @generated from field: string track_sid = 2;\n   */\n  trackSid = \"\";\n\n  /**\n   * @generated from field: livekit.StreamState state = 3;\n   */\n  state = StreamState.ACTIVE;\n\n  constructor(data?: PartialMessage<StreamStateInfo>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.StreamStateInfo\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"participant_sid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"track_sid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"state\", kind: \"enum\", T: proto3.getEnumType(StreamState) },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StreamStateInfo {\n    return new StreamStateInfo().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StreamStateInfo {\n    return new StreamStateInfo().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StreamStateInfo {\n    return new StreamStateInfo().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: StreamStateInfo | PlainMessage<StreamStateInfo> | undefined, b: StreamStateInfo | PlainMessage<StreamStateInfo> | undefined): boolean {\n    return proto3.util.equals(StreamStateInfo, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.StreamStateUpdate\n */\nexport class StreamStateUpdate extends Message<StreamStateUpdate> {\n  /**\n   * @generated from field: repeated livekit.StreamStateInfo stream_states = 1;\n   */\n  streamStates: StreamStateInfo[] = [];\n\n  constructor(data?: PartialMessage<StreamStateUpdate>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.StreamStateUpdate\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"stream_states\", kind: \"message\", T: StreamStateInfo, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StreamStateUpdate {\n    return new StreamStateUpdate().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StreamStateUpdate {\n    return new StreamStateUpdate().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StreamStateUpdate {\n    return new StreamStateUpdate().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: StreamStateUpdate | PlainMessage<StreamStateUpdate> | undefined, b: StreamStateUpdate | PlainMessage<StreamStateUpdate> | undefined): boolean {\n    return proto3.util.equals(StreamStateUpdate, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.SubscribedQuality\n */\nexport class SubscribedQuality extends Message<SubscribedQuality> {\n  /**\n   * @generated from field: livekit.VideoQuality quality = 1;\n   */\n  quality = VideoQuality.LOW;\n\n  /**\n   * @generated from field: bool enabled = 2;\n   */\n  enabled = false;\n\n  constructor(data?: PartialMessage<SubscribedQuality>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.SubscribedQuality\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"quality\", kind: \"enum\", T: proto3.getEnumType(VideoQuality) },\n    { no: 2, name: \"enabled\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SubscribedQuality {\n    return new SubscribedQuality().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SubscribedQuality {\n    return new SubscribedQuality().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SubscribedQuality {\n    return new SubscribedQuality().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: SubscribedQuality | PlainMessage<SubscribedQuality> | undefined, b: SubscribedQuality | PlainMessage<SubscribedQuality> | undefined): boolean {\n    return proto3.util.equals(SubscribedQuality, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.SubscribedCodec\n */\nexport class SubscribedCodec extends Message<SubscribedCodec> {\n  /**\n   * @generated from field: string codec = 1;\n   */\n  codec = \"\";\n\n  /**\n   * @generated from field: repeated livekit.SubscribedQuality qualities = 2;\n   */\n  qualities: SubscribedQuality[] = [];\n\n  constructor(data?: PartialMessage<SubscribedCodec>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.SubscribedCodec\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"codec\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"qualities\", kind: \"message\", T: SubscribedQuality, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SubscribedCodec {\n    return new SubscribedCodec().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SubscribedCodec {\n    return new SubscribedCodec().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SubscribedCodec {\n    return new SubscribedCodec().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: SubscribedCodec | PlainMessage<SubscribedCodec> | undefined, b: SubscribedCodec | PlainMessage<SubscribedCodec> | undefined): boolean {\n    return proto3.util.equals(SubscribedCodec, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.SubscribedQualityUpdate\n */\nexport class SubscribedQualityUpdate extends Message<SubscribedQualityUpdate> {\n  /**\n   * @generated from field: string track_sid = 1;\n   */\n  trackSid = \"\";\n\n  /**\n   * @generated from field: repeated livekit.SubscribedQuality subscribed_qualities = 2;\n   */\n  subscribedQualities: SubscribedQuality[] = [];\n\n  /**\n   * @generated from field: repeated livekit.SubscribedCodec subscribed_codecs = 3;\n   */\n  subscribedCodecs: SubscribedCodec[] = [];\n\n  constructor(data?: PartialMessage<SubscribedQualityUpdate>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.SubscribedQualityUpdate\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"track_sid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"subscribed_qualities\", kind: \"message\", T: SubscribedQuality, repeated: true },\n    { no: 3, name: \"subscribed_codecs\", kind: \"message\", T: SubscribedCodec, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SubscribedQualityUpdate {\n    return new SubscribedQualityUpdate().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SubscribedQualityUpdate {\n    return new SubscribedQualityUpdate().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SubscribedQualityUpdate {\n    return new SubscribedQualityUpdate().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: SubscribedQualityUpdate | PlainMessage<SubscribedQualityUpdate> | undefined, b: SubscribedQualityUpdate | PlainMessage<SubscribedQualityUpdate> | undefined): boolean {\n    return proto3.util.equals(SubscribedQualityUpdate, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.TrackPermission\n */\nexport class TrackPermission extends Message<TrackPermission> {\n  /**\n   * permission could be granted either by participant sid or identity\n   *\n   * @generated from field: string participant_sid = 1;\n   */\n  participantSid = \"\";\n\n  /**\n   * @generated from field: bool all_tracks = 2;\n   */\n  allTracks = false;\n\n  /**\n   * @generated from field: repeated string track_sids = 3;\n   */\n  trackSids: string[] = [];\n\n  /**\n   * @generated from field: string participant_identity = 4;\n   */\n  participantIdentity = \"\";\n\n  constructor(data?: PartialMessage<TrackPermission>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.TrackPermission\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"participant_sid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"all_tracks\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 3, name: \"track_sids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 4, name: \"participant_identity\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TrackPermission {\n    return new TrackPermission().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TrackPermission {\n    return new TrackPermission().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TrackPermission {\n    return new TrackPermission().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: TrackPermission | PlainMessage<TrackPermission> | undefined, b: TrackPermission | PlainMessage<TrackPermission> | undefined): boolean {\n    return proto3.util.equals(TrackPermission, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.SubscriptionPermission\n */\nexport class SubscriptionPermission extends Message<SubscriptionPermission> {\n  /**\n   * @generated from field: bool all_participants = 1;\n   */\n  allParticipants = false;\n\n  /**\n   * @generated from field: repeated livekit.TrackPermission track_permissions = 2;\n   */\n  trackPermissions: TrackPermission[] = [];\n\n  constructor(data?: PartialMessage<SubscriptionPermission>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.SubscriptionPermission\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"all_participants\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 2, name: \"track_permissions\", kind: \"message\", T: TrackPermission, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SubscriptionPermission {\n    return new SubscriptionPermission().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SubscriptionPermission {\n    return new SubscriptionPermission().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SubscriptionPermission {\n    return new SubscriptionPermission().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: SubscriptionPermission | PlainMessage<SubscriptionPermission> | undefined, b: SubscriptionPermission | PlainMessage<SubscriptionPermission> | undefined): boolean {\n    return proto3.util.equals(SubscriptionPermission, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.SubscriptionPermissionUpdate\n */\nexport class SubscriptionPermissionUpdate extends Message<SubscriptionPermissionUpdate> {\n  /**\n   * @generated from field: string participant_sid = 1;\n   */\n  participantSid = \"\";\n\n  /**\n   * @generated from field: string track_sid = 2;\n   */\n  trackSid = \"\";\n\n  /**\n   * @generated from field: bool allowed = 3;\n   */\n  allowed = false;\n\n  constructor(data?: PartialMessage<SubscriptionPermissionUpdate>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.SubscriptionPermissionUpdate\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"participant_sid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"track_sid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"allowed\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SubscriptionPermissionUpdate {\n    return new SubscriptionPermissionUpdate().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SubscriptionPermissionUpdate {\n    return new SubscriptionPermissionUpdate().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SubscriptionPermissionUpdate {\n    return new SubscriptionPermissionUpdate().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: SubscriptionPermissionUpdate | PlainMessage<SubscriptionPermissionUpdate> | undefined, b: SubscriptionPermissionUpdate | PlainMessage<SubscriptionPermissionUpdate> | undefined): boolean {\n    return proto3.util.equals(SubscriptionPermissionUpdate, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.SyncState\n */\nexport class SyncState extends Message<SyncState> {\n  /**\n   * last subscribe answer before reconnecting\n   *\n   * @generated from field: livekit.SessionDescription answer = 1;\n   */\n  answer?: SessionDescription;\n\n  /**\n   * @generated from field: livekit.UpdateSubscription subscription = 2;\n   */\n  subscription?: UpdateSubscription;\n\n  /**\n   * @generated from field: repeated livekit.TrackPublishedResponse publish_tracks = 3;\n   */\n  publishTracks: TrackPublishedResponse[] = [];\n\n  /**\n   * @generated from field: repeated livekit.DataChannelInfo data_channels = 4;\n   */\n  dataChannels: DataChannelInfo[] = [];\n\n  /**\n   * last received server side offer before reconnecting\n   *\n   * @generated from field: livekit.SessionDescription offer = 5;\n   */\n  offer?: SessionDescription;\n\n  constructor(data?: PartialMessage<SyncState>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.SyncState\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"answer\", kind: \"message\", T: SessionDescription },\n    { no: 2, name: \"subscription\", kind: \"message\", T: UpdateSubscription },\n    { no: 3, name: \"publish_tracks\", kind: \"message\", T: TrackPublishedResponse, repeated: true },\n    { no: 4, name: \"data_channels\", kind: \"message\", T: DataChannelInfo, repeated: true },\n    { no: 5, name: \"offer\", kind: \"message\", T: SessionDescription },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SyncState {\n    return new SyncState().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SyncState {\n    return new SyncState().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SyncState {\n    return new SyncState().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: SyncState | PlainMessage<SyncState> | undefined, b: SyncState | PlainMessage<SyncState> | undefined): boolean {\n    return proto3.util.equals(SyncState, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.DataChannelInfo\n */\nexport class DataChannelInfo extends Message<DataChannelInfo> {\n  /**\n   * @generated from field: string label = 1;\n   */\n  label = \"\";\n\n  /**\n   * @generated from field: uint32 id = 2;\n   */\n  id = 0;\n\n  /**\n   * @generated from field: livekit.SignalTarget target = 3;\n   */\n  target = SignalTarget.PUBLISHER;\n\n  constructor(data?: PartialMessage<DataChannelInfo>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.DataChannelInfo\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"label\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"id\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 3, name: \"target\", kind: \"enum\", T: proto3.getEnumType(SignalTarget) },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataChannelInfo {\n    return new DataChannelInfo().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataChannelInfo {\n    return new DataChannelInfo().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataChannelInfo {\n    return new DataChannelInfo().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: DataChannelInfo | PlainMessage<DataChannelInfo> | undefined, b: DataChannelInfo | PlainMessage<DataChannelInfo> | undefined): boolean {\n    return proto3.util.equals(DataChannelInfo, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.SimulateScenario\n */\nexport class SimulateScenario extends Message<SimulateScenario> {\n  /**\n   * @generated from oneof livekit.SimulateScenario.scenario\n   */\n  scenario: {\n    /**\n     * simulate N seconds of speaker activity\n     *\n     * @generated from field: int32 speaker_update = 1;\n     */\n    value: number;\n    case: \"speakerUpdate\";\n  } | {\n    /**\n     * simulate local node failure\n     *\n     * @generated from field: bool node_failure = 2;\n     */\n    value: boolean;\n    case: \"nodeFailure\";\n  } | {\n    /**\n     * simulate migration\n     *\n     * @generated from field: bool migration = 3;\n     */\n    value: boolean;\n    case: \"migration\";\n  } | {\n    /**\n     * server to send leave\n     *\n     * @generated from field: bool server_leave = 4;\n     */\n    value: boolean;\n    case: \"serverLeave\";\n  } | {\n    /**\n     * switch candidate protocol to tcp\n     *\n     * @generated from field: livekit.CandidateProtocol switch_candidate_protocol = 5;\n     */\n    value: CandidateProtocol;\n    case: \"switchCandidateProtocol\";\n  } | {\n    /**\n     * maximum bandwidth for subscribers, in bps\n     * when zero, clears artificial bandwidth limit\n     *\n     * @generated from field: int64 subscriber_bandwidth = 6;\n     */\n    value: bigint;\n    case: \"subscriberBandwidth\";\n  } | {\n    /**\n     * disconnect signal on resume\n     *\n     * @generated from field: bool disconnect_signal_on_resume = 7;\n     */\n    value: boolean;\n    case: \"disconnectSignalOnResume\";\n  } | {\n    /**\n     * disconnect signal on resume before sending any messages from server\n     *\n     * @generated from field: bool disconnect_signal_on_resume_no_messages = 8;\n     */\n    value: boolean;\n    case: \"disconnectSignalOnResumeNoMessages\";\n  } | { case: undefined; value?: undefined } = { case: undefined };\n\n  constructor(data?: PartialMessage<SimulateScenario>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.SimulateScenario\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"speaker_update\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, oneof: \"scenario\" },\n    { no: 2, name: \"node_failure\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, oneof: \"scenario\" },\n    { no: 3, name: \"migration\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, oneof: \"scenario\" },\n    { no: 4, name: \"server_leave\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, oneof: \"scenario\" },\n    { no: 5, name: \"switch_candidate_protocol\", kind: \"enum\", T: proto3.getEnumType(CandidateProtocol), oneof: \"scenario\" },\n    { no: 6, name: \"subscriber_bandwidth\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */, oneof: \"scenario\" },\n    { no: 7, name: \"disconnect_signal_on_resume\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, oneof: \"scenario\" },\n    { no: 8, name: \"disconnect_signal_on_resume_no_messages\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, oneof: \"scenario\" },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SimulateScenario {\n    return new SimulateScenario().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SimulateScenario {\n    return new SimulateScenario().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SimulateScenario {\n    return new SimulateScenario().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: SimulateScenario | PlainMessage<SimulateScenario> | undefined, b: SimulateScenario | PlainMessage<SimulateScenario> | undefined): boolean {\n    return proto3.util.equals(SimulateScenario, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.Ping\n */\nexport class Ping extends Message<Ping> {\n  /**\n   * @generated from field: int64 timestamp = 1;\n   */\n  timestamp = protoInt64.zero;\n\n  /**\n   * rtt in milliseconds calculated by client\n   *\n   * @generated from field: int64 rtt = 2;\n   */\n  rtt = protoInt64.zero;\n\n  constructor(data?: PartialMessage<Ping>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.Ping\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"timestamp\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 2, name: \"rtt\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Ping {\n    return new Ping().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Ping {\n    return new Ping().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Ping {\n    return new Ping().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: Ping | PlainMessage<Ping> | undefined, b: Ping | PlainMessage<Ping> | undefined): boolean {\n    return proto3.util.equals(Ping, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.Pong\n */\nexport class Pong extends Message<Pong> {\n  /**\n   * timestamp field of last received ping request\n   *\n   * @generated from field: int64 last_ping_timestamp = 1;\n   */\n  lastPingTimestamp = protoInt64.zero;\n\n  /**\n   * @generated from field: int64 timestamp = 2;\n   */\n  timestamp = protoInt64.zero;\n\n  constructor(data?: PartialMessage<Pong>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.Pong\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"last_ping_timestamp\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 2, name: \"timestamp\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Pong {\n    return new Pong().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Pong {\n    return new Pong().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Pong {\n    return new Pong().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: Pong | PlainMessage<Pong> | undefined, b: Pong | PlainMessage<Pong> | undefined): boolean {\n    return proto3.util.equals(Pong, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.RegionSettings\n */\nexport class RegionSettings extends Message<RegionSettings> {\n  /**\n   * @generated from field: repeated livekit.RegionInfo regions = 1;\n   */\n  regions: RegionInfo[] = [];\n\n  constructor(data?: PartialMessage<RegionSettings>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.RegionSettings\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"regions\", kind: \"message\", T: RegionInfo, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RegionSettings {\n    return new RegionSettings().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RegionSettings {\n    return new RegionSettings().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RegionSettings {\n    return new RegionSettings().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: RegionSettings | PlainMessage<RegionSettings> | undefined, b: RegionSettings | PlainMessage<RegionSettings> | undefined): boolean {\n    return proto3.util.equals(RegionSettings, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.RegionInfo\n */\nexport class RegionInfo extends Message<RegionInfo> {\n  /**\n   * @generated from field: string region = 1;\n   */\n  region = \"\";\n\n  /**\n   * @generated from field: string url = 2;\n   */\n  url = \"\";\n\n  /**\n   * @generated from field: int64 distance = 3;\n   */\n  distance = protoInt64.zero;\n\n  constructor(data?: PartialMessage<RegionInfo>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.RegionInfo\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"region\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"url\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"distance\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RegionInfo {\n    return new RegionInfo().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RegionInfo {\n    return new RegionInfo().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RegionInfo {\n    return new RegionInfo().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: RegionInfo | PlainMessage<RegionInfo> | undefined, b: RegionInfo | PlainMessage<RegionInfo> | undefined): boolean {\n    return proto3.util.equals(RegionInfo, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.SubscriptionResponse\n */\nexport class SubscriptionResponse extends Message<SubscriptionResponse> {\n  /**\n   * @generated from field: string track_sid = 1;\n   */\n  trackSid = \"\";\n\n  /**\n   * @generated from field: livekit.SubscriptionError err = 2;\n   */\n  err = SubscriptionError.SE_UNKNOWN;\n\n  constructor(data?: PartialMessage<SubscriptionResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.SubscriptionResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"track_sid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"err\", kind: \"enum\", T: proto3.getEnumType(SubscriptionError) },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SubscriptionResponse {\n    return new SubscriptionResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SubscriptionResponse {\n    return new SubscriptionResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SubscriptionResponse {\n    return new SubscriptionResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: SubscriptionResponse | PlainMessage<SubscriptionResponse> | undefined, b: SubscriptionResponse | PlainMessage<SubscriptionResponse> | undefined): boolean {\n    return proto3.util.equals(SubscriptionResponse, a, b);\n  }\n}\n\n", "export function cloneDeep<T>(value: T) {\n  if (typeof value === 'undefined') {\n    return;\n  }\n\n  if (typeof structuredClone === 'function') {\n    return structuredClone(value);\n  } else {\n    return JSON.parse(JSON.stringify(value)) as T;\n  }\n}\n", "import { EventEmitter } from 'events';\nimport type TypedEventEmitter from 'typed-emitter';\nimport type { SignalClient } from '../../api/SignalClient';\nimport log, { LoggerNames, StructuredLogger, getLogger } from '../../logger';\nimport { TrackSource, TrackType } from '../../proto/livekit_models_pb';\nimport { StreamState as ProtoStreamState } from '../../proto/livekit_rtc_pb';\nimport { TrackEvent } from '../events';\nimport type { LoggerOptions } from '../types';\nimport { isFireFox, isSafari, isWeb } from '../utils';\nimport { getLogContextFromTrack } from './utils';\n\nconst BACKGROUND_REACTION_DELAY = 5000;\n\n// keep old audio elements when detached, we would re-use them since on iOS\n// Safari tracks which audio elements have been \"blessed\" by the user.\nconst recycledElements: Array<HTMLAudioElement> = [];\n\nexport abstract class Track extends (EventEmitter as new () => TypedEventEmitter<TrackEventCallbacks>) {\n  kind: Track.Kind;\n\n  attachedElements: HTMLMediaElement[] = [];\n\n  isMuted: boolean = false;\n\n  source: Track.Source;\n\n  /**\n   * sid is set after track is published to server, or if it's a remote track\n   */\n  sid?: Track.SID;\n\n  /**\n   * @internal\n   */\n  mediaStream?: MediaStream;\n\n  /**\n   * indicates current state of stream, it'll indicate `paused` if the track\n   * has been paused by congestion controller\n   */\n  streamState: Track.StreamState = Track.StreamState.Active;\n\n  protected _mediaStreamTrack: MediaStreamTrack;\n\n  protected _mediaStreamID: string;\n\n  protected isInBackground: boolean = false;\n\n  private backgroundTimeout: ReturnType<typeof setTimeout> | undefined;\n\n  private loggerContextCb: LoggerOptions['loggerContextCb'];\n\n  protected _currentBitrate: number = 0;\n\n  protected monitorInterval?: ReturnType<typeof setInterval>;\n\n  protected log: StructuredLogger = log;\n\n  protected constructor(\n    mediaTrack: MediaStreamTrack,\n    kind: Track.Kind,\n    loggerOptions: LoggerOptions = {},\n  ) {\n    super();\n    this.log = getLogger(loggerOptions.loggerName ?? LoggerNames.Track);\n    this.loggerContextCb = loggerOptions.loggerContextCb;\n\n    this.setMaxListeners(100);\n    this.kind = kind;\n    this._mediaStreamTrack = mediaTrack;\n    this._mediaStreamID = mediaTrack.id;\n    this.source = Track.Source.Unknown;\n  }\n\n  protected get logContext() {\n    return {\n      ...this.loggerContextCb?.(),\n      ...getLogContextFromTrack(this),\n    };\n  }\n\n  /** current receive bits per second */\n  get currentBitrate(): number {\n    return this._currentBitrate;\n  }\n\n  get mediaStreamTrack() {\n    return this._mediaStreamTrack;\n  }\n\n  /**\n   * @internal\n   * used for keep mediaStream's first id, since it's id might change\n   * if we disable/enable a track\n   */\n  get mediaStreamID(): string {\n    return this._mediaStreamID;\n  }\n\n  /**\n   * creates a new HTMLAudioElement or HTMLVideoElement, attaches to it, and returns it\n   */\n  attach(): HTMLMediaElement;\n\n  /**\n   * attaches track to an existing HTMLAudioElement or HTMLVideoElement\n   */\n  attach(element: HTMLMediaElement): HTMLMediaElement;\n  attach(element?: HTMLMediaElement): HTMLMediaElement {\n    let elementType = 'audio';\n    if (this.kind === Track.Kind.Video) {\n      elementType = 'video';\n    }\n    if (this.attachedElements.length === 0 && Track.Kind.Video) {\n      this.addAppVisibilityListener();\n    }\n    if (!element) {\n      if (elementType === 'audio') {\n        recycledElements.forEach((e) => {\n          if (e.parentElement === null && !element) {\n            element = e;\n          }\n        });\n        if (element) {\n          // remove it from pool\n          recycledElements.splice(recycledElements.indexOf(element), 1);\n        }\n      }\n      if (!element) {\n        element = <HTMLMediaElement>document.createElement(elementType);\n      }\n    }\n\n    if (!this.attachedElements.includes(element)) {\n      this.attachedElements.push(element);\n    }\n\n    // even if we believe it's already attached to the element, it's possible\n    // the element's srcObject was set to something else out of band.\n    // we'll want to re-attach it in that case\n    attachToElement(this.mediaStreamTrack, element);\n\n    // handle auto playback failures\n    const allMediaStreamTracks = (element.srcObject as MediaStream).getTracks();\n    const hasAudio = allMediaStreamTracks.some((tr) => tr.kind === 'audio');\n\n    // manually play media to detect auto playback status\n    element\n      .play()\n      .then(() => {\n        this.emit(hasAudio ? TrackEvent.AudioPlaybackStarted : TrackEvent.VideoPlaybackStarted);\n      })\n      .catch((e) => {\n        if (e.name === 'NotAllowedError') {\n          this.emit(hasAudio ? TrackEvent.AudioPlaybackFailed : TrackEvent.VideoPlaybackFailed, e);\n        } else if (e.name === 'AbortError') {\n          // commonly triggered by another `play` request, only log for debugging purposes\n          log.debug(\n            `${hasAudio ? 'audio' : 'video'} playback aborted, likely due to new play request`,\n          );\n        } else {\n          log.warn(`could not playback ${hasAudio ? 'audio' : 'video'}`, e);\n        }\n        // If audio playback isn't allowed make sure we still play back the video\n        if (\n          hasAudio &&\n          element &&\n          allMediaStreamTracks.some((tr) => tr.kind === 'video') &&\n          e.name === 'NotAllowedError'\n        ) {\n          element.muted = true;\n          element.play().catch(() => {\n            // catch for Safari, exceeded options at this point to automatically play the media element\n          });\n        }\n      });\n\n    this.emit(TrackEvent.ElementAttached, element);\n    return element;\n  }\n\n  /**\n   * Detaches from all attached elements\n   */\n  detach(): HTMLMediaElement[];\n\n  /**\n   * Detach from a single element\n   * @param element\n   */\n  detach(element: HTMLMediaElement): HTMLMediaElement;\n  detach(element?: HTMLMediaElement): HTMLMediaElement | HTMLMediaElement[] {\n    try {\n      // detach from a single element\n      if (element) {\n        detachTrack(this.mediaStreamTrack, element);\n        const idx = this.attachedElements.indexOf(element);\n        if (idx >= 0) {\n          this.attachedElements.splice(idx, 1);\n          this.recycleElement(element);\n          this.emit(TrackEvent.ElementDetached, element);\n        }\n        return element;\n      }\n\n      const detached: HTMLMediaElement[] = [];\n      this.attachedElements.forEach((elm) => {\n        detachTrack(this.mediaStreamTrack, elm);\n        detached.push(elm);\n        this.recycleElement(elm);\n        this.emit(TrackEvent.ElementDetached, elm);\n      });\n\n      // remove all tracks\n      this.attachedElements = [];\n      return detached;\n    } finally {\n      if (this.attachedElements.length === 0) {\n        this.removeAppVisibilityListener();\n      }\n    }\n  }\n\n  stop() {\n    this.stopMonitor();\n    this._mediaStreamTrack.stop();\n  }\n\n  protected enable() {\n    this._mediaStreamTrack.enabled = true;\n  }\n\n  protected disable() {\n    this._mediaStreamTrack.enabled = false;\n  }\n\n  /* @internal */\n  abstract startMonitor(signalClient?: SignalClient): void;\n\n  /* @internal */\n  stopMonitor() {\n    if (this.monitorInterval) {\n      clearInterval(this.monitorInterval);\n    }\n  }\n\n  /** @internal */\n  updateLoggerOptions(loggerOptions: LoggerOptions) {\n    if (loggerOptions.loggerName) {\n      this.log = getLogger(loggerOptions.loggerName);\n    }\n    if (loggerOptions.loggerContextCb) {\n      this.loggerContextCb = loggerOptions.loggerContextCb;\n    }\n  }\n\n  private recycleElement(element: HTMLMediaElement) {\n    if (element instanceof HTMLAudioElement) {\n      // we only need to re-use a single element\n      let shouldCache = true;\n      element.pause();\n      recycledElements.forEach((e) => {\n        if (!e.parentElement) {\n          shouldCache = false;\n        }\n      });\n      if (shouldCache) {\n        recycledElements.push(element);\n      }\n    }\n  }\n\n  protected appVisibilityChangedListener = () => {\n    if (this.backgroundTimeout) {\n      clearTimeout(this.backgroundTimeout);\n    }\n    // delay app visibility update if it goes to hidden\n    // update immediately if it comes back to focus\n    if (document.visibilityState === 'hidden') {\n      this.backgroundTimeout = setTimeout(\n        () => this.handleAppVisibilityChanged(),\n        BACKGROUND_REACTION_DELAY,\n      );\n    } else {\n      this.handleAppVisibilityChanged();\n    }\n  };\n\n  protected async handleAppVisibilityChanged() {\n    this.isInBackground = document.visibilityState === 'hidden';\n  }\n\n  protected addAppVisibilityListener() {\n    if (isWeb()) {\n      this.isInBackground = document.visibilityState === 'hidden';\n      document.addEventListener('visibilitychange', this.appVisibilityChangedListener);\n    } else {\n      this.isInBackground = false;\n    }\n  }\n\n  protected removeAppVisibilityListener() {\n    if (isWeb()) {\n      document.removeEventListener('visibilitychange', this.appVisibilityChangedListener);\n    }\n  }\n}\n\nexport function attachToElement(track: MediaStreamTrack, element: HTMLMediaElement) {\n  let mediaStream: MediaStream;\n  if (element.srcObject instanceof MediaStream) {\n    mediaStream = element.srcObject;\n  } else {\n    mediaStream = new MediaStream();\n  }\n\n  // check if track matches existing track\n  let existingTracks: MediaStreamTrack[];\n  if (track.kind === 'audio') {\n    existingTracks = mediaStream.getAudioTracks();\n  } else {\n    existingTracks = mediaStream.getVideoTracks();\n  }\n  if (!existingTracks.includes(track)) {\n    existingTracks.forEach((et) => {\n      mediaStream.removeTrack(et);\n    });\n    mediaStream.addTrack(track);\n  }\n\n  if (!isSafari() || !(element instanceof HTMLVideoElement)) {\n    // when in low power mode (applies to both macOS and iOS), Safari will show a play/pause overlay\n    // when a video starts that has the `autoplay` attribute is set.\n    // we work around this by _not_ setting the autoplay attribute on safari and instead call `setTimeout(() => el.play(),0)` further down\n    element.autoplay = true;\n  }\n  // In case there are no audio tracks present on the mediastream, we set the element as muted to ensure autoplay works\n  element.muted = mediaStream.getAudioTracks().length === 0;\n  if (element instanceof HTMLVideoElement) {\n    element.playsInline = true;\n  }\n\n  // avoid flicker\n  if (element.srcObject !== mediaStream) {\n    element.srcObject = mediaStream;\n    if ((isSafari() || isFireFox()) && element instanceof HTMLVideoElement) {\n      // Firefox also has a timing issue where video doesn't actually get attached unless\n      // performed out-of-band\n      // Safari 15 has a bug where in certain layouts, video element renders\n      // black until the page is resized or other changes take place.\n      // Resetting the src triggers it to render.\n      // https://developer.apple.com/forums/thread/690523\n      setTimeout(() => {\n        element.srcObject = mediaStream;\n        // Safari 15 sometimes fails to start a video\n        // when the window is backgrounded before the first frame is drawn\n        // manually calling play here seems to fix that\n        element.play().catch(() => {\n          /** do nothing */\n        });\n      }, 0);\n    }\n  }\n}\n\n/** @internal */\nexport function detachTrack(track: MediaStreamTrack, element: HTMLMediaElement) {\n  if (element.srcObject instanceof MediaStream) {\n    const mediaStream = element.srcObject;\n    mediaStream.removeTrack(track);\n    if (mediaStream.getTracks().length > 0) {\n      element.srcObject = mediaStream;\n    } else {\n      element.srcObject = null;\n    }\n  }\n}\n\nexport namespace Track {\n  export enum Kind {\n    Audio = 'audio',\n    Video = 'video',\n    Unknown = 'unknown',\n  }\n  export type SID = string;\n  export enum Source {\n    Camera = 'camera',\n    Microphone = 'microphone',\n    ScreenShare = 'screen_share',\n    ScreenShareAudio = 'screen_share_audio',\n    Unknown = 'unknown',\n  }\n\n  export enum StreamState {\n    Active = 'active',\n    Paused = 'paused',\n    Unknown = 'unknown',\n  }\n\n  export interface Dimensions {\n    width: number;\n    height: number;\n  }\n\n  /** @internal */\n  export function kindToProto(k: Kind): TrackType {\n    switch (k) {\n      case Kind.Audio:\n        return TrackType.AUDIO;\n      case Kind.Video:\n        return TrackType.VIDEO;\n      default:\n        // FIXME this was UNRECOGNIZED before\n        return TrackType.DATA;\n    }\n  }\n\n  /** @internal */\n  export function kindFromProto(t: TrackType): Kind | undefined {\n    switch (t) {\n      case TrackType.AUDIO:\n        return Kind.Audio;\n      case TrackType.VIDEO:\n        return Kind.Video;\n      default:\n        return Kind.Unknown;\n    }\n  }\n\n  /** @internal */\n  export function sourceToProto(s: Source): TrackSource {\n    switch (s) {\n      case Source.Camera:\n        return TrackSource.CAMERA;\n      case Source.Microphone:\n        return TrackSource.MICROPHONE;\n      case Source.ScreenShare:\n        return TrackSource.SCREEN_SHARE;\n      case Source.ScreenShareAudio:\n        return TrackSource.SCREEN_SHARE_AUDIO;\n      default:\n        return TrackSource.UNKNOWN;\n    }\n  }\n\n  /** @internal */\n  export function sourceFromProto(s: TrackSource): Source {\n    switch (s) {\n      case TrackSource.CAMERA:\n        return Source.Camera;\n      case TrackSource.MICROPHONE:\n        return Source.Microphone;\n      case TrackSource.SCREEN_SHARE:\n        return Source.ScreenShare;\n      case TrackSource.SCREEN_SHARE_AUDIO:\n        return Source.ScreenShareAudio;\n      default:\n        return Source.Unknown;\n    }\n  }\n\n  /** @internal */\n  export function streamStateFromProto(s: ProtoStreamState): StreamState {\n    switch (s) {\n      case ProtoStreamState.ACTIVE:\n        return StreamState.Active;\n      case ProtoStreamState.PAUSED:\n        return StreamState.Paused;\n      default:\n        return StreamState.Unknown;\n    }\n  }\n}\n\nexport type TrackEventCallbacks = {\n  message: () => void;\n  muted: (track?: any) => void;\n  unmuted: (track?: any) => void;\n  restarted: (track?: any) => void;\n  ended: (track?: any) => void;\n  updateSettings: () => void;\n  updateSubscription: () => void;\n  audioPlaybackStarted: () => void;\n  audioPlaybackFailed: (error?: Error) => void;\n  audioSilenceDetected: () => void;\n  visibilityChanged: (visible: boolean, track?: any) => void;\n  videoDimensionsChanged: (dimensions: Track.Dimensions, track?: any) => void;\n  videoPlaybackStarted: () => void;\n  videoPlaybackFailed: (error?: Error) => void;\n  elementAttached: (element: HTMLMediaElement) => void;\n  elementDetached: (element: HTMLMediaElement) => void;\n  upstreamPaused: (track: any) => void;\n  upstreamResumed: (track: any) => void;\n};\n", "import { TrackPublishedResponse } from '../../proto/livekit_rtc_pb';\nimport { cloneDeep } from '../../utils/cloneDeep';\nimport { isSafari, sleep } from '../utils';\nimport { Track } from './Track';\nimport type { TrackPublication } from './TrackPublication';\nimport {\n  type AudioCaptureOptions,\n  type CreateLocalTracksOptions,\n  type ScreenShareCaptureOptions,\n  type VideoCaptureOptions,\n  VideoCodec,\n  videoCodecs,\n} from './options';\nimport type { AudioTrack } from './types';\n\nexport function mergeDefaultOptions(\n  options?: CreateLocalTracksOptions,\n  audioDefaults?: AudioCaptureOptions,\n  videoDefaults?: VideoCaptureOptions,\n): CreateLocalTracksOptions {\n  const opts: CreateLocalTracksOptions = cloneDeep(options) ?? {};\n  if (opts.audio === true) opts.audio = {};\n  if (opts.video === true) opts.video = {};\n\n  // use defaults\n  if (opts.audio) {\n    mergeObjectWithoutOverwriting(\n      opts.audio as Record<string, unknown>,\n      audioDefaults as Record<string, unknown>,\n    );\n  }\n  if (opts.video) {\n    mergeObjectWithoutOverwriting(\n      opts.video as Record<string, unknown>,\n      videoDefaults as Record<string, unknown>,\n    );\n  }\n  return opts;\n}\n\nfunction mergeObjectWithoutOverwriting(\n  mainObject: Record<string, unknown>,\n  objectToMerge: Record<string, unknown>,\n): Record<string, unknown> {\n  Object.keys(objectToMerge).forEach((key) => {\n    if (mainObject[key] === undefined) mainObject[key] = objectToMerge[key];\n  });\n  return mainObject;\n}\n\nexport function constraintsForOptions(options: CreateLocalTracksOptions): MediaStreamConstraints {\n  const constraints: MediaStreamConstraints = {};\n\n  if (options.video) {\n    // default video options\n    if (typeof options.video === 'object') {\n      const videoOptions: MediaTrackConstraints = {};\n      const target = videoOptions as Record<string, unknown>;\n      const source = options.video as Record<string, unknown>;\n      Object.keys(source).forEach((key) => {\n        switch (key) {\n          case 'resolution':\n            // flatten VideoResolution fields\n            mergeObjectWithoutOverwriting(target, source.resolution as Record<string, unknown>);\n            break;\n          default:\n            target[key] = source[key];\n        }\n      });\n      constraints.video = videoOptions;\n    } else {\n      constraints.video = options.video;\n    }\n  } else {\n    constraints.video = false;\n  }\n\n  if (options.audio) {\n    if (typeof options.audio === 'object') {\n      constraints.audio = options.audio;\n    } else {\n      constraints.audio = true;\n    }\n  } else {\n    constraints.audio = false;\n  }\n  return constraints;\n}\n/**\n * This function detects silence on a given [[Track]] instance.\n * Returns true if the track seems to be entirely silent.\n */\nexport async function detectSilence(track: AudioTrack, timeOffset = 200): Promise<boolean> {\n  const ctx = getNewAudioContext();\n  if (ctx) {\n    const analyser = ctx.createAnalyser();\n    analyser.fftSize = 2048;\n\n    const bufferLength = analyser.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    const source = ctx.createMediaStreamSource(new MediaStream([track.mediaStreamTrack]));\n\n    source.connect(analyser);\n    await sleep(timeOffset);\n    analyser.getByteTimeDomainData(dataArray);\n    const someNoise = dataArray.some((sample) => sample !== 128 && sample !== 0);\n    ctx.close();\n    return !someNoise;\n  }\n  return false;\n}\n\n/**\n * @internal\n */\nexport function getNewAudioContext(): AudioContext | void {\n  const AudioContext =\n    // @ts-ignore\n    typeof window !== 'undefined' && (window.AudioContext || window.webkitAudioContext);\n  if (AudioContext) {\n    return new AudioContext({ latencyHint: 'interactive' });\n  }\n}\n\n/**\n * @internal\n */\nexport function kindToSource(kind: MediaDeviceKind) {\n  if (kind === 'audioinput') {\n    return Track.Source.Microphone;\n  } else if (kind === 'videoinput') {\n    return Track.Source.Camera;\n  } else {\n    return Track.Source.Unknown;\n  }\n}\n\n/**\n * @internal\n */\nexport function sourceToKind(source: Track.Source): MediaDeviceKind | undefined {\n  if (source === Track.Source.Microphone) {\n    return 'audioinput';\n  } else if (source === Track.Source.Camera) {\n    return 'videoinput';\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @internal\n */\nexport function screenCaptureToDisplayMediaStreamOptions(\n  options: ScreenShareCaptureOptions,\n): DisplayMediaStreamOptions {\n  let videoConstraints: MediaTrackConstraints | boolean = options.video ?? true;\n  // treat 0 as uncapped\n  if (options.resolution && options.resolution.width > 0 && options.resolution.height > 0) {\n    videoConstraints = typeof videoConstraints === 'boolean' ? {} : videoConstraints;\n    if (isSafari()) {\n      videoConstraints = {\n        ...videoConstraints,\n        width: { max: options.resolution.width },\n        height: { max: options.resolution.height },\n        frameRate: options.resolution.frameRate,\n      };\n    } else {\n      videoConstraints = {\n        ...videoConstraints,\n        width: { ideal: options.resolution.width },\n        height: { ideal: options.resolution.height },\n        frameRate: options.resolution.frameRate,\n      };\n    }\n  }\n\n  return {\n    audio: options.audio ?? false,\n    video: videoConstraints,\n    // @ts-expect-error support for experimental display media features\n    controller: options.controller,\n    selfBrowserSurface: options.selfBrowserSurface,\n    surfaceSwitching: options.surfaceSwitching,\n    systemAudio: options.systemAudio,\n  };\n}\n\nexport function mimeTypeToVideoCodecString(mimeType: string) {\n  const codec = mimeType.split('/')[1].toLowerCase() as VideoCodec;\n  if (!videoCodecs.includes(codec)) {\n    throw Error(`Video codec not supported: ${codec}`);\n  }\n  return codec;\n}\n\nexport function getTrackPublicationInfo<T extends TrackPublication>(\n  tracks: T[],\n): TrackPublishedResponse[] {\n  const infos: TrackPublishedResponse[] = [];\n  tracks.forEach((track: TrackPublication) => {\n    if (track.track !== undefined) {\n      infos.push(\n        new TrackPublishedResponse({\n          cid: track.track.mediaStreamID,\n          track: track.trackInfo,\n        }),\n      );\n    }\n  });\n  return infos;\n}\n\nexport function getLogContextFromTrack(track: Track | TrackPublication): Record<string, unknown> {\n  if (track instanceof Track) {\n    return {\n      trackSid: track.sid,\n      trackSource: track.source,\n      trackMuted: track.isMuted,\n      trackEnabled: track.mediaStreamTrack.enabled,\n      trackKind: track.kind,\n    };\n  } else {\n    return {\n      trackSid: track.trackSid,\n      trackName: track.trackName,\n      track: track.track ? getLogContextFromTrack(track.track) : undefined,\n      trackEnabled: track.isEnabled,\n      trackEncrypted: track.isEncrypted,\n      trackMimeType: track.mimeType,\n    };\n  }\n}\n", "import { ClientInfo, ClientInfo_SDK } from '../proto/livekit_models_pb';\nimport type { DetectableBrowser } from '../utils/browserParser';\nimport { getBrowser } from '../utils/browserParser';\nimport { protocolVersion, version } from '../version';\nimport CriticalTimers from './timers';\nimport type LocalAudioTrack from './track/LocalAudioTrack';\nimport type RemoteAudioTrack from './track/RemoteAudioTrack';\nimport { VideoCodec, videoCodecs } from './track/options';\nimport { getNewAudioContext } from './track/utils';\nimport type { LiveKitReactNativeInfo } from './types';\n\nconst separator = '|';\nexport const ddExtensionURI =\n  'https://aomediacodec.github.io/av1-rtp-spec/#dependency-descriptor-rtp-header-extension';\n\nexport function unpackStreamId(packed: string): string[] {\n  const parts = packed.split(separator);\n  if (parts.length > 1) {\n    return [parts[0], packed.substr(parts[0].length + 1)];\n  }\n  return [packed, ''];\n}\n\nexport async function sleep(duration: number): Promise<void> {\n  return new Promise((resolve) => CriticalTimers.setTimeout(resolve, duration));\n}\n\n/** @internal */\nexport function supportsTransceiver() {\n  return 'addTransceiver' in RTCPeerConnection.prototype;\n}\n\n/** @internal */\nexport function supportsAddTrack() {\n  return 'addTrack' in RTCPeerConnection.prototype;\n}\n\nexport function supportsAdaptiveStream() {\n  return typeof ResizeObserver !== undefined && typeof IntersectionObserver !== undefined;\n}\n\nexport function supportsDynacast() {\n  return supportsTransceiver();\n}\n\nexport function supportsAV1(): boolean {\n  if (!('getCapabilities' in RTCRtpSender)) {\n    return false;\n  }\n  if (isSafari()) {\n    // Safari 17 on iPhone14 reports AV1 capability, but does not actually support it\n    return false;\n  }\n  const capabilities = RTCRtpSender.getCapabilities('video');\n  let hasAV1 = false;\n  if (capabilities) {\n    for (const codec of capabilities.codecs) {\n      if (codec.mimeType === 'video/AV1') {\n        hasAV1 = true;\n        break;\n      }\n    }\n  }\n  return hasAV1;\n}\n\nexport function supportsVP9(): boolean {\n  if (!('getCapabilities' in RTCRtpSender)) {\n    return false;\n  }\n  if (isFireFox()) {\n    // technically speaking FireFox supports VP9, but SVC publishing is broken\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1633876\n    return false;\n  }\n  if (isSafari()) {\n    const browser = getBrowser();\n    if (browser?.version && compareVersions(browser.version, '16') < 0) {\n      // Safari 16 and below does not support VP9\n      return false;\n    }\n  }\n  const capabilities = RTCRtpSender.getCapabilities('video');\n  let hasVP9 = false;\n  if (capabilities) {\n    for (const codec of capabilities.codecs) {\n      if (codec.mimeType === 'video/VP9') {\n        hasVP9 = true;\n        break;\n      }\n    }\n  }\n  return hasVP9;\n}\n\nexport function isSVCCodec(codec?: string): boolean {\n  return codec === 'av1' || codec === 'vp9';\n}\n\nexport function supportsSetSinkId(elm?: HTMLMediaElement): boolean {\n  if (!document) {\n    return false;\n  }\n  if (!elm) {\n    elm = document.createElement('audio');\n  }\n  return 'setSinkId' in elm;\n}\n\nconst setCodecPreferencesVersions: Record<DetectableBrowser, string> = {\n  Chrome: '100',\n  Safari: '15',\n  Firefox: '100',\n};\n\nexport function supportsSetCodecPreferences(transceiver: RTCRtpTransceiver): boolean {\n  if (!isWeb()) {\n    return false;\n  }\n  if (!('setCodecPreferences' in transceiver)) {\n    return false;\n  }\n  const browser = getBrowser();\n  if (!browser?.name || !browser.version) {\n    // version is required\n    return false;\n  }\n  const v = setCodecPreferencesVersions[browser.name];\n  if (v) {\n    return compareVersions(browser.version, v) >= 0;\n  }\n  return false;\n}\n\nexport function isBrowserSupported() {\n  return supportsTransceiver() || supportsAddTrack();\n}\n\nexport function isFireFox(): boolean {\n  return getBrowser()?.name === 'Firefox';\n}\n\nexport function isChromiumBased(): boolean {\n  return getBrowser()?.name === 'Chrome';\n}\n\nexport function isSafari(): boolean {\n  return getBrowser()?.name === 'Safari';\n}\n\nexport function isSafari17(): boolean {\n  const b = getBrowser();\n  return b?.name === 'Safari' && b.version.startsWith('17.');\n}\n\nexport function isMobile(): boolean {\n  if (!isWeb()) return false;\n  return /Tablet|iPad|Mobile|Android|BlackBerry/.test(navigator.userAgent);\n}\n\nexport function isWeb(): boolean {\n  return typeof document !== 'undefined';\n}\n\nexport function isReactNative(): boolean {\n  // navigator.product is deprecated on browsers, but will be set appropriately for react-native.\n  return navigator.product == 'ReactNative';\n}\n\nexport function isCloud(serverUrl: URL) {\n  return (\n    serverUrl.hostname.endsWith('.livekit.cloud') || serverUrl.hostname.endsWith('.livekit.run')\n  );\n}\n\nfunction getLKReactNativeInfo(): LiveKitReactNativeInfo | undefined {\n  // global defined only for ReactNative.\n  // @ts-ignore\n  if (global && global.LiveKitReactNativeGlobal) {\n    // @ts-ignore\n    return global.LiveKitReactNativeGlobal as LiveKitReactNativeInfo;\n  }\n\n  return undefined;\n}\n\nexport function getReactNativeOs(): string | undefined {\n  if (!isReactNative()) {\n    return undefined;\n  }\n\n  let info = getLKReactNativeInfo();\n  if (info) {\n    return info.platform;\n  }\n\n  return undefined;\n}\n\nexport function getDevicePixelRatio(): number {\n  if (isWeb()) {\n    return window.devicePixelRatio;\n  }\n\n  if (isReactNative()) {\n    let info = getLKReactNativeInfo();\n    if (info) {\n      return info.devicePixelRatio;\n    }\n  }\n\n  return 1;\n}\n\nexport function compareVersions(v1: string, v2: string): number {\n  const parts1 = v1.split('.');\n  const parts2 = v2.split('.');\n  const k = Math.min(parts1.length, parts2.length);\n  for (let i = 0; i < k; ++i) {\n    const p1 = parseInt(parts1[i], 10);\n    const p2 = parseInt(parts2[i], 10);\n    if (p1 > p2) return 1;\n    if (p1 < p2) return -1;\n    if (i === k - 1 && p1 === p2) return 0;\n  }\n  if (v1 === '' && v2 !== '') {\n    return -1;\n  } else if (v2 === '') {\n    return 1;\n  }\n  return parts1.length == parts2.length ? 0 : parts1.length < parts2.length ? -1 : 1;\n}\n\nfunction roDispatchCallback(entries: ResizeObserverEntry[]) {\n  for (const entry of entries) {\n    (entry.target as ObservableMediaElement).handleResize(entry);\n  }\n}\n\nfunction ioDispatchCallback(entries: IntersectionObserverEntry[]) {\n  for (const entry of entries) {\n    (entry.target as ObservableMediaElement).handleVisibilityChanged(entry);\n  }\n}\n\nlet resizeObserver: ResizeObserver | null = null;\nexport const getResizeObserver = () => {\n  if (!resizeObserver) resizeObserver = new ResizeObserver(roDispatchCallback);\n  return resizeObserver;\n};\n\nlet intersectionObserver: IntersectionObserver | null = null;\nexport const getIntersectionObserver = () => {\n  if (!intersectionObserver) {\n    intersectionObserver = new IntersectionObserver(ioDispatchCallback, {\n      root: null,\n      rootMargin: '0px',\n    });\n  }\n  return intersectionObserver;\n};\n\nexport interface ObservableMediaElement extends HTMLMediaElement {\n  handleResize: (entry: ResizeObserverEntry) => void;\n  handleVisibilityChanged: (entry: IntersectionObserverEntry) => void;\n}\n\nexport function getClientInfo(): ClientInfo {\n  const info = new ClientInfo({\n    sdk: ClientInfo_SDK.JS,\n    protocol: protocolVersion,\n    version,\n  });\n\n  if (isReactNative()) {\n    info.os = getReactNativeOs() ?? '';\n  }\n  return info;\n}\n\nlet emptyVideoStreamTrack: MediaStreamTrack | undefined;\n\nexport function getEmptyVideoStreamTrack() {\n  if (!emptyVideoStreamTrack) {\n    emptyVideoStreamTrack = createDummyVideoStreamTrack();\n  }\n  return emptyVideoStreamTrack.clone();\n}\n\nexport function createDummyVideoStreamTrack(\n  width: number = 16,\n  height: number = 16,\n  enabled: boolean = false,\n  paintContent: boolean = false,\n) {\n  const canvas = document.createElement('canvas');\n  // the canvas size is set to 16 by default, because electron apps seem to fail with smaller values\n  canvas.width = width;\n  canvas.height = height;\n  const ctx = canvas.getContext('2d');\n  ctx?.fillRect(0, 0, canvas.width, canvas.height);\n  if (paintContent && ctx) {\n    ctx.beginPath();\n    ctx.arc(width / 2, height / 2, 50, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.fillStyle = 'grey';\n    ctx.fill();\n  }\n  // @ts-ignore\n  const dummyStream = canvas.captureStream();\n  const [dummyTrack] = dummyStream.getTracks();\n  if (!dummyTrack) {\n    throw Error('Could not get empty media stream video track');\n  }\n  dummyTrack.enabled = enabled;\n\n  return dummyTrack;\n}\n\nlet emptyAudioStreamTrack: MediaStreamTrack | undefined;\n\nexport function getEmptyAudioStreamTrack() {\n  if (!emptyAudioStreamTrack) {\n    // implementation adapted from https://blog.mozilla.org/webrtc/warm-up-with-replacetrack/\n    const ctx = new AudioContext();\n    const oscillator = ctx.createOscillator();\n    const gain = ctx.createGain();\n    gain.gain.setValueAtTime(0, 0);\n    const dst = ctx.createMediaStreamDestination();\n    oscillator.connect(gain);\n    gain.connect(dst);\n    oscillator.start();\n    [emptyAudioStreamTrack] = dst.stream.getAudioTracks();\n    if (!emptyAudioStreamTrack) {\n      throw Error('Could not get empty media stream audio track');\n    }\n    emptyAudioStreamTrack.enabled = false;\n  }\n  return emptyAudioStreamTrack.clone();\n}\n\nexport class Future<T> {\n  promise: Promise<T>;\n\n  resolve?: (arg: T) => void;\n\n  reject?: (e: any) => void;\n\n  onFinally?: () => void;\n\n  constructor(\n    futureBase?: (resolve: (arg: T) => void, reject: (e: any) => void) => void,\n    onFinally?: () => void,\n  ) {\n    this.onFinally = onFinally;\n    this.promise = new Promise<T>(async (resolve, reject) => {\n      this.resolve = resolve;\n      this.reject = reject;\n      if (futureBase) {\n        await futureBase(resolve, reject);\n      }\n    }).finally(() => this.onFinally?.());\n  }\n}\n\nexport type AudioAnalyserOptions = {\n  /**\n   * If set to true, the analyser will use a cloned version of the underlying mediastreamtrack, which won't be impacted by muting the track.\n   * Useful for local tracks when implementing things like \"seems like you're muted, but trying to speak\".\n   * Defaults to false\n   */\n  cloneTrack?: boolean;\n  /**\n   * see https://developer.mozilla.org/en-US/docs/Web/API/AnalyserNode/fftSize\n   */\n  fftSize?: number;\n  /**\n   * see https://developer.mozilla.org/en-US/docs/Web/API/AnalyserNode/smoothingTimeConstant\n   */\n  smoothingTimeConstant?: number;\n  /**\n   * see https://developer.mozilla.org/en-US/docs/Web/API/AnalyserNode/minDecibels\n   */\n  minDecibels?: number;\n  /**\n   * see https://developer.mozilla.org/en-US/docs/Web/API/AnalyserNode/maxDecibels\n   */\n  maxDecibels?: number;\n};\n\n/**\n * Creates and returns an analyser web audio node that is attached to the provided track.\n * Additionally returns a convenience method `calculateVolume` to perform instant volume readings on that track.\n * Call the returned `cleanup` function to close the audioContext that has been created for the instance of this helper\n */\nexport function createAudioAnalyser(\n  track: LocalAudioTrack | RemoteAudioTrack,\n  options?: AudioAnalyserOptions,\n) {\n  const opts = {\n    cloneTrack: false,\n    fftSize: 2048,\n    smoothingTimeConstant: 0.8,\n    minDecibels: -100,\n    maxDecibels: -80,\n    ...options,\n  };\n  const audioContext = getNewAudioContext();\n\n  if (!audioContext) {\n    throw new Error('Audio Context not supported on this browser');\n  }\n  const streamTrack = opts.cloneTrack ? track.mediaStreamTrack.clone() : track.mediaStreamTrack;\n  const mediaStreamSource = audioContext.createMediaStreamSource(new MediaStream([streamTrack]));\n  const analyser = audioContext.createAnalyser();\n  analyser.minDecibels = opts.minDecibels;\n  analyser.maxDecibels = opts.maxDecibels;\n  analyser.fftSize = opts.fftSize;\n  analyser.smoothingTimeConstant = opts.smoothingTimeConstant;\n\n  mediaStreamSource.connect(analyser);\n  const dataArray = new Uint8Array(analyser.frequencyBinCount);\n\n  /**\n   * Calculates the current volume of the track in the range from 0 to 1\n   */\n  const calculateVolume = () => {\n    analyser.getByteFrequencyData(dataArray);\n    let sum = 0;\n    for (const amplitude of dataArray) {\n      sum += Math.pow(amplitude / 255, 2);\n    }\n    const volume = Math.sqrt(sum / dataArray.length);\n    return volume;\n  };\n\n  const cleanup = async () => {\n    await audioContext.close();\n    if (opts.cloneTrack) {\n      streamTrack.stop();\n    }\n  };\n\n  return { calculateVolume, analyser, cleanup };\n}\n\nexport class Mutex {\n  private _locking: Promise<void>;\n\n  private _locks: number;\n\n  constructor() {\n    this._locking = Promise.resolve();\n    this._locks = 0;\n  }\n\n  isLocked() {\n    return this._locks > 0;\n  }\n\n  lock() {\n    this._locks += 1;\n\n    let unlockNext: () => void;\n\n    const willLock = new Promise<void>(\n      (resolve) =>\n        (unlockNext = () => {\n          this._locks -= 1;\n          resolve();\n        }),\n    );\n\n    const willUnlock = this._locking.then(() => unlockNext);\n\n    this._locking = this._locking.then(() => willLock);\n\n    return willUnlock;\n  }\n}\n\nexport function isVideoCodec(maybeCodec: string): maybeCodec is VideoCodec {\n  return videoCodecs.includes(maybeCodec as VideoCodec);\n}\n\nexport function unwrapConstraint(constraint: ConstrainDOMString): string {\n  if (typeof constraint === 'string') {\n    return constraint;\n  }\n\n  if (Array.isArray(constraint)) {\n    return constraint[0];\n  }\n  if (constraint.exact) {\n    if (Array.isArray(constraint.exact)) {\n      return constraint.exact[0];\n    }\n    return constraint.exact;\n  }\n  if (constraint.ideal) {\n    if (Array.isArray(constraint.ideal)) {\n      return constraint.ideal[0];\n    }\n    return constraint.ideal;\n  }\n  throw Error('could not unwrap constraint');\n}\n\nexport function toWebsocketUrl(url: string): string {\n  if (url.startsWith('http')) {\n    return url.replace(/^(http)/, 'ws');\n  }\n  return url;\n}\n\nexport function toHttpUrl(url: string): string {\n  if (url.startsWith('ws')) {\n    return url.replace(/^(ws)/, 'http');\n  }\n  return url;\n}\n", "import log from '../logger';\nimport { isSafari } from './utils';\n\nconst defaultId = 'default';\n\nexport default class DeviceManager {\n  private static instance?: DeviceManager;\n\n  static mediaDeviceKinds: MediaDeviceKind[] = ['audioinput', 'audiooutput', 'videoinput'];\n\n  static getInstance(): DeviceManager {\n    if (this.instance === undefined) {\n      this.instance = new DeviceManager();\n    }\n    return this.instance;\n  }\n\n  static userMediaPromiseMap: Map<MediaDeviceKind, Promise<MediaStream>> = new Map();\n\n  async getDevices(\n    kind?: MediaDeviceKind,\n    requestPermissions: boolean = true,\n  ): Promise<MediaDeviceInfo[]> {\n    if (DeviceManager.userMediaPromiseMap?.size > 0) {\n      log.debug('awaiting getUserMedia promise');\n      try {\n        if (kind) {\n          await DeviceManager.userMediaPromiseMap.get(kind);\n        } else {\n          await Promise.all(DeviceManager.userMediaPromiseMap.values());\n        }\n      } catch (e: any) {\n        log.warn('error waiting for media permissons');\n      }\n    }\n    let devices = await navigator.mediaDevices.enumerateDevices();\n\n    if (\n      requestPermissions &&\n      // for safari we need to skip this check, as otherwise it will re-acquire user media and fail on iOS https://bugs.webkit.org/show_bug.cgi?id=179363\n      !(isSafari() && this.hasDeviceInUse(kind))\n    ) {\n      const isDummyDeviceOrEmpty =\n        devices.length === 0 ||\n        devices.some((device) => {\n          const noLabel = device.label === '';\n          const isRelevant = kind ? device.kind === kind : true;\n          return noLabel && isRelevant;\n        });\n\n      if (isDummyDeviceOrEmpty) {\n        const permissionsToAcquire = {\n          video: kind !== 'audioinput' && kind !== 'audiooutput',\n          audio: kind !== 'videoinput',\n        };\n        const stream = await navigator.mediaDevices.getUserMedia(permissionsToAcquire);\n        devices = await navigator.mediaDevices.enumerateDevices();\n        stream.getTracks().forEach((track) => {\n          track.stop();\n        });\n      }\n    }\n    if (kind) {\n      devices = devices.filter((device) => device.kind === kind);\n    }\n\n    return devices;\n  }\n\n  async normalizeDeviceId(\n    kind: MediaDeviceKind,\n    deviceId?: string,\n    groupId?: string,\n  ): Promise<string | undefined> {\n    if (deviceId !== defaultId) {\n      return deviceId;\n    }\n\n    // resolve actual device id if it's 'default': Chrome returns it when no\n    // device has been chosen\n    const devices = await this.getDevices(kind);\n\n    const device = devices.find((d) => d.groupId === groupId && d.deviceId !== defaultId);\n\n    return device?.deviceId;\n  }\n\n  private hasDeviceInUse(kind?: MediaDeviceKind): boolean {\n    return kind\n      ? DeviceManager.userMediaPromiseMap.has(kind)\n      : DeviceManager.userMediaPromiseMap.size > 0;\n  }\n}\n", "import { debounce } from 'ts-debounce';\nimport { getBrowser } from '../../utils/browserParser';\nimport DeviceManager from '../DeviceManager';\nimport { DeviceUnsupportedError, TrackInvalidError } from '../errors';\nimport { TrackEvent } from '../events';\nimport type { LoggerOptions } from '../types';\nimport { Mutex, compareVersions, isMobile, sleep } from '../utils';\nimport { Track, attachToElement, detachTrack } from './Track';\nimport type { VideoCodec } from './options';\nimport type { TrackProcessor } from './processor/types';\n\nconst defaultDimensionsTimeout = 1000;\n\nexport default abstract class LocalTrack extends Track {\n  /** @internal */\n  sender?: RTCRtpSender;\n\n  /** @internal */\n  codec?: VideoCodec;\n\n  get constraints() {\n    return this._constraints;\n  }\n\n  protected _constraints: MediaTrackConstraints;\n\n  protected reacquireTrack: boolean;\n\n  protected providedByUser: boolean;\n\n  protected muteLock: Mutex;\n\n  protected pauseUpstreamLock: Mutex;\n\n  protected processorElement?: HTMLMediaElement;\n\n  protected processor?: TrackProcessor<this['kind']>;\n\n  protected processorLock: Mutex;\n\n  /**\n   *\n   * @param mediaTrack\n   * @param kind\n   * @param constraints MediaTrackConstraints that are being used when restarting or reacquiring tracks\n   * @param userProvidedTrack Signals to the SDK whether or not the mediaTrack should be managed (i.e. released and reacquired) internally by the SDK\n   */\n  protected constructor(\n    mediaTrack: MediaStreamTrack,\n    kind: Track.Kind,\n    constraints?: MediaTrackConstraints,\n    userProvidedTrack = false,\n    loggerOptions?: LoggerOptions,\n  ) {\n    super(mediaTrack, kind, loggerOptions);\n    this.reacquireTrack = false;\n    this.providedByUser = userProvidedTrack;\n    this.muteLock = new Mutex();\n    this.pauseUpstreamLock = new Mutex();\n    this.processorLock = new Mutex();\n    this.setMediaStreamTrack(mediaTrack, true);\n\n    // added to satisfy TS compiler, constraints are synced with MediaStreamTrack\n    this._constraints = mediaTrack.getConstraints();\n    if (constraints) {\n      this._constraints = constraints;\n    }\n  }\n\n  get id(): string {\n    return this._mediaStreamTrack.id;\n  }\n\n  get dimensions(): Track.Dimensions | undefined {\n    if (this.kind !== Track.Kind.Video) {\n      return undefined;\n    }\n\n    const { width, height } = this._mediaStreamTrack.getSettings();\n    if (width && height) {\n      return {\n        width,\n        height,\n      };\n    }\n    return undefined;\n  }\n\n  private _isUpstreamPaused: boolean = false;\n\n  get isUpstreamPaused() {\n    return this._isUpstreamPaused;\n  }\n\n  get isUserProvided() {\n    return this.providedByUser;\n  }\n\n  get mediaStreamTrack() {\n    return this.processor?.processedTrack ?? this._mediaStreamTrack;\n  }\n\n  private async setMediaStreamTrack(newTrack: MediaStreamTrack, force?: boolean) {\n    if (newTrack === this._mediaStreamTrack && !force) {\n      return;\n    }\n    if (this._mediaStreamTrack) {\n      // detach\n      this.attachedElements.forEach((el) => {\n        detachTrack(this._mediaStreamTrack, el);\n      });\n      this.debouncedTrackMuteHandler.cancel('new-track');\n      this._mediaStreamTrack.removeEventListener('ended', this.handleEnded);\n      this._mediaStreamTrack.removeEventListener('mute', this.handleTrackMuteEvent);\n      this._mediaStreamTrack.removeEventListener('unmute', this.handleTrackUnmuteEvent);\n    }\n\n    this.mediaStream = new MediaStream([newTrack]);\n    if (newTrack) {\n      newTrack.addEventListener('ended', this.handleEnded);\n      // when underlying track emits mute, it indicates that the device is unable\n      // to produce media. In this case we'll need to signal with remote that\n      // the track is \"muted\"\n      // note this is different from LocalTrack.mute because we do not want to\n      // touch MediaStreamTrack.enabled\n      newTrack.addEventListener('mute', this.handleTrackMuteEvent);\n      newTrack.addEventListener('unmute', this.handleTrackUnmuteEvent);\n      this._constraints = newTrack.getConstraints();\n    }\n    let processedTrack: MediaStreamTrack | undefined;\n    if (this.processor && newTrack && this.processorElement) {\n      this.log.debug('restarting processor', this.logContext);\n      if (this.kind === 'unknown') {\n        throw TypeError('cannot set processor on track of unknown kind');\n      }\n\n      attachToElement(newTrack, this.processorElement);\n      // ensure the processorElement itself stays muted\n      this.processorElement.muted = true;\n      await this.processor.restart({\n        track: newTrack,\n        kind: this.kind,\n        element: this.processorElement,\n      });\n      processedTrack = this.processor.processedTrack;\n    }\n    if (this.sender) {\n      await this.sender.replaceTrack(processedTrack ?? newTrack);\n    }\n    // if `newTrack` is different from the existing track, stop the\n    // older track just before replacing it\n    if (!this.providedByUser && this._mediaStreamTrack !== newTrack) {\n      this._mediaStreamTrack.stop();\n    }\n    this._mediaStreamTrack = newTrack;\n    if (newTrack) {\n      // sync muted state with the enabled state of the newly provided track\n      this._mediaStreamTrack.enabled = !this.isMuted;\n      // when a valid track is replace, we'd want to start producing\n      await this.resumeUpstream();\n      this.attachedElements.forEach((el) => {\n        attachToElement(processedTrack ?? newTrack, el);\n      });\n    }\n  }\n\n  async waitForDimensions(timeout = defaultDimensionsTimeout): Promise<Track.Dimensions> {\n    if (this.kind === Track.Kind.Audio) {\n      throw new Error('cannot get dimensions for audio tracks');\n    }\n\n    if (getBrowser()?.os === 'iOS') {\n      // browsers report wrong initial resolution on iOS.\n      // when slightly delaying the call to .getSettings(), the correct resolution is being reported\n      await sleep(10);\n    }\n\n    const started = Date.now();\n    while (Date.now() - started < timeout) {\n      const dims = this.dimensions;\n      if (dims) {\n        return dims;\n      }\n      await sleep(50);\n    }\n    throw new TrackInvalidError('unable to get track dimensions after timeout');\n  }\n\n  /**\n   * @returns DeviceID of the device that is currently being used for this track\n   */\n  async getDeviceId(): Promise<string | undefined> {\n    // screen share doesn't have a usable device id\n    if (this.source === Track.Source.ScreenShare) {\n      return;\n    }\n    const { deviceId, groupId } = this._mediaStreamTrack.getSettings();\n    const kind = this.kind === Track.Kind.Audio ? 'audioinput' : 'videoinput';\n\n    return DeviceManager.getInstance().normalizeDeviceId(kind, deviceId, groupId);\n  }\n\n  async mute(): Promise<LocalTrack> {\n    this.setTrackMuted(true);\n    return this;\n  }\n\n  async unmute(): Promise<LocalTrack> {\n    this.setTrackMuted(false);\n    return this;\n  }\n\n  async replaceTrack(track: MediaStreamTrack, userProvidedTrack = true): Promise<LocalTrack> {\n    if (!this.sender) {\n      throw new TrackInvalidError('unable to replace an unpublished track');\n    }\n\n    this.log.debug('replace MediaStreamTrack', this.logContext);\n    await this.setMediaStreamTrack(track);\n    // this must be synced *after* setting mediaStreamTrack above, since it relies\n    // on the previous state in order to cleanup\n    this.providedByUser = userProvidedTrack;\n\n    if (this.processor) {\n      await this.stopProcessor();\n    }\n    return this;\n  }\n\n  protected async restart(constraints?: MediaTrackConstraints): Promise<LocalTrack> {\n    if (!constraints) {\n      constraints = this._constraints;\n    }\n    this.log.debug('restarting track with constraints', { ...this.logContext, constraints });\n\n    const streamConstraints: MediaStreamConstraints = {\n      audio: false,\n      video: false,\n    };\n\n    if (this.kind === Track.Kind.Video) {\n      streamConstraints.video = constraints;\n    } else {\n      streamConstraints.audio = constraints;\n    }\n\n    // these steps are duplicated from setMediaStreamTrack because we must stop\n    // the previous tracks before new tracks can be acquired\n    this.attachedElements.forEach((el) => {\n      detachTrack(this.mediaStreamTrack, el);\n    });\n    this._mediaStreamTrack.removeEventListener('ended', this.handleEnded);\n    // on Safari, the old audio track must be stopped before attempting to acquire\n    // the new track, otherwise the new track will stop with\n    // 'A MediaStreamTrack ended due to a capture failure`\n    this._mediaStreamTrack.stop();\n\n    // create new track and attach\n    const mediaStream = await navigator.mediaDevices.getUserMedia(streamConstraints);\n    const newTrack = mediaStream.getTracks()[0];\n    newTrack.addEventListener('ended', this.handleEnded);\n    this.log.debug('re-acquired MediaStreamTrack', this.logContext);\n\n    await this.setMediaStreamTrack(newTrack);\n    this._constraints = constraints;\n\n    this.emit(TrackEvent.Restarted, this);\n    return this;\n  }\n\n  protected setTrackMuted(muted: boolean) {\n    this.log.debug(`setting ${this.kind} track ${muted ? 'muted' : 'unmuted'}`, this.logContext);\n\n    if (this.isMuted === muted && this._mediaStreamTrack.enabled !== muted) {\n      return;\n    }\n\n    this.isMuted = muted;\n    this._mediaStreamTrack.enabled = !muted;\n    this.emit(muted ? TrackEvent.Muted : TrackEvent.Unmuted, this);\n  }\n\n  protected get needsReAcquisition(): boolean {\n    return (\n      this._mediaStreamTrack.readyState !== 'live' ||\n      this._mediaStreamTrack.muted ||\n      !this._mediaStreamTrack.enabled ||\n      this.reacquireTrack\n    );\n  }\n\n  protected async handleAppVisibilityChanged() {\n    await super.handleAppVisibilityChanged();\n    if (!isMobile()) return;\n    this.log.debug(`visibility changed, is in Background: ${this.isInBackground}`, this.logContext);\n\n    if (!this.isInBackground && this.needsReAcquisition && !this.isUserProvided && !this.isMuted) {\n      this.log.debug(`track needs to be reacquired, restarting ${this.source}`, this.logContext);\n      await this.restart();\n      this.reacquireTrack = false;\n    }\n  }\n\n  private handleTrackMuteEvent = () =>\n    this.debouncedTrackMuteHandler().catch(() =>\n      this.log.debug('track mute bounce got cancelled by an unmute event', this.logContext),\n    );\n\n  private debouncedTrackMuteHandler = debounce(async () => {\n    await this.pauseUpstream();\n  }, 5000);\n\n  private handleTrackUnmuteEvent = async () => {\n    this.debouncedTrackMuteHandler.cancel('unmute');\n    await this.resumeUpstream();\n  };\n\n  private handleEnded = () => {\n    if (this.isInBackground) {\n      this.reacquireTrack = true;\n    }\n    this._mediaStreamTrack.removeEventListener('mute', this.handleTrackMuteEvent);\n    this._mediaStreamTrack.removeEventListener('unmute', this.handleTrackUnmuteEvent);\n    this.emit(TrackEvent.Ended, this);\n  };\n\n  stop() {\n    super.stop();\n\n    this._mediaStreamTrack.removeEventListener('ended', this.handleEnded);\n    this._mediaStreamTrack.removeEventListener('mute', this.handleTrackMuteEvent);\n    this._mediaStreamTrack.removeEventListener('unmute', this.handleTrackUnmuteEvent);\n    this.processor?.destroy();\n    this.processor = undefined;\n  }\n\n  /**\n   * pauses publishing to the server without disabling the local MediaStreamTrack\n   * this is used to display a user's own video locally while pausing publishing to\n   * the server.\n   * this API is unsupported on Safari < 12 due to a bug\n   **/\n  async pauseUpstream() {\n    const unlock = await this.pauseUpstreamLock.lock();\n    try {\n      if (this._isUpstreamPaused === true) {\n        return;\n      }\n      if (!this.sender) {\n        this.log.warn('unable to pause upstream for an unpublished track', this.logContext);\n        return;\n      }\n\n      this._isUpstreamPaused = true;\n      this.emit(TrackEvent.UpstreamPaused, this);\n      const browser = getBrowser();\n      if (browser?.name === 'Safari' && compareVersions(browser.version, '12.0') < 0) {\n        // https://bugs.webkit.org/show_bug.cgi?id=184911\n        throw new DeviceUnsupportedError('pauseUpstream is not supported on Safari < 12.');\n      }\n      await this.sender.replaceTrack(null);\n    } finally {\n      unlock();\n    }\n  }\n\n  async resumeUpstream() {\n    const unlock = await this.pauseUpstreamLock.lock();\n    try {\n      if (this._isUpstreamPaused === false) {\n        return;\n      }\n      if (!this.sender) {\n        this.log.warn('unable to resume upstream for an unpublished track', this.logContext);\n        return;\n      }\n      this._isUpstreamPaused = false;\n      this.emit(TrackEvent.UpstreamResumed, this);\n\n      // this operation is noop if mediastreamtrack is already being sent\n      await this.sender.replaceTrack(this._mediaStreamTrack);\n    } finally {\n      unlock();\n    }\n  }\n\n  /**\n   * Gets the RTCStatsReport for the LocalTrack's underlying RTCRtpSender\n   * See https://developer.mozilla.org/en-US/docs/Web/API/RTCStatsReport\n   *\n   * @returns Promise<RTCStatsReport> | undefined\n   */\n  async getRTCStatsReport(): Promise<RTCStatsReport | undefined> {\n    if (!this.sender?.getStats) {\n      return;\n    }\n    const statsReport = await this.sender.getStats();\n    return statsReport;\n  }\n\n  /**\n   * Sets a processor on this track.\n   * See https://github.com/livekit/track-processors-js for example usage\n   *\n   * @experimental\n   *\n   * @param processor\n   * @param showProcessedStreamLocally\n   * @returns\n   */\n  async setProcessor(processor: TrackProcessor<this['kind']>, showProcessedStreamLocally = true) {\n    const unlock = await this.processorLock.lock();\n    try {\n      this.log.debug('setting up processor', this.logContext);\n      if (this.processor) {\n        await this.stopProcessor();\n      }\n      if (this.kind === 'unknown') {\n        throw TypeError('cannot set processor on track of unknown kind');\n      }\n      this.processorElement = this.processorElement ?? document.createElement(this.kind);\n\n      attachToElement(this._mediaStreamTrack, this.processorElement);\n      this.processorElement.muted = true;\n\n      this.processorElement\n        .play()\n        .catch((error) =>\n          this.log.error('failed to play processor element', { ...this.logContext, error }),\n        );\n\n      const processorOptions = {\n        kind: this.kind,\n        track: this._mediaStreamTrack,\n        element: this.processorElement,\n      };\n\n      await processor.init(processorOptions);\n      this.processor = processor;\n      if (this.processor.processedTrack) {\n        for (const el of this.attachedElements) {\n          if (el !== this.processorElement && showProcessedStreamLocally) {\n            detachTrack(this._mediaStreamTrack, el);\n            attachToElement(this.processor.processedTrack, el);\n          }\n        }\n        await this.sender?.replaceTrack(this.processor.processedTrack);\n      }\n    } finally {\n      unlock();\n    }\n  }\n\n  getProcessor() {\n    return this.processor;\n  }\n\n  /**\n   * Stops the track processor\n   * See https://github.com/livekit/track-processors-js for example usage\n   *\n   * @experimental\n   * @returns\n   */\n  async stopProcessor() {\n    if (!this.processor) return;\n\n    this.log.debug('stopping processor', this.logContext);\n    this.processor.processedTrack?.stop();\n    await this.processor.destroy();\n    this.processor = undefined;\n    this.processorElement?.remove();\n    this.processorElement = undefined;\n\n    await this.restart();\n  }\n\n  protected abstract monitorSender(): void;\n}\n", "import { EventEmitter } from 'events';\nimport type TypedEventEmitter from 'typed-emitter';\nimport log from '../logger';\nimport { Encryption_Type, TrackInfo } from '../proto/livekit_models_pb';\nimport type RTCEngine from '../room/RTCEngine';\nimport type Room from '../room/Room';\nimport { ConnectionState } from '../room/Room';\nimport { DeviceUnsupportedError } from '../room/errors';\nimport { EngineEvent, ParticipantEvent, RoomEvent } from '../room/events';\nimport LocalTrack from '../room/track/LocalTrack';\nimport type RemoteTrack from '../room/track/RemoteTrack';\nimport type { Track } from '../room/track/Track';\nimport type { VideoCodec } from '../room/track/options';\nimport { mimeTypeToVideoCodecString } from '../room/track/utils';\nimport type { BaseKeyProvider } from './KeyProvider';\nimport { E2EE_FLAG } from './constants';\nimport { type E2EEManagerCallbacks, EncryptionEvent, KeyProviderEvent } from './events';\nimport type {\n  E2EEOptions,\n  E2EEWorkerMessage,\n  EnableMessage,\n  EncodeMessage,\n  InitMessage,\n  KeyInfo,\n  RTPVideoMapMessage,\n  RatchetRequestMessage,\n  RemoveTransformMessage,\n  SetKeyMessage,\n  SifTrailerMessage,\n  UpdateCodecMessage,\n} from './types';\nimport { isE2EESupported, isScriptTransformSupported } from './utils';\n\n/**\n * @experimental\n */\nexport class E2EEManager extends (EventEmitter as new () => TypedEventEmitter<E2EEManagerCallbacks>) {\n  protected worker: Worker;\n\n  protected room?: Room;\n\n  private encryptionEnabled: boolean;\n\n  private keyProvider: BaseKeyProvider;\n\n  constructor(options: E2EEOptions) {\n    super();\n    this.keyProvider = options.keyProvider;\n    this.worker = options.worker;\n    this.encryptionEnabled = false;\n  }\n\n  /**\n   * @internal\n   */\n  setup(room: Room) {\n    if (!isE2EESupported()) {\n      throw new DeviceUnsupportedError(\n        'tried to setup end-to-end encryption on an unsupported browser',\n      );\n    }\n    log.info('setting up e2ee');\n    if (room !== this.room) {\n      this.room = room;\n      this.setupEventListeners(room, this.keyProvider);\n      // this.worker = new Worker('');\n      const msg: InitMessage = {\n        kind: 'init',\n        data: {\n          keyProviderOptions: this.keyProvider.getOptions(),\n        },\n      };\n      if (this.worker) {\n        log.info(`initializing worker`, { worker: this.worker });\n        this.worker.onmessage = this.onWorkerMessage;\n        this.worker.onerror = this.onWorkerError;\n        this.worker.postMessage(msg);\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  setParticipantCryptorEnabled(enabled: boolean, participantIdentity: string) {\n    log.debug(`set e2ee to ${enabled} for participant ${participantIdentity}`);\n    this.postEnable(enabled, participantIdentity);\n  }\n\n  /**\n   * @internal\n   */\n  setSifTrailer(trailer: Uint8Array) {\n    if (!trailer || trailer.length === 0) {\n      log.warn(\"ignoring server sent trailer as it's empty\");\n    } else {\n      this.postSifTrailer(trailer);\n    }\n  }\n\n  private onWorkerMessage = (ev: MessageEvent<E2EEWorkerMessage>) => {\n    const { kind, data } = ev.data;\n    switch (kind) {\n      case 'error':\n        log.error(data.error.message);\n        this.emit(EncryptionEvent.EncryptionError, data.error);\n        break;\n      case 'initAck':\n        if (data.enabled) {\n          this.keyProvider.getKeys().forEach((keyInfo) => {\n            this.postKey(keyInfo);\n          });\n        }\n        break;\n\n      case 'enable':\n        if (\n          this.encryptionEnabled !== data.enabled &&\n          data.participantIdentity === this.room?.localParticipant.identity\n        ) {\n          this.emit(\n            EncryptionEvent.ParticipantEncryptionStatusChanged,\n            data.enabled,\n            this.room!.localParticipant,\n          );\n          this.encryptionEnabled = data.enabled;\n        } else if (data.participantIdentity) {\n          const participant = this.room?.getParticipantByIdentity(data.participantIdentity);\n          if (!participant) {\n            throw TypeError(\n              `couldn't set encryption status, participant not found${data.participantIdentity}`,\n            );\n          }\n          this.emit(EncryptionEvent.ParticipantEncryptionStatusChanged, data.enabled, participant);\n        }\n        if (this.encryptionEnabled) {\n          this.keyProvider.getKeys().forEach((keyInfo) => {\n            this.postKey(keyInfo);\n          });\n        }\n        break;\n      case 'ratchetKey':\n        this.keyProvider.emit(KeyProviderEvent.KeyRatcheted, data.material, data.keyIndex);\n        break;\n      default:\n        break;\n    }\n  };\n\n  private onWorkerError = (ev: ErrorEvent) => {\n    log.error('e2ee worker encountered an error:', { error: ev.error });\n    this.emit(EncryptionEvent.EncryptionError, ev.error);\n  };\n\n  public setupEngine(engine: RTCEngine) {\n    engine.on(EngineEvent.RTPVideoMapUpdate, (rtpMap) => {\n      this.postRTPMap(rtpMap);\n    });\n  }\n\n  private setupEventListeners(room: Room, keyProvider: BaseKeyProvider) {\n    room.on(RoomEvent.TrackPublished, (pub, participant) =>\n      this.setParticipantCryptorEnabled(\n        pub.trackInfo!.encryption !== Encryption_Type.NONE,\n        participant.identity,\n      ),\n    );\n    room\n      .on(RoomEvent.ConnectionStateChanged, (state) => {\n        if (state === ConnectionState.Connected) {\n          room.participants.forEach((participant) => {\n            participant.tracks.forEach((pub) => {\n              this.setParticipantCryptorEnabled(\n                pub.trackInfo!.encryption !== Encryption_Type.NONE,\n                participant.identity,\n              );\n            });\n          });\n        }\n      })\n      .on(RoomEvent.TrackUnsubscribed, (track, _, participant) => {\n        const msg: RemoveTransformMessage = {\n          kind: 'removeTransform',\n          data: {\n            participantIdentity: participant.identity,\n            trackId: track.mediaStreamID,\n          },\n        };\n        this.worker?.postMessage(msg);\n      })\n      .on(RoomEvent.TrackSubscribed, (track, pub, participant) => {\n        this.setupE2EEReceiver(track, participant.identity, pub.trackInfo);\n      })\n      .on(RoomEvent.SignalConnected, () => {\n        if (!this.room) {\n          throw new TypeError(`expected room to be present on signal connect`);\n        }\n        this.setParticipantCryptorEnabled(\n          this.room.localParticipant.isE2EEEnabled,\n          this.room.localParticipant.identity,\n        );\n        keyProvider.getKeys().forEach((keyInfo) => {\n          this.postKey(keyInfo);\n        });\n      });\n    room.localParticipant.on(ParticipantEvent.LocalTrackPublished, async (publication) => {\n      this.setupE2EESender(publication.track!, publication.track!.sender!);\n    });\n\n    keyProvider\n      .on(KeyProviderEvent.SetKey, (keyInfo) => this.postKey(keyInfo))\n      .on(KeyProviderEvent.RatchetRequest, (participantId, keyIndex) =>\n        this.postRatchetRequest(participantId, keyIndex),\n      );\n  }\n\n  private postRatchetRequest(participantIdentity?: string, keyIndex?: number) {\n    if (!this.worker) {\n      throw Error('could not ratchet key, worker is missing');\n    }\n    const msg: RatchetRequestMessage = {\n      kind: 'ratchetRequest',\n      data: {\n        participantIdentity: participantIdentity,\n        keyIndex,\n      },\n    };\n    this.worker.postMessage(msg);\n  }\n\n  private postKey({ key, participantIdentity, keyIndex }: KeyInfo) {\n    if (!this.worker) {\n      throw Error('could not set key, worker is missing');\n    }\n    const msg: SetKeyMessage = {\n      kind: 'setKey',\n      data: {\n        participantIdentity: participantIdentity,\n        isPublisher: participantIdentity === this.room?.localParticipant.identity,\n        key,\n        keyIndex,\n      },\n    };\n    this.worker.postMessage(msg);\n  }\n\n  private postEnable(enabled: boolean, participantIdentity: string) {\n    if (this.worker) {\n      const enableMsg: EnableMessage = {\n        kind: 'enable',\n        data: {\n          enabled,\n          participantIdentity,\n        },\n      };\n      this.worker.postMessage(enableMsg);\n    } else {\n      throw new ReferenceError('failed to enable e2ee, worker is not ready');\n    }\n  }\n\n  private postRTPMap(map: Map<number, VideoCodec>) {\n    if (!this.worker) {\n      throw TypeError('could not post rtp map, worker is missing');\n    }\n    if (!this.room?.localParticipant.identity) {\n      throw TypeError('could not post rtp map, local participant identity is missing');\n    }\n    const msg: RTPVideoMapMessage = {\n      kind: 'setRTPMap',\n      data: {\n        map,\n        participantIdentity: this.room.localParticipant.identity,\n      },\n    };\n    this.worker.postMessage(msg);\n  }\n\n  private postSifTrailer(trailer: Uint8Array) {\n    if (!this.worker) {\n      throw Error('could not post SIF trailer, worker is missing');\n    }\n    const msg: SifTrailerMessage = {\n      kind: 'setSifTrailer',\n      data: {\n        trailer,\n      },\n    };\n    this.worker.postMessage(msg);\n  }\n\n  private setupE2EEReceiver(track: RemoteTrack, remoteId: string, trackInfo?: TrackInfo) {\n    if (!track.receiver) {\n      return;\n    }\n    if (!trackInfo?.mimeType || trackInfo.mimeType === '') {\n      throw new TypeError('MimeType missing from trackInfo, cannot set up E2EE cryptor');\n    }\n    this.handleReceiver(\n      track.receiver,\n      track.mediaStreamID,\n      remoteId,\n      track.kind === 'video' ? mimeTypeToVideoCodecString(trackInfo.mimeType) : undefined,\n    );\n  }\n\n  private setupE2EESender(track: Track, sender: RTCRtpSender) {\n    if (!(track instanceof LocalTrack) || !sender) {\n      if (!sender) log.warn('early return because sender is not ready');\n      return;\n    }\n    this.handleSender(sender, track.mediaStreamID, undefined);\n  }\n\n  /**\n   * Handles the given {@code RTCRtpReceiver} by creating a {@code TransformStream} which will inject\n   * a frame decoder.\n   *\n   */\n  private async handleReceiver(\n    receiver: RTCRtpReceiver,\n    trackId: string,\n    participantIdentity: string,\n    codec?: VideoCodec,\n  ) {\n    if (!this.worker) {\n      return;\n    }\n\n    if (isScriptTransformSupported()) {\n      const options = {\n        kind: 'decode',\n        participantIdentity,\n        trackId,\n        codec,\n      };\n      // @ts-ignore\n      receiver.transform = new RTCRtpScriptTransform(this.worker, options);\n    } else {\n      if (E2EE_FLAG in receiver && codec) {\n        // only update codec\n        const msg: UpdateCodecMessage = {\n          kind: 'updateCodec',\n          data: {\n            trackId,\n            codec,\n            participantIdentity: participantIdentity,\n          },\n        };\n        this.worker.postMessage(msg);\n        return;\n      }\n      // @ts-ignore\n      let writable: WritableStream = receiver.writableStream;\n      // @ts-ignore\n      let readable: ReadableStream = receiver.readableStream;\n      if (!writable || !readable) {\n        // @ts-ignore\n        const receiverStreams = receiver.createEncodedStreams();\n        // @ts-ignore\n        receiver.writableStream = receiverStreams.writable;\n        writable = receiverStreams.writable;\n        // @ts-ignore\n        receiver.readableStream = receiverStreams.readable;\n        readable = receiverStreams.readable;\n      }\n\n      const msg: EncodeMessage = {\n        kind: 'decode',\n        data: {\n          readableStream: readable,\n          writableStream: writable,\n          trackId: trackId,\n          codec,\n          participantIdentity: participantIdentity,\n        },\n      };\n      this.worker.postMessage(msg, [readable, writable]);\n    }\n\n    // @ts-ignore\n    receiver[E2EE_FLAG] = true;\n  }\n\n  /**\n   * Handles the given {@code RTCRtpSender} by creating a {@code TransformStream} which will inject\n   * a frame encoder.\n   *\n   */\n  private handleSender(sender: RTCRtpSender, trackId: string, codec?: VideoCodec) {\n    if (E2EE_FLAG in sender || !this.worker) {\n      return;\n    }\n\n    if (!this.room?.localParticipant.identity || this.room.localParticipant.identity === '') {\n      throw TypeError('local identity needs to be known in order to set up encrypted sender');\n    }\n\n    if (isScriptTransformSupported()) {\n      log.info('initialize script transform');\n      const options = {\n        kind: 'encode',\n        participantIdentity: this.room.localParticipant.identity,\n        trackId,\n        codec,\n      };\n      // @ts-ignore\n      sender.transform = new RTCRtpScriptTransform(this.worker, options);\n    } else {\n      log.info('initialize encoded streams');\n      // @ts-ignore\n      const senderStreams = sender.createEncodedStreams();\n      const msg: EncodeMessage = {\n        kind: 'encode',\n        data: {\n          readableStream: senderStreams.readable,\n          writableStream: senderStreams.writable,\n          codec,\n          trackId,\n          participantIdentity: this.room.localParticipant.identity,\n        },\n      };\n      this.worker.postMessage(msg, [senderStreams.readable, senderStreams.writable]);\n    }\n\n    // @ts-ignore\n    sender[E2EE_FLAG] = true;\n  }\n}\n", "import { Mutex } from '../room/utils';\n\ntype QueueTask<T> = () => PromiseLike<T>;\n\nenum QueueTaskStatus {\n  'WAITING',\n  'RUNNING',\n  'COMPLETED',\n}\n\ntype QueueTaskInfo = {\n  id: number;\n  enqueuedAt: number;\n  executedAt?: number;\n  status: QueueTaskStatus;\n};\n\nexport class AsyncQueue {\n  private pendingTasks: Map<number, QueueTaskInfo>;\n\n  private taskMutex: Mutex;\n\n  private nextTaskIndex: number;\n\n  constructor() {\n    this.pendingTasks = new Map();\n    this.taskMutex = new Mutex();\n    this.nextTaskIndex = 0;\n  }\n\n  async run<T>(task: QueueTask<T>) {\n    const taskInfo: QueueTaskInfo = {\n      id: this.nextTaskIndex++,\n      enqueuedAt: Date.now(),\n      status: QueueTaskStatus.WAITING,\n    };\n    this.pendingTasks.set(taskInfo.id, taskInfo);\n    const unlock = await this.taskMutex.lock();\n    try {\n      taskInfo.executedAt = Date.now();\n      taskInfo.status = QueueTaskStatus.RUNNING;\n      return await task();\n    } finally {\n      taskInfo.status = QueueTaskStatus.COMPLETED;\n      this.pendingTasks.delete(taskInfo.id);\n      unlock();\n    }\n  }\n\n  async flush() {\n    return this.run(async () => {});\n  }\n\n  snapshot() {\n    return Array.from(this.pendingTasks.values());\n  }\n}\n", "import { protoInt64 } from '@bufbuild/protobuf';\nimport log, { LoggerNames, getLogger } from '../logger';\nimport {\n  ClientInfo,\n  DisconnectReason,\n  ParticipantInfo,\n  ReconnectReason,\n  Room,\n  SpeakerInfo,\n  VideoLayer,\n} from '../proto/livekit_models_pb';\nimport {\n  AddTrackRequest,\n  ConnectionQualityUpdate,\n  JoinResponse,\n  LeaveRequest,\n  MuteTrackRequest,\n  Ping,\n  ReconnectResponse,\n  SessionDescription,\n  SignalRequest,\n  SignalResponse,\n  SignalTarget,\n  SimulateScenario,\n  StreamStateUpdate,\n  SubscribedQualityUpdate,\n  SubscriptionPermission,\n  SubscriptionPermissionUpdate,\n  SubscriptionResponse,\n  SyncState,\n  TrackPermission,\n  TrackPublishedResponse,\n  TrackUnpublishedResponse,\n  TrickleRequest,\n  UpdateParticipantMetadata,\n  UpdateSubscription,\n  UpdateTrackSettings,\n  UpdateVideoLayers,\n} from '../proto/livekit_rtc_pb';\nimport { ConnectionError, ConnectionErrorReason } from '../room/errors';\nimport CriticalTimers from '../room/timers';\nimport type { LoggerOptions } from '../room/types';\nimport { Mutex, getClientInfo, isReactNative, sleep, toWebsocketUrl } from '../room/utils';\nimport { AsyncQueue } from '../utils/AsyncQueue';\n\n// internal options\ninterface ConnectOpts extends SignalOptions {\n  /** internal */\n  reconnect?: boolean;\n  /** internal */\n  reconnectReason?: number;\n  /** internal */\n  sid?: string;\n}\n\n// public options\nexport interface SignalOptions {\n  autoSubscribe: boolean;\n  /** @deprecated */\n  publishOnly?: string;\n  adaptiveStream?: boolean;\n  maxRetries: number;\n  e2eeEnabled: boolean;\n  websocketTimeout: number;\n}\n\ntype SignalMessage = SignalRequest['message'];\n\ntype SignalKind = NonNullable<SignalMessage>['case'];\n\nconst passThroughQueueSignals: Array<SignalKind> = [\n  'syncState',\n  'trickle',\n  'offer',\n  'answer',\n  'simulate',\n  'leave',\n];\n\nfunction canPassThroughQueue(req: SignalMessage): boolean {\n  const canPass = passThroughQueueSignals.indexOf(req!.case) >= 0;\n  log.trace('request allowed to bypass queue:', { canPass, req });\n  return canPass;\n}\n\nexport enum SignalConnectionState {\n  CONNECTING,\n  CONNECTED,\n  RECONNECTING,\n  DISCONNECTING,\n  DISCONNECTED,\n}\n\n/** @internal */\nexport class SignalClient {\n  requestQueue: AsyncQueue;\n\n  queuedRequests: Array<() => Promise<void>>;\n\n  useJSON: boolean;\n\n  /** signal rtt in milliseconds */\n  rtt: number = 0;\n\n  /** simulate signaling latency by delaying messages */\n  signalLatency?: number;\n\n  onClose?: (reason: string) => void;\n\n  onAnswer?: (sd: RTCSessionDescriptionInit) => void;\n\n  onOffer?: (sd: RTCSessionDescriptionInit) => void;\n\n  // when a new ICE candidate is made available\n  onTrickle?: (sd: RTCIceCandidateInit, target: SignalTarget) => void;\n\n  onParticipantUpdate?: (updates: ParticipantInfo[]) => void;\n\n  onLocalTrackPublished?: (res: TrackPublishedResponse) => void;\n\n  onNegotiateRequested?: () => void;\n\n  onSpeakersChanged?: (res: SpeakerInfo[]) => void;\n\n  onRemoteMuteChanged?: (trackSid: string, muted: boolean) => void;\n\n  onRoomUpdate?: (room: Room) => void;\n\n  onConnectionQuality?: (update: ConnectionQualityUpdate) => void;\n\n  onStreamStateUpdate?: (update: StreamStateUpdate) => void;\n\n  onSubscribedQualityUpdate?: (update: SubscribedQualityUpdate) => void;\n\n  onSubscriptionPermissionUpdate?: (update: SubscriptionPermissionUpdate) => void;\n\n  onSubscriptionError?: (update: SubscriptionResponse) => void;\n\n  onLocalTrackUnpublished?: (res: TrackUnpublishedResponse) => void;\n\n  onTokenRefresh?: (token: string) => void;\n\n  onLeave?: (leave: LeaveRequest) => void;\n\n  connectOptions?: ConnectOpts;\n\n  ws?: WebSocket;\n\n  get currentState() {\n    return this.state;\n  }\n\n  get isDisconnected() {\n    return (\n      this.state === SignalConnectionState.DISCONNECTING ||\n      this.state === SignalConnectionState.DISCONNECTED\n    );\n  }\n\n  private get isEstablishingConnection() {\n    return (\n      this.state === SignalConnectionState.CONNECTING ||\n      this.state === SignalConnectionState.RECONNECTING\n    );\n  }\n\n  private options?: SignalOptions;\n\n  private pingTimeout: ReturnType<typeof setTimeout> | undefined;\n\n  private pingTimeoutDuration: number | undefined;\n\n  private pingIntervalDuration: number | undefined;\n\n  private pingInterval: ReturnType<typeof setInterval> | undefined;\n\n  private closingLock: Mutex;\n\n  private state: SignalConnectionState = SignalConnectionState.DISCONNECTED;\n\n  private connectionLock: Mutex;\n\n  private log = log;\n\n  private loggerContextCb?: LoggerOptions['loggerContextCb'];\n\n  constructor(useJSON: boolean = false, loggerOptions: LoggerOptions = {}) {\n    this.log = getLogger(loggerOptions.loggerName ?? LoggerNames.Signal);\n    this.loggerContextCb = loggerOptions.loggerContextCb;\n    this.useJSON = useJSON;\n    this.requestQueue = new AsyncQueue();\n    this.queuedRequests = [];\n    this.closingLock = new Mutex();\n    this.connectionLock = new Mutex();\n    this.state = SignalConnectionState.DISCONNECTED;\n  }\n\n  private get logContext() {\n    return this.loggerContextCb?.() ?? {};\n  }\n\n  async join(\n    url: string,\n    token: string,\n    opts: SignalOptions,\n    abortSignal?: AbortSignal,\n  ): Promise<JoinResponse> {\n    // during a full reconnect, we'd want to start the sequence even if currently\n    // connected\n    this.state = SignalConnectionState.CONNECTING;\n    this.options = opts;\n    const res = await this.connect(url, token, opts, abortSignal);\n    return res as JoinResponse;\n  }\n\n  async reconnect(\n    url: string,\n    token: string,\n    sid?: string,\n    reason?: ReconnectReason,\n  ): Promise<ReconnectResponse | void> {\n    if (!this.options) {\n      this.log.warn(\n        'attempted to reconnect without signal options being set, ignoring',\n        this.logContext,\n      );\n      return;\n    }\n    this.state = SignalConnectionState.RECONNECTING;\n    // clear ping interval and restart it once reconnected\n    this.clearPingInterval();\n\n    const res = await this.connect(url, token, {\n      ...this.options,\n      reconnect: true,\n      sid,\n      reconnectReason: reason,\n    });\n    return res;\n  }\n\n  private connect(\n    url: string,\n    token: string,\n    opts: ConnectOpts,\n    abortSignal?: AbortSignal,\n  ): Promise<JoinResponse | ReconnectResponse | void> {\n    this.connectOptions = opts;\n    url = toWebsocketUrl(url);\n    // strip trailing slash\n    url = url.replace(/\\/$/, '');\n    url += '/rtc';\n\n    const clientInfo = getClientInfo();\n    const params = createConnectionParams(token, clientInfo, opts);\n\n    return new Promise<JoinResponse | ReconnectResponse | void>(async (resolve, reject) => {\n      const unlock = await this.connectionLock.lock();\n      try {\n        const abortHandler = async () => {\n          this.close();\n          clearTimeout(wsTimeout);\n          reject(new ConnectionError('room connection has been cancelled (signal)'));\n        };\n\n        const wsTimeout = setTimeout(() => {\n          this.close();\n          reject(new ConnectionError('room connection has timed out (signal)'));\n        }, opts.websocketTimeout);\n\n        if (abortSignal?.aborted) {\n          abortHandler();\n        }\n        abortSignal?.addEventListener('abort', abortHandler);\n        this.log.debug(`connecting to ${url + params}`, this.logContext);\n        if (this.ws) {\n          await this.close(false);\n        }\n        this.ws = new WebSocket(url + params);\n        this.ws.binaryType = 'arraybuffer';\n\n        this.ws.onopen = () => {\n          clearTimeout(wsTimeout);\n        };\n\n        this.ws.onerror = async (ev: Event) => {\n          if (this.state !== SignalConnectionState.CONNECTED) {\n            clearTimeout(wsTimeout);\n            try {\n              const resp = await fetch(`http${url.substring(2)}/validate${params}`);\n              if (resp.status.toFixed(0).startsWith('4')) {\n                const msg = await resp.text();\n                reject(new ConnectionError(msg, ConnectionErrorReason.NotAllowed, resp.status));\n              } else {\n                reject(\n                  new ConnectionError(\n                    'Internal error',\n                    ConnectionErrorReason.InternalError,\n                    resp.status,\n                  ),\n                );\n              }\n            } catch (e) {\n              reject(\n                new ConnectionError(\n                  'server was not reachable',\n                  ConnectionErrorReason.ServerUnreachable,\n                ),\n              );\n            }\n            return;\n          }\n          // other errors, handle\n          this.handleWSError(ev);\n        };\n\n        this.ws.onmessage = async (ev: MessageEvent) => {\n          // not considered connected until JoinResponse is received\n          let resp: SignalResponse;\n          if (typeof ev.data === 'string') {\n            const json = JSON.parse(ev.data);\n            resp = SignalResponse.fromJson(json);\n          } else if (ev.data instanceof ArrayBuffer) {\n            resp = SignalResponse.fromBinary(new Uint8Array(ev.data));\n          } else {\n            this.log.error(\n              `could not decode websocket message: ${typeof ev.data}`,\n              this.logContext,\n            );\n            return;\n          }\n\n          if (this.state !== SignalConnectionState.CONNECTED) {\n            let shouldProcessMessage = false;\n            // handle join message only\n            if (resp.message?.case === 'join') {\n              this.state = SignalConnectionState.CONNECTED;\n              abortSignal?.removeEventListener('abort', abortHandler);\n              this.pingTimeoutDuration = resp.message.value.pingTimeout;\n              this.pingIntervalDuration = resp.message.value.pingInterval;\n\n              if (this.pingTimeoutDuration && this.pingTimeoutDuration > 0) {\n                this.log.debug('ping config', {\n                  ...this.logContext,\n                  timeout: this.pingTimeoutDuration,\n                  interval: this.pingIntervalDuration,\n                });\n                this.startPingInterval();\n              }\n              resolve(resp.message.value);\n            } else if (\n              this.state === SignalConnectionState.RECONNECTING &&\n              resp.message.case !== 'leave'\n            ) {\n              // in reconnecting, any message received means signal reconnected\n              this.state = SignalConnectionState.CONNECTED;\n              abortSignal?.removeEventListener('abort', abortHandler);\n              this.startPingInterval();\n              if (resp.message?.case === 'reconnect') {\n                resolve(resp.message?.value);\n              } else {\n                resolve();\n                shouldProcessMessage = true;\n              }\n            } else if (this.isEstablishingConnection && resp.message.case === 'leave') {\n              reject(\n                new ConnectionError(\n                  'Received leave request while trying to (re)connect',\n                  ConnectionErrorReason.LeaveRequest,\n                ),\n              );\n            } else if (!opts.reconnect) {\n              // non-reconnect case, should receive join response first\n              reject(\n                new ConnectionError(\n                  `did not receive join response, got ${resp.message?.case} instead`,\n                ),\n              );\n            }\n            if (!shouldProcessMessage) {\n              return;\n            }\n          }\n\n          if (this.signalLatency) {\n            await sleep(this.signalLatency);\n          }\n          this.handleSignalResponse(resp);\n        };\n\n        this.ws.onclose = (ev: CloseEvent) => {\n          if (this.isEstablishingConnection) {\n            reject(new ConnectionError('Websocket got closed during a (re)connection attempt'));\n          }\n\n          this.log.warn(`websocket closed`, {\n            ...this.logContext,\n            reason: ev.reason,\n            state: this.state,\n          });\n          this.handleOnClose(ev.reason);\n        };\n      } finally {\n        unlock();\n      }\n    });\n  }\n\n  /** @internal */\n  resetCallbacks = () => {\n    this.onAnswer = undefined;\n    this.onLeave = undefined;\n    this.onLocalTrackPublished = undefined;\n    this.onLocalTrackUnpublished = undefined;\n    this.onNegotiateRequested = undefined;\n    this.onOffer = undefined;\n    this.onRemoteMuteChanged = undefined;\n    this.onSubscribedQualityUpdate = undefined;\n    this.onTokenRefresh = undefined;\n    this.onTrickle = undefined;\n    this.onClose = undefined;\n  };\n\n  async close(updateState: boolean = true) {\n    const unlock = await this.closingLock.lock();\n    try {\n      if (updateState) {\n        this.state = SignalConnectionState.DISCONNECTING;\n      }\n      if (this.ws) {\n        this.ws.onmessage = null;\n        this.ws.onopen = null;\n        this.ws.onclose = null;\n\n        // calling `ws.close()` only starts the closing handshake (CLOSING state), prefer to wait until state is actually CLOSED\n        const closePromise = new Promise<void>((resolve) => {\n          if (this.ws) {\n            this.ws.onclose = () => {\n              resolve();\n            };\n          } else {\n            resolve();\n          }\n        });\n\n        if (this.ws.readyState < this.ws.CLOSING) {\n          this.ws.close();\n          // 250ms grace period for ws to close gracefully\n          await Promise.race([closePromise, sleep(250)]);\n        }\n        this.ws = undefined;\n      }\n    } finally {\n      if (updateState) {\n        this.state = SignalConnectionState.DISCONNECTED;\n      }\n      this.clearPingInterval();\n      unlock();\n    }\n  }\n\n  // initial offer after joining\n  sendOffer(offer: RTCSessionDescriptionInit) {\n    this.log.debug('sending offer', { ...this.logContext, offerSdp: offer.sdp });\n    this.sendRequest({\n      case: 'offer',\n      value: toProtoSessionDescription(offer),\n    });\n  }\n\n  // answer a server-initiated offer\n  sendAnswer(answer: RTCSessionDescriptionInit) {\n    this.log.debug('sending answer', { ...this.logContext, answerSdp: answer.sdp });\n    return this.sendRequest({\n      case: 'answer',\n      value: toProtoSessionDescription(answer),\n    });\n  }\n\n  sendIceCandidate(candidate: RTCIceCandidateInit, target: SignalTarget) {\n    this.log.trace('sending ice candidate', { ...this.logContext, candidate });\n    return this.sendRequest({\n      case: 'trickle',\n      value: new TrickleRequest({\n        candidateInit: JSON.stringify(candidate),\n        target,\n      }),\n    });\n  }\n\n  sendMuteTrack(trackSid: string, muted: boolean) {\n    return this.sendRequest({\n      case: 'mute',\n      value: new MuteTrackRequest({\n        sid: trackSid,\n        muted,\n      }),\n    });\n  }\n\n  sendAddTrack(req: AddTrackRequest) {\n    return this.sendRequest({\n      case: 'addTrack',\n      value: req,\n    });\n  }\n\n  sendUpdateLocalMetadata(metadata: string, name: string) {\n    return this.sendRequest({\n      case: 'updateMetadata',\n      value: new UpdateParticipantMetadata({\n        metadata,\n        name,\n      }),\n    });\n  }\n\n  sendUpdateTrackSettings(settings: UpdateTrackSettings) {\n    this.sendRequest({\n      case: 'trackSetting',\n      value: settings,\n    });\n  }\n\n  sendUpdateSubscription(sub: UpdateSubscription) {\n    return this.sendRequest({\n      case: 'subscription',\n      value: sub,\n    });\n  }\n\n  sendSyncState(sync: SyncState) {\n    return this.sendRequest({\n      case: 'syncState',\n      value: sync,\n    });\n  }\n\n  sendUpdateVideoLayers(trackSid: string, layers: VideoLayer[]) {\n    return this.sendRequest({\n      case: 'updateLayers',\n      value: new UpdateVideoLayers({\n        trackSid,\n        layers,\n      }),\n    });\n  }\n\n  sendUpdateSubscriptionPermissions(allParticipants: boolean, trackPermissions: TrackPermission[]) {\n    return this.sendRequest({\n      case: 'subscriptionPermission',\n      value: new SubscriptionPermission({\n        allParticipants,\n        trackPermissions,\n      }),\n    });\n  }\n\n  sendSimulateScenario(scenario: SimulateScenario) {\n    return this.sendRequest({\n      case: 'simulate',\n      value: scenario,\n    });\n  }\n\n  sendPing() {\n    /** send both of ping and pingReq for compatibility to old and new server */\n    return Promise.all([\n      this.sendRequest({\n        case: 'ping',\n        value: protoInt64.parse(Date.now()),\n      }),\n      this.sendRequest({\n        case: 'pingReq',\n        value: new Ping({\n          timestamp: protoInt64.parse(Date.now()),\n          rtt: protoInt64.parse(this.rtt),\n        }),\n      }),\n    ]);\n  }\n\n  sendLeave() {\n    return this.sendRequest({\n      case: 'leave',\n      value: new LeaveRequest({\n        canReconnect: false,\n        reason: DisconnectReason.CLIENT_INITIATED,\n      }),\n    });\n  }\n\n  async sendRequest(message: SignalMessage, fromQueue: boolean = false) {\n    // capture all requests while reconnecting and put them in a queue\n    // unless the request originates from the queue, then don't enqueue again\n    const canQueue = !fromQueue && !canPassThroughQueue(message);\n    if (canQueue && this.state === SignalConnectionState.RECONNECTING) {\n      this.queuedRequests.push(async () => {\n        await this.sendRequest(message, true);\n      });\n      return;\n    }\n    // make sure previously queued requests are being sent first\n    if (!fromQueue) {\n      await this.requestQueue.flush();\n    }\n    if (this.signalLatency) {\n      await sleep(this.signalLatency);\n    }\n    if (!this.ws || this.ws.readyState !== this.ws.OPEN) {\n      this.log.error(\n        `cannot send signal request before connected, type: ${message?.case}`,\n        this.logContext,\n      );\n      return;\n    }\n    const req = new SignalRequest({ message });\n\n    try {\n      if (this.useJSON) {\n        this.ws.send(req.toJsonString());\n      } else {\n        this.ws.send(req.toBinary());\n      }\n    } catch (e) {\n      this.log.error('error sending signal message', { ...this.logContext, error: e });\n    }\n  }\n\n  private handleSignalResponse(res: SignalResponse) {\n    const msg = res.message;\n    if (msg == undefined) {\n      this.log.debug('received unsupported message', this.logContext);\n      return;\n    }\n\n    let pingHandled = false;\n    if (msg.case === 'answer') {\n      const sd = fromProtoSessionDescription(msg.value);\n      if (this.onAnswer) {\n        this.onAnswer(sd);\n      }\n    } else if (msg.case === 'offer') {\n      const sd = fromProtoSessionDescription(msg.value);\n      if (this.onOffer) {\n        this.onOffer(sd);\n      }\n    } else if (msg.case === 'trickle') {\n      const candidate: RTCIceCandidateInit = JSON.parse(msg.value.candidateInit!);\n      if (this.onTrickle) {\n        this.onTrickle(candidate, msg.value.target);\n      }\n    } else if (msg.case === 'update') {\n      if (this.onParticipantUpdate) {\n        this.onParticipantUpdate(msg.value.participants ?? []);\n      }\n    } else if (msg.case === 'trackPublished') {\n      if (this.onLocalTrackPublished) {\n        this.onLocalTrackPublished(msg.value);\n      }\n    } else if (msg.case === 'speakersChanged') {\n      if (this.onSpeakersChanged) {\n        this.onSpeakersChanged(msg.value.speakers ?? []);\n      }\n    } else if (msg.case === 'leave') {\n      if (this.onLeave) {\n        this.onLeave(msg.value);\n      }\n    } else if (msg.case === 'mute') {\n      if (this.onRemoteMuteChanged) {\n        this.onRemoteMuteChanged(msg.value.sid, msg.value.muted);\n      }\n    } else if (msg.case === 'roomUpdate') {\n      if (this.onRoomUpdate && msg.value.room) {\n        this.onRoomUpdate(msg.value.room);\n      }\n    } else if (msg.case === 'connectionQuality') {\n      if (this.onConnectionQuality) {\n        this.onConnectionQuality(msg.value);\n      }\n    } else if (msg.case === 'streamStateUpdate') {\n      if (this.onStreamStateUpdate) {\n        this.onStreamStateUpdate(msg.value);\n      }\n    } else if (msg.case === 'subscribedQualityUpdate') {\n      if (this.onSubscribedQualityUpdate) {\n        this.onSubscribedQualityUpdate(msg.value);\n      }\n    } else if (msg.case === 'subscriptionPermissionUpdate') {\n      if (this.onSubscriptionPermissionUpdate) {\n        this.onSubscriptionPermissionUpdate(msg.value);\n      }\n    } else if (msg.case === 'refreshToken') {\n      if (this.onTokenRefresh) {\n        this.onTokenRefresh(msg.value);\n      }\n    } else if (msg.case === 'trackUnpublished') {\n      if (this.onLocalTrackUnpublished) {\n        this.onLocalTrackUnpublished(msg.value);\n      }\n    } else if (msg.case === 'subscriptionResponse') {\n      if (this.onSubscriptionError) {\n        this.onSubscriptionError(msg.value);\n      }\n    } else if (msg.case === 'pong') {\n    } else if (msg.case === 'pongResp') {\n      this.rtt = Date.now() - Number.parseInt(msg.value.lastPingTimestamp.toString());\n      this.resetPingTimeout();\n      pingHandled = true;\n    } else {\n      this.log.debug('unsupported message', { ...this.logContext, msgCase: msg.case });\n    }\n\n    if (!pingHandled) {\n      this.resetPingTimeout();\n    }\n  }\n\n  setReconnected() {\n    while (this.queuedRequests.length > 0) {\n      const req = this.queuedRequests.shift();\n      if (req) {\n        this.requestQueue.run(req);\n      }\n    }\n  }\n\n  private async handleOnClose(reason: string) {\n    if (this.state === SignalConnectionState.DISCONNECTED) return;\n    const onCloseCallback = this.onClose;\n    await this.close();\n    this.log.debug(`websocket connection closed: ${reason}`, { ...this.logContext, reason });\n    if (onCloseCallback) {\n      onCloseCallback(reason);\n    }\n  }\n\n  private handleWSError(ev: Event) {\n    this.log.error('websocket error', { ...this.logContext, error: ev });\n  }\n\n  /**\n   * Resets the ping timeout and starts a new timeout.\n   * Call this after receiving a pong message\n   */\n  private resetPingTimeout() {\n    this.clearPingTimeout();\n    if (!this.pingTimeoutDuration) {\n      this.log.warn('ping timeout duration not set', this.logContext);\n      return;\n    }\n    this.pingTimeout = CriticalTimers.setTimeout(() => {\n      this.log.warn(\n        `ping timeout triggered. last pong received at: ${new Date(\n          Date.now() - this.pingTimeoutDuration! * 1000,\n        ).toUTCString()}`,\n        this.logContext,\n      );\n      this.handleOnClose('ping timeout');\n    }, this.pingTimeoutDuration * 1000);\n  }\n\n  /**\n   * Clears ping timeout (does not start a new timeout)\n   */\n  private clearPingTimeout() {\n    if (this.pingTimeout) {\n      CriticalTimers.clearTimeout(this.pingTimeout);\n    }\n  }\n\n  private startPingInterval() {\n    this.clearPingInterval();\n    this.resetPingTimeout();\n    if (!this.pingIntervalDuration) {\n      this.log.warn('ping interval duration not set', this.logContext);\n      return;\n    }\n    this.log.debug('start ping interval', this.logContext);\n    this.pingInterval = CriticalTimers.setInterval(() => {\n      this.sendPing();\n    }, this.pingIntervalDuration * 1000);\n  }\n\n  private clearPingInterval() {\n    this.log.debug('clearing ping interval', this.logContext);\n    this.clearPingTimeout();\n    if (this.pingInterval) {\n      CriticalTimers.clearInterval(this.pingInterval);\n    }\n  }\n}\n\nfunction fromProtoSessionDescription(sd: SessionDescription): RTCSessionDescriptionInit {\n  const rsd: RTCSessionDescriptionInit = {\n    type: 'offer',\n    sdp: sd.sdp,\n  };\n  switch (sd.type) {\n    case 'answer':\n    case 'offer':\n    case 'pranswer':\n    case 'rollback':\n      rsd.type = sd.type;\n      break;\n    default:\n      break;\n  }\n  return rsd;\n}\n\nexport function toProtoSessionDescription(\n  rsd: RTCSessionDescription | RTCSessionDescriptionInit,\n): SessionDescription {\n  const sd = new SessionDescription({\n    sdp: rsd.sdp!,\n    type: rsd.type!,\n  });\n  return sd;\n}\n\nfunction createConnectionParams(token: string, info: ClientInfo, opts: ConnectOpts): string {\n  const params = new URLSearchParams();\n  params.set('access_token', token);\n\n  // opts\n  if (opts.reconnect) {\n    params.set('reconnect', '1');\n    if (opts.sid) {\n      params.set('sid', opts.sid);\n    }\n  }\n\n  params.set('auto_subscribe', opts.autoSubscribe ? '1' : '0');\n\n  // ClientInfo\n  params.set('sdk', isReactNative() ? 'reactnative' : 'js');\n  params.set('version', info.version!);\n  params.set('protocol', info.protocol!.toString());\n  if (info.deviceModel) {\n    params.set('device_model', info.deviceModel);\n  }\n  if (info.os) {\n    params.set('os', info.os);\n  }\n  if (info.osVersion) {\n    params.set('os_version', info.osVersion);\n  }\n  if (info.browser) {\n    params.set('browser', info.browser);\n  }\n  if (info.browserVersion) {\n    params.set('browser_version', info.browserVersion);\n  }\n\n  if (opts.publishOnly !== undefined) {\n    params.set('publish', opts.publishOnly);\n  }\n\n  if (opts.adaptiveStream) {\n    params.set('adaptive_stream', '1');\n  }\n\n  if (opts.reconnectReason) {\n    params.set('reconnect_reason', opts.reconnectReason.toString());\n  }\n\n  // @ts-ignore\n  if (navigator.connection?.type) {\n    // @ts-ignore\n    params.set('network', navigator.connection.type);\n  }\n\n  return `?${params.toString()}`;\n}\n", "var grammar = module.exports = {\n  v: [{\n    name: 'version',\n    reg: /^(\\d*)$/\n  }],\n  o: [{\n    // o=- 20518 0 IN IP4 203.0.113.1\n    // NB: sessionId will be a String in most cases because it is huge\n    name: 'origin',\n    reg: /^(\\S*) (\\d*) (\\d*) (\\S*) IP(\\d) (\\S*)/,\n    names: ['username', 'sessionId', 'sessionVersion', 'netType', 'ipVer', 'address'],\n    format: '%s %s %d %s IP%d %s'\n  }],\n  // default parsing of these only (though some of these feel outdated)\n  s: [{ name: 'name' }],\n  i: [{ name: 'description' }],\n  u: [{ name: 'uri' }],\n  e: [{ name: 'email' }],\n  p: [{ name: 'phone' }],\n  z: [{ name: 'timezones' }], // TODO: this one can actually be parsed properly...\n  r: [{ name: 'repeats' }],   // TODO: this one can also be parsed properly\n  // k: [{}], // outdated thing ignored\n  t: [{\n    // t=0 0\n    name: 'timing',\n    reg: /^(\\d*) (\\d*)/,\n    names: ['start', 'stop'],\n    format: '%d %d'\n  }],\n  c: [{\n    // c=IN IP4 10.47.197.26\n    name: 'connection',\n    reg: /^IN IP(\\d) (\\S*)/,\n    names: ['version', 'ip'],\n    format: 'IN IP%d %s'\n  }],\n  b: [{\n    // b=AS:4000\n    push: 'bandwidth',\n    reg: /^(TIAS|AS|CT|RR|RS):(\\d*)/,\n    names: ['type', 'limit'],\n    format: '%s:%s'\n  }],\n  m: [{\n    // m=video 51744 RTP/AVP 126 97 98 34 31\n    // NB: special - pushes to session\n    // TODO: rtp/fmtp should be filtered by the payloads found here?\n    reg: /^(\\w*) (\\d*) ([\\w/]*)(?: (.*))?/,\n    names: ['type', 'port', 'protocol', 'payloads'],\n    format: '%s %d %s %s'\n  }],\n  a: [\n    {\n      // a=rtpmap:110 opus/48000/2\n      push: 'rtp',\n      reg: /^rtpmap:(\\d*) ([\\w\\-.]*)(?:\\s*\\/(\\d*)(?:\\s*\\/(\\S*))?)?/,\n      names: ['payload', 'codec', 'rate', 'encoding'],\n      format: function (o) {\n        return (o.encoding)\n          ? 'rtpmap:%d %s/%s/%s'\n          : o.rate\n            ? 'rtpmap:%d %s/%s'\n            : 'rtpmap:%d %s';\n      }\n    },\n    {\n      // a=fmtp:108 profile-level-id=24;object=23;bitrate=64000\n      // a=fmtp:111 minptime=10; useinbandfec=1\n      push: 'fmtp',\n      reg: /^fmtp:(\\d*) ([\\S| ]*)/,\n      names: ['payload', 'config'],\n      format: 'fmtp:%d %s'\n    },\n    {\n      // a=control:streamid=0\n      name: 'control',\n      reg: /^control:(.*)/,\n      format: 'control:%s'\n    },\n    {\n      // a=rtcp:65179 IN IP4 193.84.77.194\n      name: 'rtcp',\n      reg: /^rtcp:(\\d*)(?: (\\S*) IP(\\d) (\\S*))?/,\n      names: ['port', 'netType', 'ipVer', 'address'],\n      format: function (o) {\n        return (o.address != null)\n          ? 'rtcp:%d %s IP%d %s'\n          : 'rtcp:%d';\n      }\n    },\n    {\n      // a=rtcp-fb:98 trr-int 100\n      push: 'rtcpFbTrrInt',\n      reg: /^rtcp-fb:(\\*|\\d*) trr-int (\\d*)/,\n      names: ['payload', 'value'],\n      format: 'rtcp-fb:%s trr-int %d'\n    },\n    {\n      // a=rtcp-fb:98 nack rpsi\n      push: 'rtcpFb',\n      reg: /^rtcp-fb:(\\*|\\d*) ([\\w-_]*)(?: ([\\w-_]*))?/,\n      names: ['payload', 'type', 'subtype'],\n      format: function (o) {\n        return (o.subtype != null)\n          ? 'rtcp-fb:%s %s %s'\n          : 'rtcp-fb:%s %s';\n      }\n    },\n    {\n      // a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n      // a=extmap:1/recvonly URI-gps-string\n      // a=extmap:3 urn:ietf:params:rtp-hdrext:encrypt urn:ietf:params:rtp-hdrext:smpte-tc 25@600/24\n      push: 'ext',\n      reg: /^extmap:(\\d+)(?:\\/(\\w+))?(?: (urn:ietf:params:rtp-hdrext:encrypt))? (\\S*)(?: (\\S*))?/,\n      names: ['value', 'direction', 'encrypt-uri', 'uri', 'config'],\n      format: function (o) {\n        return (\n          'extmap:%d' +\n          (o.direction ? '/%s' : '%v') +\n          (o['encrypt-uri'] ? ' %s' : '%v') +\n          ' %s' +\n          (o.config ? ' %s' : '')\n        );\n      }\n    },\n    {\n      // a=extmap-allow-mixed\n      name: 'extmapAllowMixed',\n      reg: /^(extmap-allow-mixed)/\n    },\n    {\n      // a=crypto:1 AES_CM_128_HMAC_SHA1_80 inline:PS1uQCVeeCFCanVmcjkpPywjNWhcYD0mXXtxaVBR|2^20|1:32\n      push: 'crypto',\n      reg: /^crypto:(\\d*) ([\\w_]*) (\\S*)(?: (\\S*))?/,\n      names: ['id', 'suite', 'config', 'sessionConfig'],\n      format: function (o) {\n        return (o.sessionConfig != null)\n          ? 'crypto:%d %s %s %s'\n          : 'crypto:%d %s %s';\n      }\n    },\n    {\n      // a=setup:actpass\n      name: 'setup',\n      reg: /^setup:(\\w*)/,\n      format: 'setup:%s'\n    },\n    {\n      // a=connection:new\n      name: 'connectionType',\n      reg: /^connection:(new|existing)/,\n      format: 'connection:%s'\n    },\n    {\n      // a=mid:1\n      name: 'mid',\n      reg: /^mid:([^\\s]*)/,\n      format: 'mid:%s'\n    },\n    {\n      // a=msid:0c8b064d-d807-43b4-b434-f92a889d8587 98178685-d409-46e0-8e16-7ef0db0db64a\n      name: 'msid',\n      reg: /^msid:(.*)/,\n      format: 'msid:%s'\n    },\n    {\n      // a=ptime:20\n      name: 'ptime',\n      reg: /^ptime:(\\d*(?:\\.\\d*)*)/,\n      format: 'ptime:%d'\n    },\n    {\n      // a=maxptime:60\n      name: 'maxptime',\n      reg: /^maxptime:(\\d*(?:\\.\\d*)*)/,\n      format: 'maxptime:%d'\n    },\n    {\n      // a=sendrecv\n      name: 'direction',\n      reg: /^(sendrecv|recvonly|sendonly|inactive)/\n    },\n    {\n      // a=ice-lite\n      name: 'icelite',\n      reg: /^(ice-lite)/\n    },\n    {\n      // a=ice-ufrag:F7gI\n      name: 'iceUfrag',\n      reg: /^ice-ufrag:(\\S*)/,\n      format: 'ice-ufrag:%s'\n    },\n    {\n      // a=ice-pwd:x9cml/YzichV2+XlhiMu8g\n      name: 'icePwd',\n      reg: /^ice-pwd:(\\S*)/,\n      format: 'ice-pwd:%s'\n    },\n    {\n      // a=fingerprint:SHA-1 00:11:22:33:44:55:66:77:88:99:AA:BB:CC:DD:EE:FF:00:11:22:33\n      name: 'fingerprint',\n      reg: /^fingerprint:(\\S*) (\\S*)/,\n      names: ['type', 'hash'],\n      format: 'fingerprint:%s %s'\n    },\n    {\n      // a=candidate:0 1 UDP 2113667327 203.0.113.1 54400 typ host\n      // a=candidate:1162875081 1 udp 2113937151 192.168.34.75 60017 typ host generation 0 network-id 3 network-cost 10\n      // a=candidate:3289912957 2 udp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 generation 0 network-id 3 network-cost 10\n      // a=candidate:229815620 1 tcp 1518280447 192.168.150.19 60017 typ host tcptype active generation 0 network-id 3 network-cost 10\n      // a=candidate:3289912957 2 tcp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 tcptype passive generation 0 network-id 3 network-cost 10\n      push:'candidates',\n      reg: /^candidate:(\\S*) (\\d*) (\\S*) (\\d*) (\\S*) (\\d*) typ (\\S*)(?: raddr (\\S*) rport (\\d*))?(?: tcptype (\\S*))?(?: generation (\\d*))?(?: network-id (\\d*))?(?: network-cost (\\d*))?/,\n      names: ['foundation', 'component', 'transport', 'priority', 'ip', 'port', 'type', 'raddr', 'rport', 'tcptype', 'generation', 'network-id', 'network-cost'],\n      format: function (o) {\n        var str = 'candidate:%s %d %s %d %s %d typ %s';\n\n        str += (o.raddr != null) ? ' raddr %s rport %d' : '%v%v';\n\n        // NB: candidate has three optional chunks, so %void middles one if it's missing\n        str += (o.tcptype != null) ? ' tcptype %s' : '%v';\n\n        if (o.generation != null) {\n          str += ' generation %d';\n        }\n\n        str += (o['network-id'] != null) ? ' network-id %d' : '%v';\n        str += (o['network-cost'] != null) ? ' network-cost %d' : '%v';\n        return str;\n      }\n    },\n    {\n      // a=end-of-candidates (keep after the candidates line for readability)\n      name: 'endOfCandidates',\n      reg: /^(end-of-candidates)/\n    },\n    {\n      // a=remote-candidates:1 203.0.113.1 54400 2 203.0.113.1 54401 ...\n      name: 'remoteCandidates',\n      reg: /^remote-candidates:(.*)/,\n      format: 'remote-candidates:%s'\n    },\n    {\n      // a=ice-options:google-ice\n      name: 'iceOptions',\n      reg: /^ice-options:(\\S*)/,\n      format: 'ice-options:%s'\n    },\n    {\n      // a=ssrc:2566107569 cname:t9YU8M1UxTF8Y1A1\n      push: 'ssrcs',\n      reg: /^ssrc:(\\d*) ([\\w_-]*)(?::(.*))?/,\n      names: ['id', 'attribute', 'value'],\n      format: function (o) {\n        var str = 'ssrc:%d';\n        if (o.attribute != null) {\n          str += ' %s';\n          if (o.value != null) {\n            str += ':%s';\n          }\n        }\n        return str;\n      }\n    },\n    {\n      // a=ssrc-group:FEC 1 2\n      // a=ssrc-group:FEC-FR 3004364195 1080772241\n      push: 'ssrcGroups',\n      // token-char = %x21 / %x23-27 / %x2A-2B / %x2D-2E / %x30-39 / %x41-5A / %x5E-7E\n      reg: /^ssrc-group:([\\x21\\x23\\x24\\x25\\x26\\x27\\x2A\\x2B\\x2D\\x2E\\w]*) (.*)/,\n      names: ['semantics', 'ssrcs'],\n      format: 'ssrc-group:%s %s'\n    },\n    {\n      // a=msid-semantic: WMS Jvlam5X3SX1OP6pn20zWogvaKJz5Hjf9OnlV\n      name: 'msidSemantic',\n      reg: /^msid-semantic:\\s?(\\w*) (\\S*)/,\n      names: ['semantic', 'token'],\n      format: 'msid-semantic: %s %s' // space after ':' is not accidental\n    },\n    {\n      // a=group:BUNDLE audio video\n      push: 'groups',\n      reg: /^group:(\\w*) (.*)/,\n      names: ['type', 'mids'],\n      format: 'group:%s %s'\n    },\n    {\n      // a=rtcp-mux\n      name: 'rtcpMux',\n      reg: /^(rtcp-mux)/\n    },\n    {\n      // a=rtcp-rsize\n      name: 'rtcpRsize',\n      reg: /^(rtcp-rsize)/\n    },\n    {\n      // a=sctpmap:5000 webrtc-datachannel 1024\n      name: 'sctpmap',\n      reg: /^sctpmap:([\\w_/]*) (\\S*)(?: (\\S*))?/,\n      names: ['sctpmapNumber', 'app', 'maxMessageSize'],\n      format: function (o) {\n        return (o.maxMessageSize != null)\n          ? 'sctpmap:%s %s %s'\n          : 'sctpmap:%s %s';\n      }\n    },\n    {\n      // a=x-google-flag:conference\n      name: 'xGoogleFlag',\n      reg: /^x-google-flag:([^\\s]*)/,\n      format: 'x-google-flag:%s'\n    },\n    {\n      // a=rid:1 send max-width=1280;max-height=720;max-fps=30;depend=0\n      push: 'rids',\n      reg: /^rid:([\\d\\w]+) (\\w+)(?: ([\\S| ]*))?/,\n      names: ['id', 'direction', 'params'],\n      format: function (o) {\n        return (o.params) ? 'rid:%s %s %s' : 'rid:%s %s';\n      }\n    },\n    {\n      // a=imageattr:97 send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320] recv [x=330,y=250]\n      // a=imageattr:* send [x=800,y=640] recv *\n      // a=imageattr:100 recv [x=320,y=240]\n      push: 'imageattrs',\n      reg: new RegExp(\n        // a=imageattr:97\n        '^imageattr:(\\\\d+|\\\\*)' +\n        // send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320]\n        '[\\\\s\\\\t]+(send|recv)[\\\\s\\\\t]+(\\\\*|\\\\[\\\\S+\\\\](?:[\\\\s\\\\t]+\\\\[\\\\S+\\\\])*)' +\n        // recv [x=330,y=250]\n        '(?:[\\\\s\\\\t]+(recv|send)[\\\\s\\\\t]+(\\\\*|\\\\[\\\\S+\\\\](?:[\\\\s\\\\t]+\\\\[\\\\S+\\\\])*))?'\n      ),\n      names: ['pt', 'dir1', 'attrs1', 'dir2', 'attrs2'],\n      format: function (o) {\n        return 'imageattr:%s %s %s' + (o.dir2 ? ' %s %s' : '');\n      }\n    },\n    {\n      // a=simulcast:send 1,2,3;~4,~5 recv 6;~7,~8\n      // a=simulcast:recv 1;4,5 send 6;7\n      name: 'simulcast',\n      reg: new RegExp(\n        // a=simulcast:\n        '^simulcast:' +\n        // send 1,2,3;~4,~5\n        '(send|recv) ([a-zA-Z0-9\\\\-_~;,]+)' +\n        // space + recv 6;~7,~8\n        '(?:\\\\s?(send|recv) ([a-zA-Z0-9\\\\-_~;,]+))?' +\n        // end\n        '$'\n      ),\n      names: ['dir1', 'list1', 'dir2', 'list2'],\n      format: function (o) {\n        return 'simulcast:%s %s' + (o.dir2 ? ' %s %s' : '');\n      }\n    },\n    {\n      // old simulcast draft 03 (implemented by Firefox)\n      //   https://tools.ietf.org/html/draft-ietf-mmusic-sdp-simulcast-03\n      // a=simulcast: recv pt=97;98 send pt=97\n      // a=simulcast: send rid=5;6;7 paused=6,7\n      name: 'simulcast_03',\n      reg: /^simulcast:[\\s\\t]+([\\S+\\s\\t]+)$/,\n      names: ['value'],\n      format: 'simulcast: %s'\n    },\n    {\n      // a=framerate:25\n      // a=framerate:29.97\n      name: 'framerate',\n      reg: /^framerate:(\\d+(?:$|\\.\\d+))/,\n      format: 'framerate:%s'\n    },\n    {\n      // RFC4570\n      // a=source-filter: incl IN IP4 239.5.2.31 10.1.15.5\n      name: 'sourceFilter',\n      reg: /^source-filter: *(excl|incl) (\\S*) (IP4|IP6|\\*) (\\S*) (.*)/,\n      names: ['filterMode', 'netType', 'addressTypes', 'destAddress', 'srcList'],\n      format: 'source-filter: %s %s %s %s %s'\n    },\n    {\n      // a=bundle-only\n      name: 'bundleOnly',\n      reg: /^(bundle-only)/\n    },\n    {\n      // a=label:1\n      name: 'label',\n      reg: /^label:(.+)/,\n      format: 'label:%s'\n    },\n    {\n      // RFC version 26 for SCTP over DTLS\n      // https://tools.ietf.org/html/draft-ietf-mmusic-sctp-sdp-26#section-5\n      name: 'sctpPort',\n      reg: /^sctp-port:(\\d+)$/,\n      format: 'sctp-port:%s'\n    },\n    {\n      // RFC version 26 for SCTP over DTLS\n      // https://tools.ietf.org/html/draft-ietf-mmusic-sctp-sdp-26#section-6\n      name: 'maxMessageSize',\n      reg: /^max-message-size:(\\d+)$/,\n      format: 'max-message-size:%s'\n    },\n    {\n      // RFC7273\n      // a=ts-refclk:ptp=IEEE1588-2008:39-A7-94-FF-FE-07-CB-D0:37\n      push:'tsRefClocks',\n      reg: /^ts-refclk:([^\\s=]*)(?:=(\\S*))?/,\n      names: ['clksrc', 'clksrcExt'],\n      format: function (o) {\n        return 'ts-refclk:%s' + (o.clksrcExt != null ? '=%s' : '');\n      }\n    },\n    {\n      // RFC7273\n      // a=mediaclk:direct=963214424\n      name:'mediaClk',\n      reg: /^mediaclk:(?:id=(\\S*))? *([^\\s=]*)(?:=(\\S*))?(?: *rate=(\\d+)\\/(\\d+))?/,\n      names: ['id', 'mediaClockName', 'mediaClockValue', 'rateNumerator', 'rateDenominator'],\n      format: function (o) {\n        var str = 'mediaclk:';\n        str += (o.id != null ? 'id=%s %s' : '%v%s');\n        str += (o.mediaClockValue != null ? '=%s' : '');\n        str += (o.rateNumerator != null ? ' rate=%s' : '');\n        str += (o.rateDenominator != null ? '/%s' : '');\n        return str;\n      }\n    },\n    {\n      // a=keywds:keywords\n      name: 'keywords',\n      reg: /^keywds:(.+)$/,\n      format: 'keywds:%s'\n    },\n    {\n      // a=content:main\n      name: 'content',\n      reg: /^content:(.+)/,\n      format: 'content:%s'\n    },\n    // BFCP https://tools.ietf.org/html/rfc4583\n    {\n      // a=floorctrl:c-s\n      name: 'bfcpFloorCtrl',\n      reg: /^floorctrl:(c-only|s-only|c-s)/,\n      format: 'floorctrl:%s'\n    },\n    {\n      // a=confid:1\n      name: 'bfcpConfId',\n      reg: /^confid:(\\d+)/,\n      format: 'confid:%s'\n    },\n    {\n      // a=userid:1\n      name: 'bfcpUserId',\n      reg: /^userid:(\\d+)/,\n      format: 'userid:%s'\n    },\n    {\n      // a=floorid:1\n      name: 'bfcpFloorId',\n      reg: /^floorid:(.+) (?:m-stream|mstrm):(.+)/,\n      names: ['id', 'mStream'],\n      format: 'floorid:%s mstrm:%s'\n    },\n    {\n      // any a= that we don't understand is kept verbatim on media.invalid\n      push: 'invalid',\n      names: ['value']\n    }\n  ]\n};\n\n// set sensible defaults to avoid polluting the grammar with boring details\nObject.keys(grammar).forEach(function (key) {\n  var objs = grammar[key];\n  objs.forEach(function (obj) {\n    if (!obj.reg) {\n      obj.reg = /(.*)/;\n    }\n    if (!obj.format) {\n      obj.format = '%s';\n    }\n  });\n});\n", "var toIntIfInt = function (v) {\n  return String(Number(v)) === v ? Number(v) : v;\n};\n\nvar attachProperties = function (match, location, names, rawName) {\n  if (rawName && !names) {\n    location[rawName] = toIntIfInt(match[1]);\n  }\n  else {\n    for (var i = 0; i < names.length; i += 1) {\n      if (match[i+1] != null) {\n        location[names[i]] = toIntIfInt(match[i+1]);\n      }\n    }\n  }\n};\n\nvar parseReg = function (obj, location, content) {\n  var needsBlank = obj.name && obj.names;\n  if (obj.push && !location[obj.push]) {\n    location[obj.push] = [];\n  }\n  else if (needsBlank && !location[obj.name]) {\n    location[obj.name] = {};\n  }\n  var keyLocation = obj.push ?\n    {} :  // blank object that will be pushed\n    needsBlank ? location[obj.name] : location; // otherwise, named location or root\n\n  attachProperties(content.match(obj.reg), keyLocation, obj.names, obj.name);\n\n  if (obj.push) {\n    location[obj.push].push(keyLocation);\n  }\n};\n\nvar grammar = require('./grammar');\nvar validLine = RegExp.prototype.test.bind(/^([a-z])=(.*)/);\n\nexports.parse = function (sdp) {\n  var session = {}\n    , media = []\n    , location = session; // points at where properties go under (one of the above)\n\n  // parse lines we understand\n  sdp.split(/(\\r\\n|\\r|\\n)/).filter(validLine).forEach(function (l) {\n    var type = l[0];\n    var content = l.slice(2);\n    if (type === 'm') {\n      media.push({rtp: [], fmtp: []});\n      location = media[media.length-1]; // point at latest media line\n    }\n\n    for (var j = 0; j < (grammar[type] || []).length; j += 1) {\n      var obj = grammar[type][j];\n      if (obj.reg.test(content)) {\n        return parseReg(obj, location, content);\n      }\n    }\n  });\n\n  session.media = media; // link it up\n  return session;\n};\n\nvar paramReducer = function (acc, expr) {\n  var s = expr.split(/=(.+)/, 2);\n  if (s.length === 2) {\n    acc[s[0]] = toIntIfInt(s[1]);\n  } else if (s.length === 1 && expr.length > 1) {\n    acc[s[0]] = undefined;\n  }\n  return acc;\n};\n\nexports.parseParams = function (str) {\n  return str.split(/;\\s?/).reduce(paramReducer, {});\n};\n\n// For backward compatibility - alias will be removed in 3.0.0\nexports.parseFmtpConfig = exports.parseParams;\n\nexports.parsePayloads = function (str) {\n  return str.toString().split(' ').map(Number);\n};\n\nexports.parseRemoteCandidates = function (str) {\n  var candidates = [];\n  var parts = str.split(' ').map(toIntIfInt);\n  for (var i = 0; i < parts.length; i += 3) {\n    candidates.push({\n      component: parts[i],\n      ip: parts[i + 1],\n      port: parts[i + 2]\n    });\n  }\n  return candidates;\n};\n\nexports.parseImageAttributes = function (str) {\n  return str.split(' ').map(function (item) {\n    return item.substring(1, item.length-1).split(',').reduce(paramReducer, {});\n  });\n};\n\nexports.parseSimulcastStreamList = function (str) {\n  return str.split(';').map(function (stream) {\n    return stream.split(',').map(function (format) {\n      var scid, paused = false;\n\n      if (format[0] !== '~') {\n        scid = toIntIfInt(format);\n      } else {\n        scid = toIntIfInt(format.substring(1, format.length));\n        paused = true;\n      }\n\n      return {\n        scid: scid,\n        paused: paused\n      };\n    });\n  });\n};\n", "var grammar = require('./grammar');\n\n// customized util.format - discards excess arguments and can void middle ones\nvar formatRegExp = /%[sdv%]/g;\nvar format = function (formatStr) {\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  return formatStr.replace(formatRegExp, function (x) {\n    if (i >= len) {\n      return x; // missing argument\n    }\n    var arg = args[i];\n    i += 1;\n    switch (x) {\n    case '%%':\n      return '%';\n    case '%s':\n      return String(arg);\n    case '%d':\n      return Number(arg);\n    case '%v':\n      return '';\n    }\n  });\n  // NB: we discard excess arguments - they are typically undefined from makeLine\n};\n\nvar makeLine = function (type, obj, location) {\n  var str = obj.format instanceof Function ?\n    (obj.format(obj.push ? location : location[obj.name])) :\n    obj.format;\n\n  var args = [type + '=' + str];\n  if (obj.names) {\n    for (var i = 0; i < obj.names.length; i += 1) {\n      var n = obj.names[i];\n      if (obj.name) {\n        args.push(location[obj.name][n]);\n      }\n      else { // for mLine and push attributes\n        args.push(location[obj.names[i]]);\n      }\n    }\n  }\n  else {\n    args.push(location[obj.name]);\n  }\n  return format.apply(null, args);\n};\n\n// RFC specified order\n// TODO: extend this with all the rest\nvar defaultOuterOrder = [\n  'v', 'o', 's', 'i',\n  'u', 'e', 'p', 'c',\n  'b', 't', 'r', 'z', 'a'\n];\nvar defaultInnerOrder = ['i', 'c', 'b', 'a'];\n\n\nmodule.exports = function (session, opts) {\n  opts = opts || {};\n  // ensure certain properties exist\n  if (session.version == null) {\n    session.version = 0; // 'v=0' must be there (only defined version atm)\n  }\n  if (session.name == null) {\n    session.name = ' '; // 's= ' must be there if no meaningful name set\n  }\n  session.media.forEach(function (mLine) {\n    if (mLine.payloads == null) {\n      mLine.payloads = '';\n    }\n  });\n\n  var outerOrder = opts.outerOrder || defaultOuterOrder;\n  var innerOrder = opts.innerOrder || defaultInnerOrder;\n  var sdp = [];\n\n  // loop through outerOrder for matching properties on session\n  outerOrder.forEach(function (type) {\n    grammar[type].forEach(function (obj) {\n      if (obj.name in session && session[obj.name] != null) {\n        sdp.push(makeLine(type, obj, session));\n      }\n      else if (obj.push in session && session[obj.push] != null) {\n        session[obj.push].forEach(function (el) {\n          sdp.push(makeLine(type, obj, el));\n        });\n      }\n    });\n  });\n\n  // then for each media line, follow the innerOrder\n  session.media.forEach(function (mLine) {\n    sdp.push(makeLine('m', grammar.m[0], mLine));\n\n    innerOrder.forEach(function (type) {\n      grammar[type].forEach(function (obj) {\n        if (obj.name in mLine && mLine[obj.name] != null) {\n          sdp.push(makeLine(type, obj, mLine));\n        }\n        else if (obj.push in mLine && mLine[obj.push] != null) {\n          mLine[obj.push].forEach(function (el) {\n            sdp.push(makeLine(type, obj, el));\n          });\n        }\n      });\n    });\n  });\n\n  return sdp.join('\\r\\n') + '\\r\\n';\n};\n", "var parser = require('./parser');\nvar writer = require('./writer');\n\nexports.write = writer;\nexports.parse = parser.parse;\nexports.parseParams = parser.parseParams;\nexports.parseFmtpConfig = parser.parseFmtpConfig; // Alias of parseParams().\nexports.parsePayloads = parser.parsePayloads;\nexports.parseRemoteCandidates = parser.parseRemoteCandidates;\nexports.parseImageAttributes = parser.parseImageAttributes;\nexports.parseSimulcastStreamList = parser.parseSimulcastStreamList;\n", "import { EventEmitter } from 'events';\nimport type { MediaDescription } from 'sdp-transform';\nimport { parse, write } from 'sdp-transform';\nimport { debounce } from 'ts-debounce';\nimport log, { LoggerNames, getLogger } from '../logger';\nimport { NegotiationError, UnexpectedConnectionState } from './errors';\nimport type { LoggerOptions } from './types';\nimport { ddExtensionURI, isChromiumBased, isSVCCodec } from './utils';\n\n/** @internal */\ninterface TrackBitrateInfo {\n  cid?: string;\n  transceiver?: RTCRtpTransceiver;\n  codec: string;\n  maxbr: number;\n}\n\n/* The svc codec (av1/vp9) would use a very low bitrate at the begining and\nincrease slowly by the bandwidth estimator until it reach the target bitrate. The\nprocess commonly cost more than 10 seconds cause subscriber will get blur video at\nthe first few seconds. So we use a 70% of target bitrate here as the start bitrate to\neliminate this issue.\n*/\nconst startBitrateForSVC = 0.7;\n\nexport const PCEvents = {\n  NegotiationStarted: 'negotiationStarted',\n  NegotiationComplete: 'negotiationComplete',\n  RTPVideoPayloadTypes: 'rtpVideoPayloadTypes',\n} as const;\n\n/** @internal */\nexport default class PCTransport extends EventEmitter {\n  private _pc: RTCPeerConnection | null;\n\n  private get pc() {\n    if (!this._pc) {\n      this._pc = this.createPC();\n    }\n    return this._pc;\n  }\n\n  private config?: RTCConfiguration;\n\n  private mediaConstraints: Record<string, unknown>;\n\n  private log = log;\n\n  private loggerOptions: LoggerOptions;\n\n  pendingCandidates: RTCIceCandidateInit[] = [];\n\n  restartingIce: boolean = false;\n\n  renegotiate: boolean = false;\n\n  trackBitrates: TrackBitrateInfo[] = [];\n\n  remoteStereoMids: string[] = [];\n\n  remoteNackMids: string[] = [];\n\n  onOffer?: (offer: RTCSessionDescriptionInit) => void;\n\n  onIceCandidate?: (candidate: RTCIceCandidate) => void;\n\n  onIceCandidateError?: (ev: Event) => void;\n\n  onConnectionStateChange?: (state: RTCPeerConnectionState) => void;\n\n  onIceConnectionStateChange?: (state: RTCIceConnectionState) => void;\n\n  onSignalingStatechange?: (state: RTCSignalingState) => void;\n\n  onDataChannel?: (ev: RTCDataChannelEvent) => void;\n\n  onTrack?: (ev: RTCTrackEvent) => void;\n\n  constructor(\n    config?: RTCConfiguration,\n    mediaConstraints: Record<string, unknown> = {},\n    loggerOptions: LoggerOptions = {},\n  ) {\n    super();\n    this.log = getLogger(loggerOptions.loggerName ?? LoggerNames.PCTransport);\n    this.loggerOptions = loggerOptions;\n    this.config = config;\n    this.mediaConstraints = mediaConstraints;\n    this._pc = this.createPC();\n  }\n\n  private createPC() {\n    const pc = isChromiumBased()\n      ? // @ts-expect-error chrome allows additional media constraints to be passed into the RTCPeerConnection constructor\n        new RTCPeerConnection(this.config, this.mediaConstraints)\n      : new RTCPeerConnection(this.config);\n\n    pc.onicecandidate = (ev) => {\n      if (!ev.candidate) return;\n      this.onIceCandidate?.(ev.candidate);\n    };\n    pc.onicecandidateerror = (ev) => {\n      this.onIceCandidateError?.(ev);\n    };\n\n    pc.oniceconnectionstatechange = () => {\n      this.onIceConnectionStateChange?.(pc.iceConnectionState);\n    };\n\n    pc.onsignalingstatechange = () => {\n      this.onSignalingStatechange?.(pc.signalingState);\n    };\n\n    pc.onconnectionstatechange = () => {\n      this.onConnectionStateChange?.(pc.connectionState);\n    };\n    pc.ondatachannel = (ev) => {\n      this.onDataChannel?.(ev);\n    };\n    pc.ontrack = (ev) => {\n      this.onTrack?.(ev);\n    };\n    return pc;\n  }\n\n  private get logContext() {\n    return {\n      ...this.loggerOptions.loggerContextCb?.(),\n    };\n  }\n\n  get isICEConnected(): boolean {\n    return (\n      this._pc !== null &&\n      (this.pc.iceConnectionState === 'connected' || this.pc.iceConnectionState === 'completed')\n    );\n  }\n\n  async addIceCandidate(candidate: RTCIceCandidateInit): Promise<void> {\n    if (this.pc.remoteDescription && !this.restartingIce) {\n      return this.pc.addIceCandidate(candidate);\n    }\n    this.pendingCandidates.push(candidate);\n  }\n\n  async setRemoteDescription(sd: RTCSessionDescriptionInit): Promise<void> {\n    let mungedSDP: string | undefined = undefined;\n    if (sd.type === 'offer') {\n      let { stereoMids, nackMids } = extractStereoAndNackAudioFromOffer(sd);\n      this.remoteStereoMids = stereoMids;\n      this.remoteNackMids = nackMids;\n    } else if (sd.type === 'answer') {\n      const sdpParsed = parse(sd.sdp ?? '');\n      sdpParsed.media.forEach((media) => {\n        if (media.type === 'audio') {\n          // mung sdp for opus bitrate settings\n          this.trackBitrates.some((trackbr): boolean => {\n            if (!trackbr.transceiver || media.mid != trackbr.transceiver.mid) {\n              return false;\n            }\n\n            let codecPayload = 0;\n            media.rtp.some((rtp): boolean => {\n              if (rtp.codec.toUpperCase() === trackbr.codec.toUpperCase()) {\n                codecPayload = rtp.payload;\n                return true;\n              }\n              return false;\n            });\n\n            if (codecPayload === 0) {\n              return true;\n            }\n\n            let fmtpFound = false;\n            for (const fmtp of media.fmtp) {\n              if (fmtp.payload === codecPayload) {\n                fmtp.config = fmtp.config\n                  .split(';')\n                  .filter((attr) => !attr.includes('maxaveragebitrate'))\n                  .join(';');\n                if (trackbr.maxbr > 0) {\n                  fmtp.config += `;maxaveragebitrate=${trackbr.maxbr * 1000}`;\n                }\n                fmtpFound = true;\n                break;\n              }\n            }\n\n            if (!fmtpFound) {\n              if (trackbr.maxbr > 0) {\n                media.fmtp.push({\n                  payload: codecPayload,\n                  config: `maxaveragebitrate=${trackbr.maxbr * 1000}`,\n                });\n              }\n            }\n\n            return true;\n          });\n        }\n      });\n      mungedSDP = write(sdpParsed);\n    }\n    await this.setMungedSDP(sd, mungedSDP, true);\n\n    this.pendingCandidates.forEach((candidate) => {\n      this.pc.addIceCandidate(candidate);\n    });\n    this.pendingCandidates = [];\n    this.restartingIce = false;\n\n    if (this.renegotiate) {\n      this.renegotiate = false;\n      await this.createAndSendOffer();\n    } else if (sd.type === 'answer') {\n      this.emit(PCEvents.NegotiationComplete);\n      if (sd.sdp) {\n        const sdpParsed = parse(sd.sdp);\n        sdpParsed.media.forEach((media) => {\n          if (media.type === 'video') {\n            this.emit(PCEvents.RTPVideoPayloadTypes, media.rtp);\n          }\n        });\n      }\n    }\n  }\n\n  // debounced negotiate interface\n  negotiate = debounce(async (onError?: (e: Error) => void) => {\n    this.emit(PCEvents.NegotiationStarted);\n    try {\n      await this.createAndSendOffer();\n    } catch (e) {\n      if (onError) {\n        onError(e as Error);\n      } else {\n        throw e;\n      }\n    }\n  }, 100);\n\n  async createAndSendOffer(options?: RTCOfferOptions) {\n    if (this.onOffer === undefined) {\n      return;\n    }\n\n    if (options?.iceRestart) {\n      this.log.debug('restarting ICE', this.logContext);\n      this.restartingIce = true;\n    }\n\n    if (this._pc && this._pc.signalingState === 'have-local-offer') {\n      // we're waiting for the peer to accept our offer, so we'll just wait\n      // the only exception to this is when ICE restart is needed\n      const currentSD = this._pc.remoteDescription;\n      if (options?.iceRestart && currentSD) {\n        // TODO: handle when ICE restart is needed but we don't have a remote description\n        // the best thing to do is to recreate the peerconnection\n        await this._pc.setRemoteDescription(currentSD);\n      } else {\n        this.renegotiate = true;\n        return;\n      }\n    } else if (!this._pc || this._pc.signalingState === 'closed') {\n      this.log.warn('could not createOffer with closed peer connection', this.logContext);\n      return;\n    }\n\n    // actually negotiate\n    this.log.debug('starting to negotiate', this.logContext);\n    const offer = await this.pc.createOffer(options);\n\n    const sdpParsed = parse(offer.sdp ?? '');\n    sdpParsed.media.forEach((media) => {\n      if (media.type === 'audio') {\n        ensureAudioNackAndStereo(media, [], []);\n      } else if (media.type === 'video') {\n        ensureVideoDDExtensionForSVC(media);\n        // mung sdp for codec bitrate setting that can't apply by sendEncoding\n        this.trackBitrates.some((trackbr): boolean => {\n          if (!media.msid || !trackbr.cid || !media.msid.includes(trackbr.cid)) {\n            return false;\n          }\n\n          let codecPayload = 0;\n          media.rtp.some((rtp): boolean => {\n            if (rtp.codec.toUpperCase() === trackbr.codec.toUpperCase()) {\n              codecPayload = rtp.payload;\n              return true;\n            }\n            return false;\n          });\n\n          if (codecPayload === 0) {\n            return true;\n          }\n\n          let fmtpFound = false;\n          for (const fmtp of media.fmtp) {\n            if (fmtp.payload === codecPayload) {\n              if (!fmtp.config.includes('x-google-start-bitrate')) {\n                fmtp.config += `;x-google-start-bitrate=${Math.round(\n                  trackbr.maxbr * startBitrateForSVC,\n                )}`;\n              }\n              if (!fmtp.config.includes('x-google-max-bitrate')) {\n                fmtp.config += `;x-google-max-bitrate=${trackbr.maxbr}`;\n              }\n              fmtpFound = true;\n              break;\n            }\n          }\n\n          if (!fmtpFound) {\n            media.fmtp.push({\n              payload: codecPayload,\n              config: `x-google-start-bitrate=${Math.round(\n                trackbr.maxbr * startBitrateForSVC,\n              )};x-google-max-bitrate=${trackbr.maxbr}`,\n            });\n          }\n\n          return true;\n        });\n      }\n    });\n\n    await this.setMungedSDP(offer, write(sdpParsed));\n    this.onOffer(offer);\n  }\n\n  async createAndSetAnswer(): Promise<RTCSessionDescriptionInit> {\n    const answer = await this.pc.createAnswer();\n    const sdpParsed = parse(answer.sdp ?? '');\n    sdpParsed.media.forEach((media) => {\n      if (media.type === 'audio') {\n        ensureAudioNackAndStereo(media, this.remoteStereoMids, this.remoteNackMids);\n      }\n    });\n    await this.setMungedSDP(answer, write(sdpParsed));\n    return answer;\n  }\n\n  createDataChannel(label: string, dataChannelDict: RTCDataChannelInit) {\n    return this.pc.createDataChannel(label, dataChannelDict);\n  }\n\n  addTransceiver(mediaStreamTrack: MediaStreamTrack, transceiverInit: RTCRtpTransceiverInit) {\n    return this.pc.addTransceiver(mediaStreamTrack, transceiverInit);\n  }\n\n  addTrack(track: MediaStreamTrack) {\n    if (!this._pc) {\n      throw new UnexpectedConnectionState('PC closed, cannot add track');\n    }\n    return this._pc.addTrack(track);\n  }\n\n  setTrackCodecBitrate(info: TrackBitrateInfo) {\n    this.trackBitrates.push(info);\n  }\n\n  setConfiguration(rtcConfig: RTCConfiguration) {\n    if (!this._pc) {\n      throw new UnexpectedConnectionState('PC closed, cannot configure');\n    }\n    return this._pc?.setConfiguration(rtcConfig);\n  }\n\n  canRemoveTrack(): boolean {\n    return !!this._pc?.removeTrack;\n  }\n\n  removeTrack(sender: RTCRtpSender) {\n    return this._pc?.removeTrack(sender);\n  }\n\n  getConnectionState() {\n    return this._pc?.connectionState ?? 'closed';\n  }\n\n  getICEConnectionState() {\n    return this._pc?.iceConnectionState ?? 'closed';\n  }\n\n  getSignallingState() {\n    return this._pc?.signalingState ?? 'closed';\n  }\n\n  getTransceivers() {\n    return this._pc?.getTransceivers() ?? [];\n  }\n\n  getSenders() {\n    return this._pc?.getSenders() ?? [];\n  }\n\n  getLocalDescription() {\n    return this._pc?.localDescription;\n  }\n\n  getRemoteDescription() {\n    return this.pc?.remoteDescription;\n  }\n\n  getStats() {\n    return this.pc.getStats();\n  }\n\n  async getConnectedAddress(): Promise<string | undefined> {\n    if (!this._pc) {\n      return;\n    }\n    let selectedCandidatePairId = '';\n    const candidatePairs = new Map<string, RTCIceCandidatePairStats>();\n    // id -> candidate ip\n    const candidates = new Map<string, string>();\n    const stats: RTCStatsReport = await this._pc.getStats();\n    stats.forEach((v) => {\n      switch (v.type) {\n        case 'transport':\n          selectedCandidatePairId = v.selectedCandidatePairId;\n          break;\n        case 'candidate-pair':\n          if (selectedCandidatePairId === '' && v.selected) {\n            selectedCandidatePairId = v.id;\n          }\n          candidatePairs.set(v.id, v);\n          break;\n        case 'remote-candidate':\n          candidates.set(v.id, `${v.address}:${v.port}`);\n          break;\n        default:\n      }\n    });\n\n    if (selectedCandidatePairId === '') {\n      return undefined;\n    }\n    const selectedID = candidatePairs.get(selectedCandidatePairId)?.remoteCandidateId;\n    if (selectedID === undefined) {\n      return undefined;\n    }\n    return candidates.get(selectedID);\n  }\n\n  close = () => {\n    if (!this._pc) {\n      return;\n    }\n    this._pc.close();\n    this._pc.onconnectionstatechange = null;\n    this._pc.oniceconnectionstatechange = null;\n    this._pc.onicegatheringstatechange = null;\n    this._pc.ondatachannel = null;\n    this._pc.onnegotiationneeded = null;\n    this._pc.onsignalingstatechange = null;\n    this._pc.onicecandidate = null;\n    this._pc.ondatachannel = null;\n    this._pc.ontrack = null;\n    this._pc.onconnectionstatechange = null;\n    this._pc.oniceconnectionstatechange = null;\n    this._pc = null;\n  };\n\n  private async setMungedSDP(sd: RTCSessionDescriptionInit, munged?: string, remote?: boolean) {\n    if (munged) {\n      const originalSdp = sd.sdp;\n      sd.sdp = munged;\n      try {\n        this.log.debug(\n          `setting munged ${remote ? 'remote' : 'local'} description`,\n          this.logContext,\n        );\n        if (remote) {\n          await this.pc.setRemoteDescription(sd);\n        } else {\n          await this.pc.setLocalDescription(sd);\n        }\n        return;\n      } catch (e) {\n        this.log.warn(`not able to set ${sd.type}, falling back to unmodified sdp`, {\n          ...this.logContext,\n          error: e,\n          sdp: munged,\n        });\n        sd.sdp = originalSdp;\n      }\n    }\n\n    try {\n      if (remote) {\n        await this.pc.setRemoteDescription(sd);\n      } else {\n        await this.pc.setLocalDescription(sd);\n      }\n    } catch (e) {\n      // this error cannot always be caught.\n      // If the local description has a setCodecPreferences error, this error will be uncaught\n      let msg = 'unknown error';\n      if (e instanceof Error) {\n        msg = e.message;\n      } else if (typeof e === 'string') {\n        msg = e;\n      }\n\n      const fields: any = {\n        error: msg,\n        sdp: sd.sdp,\n      };\n      if (!remote && this.pc.remoteDescription) {\n        fields.remoteSdp = this.pc.remoteDescription;\n      }\n      this.log.error(`unable to set ${sd.type}`, { ...this.logContext, fields });\n      throw new NegotiationError(msg);\n    }\n  }\n}\n\nfunction ensureAudioNackAndStereo(\n  media: {\n    type: string;\n    port: number;\n    protocol: string;\n    payloads?: string | undefined;\n  } & MediaDescription,\n  stereoMids: string[],\n  nackMids: string[],\n) {\n  // found opus codec to add nack fb\n  let opusPayload = 0;\n  media.rtp.some((rtp): boolean => {\n    if (rtp.codec === 'opus') {\n      opusPayload = rtp.payload;\n      return true;\n    }\n    return false;\n  });\n\n  // add nack rtcpfb if not exist\n  if (opusPayload > 0) {\n    if (!media.rtcpFb) {\n      media.rtcpFb = [];\n    }\n\n    if (\n      nackMids.includes(media.mid!) &&\n      !media.rtcpFb.some((fb) => fb.payload === opusPayload && fb.type === 'nack')\n    ) {\n      media.rtcpFb.push({\n        payload: opusPayload,\n        type: 'nack',\n      });\n    }\n\n    if (stereoMids.includes(media.mid!)) {\n      media.fmtp.some((fmtp): boolean => {\n        if (fmtp.payload === opusPayload) {\n          if (!fmtp.config.includes('stereo=1')) {\n            fmtp.config += ';stereo=1';\n          }\n          return true;\n        }\n        return false;\n      });\n    }\n  }\n}\n\nfunction ensureVideoDDExtensionForSVC(\n  media: {\n    type: string;\n    port: number;\n    protocol: string;\n    payloads?: string | undefined;\n  } & MediaDescription,\n) {\n  const codec = media.rtp[0]?.codec?.toLowerCase();\n  if (!isSVCCodec(codec)) {\n    return;\n  }\n\n  let maxID = 0;\n  const ddFound = media.ext?.some((ext): boolean => {\n    if (ext.uri === ddExtensionURI) {\n      return true;\n    }\n    if (ext.value > maxID) {\n      maxID = ext.value;\n    }\n    return false;\n  });\n\n  if (!ddFound) {\n    media.ext?.push({\n      value: maxID + 1,\n      uri: ddExtensionURI,\n    });\n  }\n}\n\nfunction extractStereoAndNackAudioFromOffer(offer: RTCSessionDescriptionInit): {\n  stereoMids: string[];\n  nackMids: string[];\n} {\n  const stereoMids: string[] = [];\n  const nackMids: string[] = [];\n  const sdpParsed = parse(offer.sdp ?? '');\n  let opusPayload = 0;\n  sdpParsed.media.forEach((media) => {\n    if (media.type === 'audio') {\n      media.rtp.some((rtp): boolean => {\n        if (rtp.codec === 'opus') {\n          opusPayload = rtp.payload;\n          return true;\n        }\n        return false;\n      });\n\n      if (media.rtcpFb?.some((fb) => fb.payload === opusPayload && fb.type === 'nack')) {\n        nackMids.push(media.mid!);\n      }\n\n      media.fmtp.some((fmtp): boolean => {\n        if (fmtp.payload === opusPayload) {\n          if (fmtp.config.includes('sprop-stereo=1')) {\n            stereoMids.push(media.mid!);\n          }\n          return true;\n        }\n        return false;\n      });\n    }\n  });\n  return { stereoMids, nackMids };\n}\n", "import type { InternalRoomConnectOptions, InternalRoomOptions } from '../options';\nimport DefaultReconnectPolicy from './DefaultReconnectPolicy';\nimport type {\n  AudioCaptureOptions,\n  TrackPublishDefaults,\n  VideoCaptureOptions,\n} from './track/options';\nimport { AudioPresets, ScreenSharePresets, VideoPresets } from './track/options';\n\nexport const defaultVideoCodec = 'vp8';\n\nexport const publishDefaults: TrackPublishDefaults = {\n  /**\n   * @deprecated\n   */\n  audioBitrate: AudioPresets.music.maxBitrate,\n  audioPreset: AudioPresets.music,\n  dtx: true,\n  red: true,\n  forceStereo: false,\n  simulcast: true,\n  screenShareEncoding: ScreenSharePresets.h1080fps15.encoding,\n  stopMicTrackOnMute: false,\n  videoCodec: defaultVideoCodec,\n  backupCodec: true,\n} as const;\n\nexport const audioDefaults: AudioCaptureOptions = {\n  autoGainControl: true,\n  echoCancellation: true,\n  noiseSuppression: true,\n};\n\nexport const videoDefaults: VideoCaptureOptions = {\n  resolution: VideoPresets.h720.resolution,\n};\n\nexport const roomOptionDefaults: InternalRoomOptions = {\n  adaptiveStream: false,\n  dynacast: false,\n  stopLocalTrackOnUnpublish: true,\n  reconnectPolicy: new DefaultReconnectPolicy(),\n  disconnectOnPageLeave: true,\n  expWebAudioMix: false,\n} as const;\n\nexport const roomConnectOptionDefaults: InternalRoomConnectOptions = {\n  autoSubscribe: true,\n  maxRetries: 1,\n  peerConnectionTimeout: 15_000,\n  websocketTimeout: 15_000,\n} as const;\n", "import log, { LoggerNames, getLogger } from '../logger';\nimport { SignalTarget } from '../proto/livekit_rtc_pb';\nimport PCTransport, { PCEvents } from './PCTransport';\nimport { roomConnectOptionDefaults } from './defaults';\nimport { ConnectionError, ConnectionErrorReason } from './errors';\nimport CriticalTimers from './timers';\nimport type { LoggerOptions } from './types';\nimport { Mutex, sleep } from './utils';\n\nexport enum PCTransportState {\n  NEW,\n  CONNECTING,\n  CONNECTED,\n  FAILED,\n  CLOSING,\n  CLOSED,\n}\n\nexport class PCTransportManager {\n  public publisher: PCTransport;\n\n  public subscriber: PCTransport;\n\n  public peerConnectionTimeout: number = roomConnectOptionDefaults.peerConnectionTimeout;\n\n  public get needsPublisher() {\n    return this.isPublisherConnectionRequired;\n  }\n\n  public get needsSubscriber() {\n    return this.isSubscriberConnectionRequired;\n  }\n\n  public get currentState() {\n    return this.state;\n  }\n\n  public onStateChange?: (\n    state: PCTransportState,\n    pubState: RTCPeerConnectionState,\n    subState: RTCPeerConnectionState,\n  ) => void;\n\n  public onIceCandidate?: (ev: RTCIceCandidate, target: SignalTarget) => void;\n\n  public onDataChannel?: (ev: RTCDataChannelEvent) => void;\n\n  public onTrack?: (ev: RTCTrackEvent) => void;\n\n  public onPublisherOffer?: (offer: RTCSessionDescriptionInit) => void;\n\n  private isPublisherConnectionRequired: boolean;\n\n  private isSubscriberConnectionRequired: boolean;\n\n  private state: PCTransportState;\n\n  private connectionLock: Mutex;\n\n  private log = log;\n\n  private loggerOptions: LoggerOptions;\n\n  constructor(\n    rtcConfig: RTCConfiguration,\n    subscriberPrimary: boolean,\n    loggerOptions: LoggerOptions,\n  ) {\n    this.log = getLogger(loggerOptions.loggerName ?? LoggerNames.PCManager);\n    this.loggerOptions = loggerOptions;\n\n    this.isPublisherConnectionRequired = !subscriberPrimary;\n    this.isSubscriberConnectionRequired = subscriberPrimary;\n    const googConstraints = { optional: [{ googDscp: true }] };\n    this.publisher = new PCTransport(rtcConfig, googConstraints, loggerOptions);\n    this.subscriber = new PCTransport(rtcConfig, undefined, loggerOptions);\n\n    this.publisher.onConnectionStateChange = this.updateState;\n    this.subscriber.onConnectionStateChange = this.updateState;\n    this.publisher.onIceConnectionStateChange = this.updateState;\n    this.subscriber.onIceConnectionStateChange = this.updateState;\n    this.publisher.onSignalingStatechange = this.updateState;\n    this.subscriber.onSignalingStatechange = this.updateState;\n    this.publisher.onIceCandidate = (candidate) => {\n      this.onIceCandidate?.(candidate, SignalTarget.PUBLISHER);\n    };\n    this.subscriber.onIceCandidate = (candidate) => {\n      this.onIceCandidate?.(candidate, SignalTarget.SUBSCRIBER);\n    };\n    // in subscriber primary mode, server side opens sub data channels.\n    this.subscriber.onDataChannel = (ev) => {\n      this.onDataChannel?.(ev);\n    };\n    this.subscriber.onTrack = (ev) => {\n      this.onTrack?.(ev);\n    };\n    this.publisher.onOffer = (offer) => {\n      this.onPublisherOffer?.(offer);\n    };\n\n    this.state = PCTransportState.NEW;\n\n    this.connectionLock = new Mutex();\n  }\n\n  private get logContext() {\n    return {\n      ...this.loggerOptions.loggerContextCb?.(),\n    };\n  }\n\n  requirePublisher(require = true) {\n    this.isPublisherConnectionRequired = require;\n    this.updateState();\n  }\n\n  requireSubscriber(require = true) {\n    this.isSubscriberConnectionRequired = require;\n    this.updateState();\n  }\n\n  createAndSendPublisherOffer(options?: RTCOfferOptions) {\n    return this.publisher.createAndSendOffer(options);\n  }\n\n  setPublisherAnswer(sd: RTCSessionDescriptionInit) {\n    return this.publisher.setRemoteDescription(sd);\n  }\n\n  removeTrack(sender: RTCRtpSender) {\n    return this.publisher.removeTrack(sender);\n  }\n\n  async close() {\n    if (this.publisher && this.publisher.getSignallingState() !== 'closed') {\n      const publisher = this.publisher;\n      for (const sender of publisher.getSenders()) {\n        try {\n          // TODO: react-native-webrtc doesn't have removeTrack yet.\n          if (publisher.canRemoveTrack()) {\n            publisher.removeTrack(sender);\n          }\n        } catch (e) {\n          this.log.warn('could not removeTrack', { ...this.logContext, error: e });\n        }\n      }\n    }\n    await Promise.all([this.publisher.close(), this.subscriber.close()]);\n    this.updateState();\n  }\n\n  async triggerIceRestart() {\n    this.subscriber.restartingIce = true;\n    // only restart publisher if it's needed\n    if (this.needsPublisher) {\n      await this.createAndSendPublisherOffer({ iceRestart: true });\n    }\n  }\n\n  async addIceCandidate(candidate: RTCIceCandidateInit, target: SignalTarget) {\n    if (target === SignalTarget.PUBLISHER) {\n      await this.publisher.addIceCandidate(candidate);\n    } else {\n      await this.subscriber.addIceCandidate(candidate);\n    }\n  }\n\n  async createSubscriberAnswerFromOffer(sd: RTCSessionDescriptionInit) {\n    this.log.debug('received server offer', {\n      ...this.logContext,\n      RTCSdpType: sd.type,\n      sdp: sd.sdp,\n      signalingState: this.subscriber.getSignallingState().toString(),\n    });\n    await this.subscriber.setRemoteDescription(sd);\n\n    // answer the offer\n    const answer = await this.subscriber.createAndSetAnswer();\n    return answer;\n  }\n\n  updateConfiguration(config: RTCConfiguration, iceRestart?: boolean) {\n    this.publisher.setConfiguration(config);\n    this.subscriber.setConfiguration(config);\n    if (iceRestart) {\n      this.triggerIceRestart();\n    }\n  }\n\n  async ensurePCTransportConnection(abortController?: AbortController, timeout?: number) {\n    const unlock = await this.connectionLock.lock();\n    try {\n      if (\n        this.isPublisherConnectionRequired &&\n        this.publisher.getConnectionState() !== 'connected' &&\n        this.publisher.getConnectionState() !== 'connecting'\n      ) {\n        this.log.debug('negotiation required, start negotiating', this.logContext);\n        this.publisher.negotiate();\n      }\n      await Promise.all(\n        this.requiredTransports?.map((transport) =>\n          this.ensureTransportConnected(transport, abortController, timeout),\n        ),\n      );\n    } finally {\n      unlock();\n    }\n  }\n\n  async negotiate(abortController: AbortController) {\n    return new Promise<void>(async (resolve, reject) => {\n      const negotiationTimeout = setTimeout(() => {\n        reject('negotiation timed out');\n      }, this.peerConnectionTimeout);\n\n      const abortHandler = () => {\n        clearTimeout(negotiationTimeout);\n        reject('negotiation aborted');\n      };\n\n      abortController.signal.addEventListener('abort', abortHandler);\n      this.publisher.once(PCEvents.NegotiationStarted, () => {\n        if (abortController.signal.aborted) {\n          return;\n        }\n        this.publisher.once(PCEvents.NegotiationComplete, () => {\n          clearTimeout(negotiationTimeout);\n          resolve();\n        });\n      });\n\n      await this.publisher.negotiate((e) => {\n        clearTimeout(negotiationTimeout);\n        reject(e);\n      });\n    });\n  }\n\n  addPublisherTransceiver(track: MediaStreamTrack, transceiverInit: RTCRtpTransceiverInit) {\n    return this.publisher.addTransceiver(track, transceiverInit);\n  }\n\n  addPublisherTrack(track: MediaStreamTrack) {\n    return this.publisher.addTrack(track);\n  }\n\n  createPublisherDataChannel(label: string, dataChannelDict: RTCDataChannelInit) {\n    return this.publisher.createDataChannel(label, dataChannelDict);\n  }\n\n  /**\n   * Returns the first required transport's address if no explicit target is specified\n   */\n  getConnectedAddress(target?: SignalTarget) {\n    if (target === SignalTarget.PUBLISHER) {\n      return this.publisher.getConnectedAddress();\n    } else if (target === SignalTarget.SUBSCRIBER) {\n      return this.publisher.getConnectedAddress();\n    }\n    return this.requiredTransports[0].getConnectedAddress();\n  }\n\n  private get requiredTransports() {\n    const transports: PCTransport[] = [];\n    if (this.isPublisherConnectionRequired) {\n      transports.push(this.publisher);\n    }\n    if (this.isSubscriberConnectionRequired) {\n      transports.push(this.subscriber);\n    }\n    return transports;\n  }\n\n  private updateState = () => {\n    const previousState = this.state;\n\n    const connectionStates = this.requiredTransports.map((tr) => tr.getConnectionState());\n    if (connectionStates.every((st) => st === 'connected')) {\n      this.state = PCTransportState.CONNECTED;\n    } else if (connectionStates.some((st) => st === 'failed')) {\n      this.state = PCTransportState.FAILED;\n    } else if (connectionStates.some((st) => st === 'connecting')) {\n      this.state = PCTransportState.CONNECTING;\n    } else if (connectionStates.every((st) => st === 'closed')) {\n      this.state = PCTransportState.CLOSED;\n    } else if (connectionStates.some((st) => st === 'closed')) {\n      this.state = PCTransportState.CLOSING;\n    } else if (connectionStates.every((st) => st === 'new')) {\n      this.state = PCTransportState.NEW;\n    }\n\n    if (previousState !== this.state) {\n      this.log.debug(\n        `pc state change: from ${PCTransportState[previousState]} to ${\n          PCTransportState[this.state]\n        }`,\n        this.logContext,\n      );\n      this.onStateChange?.(\n        this.state,\n        this.publisher.getConnectionState(),\n        this.subscriber.getConnectionState(),\n      );\n    }\n  };\n\n  private async ensureTransportConnected(\n    pcTransport: PCTransport,\n    abortController?: AbortController,\n    timeout: number = this.peerConnectionTimeout,\n  ) {\n    const connectionState = pcTransport.getConnectionState();\n    if (connectionState === 'connected') {\n      return;\n    }\n\n    return new Promise<void>(async (resolve, reject) => {\n      const abortHandler = () => {\n        this.log.warn('abort transport connection', this.logContext);\n        CriticalTimers.clearTimeout(connectTimeout);\n\n        reject(\n          new ConnectionError(\n            'room connection has been cancelled',\n            ConnectionErrorReason.Cancelled,\n          ),\n        );\n      };\n      if (abortController?.signal.aborted) {\n        abortHandler();\n      }\n      abortController?.signal.addEventListener('abort', abortHandler);\n\n      const connectTimeout = CriticalTimers.setTimeout(() => {\n        abortController?.signal.removeEventListener('abort', abortHandler);\n        reject(new ConnectionError('could not establish pc connection'));\n      }, timeout);\n\n      while (this.state !== PCTransportState.CONNECTED) {\n        await sleep(50); // FIXME we shouldn't rely on `sleep` in the connection paths, as it invokes `setTimeout` which can be drastically throttled by browser implementations\n        if (abortController?.signal.aborted) {\n          reject(\n            new ConnectionError(\n              'room connection has been cancelled',\n              ConnectionErrorReason.Cancelled,\n            ),\n          );\n          return;\n        }\n      }\n      CriticalTimers.clearTimeout(connectTimeout);\n      abortController?.signal.removeEventListener('abort', abortHandler);\n      resolve();\n    });\n  }\n}\n", "import { EventEmitter } from 'events';\nimport type { MediaAttributes } from 'sdp-transform';\nimport type TypedEventEmitter from 'typed-emitter';\nimport type { SignalOptions } from '../api/SignalClient';\nimport {\n  SignalClient,\n  SignalConnectionState,\n  toProtoSessionDescription,\n} from '../api/SignalClient';\nimport log, { LoggerNames, getLogger } from '../logger';\nimport type { InternalRoomOptions } from '../options';\nimport {\n  ClientConfigSetting,\n  ClientConfiguration,\n  DataPacket,\n  DataPacket_Kind,\n  DisconnectReason,\n  ParticipantInfo,\n  ReconnectReason,\n  Room as RoomModel,\n  SpeakerInfo,\n  TrackInfo,\n  UserPacket,\n} from '../proto/livekit_models_pb';\nimport {\n  type AddTrackRequest,\n  type ConnectionQualityUpdate,\n  DataChannelInfo,\n  type JoinResponse,\n  type LeaveRequest,\n  type ReconnectResponse,\n  SignalTarget,\n  type StreamStateUpdate,\n  SubscribedQualityUpdate,\n  type SubscriptionPermissionUpdate,\n  type SubscriptionResponse,\n  SyncState,\n  type TrackPublishedResponse,\n  TrackUnpublishedResponse,\n  UpdateSubscription,\n} from '../proto/livekit_rtc_pb';\nimport PCTransport, { PCEvents } from './PCTransport';\nimport { PCTransportManager, PCTransportState } from './PCTransportManager';\nimport type { ReconnectContext, ReconnectPolicy } from './ReconnectPolicy';\nimport type { RegionUrlProvider } from './RegionUrlProvider';\nimport { roomConnectOptionDefaults } from './defaults';\nimport {\n  ConnectionError,\n  ConnectionErrorReason,\n  NegotiationError,\n  TrackInvalidError,\n  UnexpectedConnectionState,\n} from './errors';\nimport { EngineEvent } from './events';\nimport CriticalTimers from './timers';\nimport type LocalTrack from './track/LocalTrack';\nimport type LocalTrackPublication from './track/LocalTrackPublication';\nimport type LocalVideoTrack from './track/LocalVideoTrack';\nimport type { SimulcastTrackInfo } from './track/LocalVideoTrack';\nimport type RemoteTrackPublication from './track/RemoteTrackPublication';\nimport { Track } from './track/Track';\nimport type { TrackPublishOptions, VideoCodec } from './track/options';\nimport { getTrackPublicationInfo } from './track/utils';\nimport type { LoggerOptions } from './types';\nimport {\n  Mutex,\n  isVideoCodec,\n  isWeb,\n  sleep,\n  supportsAddTrack,\n  supportsSetCodecPreferences,\n  supportsTransceiver,\n} from './utils';\n\nconst lossyDataChannel = '_lossy';\nconst reliableDataChannel = '_reliable';\nconst minReconnectWait = 2 * 1000;\nconst leaveReconnect = 'leave-reconnect';\n\nenum PCState {\n  New,\n  Connected,\n  Disconnected,\n  Reconnecting,\n  Closed,\n}\n\n/** @internal */\nexport default class RTCEngine extends (EventEmitter as new () => TypedEventEmitter<EngineEventCallbacks>) {\n  client: SignalClient;\n\n  rtcConfig: RTCConfiguration = {};\n\n  peerConnectionTimeout: number = roomConnectOptionDefaults.peerConnectionTimeout;\n\n  fullReconnectOnNext: boolean = false;\n\n  pcManager?: PCTransportManager;\n\n  /**\n   * @internal\n   */\n  latestJoinResponse?: JoinResponse;\n\n  get isClosed() {\n    return this._isClosed;\n  }\n\n  private lossyDC?: RTCDataChannel;\n\n  // @ts-ignore noUnusedLocals\n  private lossyDCSub?: RTCDataChannel;\n\n  private reliableDC?: RTCDataChannel;\n\n  private dcBufferStatus: Map<DataPacket_Kind, boolean>;\n\n  // @ts-ignore noUnusedLocals\n  private reliableDCSub?: RTCDataChannel;\n\n  private subscriberPrimary: boolean = false;\n\n  private pcState: PCState = PCState.New;\n\n  private _isClosed: boolean = true;\n\n  private pendingTrackResolvers: {\n    [key: string]: { resolve: (info: TrackInfo) => void; reject: () => void };\n  } = {};\n\n  // keep join info around for reconnect, this could be a region url\n  private url?: string;\n\n  private token?: string;\n\n  private signalOpts?: SignalOptions;\n\n  private reconnectAttempts: number = 0;\n\n  private reconnectStart: number = 0;\n\n  private clientConfiguration?: ClientConfiguration;\n\n  private attemptingReconnect: boolean = false;\n\n  private reconnectPolicy: ReconnectPolicy;\n\n  private reconnectTimeout?: ReturnType<typeof setTimeout>;\n\n  private participantSid?: string;\n\n  /** keeps track of how often an initial join connection has been tried */\n  private joinAttempts: number = 0;\n\n  /** specifies how often an initial join connection is allowed to retry */\n  private maxJoinAttempts: number = 1;\n\n  private closingLock: Mutex;\n\n  private dataProcessLock: Mutex;\n\n  private shouldFailNext: boolean = false;\n\n  private regionUrlProvider?: RegionUrlProvider;\n\n  private log = log;\n\n  private loggerOptions: LoggerOptions;\n\n  constructor(private options: InternalRoomOptions) {\n    super();\n    this.log = getLogger(options.loggerName ?? LoggerNames.Engine);\n    this.loggerOptions = {\n      loggerName: options.loggerName,\n      loggerContextCb: () => this.logContext,\n    };\n    this.client = new SignalClient(undefined, this.loggerOptions);\n    this.client.signalLatency = this.options.expSignalLatency;\n    this.reconnectPolicy = this.options.reconnectPolicy;\n    this.registerOnLineListener();\n    this.closingLock = new Mutex();\n    this.dataProcessLock = new Mutex();\n    this.dcBufferStatus = new Map([\n      [DataPacket_Kind.LOSSY, true],\n      [DataPacket_Kind.RELIABLE, true],\n    ]);\n\n    this.client.onParticipantUpdate = (updates) =>\n      this.emit(EngineEvent.ParticipantUpdate, updates);\n    this.client.onConnectionQuality = (update) =>\n      this.emit(EngineEvent.ConnectionQualityUpdate, update);\n    this.client.onRoomUpdate = (update) => this.emit(EngineEvent.RoomUpdate, update);\n    this.client.onSubscriptionError = (resp) => this.emit(EngineEvent.SubscriptionError, resp);\n    this.client.onSubscriptionPermissionUpdate = (update) =>\n      this.emit(EngineEvent.SubscriptionPermissionUpdate, update);\n    this.client.onSpeakersChanged = (update) => this.emit(EngineEvent.SpeakersChanged, update);\n    this.client.onStreamStateUpdate = (update) => this.emit(EngineEvent.StreamStateChanged, update);\n  }\n\n  /** @internal */\n  get logContext() {\n    return {\n      room: this.latestJoinResponse?.room?.name,\n      roomSid: this.latestJoinResponse?.room?.sid,\n      identity: this.latestJoinResponse?.participant?.identity,\n    };\n  }\n\n  async join(\n    url: string,\n    token: string,\n    opts: SignalOptions,\n    abortSignal?: AbortSignal,\n  ): Promise<JoinResponse> {\n    this.url = url;\n    this.token = token;\n    this.signalOpts = opts;\n    this.maxJoinAttempts = opts.maxRetries;\n    try {\n      this.joinAttempts += 1;\n\n      this.setupSignalClientCallbacks();\n      const joinResponse = await this.client.join(url, token, opts, abortSignal);\n      this._isClosed = false;\n      this.latestJoinResponse = joinResponse;\n\n      this.subscriberPrimary = joinResponse.subscriberPrimary;\n      if (!this.pcManager) {\n        await this.configure(joinResponse);\n      }\n\n      // create offer\n      if (!this.subscriberPrimary) {\n        this.negotiate();\n      }\n\n      this.clientConfiguration = joinResponse.clientConfiguration;\n      return joinResponse;\n    } catch (e) {\n      if (e instanceof ConnectionError) {\n        if (e.reason === ConnectionErrorReason.ServerUnreachable) {\n          this.log.warn(\n            `Couldn't connect to server, attempt ${this.joinAttempts} of ${this.maxJoinAttempts}`,\n            this.logContext,\n          );\n          if (this.joinAttempts < this.maxJoinAttempts) {\n            return this.join(url, token, opts, abortSignal);\n          }\n        }\n      }\n      throw e;\n    }\n  }\n\n  async close() {\n    const unlock = await this.closingLock.lock();\n    if (this.isClosed) {\n      unlock();\n      return;\n    }\n    try {\n      this._isClosed = true;\n      this.emit(EngineEvent.Closing);\n      this.removeAllListeners();\n      this.deregisterOnLineListener();\n      this.clearPendingReconnect();\n      await this.cleanupPeerConnections();\n      await this.cleanupClient();\n    } finally {\n      unlock();\n    }\n  }\n\n  async cleanupPeerConnections() {\n    await this.pcManager?.close();\n    this.pcManager = undefined;\n\n    const dcCleanup = (dc: RTCDataChannel | undefined) => {\n      if (!dc) return;\n      dc.close();\n      dc.onbufferedamountlow = null;\n      dc.onclose = null;\n      dc.onclosing = null;\n      dc.onerror = null;\n      dc.onmessage = null;\n      dc.onopen = null;\n    };\n    dcCleanup(this.lossyDC);\n    dcCleanup(this.lossyDCSub);\n    dcCleanup(this.reliableDC);\n    dcCleanup(this.reliableDCSub);\n\n    this.lossyDC = undefined;\n    this.lossyDCSub = undefined;\n    this.reliableDC = undefined;\n    this.reliableDCSub = undefined;\n  }\n\n  async cleanupClient() {\n    await this.client.close();\n    this.client.resetCallbacks();\n  }\n\n  addTrack(req: AddTrackRequest): Promise<TrackInfo> {\n    if (this.pendingTrackResolvers[req.cid]) {\n      throw new TrackInvalidError('a track with the same ID has already been published');\n    }\n    return new Promise<TrackInfo>((resolve, reject) => {\n      const publicationTimeout = setTimeout(() => {\n        delete this.pendingTrackResolvers[req.cid];\n        reject(\n          new ConnectionError('publication of local track timed out, no response from server'),\n        );\n      }, 10_000);\n      this.pendingTrackResolvers[req.cid] = {\n        resolve: (info: TrackInfo) => {\n          clearTimeout(publicationTimeout);\n          resolve(info);\n        },\n        reject: () => {\n          clearTimeout(publicationTimeout);\n          reject(new Error('Cancelled publication by calling unpublish'));\n        },\n      };\n      this.client.sendAddTrack(req);\n    });\n  }\n\n  /**\n   * Removes sender from PeerConnection, returning true if it was removed successfully\n   * and a negotiation is necessary\n   * @param sender\n   * @returns\n   */\n  removeTrack(sender: RTCRtpSender): boolean {\n    if (sender.track && this.pendingTrackResolvers[sender.track.id]) {\n      const { reject } = this.pendingTrackResolvers[sender.track.id];\n      if (reject) {\n        reject();\n      }\n      delete this.pendingTrackResolvers[sender.track.id];\n    }\n    try {\n      this.pcManager!.removeTrack(sender);\n      return true;\n    } catch (e: unknown) {\n      this.log.warn('failed to remove track', { ...this.logContext, error: e });\n    }\n    return false;\n  }\n\n  updateMuteStatus(trackSid: string, muted: boolean) {\n    this.client.sendMuteTrack(trackSid, muted);\n  }\n\n  get dataSubscriberReadyState(): string | undefined {\n    return this.reliableDCSub?.readyState;\n  }\n\n  async getConnectedServerAddress(): Promise<string | undefined> {\n    return this.pcManager?.getConnectedAddress();\n  }\n\n  /* @internal */\n  setRegionUrlProvider(provider: RegionUrlProvider) {\n    this.regionUrlProvider = provider;\n  }\n\n  private async configure(joinResponse: JoinResponse) {\n    // already configured\n    if (this.pcManager && this.pcManager.currentState !== PCTransportState.NEW) {\n      return;\n    }\n\n    this.participantSid = joinResponse.participant?.sid;\n\n    const rtcConfig = this.makeRTCConfiguration(joinResponse);\n\n    this.pcManager = new PCTransportManager(\n      rtcConfig,\n      joinResponse.subscriberPrimary,\n      this.loggerOptions,\n    );\n\n    this.emit(EngineEvent.TransportsCreated, this.pcManager.publisher, this.pcManager.subscriber);\n\n    this.pcManager.onIceCandidate = (candidate, target) => {\n      this.client.sendIceCandidate(candidate, target);\n    };\n\n    this.pcManager.onPublisherOffer = (offer) => {\n      this.client.sendOffer(offer);\n    };\n\n    this.pcManager.onDataChannel = this.handleDataChannel;\n    this.pcManager.onStateChange = async (connectionState, publisherState, subscriberState) => {\n      this.log.debug(`primary PC state changed ${connectionState}`, this.logContext);\n      if (connectionState === PCTransportState.CONNECTED) {\n        const shouldEmit = this.pcState === PCState.New;\n        this.pcState = PCState.Connected;\n        if (shouldEmit) {\n          this.emit(EngineEvent.Connected, joinResponse);\n        }\n      } else if (connectionState === PCTransportState.FAILED) {\n        // on Safari, PeerConnection will switch to 'disconnected' during renegotiation\n        if (this.pcState === PCState.Connected) {\n          this.pcState = PCState.Disconnected;\n\n          this.handleDisconnect(\n            'peerconnection failed',\n            subscriberState === 'failed'\n              ? ReconnectReason.RR_SUBSCRIBER_FAILED\n              : ReconnectReason.RR_PUBLISHER_FAILED,\n          );\n        }\n      }\n    };\n    this.pcManager.onTrack = (ev: RTCTrackEvent) => {\n      this.emit(EngineEvent.MediaTrackAdded, ev.track, ev.streams[0], ev.receiver);\n    };\n\n    this.createDataChannels();\n  }\n\n  private setupSignalClientCallbacks() {\n    // configure signaling client\n    this.client.onAnswer = async (sd) => {\n      if (!this.pcManager) {\n        return;\n      }\n      this.log.debug('received server answer', { ...this.logContext, RTCSdpType: sd.type });\n      await this.pcManager.setPublisherAnswer(sd);\n    };\n\n    // add candidate on trickle\n    this.client.onTrickle = (candidate, target) => {\n      if (!this.pcManager) {\n        return;\n      }\n      this.log.trace('got ICE candidate from peer', { ...this.logContext, candidate, target });\n      this.pcManager.addIceCandidate(candidate, target);\n    };\n\n    // when server creates an offer for the client\n    this.client.onOffer = async (sd) => {\n      if (!this.pcManager) {\n        return;\n      }\n      const answer = await this.pcManager.createSubscriberAnswerFromOffer(sd);\n      this.client.sendAnswer(answer);\n    };\n\n    this.client.onLocalTrackPublished = (res: TrackPublishedResponse) => {\n      this.log.debug('received trackPublishedResponse', {\n        ...this.logContext,\n        cid: res.cid,\n        track: res.track?.sid,\n      });\n      if (!this.pendingTrackResolvers[res.cid]) {\n        this.log.error(`missing track resolver for ${res.cid}`, {\n          ...this.logContext,\n          cid: res.cid,\n        });\n        return;\n      }\n      const { resolve } = this.pendingTrackResolvers[res.cid];\n      delete this.pendingTrackResolvers[res.cid];\n      resolve(res.track!);\n    };\n\n    this.client.onLocalTrackUnpublished = (response: TrackUnpublishedResponse) => {\n      this.emit(EngineEvent.LocalTrackUnpublished, response);\n    };\n\n    this.client.onTokenRefresh = (token: string) => {\n      this.token = token;\n    };\n\n    this.client.onRemoteMuteChanged = (trackSid: string, muted: boolean) => {\n      this.emit(EngineEvent.RemoteMute, trackSid, muted);\n    };\n\n    this.client.onSubscribedQualityUpdate = (update: SubscribedQualityUpdate) => {\n      this.emit(EngineEvent.SubscribedQualityUpdate, update);\n    };\n\n    this.client.onClose = () => {\n      this.handleDisconnect('signal', ReconnectReason.RR_SIGNAL_DISCONNECTED);\n    };\n\n    this.client.onLeave = (leave?: LeaveRequest) => {\n      if (leave?.canReconnect) {\n        this.fullReconnectOnNext = true;\n        // reconnect immediately instead of waiting for next attempt\n        this.handleDisconnect(leaveReconnect);\n      } else {\n        this.emit(EngineEvent.Disconnected, leave?.reason);\n        this.close();\n      }\n      this.log.debug('client leave request', { ...this.logContext, reason: leave?.reason });\n    };\n  }\n\n  private makeRTCConfiguration(serverResponse: JoinResponse | ReconnectResponse): RTCConfiguration {\n    const rtcConfig = { ...this.rtcConfig };\n\n    if (this.signalOpts?.e2eeEnabled) {\n      this.log.debug('E2EE - setting up transports with insertable streams', this.logContext);\n      //  this makes sure that no data is sent before the transforms are ready\n      // @ts-ignore\n      rtcConfig.encodedInsertableStreams = true;\n    }\n\n    // update ICE servers before creating PeerConnection\n    if (serverResponse.iceServers && !rtcConfig.iceServers) {\n      const rtcIceServers: RTCIceServer[] = [];\n      serverResponse.iceServers.forEach((iceServer) => {\n        const rtcIceServer: RTCIceServer = {\n          urls: iceServer.urls,\n        };\n        if (iceServer.username) rtcIceServer.username = iceServer.username;\n        if (iceServer.credential) {\n          rtcIceServer.credential = iceServer.credential;\n        }\n        rtcIceServers.push(rtcIceServer);\n      });\n      rtcConfig.iceServers = rtcIceServers;\n    }\n\n    if (\n      serverResponse.clientConfiguration &&\n      serverResponse.clientConfiguration.forceRelay === ClientConfigSetting.ENABLED\n    ) {\n      rtcConfig.iceTransportPolicy = 'relay';\n    }\n\n    // @ts-ignore\n    rtcConfig.sdpSemantics = 'unified-plan';\n    // @ts-ignore\n    rtcConfig.continualGatheringPolicy = 'gather_continually';\n\n    return rtcConfig;\n  }\n\n  private createDataChannels() {\n    if (!this.pcManager) {\n      return;\n    }\n\n    // clear old data channel callbacks if recreate\n    if (this.lossyDC) {\n      this.lossyDC.onmessage = null;\n      this.lossyDC.onerror = null;\n    }\n    if (this.reliableDC) {\n      this.reliableDC.onmessage = null;\n      this.reliableDC.onerror = null;\n    }\n\n    // create data channels\n    this.lossyDC = this.pcManager.createPublisherDataChannel(lossyDataChannel, {\n      // will drop older packets that arrive\n      ordered: true,\n      maxRetransmits: 0,\n    });\n    this.reliableDC = this.pcManager.createPublisherDataChannel(reliableDataChannel, {\n      ordered: true,\n    });\n\n    // also handle messages over the pub channel, for backwards compatibility\n    this.lossyDC.onmessage = this.handleDataMessage;\n    this.reliableDC.onmessage = this.handleDataMessage;\n\n    // handle datachannel errors\n    this.lossyDC.onerror = this.handleDataError;\n    this.reliableDC.onerror = this.handleDataError;\n\n    // set up dc buffer threshold, set to 64kB (otherwise 0 by default)\n    this.lossyDC.bufferedAmountLowThreshold = 65535;\n    this.reliableDC.bufferedAmountLowThreshold = 65535;\n\n    // handle buffer amount low events\n    this.lossyDC.onbufferedamountlow = this.handleBufferedAmountLow;\n    this.reliableDC.onbufferedamountlow = this.handleBufferedAmountLow;\n  }\n\n  private handleDataChannel = async ({ channel }: RTCDataChannelEvent) => {\n    if (!channel) {\n      return;\n    }\n    if (channel.label === reliableDataChannel) {\n      this.reliableDCSub = channel;\n    } else if (channel.label === lossyDataChannel) {\n      this.lossyDCSub = channel;\n    } else {\n      return;\n    }\n    this.log.debug(`on data channel ${channel.id}, ${channel.label}`, this.logContext);\n    channel.onmessage = this.handleDataMessage;\n  };\n\n  private handleDataMessage = async (message: MessageEvent) => {\n    // make sure to respect incoming data message order by processing message events one after the other\n    const unlock = await this.dataProcessLock.lock();\n    try {\n      // decode\n      let buffer: ArrayBuffer | undefined;\n      if (message.data instanceof ArrayBuffer) {\n        buffer = message.data;\n      } else if (message.data instanceof Blob) {\n        buffer = await message.data.arrayBuffer();\n      } else {\n        this.log.error('unsupported data type', { ...this.logContext, data: message.data });\n        return;\n      }\n      const dp = DataPacket.fromBinary(new Uint8Array(buffer));\n      if (dp.value?.case === 'speaker') {\n        // dispatch speaker updates\n        this.emit(EngineEvent.ActiveSpeakersUpdate, dp.value.value.speakers);\n      } else if (dp.value?.case === 'user') {\n        this.emit(EngineEvent.DataPacketReceived, dp.value.value, dp.kind);\n      }\n    } finally {\n      unlock();\n    }\n  };\n\n  private handleDataError = (event: Event) => {\n    const channel = event.currentTarget as RTCDataChannel;\n    const channelKind = channel.maxRetransmits === 0 ? 'lossy' : 'reliable';\n\n    if (event instanceof ErrorEvent && event.error) {\n      const { error } = event.error;\n      this.log.error(`DataChannel error on ${channelKind}: ${event.message}`, {\n        ...this.logContext,\n        error,\n      });\n    } else {\n      this.log.error(`Unknown DataChannel error on ${channelKind}`, { ...this.logContext, event });\n    }\n  };\n\n  private handleBufferedAmountLow = (event: Event) => {\n    const channel = event.currentTarget as RTCDataChannel;\n    const channelKind =\n      channel.maxRetransmits === 0 ? DataPacket_Kind.LOSSY : DataPacket_Kind.RELIABLE;\n\n    this.updateAndEmitDCBufferStatus(channelKind);\n  };\n\n  private setPreferredCodec(\n    transceiver: RTCRtpTransceiver,\n    kind: Track.Kind,\n    videoCodec: VideoCodec,\n  ) {\n    if (!('getCapabilities' in RTCRtpReceiver)) {\n      return;\n    }\n    // when setting codec preferences, the capabilites need to be read from the RTCRtpReceiver\n    const cap = RTCRtpReceiver.getCapabilities(kind);\n    if (!cap) return;\n    this.log.debug('get receiver capabilities', { ...this.logContext, cap });\n    const matched: RTCRtpCodecCapability[] = [];\n    const partialMatched: RTCRtpCodecCapability[] = [];\n    const unmatched: RTCRtpCodecCapability[] = [];\n    cap.codecs.forEach((c) => {\n      const codec = c.mimeType.toLowerCase();\n      if (codec === 'audio/opus') {\n        matched.push(c);\n        return;\n      }\n      const matchesVideoCodec = codec === `video/${videoCodec}`;\n      if (!matchesVideoCodec) {\n        unmatched.push(c);\n        return;\n      }\n      // for h264 codecs that have sdpFmtpLine available, use only if the\n      // profile-level-id is 42e01f for cross-browser compatibility\n      if (videoCodec === 'h264') {\n        if (c.sdpFmtpLine && c.sdpFmtpLine.includes('profile-level-id=42e01f')) {\n          matched.push(c);\n        } else {\n          partialMatched.push(c);\n        }\n        return;\n      }\n\n      matched.push(c);\n    });\n\n    if (supportsSetCodecPreferences(transceiver)) {\n      transceiver.setCodecPreferences(matched.concat(partialMatched, unmatched));\n    }\n  }\n\n  async createSender(\n    track: LocalTrack,\n    opts: TrackPublishOptions,\n    encodings?: RTCRtpEncodingParameters[],\n  ) {\n    if (supportsTransceiver()) {\n      const sender = await this.createTransceiverRTCRtpSender(track, opts, encodings);\n      return sender;\n    }\n    if (supportsAddTrack()) {\n      this.log.warn('using add-track fallback', this.logContext);\n      const sender = await this.createRTCRtpSender(track.mediaStreamTrack);\n      return sender;\n    }\n    throw new UnexpectedConnectionState('Required webRTC APIs not supported on this device');\n  }\n\n  async createSimulcastSender(\n    track: LocalVideoTrack,\n    simulcastTrack: SimulcastTrackInfo,\n    opts: TrackPublishOptions,\n    encodings?: RTCRtpEncodingParameters[],\n  ) {\n    // store RTCRtpSender\n    if (supportsTransceiver()) {\n      return this.createSimulcastTransceiverSender(track, simulcastTrack, opts, encodings);\n    }\n    if (supportsAddTrack()) {\n      this.log.debug('using add-track fallback', this.logContext);\n      return this.createRTCRtpSender(track.mediaStreamTrack);\n    }\n\n    throw new UnexpectedConnectionState('Cannot stream on this device');\n  }\n\n  private async createTransceiverRTCRtpSender(\n    track: LocalTrack,\n    opts: TrackPublishOptions,\n    encodings?: RTCRtpEncodingParameters[],\n  ) {\n    if (!this.pcManager) {\n      throw new UnexpectedConnectionState('publisher is closed');\n    }\n\n    const streams: MediaStream[] = [];\n\n    if (track.mediaStream) {\n      streams.push(track.mediaStream);\n    }\n\n    const transceiverInit: RTCRtpTransceiverInit = { direction: 'sendonly', streams };\n    if (encodings) {\n      transceiverInit.sendEncodings = encodings;\n    }\n    // addTransceiver for react-native is async. web is synchronous, but await won't effect it.\n    const transceiver = await this.pcManager.addPublisherTransceiver(\n      track.mediaStreamTrack,\n      transceiverInit,\n    );\n\n    if (track.kind === Track.Kind.Video && opts.videoCodec) {\n      this.setPreferredCodec(transceiver, track.kind, opts.videoCodec);\n      track.codec = opts.videoCodec;\n    }\n    return transceiver.sender;\n  }\n\n  private async createSimulcastTransceiverSender(\n    track: LocalVideoTrack,\n    simulcastTrack: SimulcastTrackInfo,\n    opts: TrackPublishOptions,\n    encodings?: RTCRtpEncodingParameters[],\n  ) {\n    if (!this.pcManager) {\n      throw new UnexpectedConnectionState('publisher is closed');\n    }\n    const transceiverInit: RTCRtpTransceiverInit = { direction: 'sendonly' };\n    if (encodings) {\n      transceiverInit.sendEncodings = encodings;\n    }\n    // addTransceiver for react-native is async. web is synchronous, but await won't effect it.\n    const transceiver = await this.pcManager.addPublisherTransceiver(\n      simulcastTrack.mediaStreamTrack,\n      transceiverInit,\n    );\n    if (!opts.videoCodec) {\n      return;\n    }\n    this.setPreferredCodec(transceiver, track.kind, opts.videoCodec);\n    track.setSimulcastTrackSender(opts.videoCodec, transceiver.sender);\n    return transceiver.sender;\n  }\n\n  private async createRTCRtpSender(track: MediaStreamTrack) {\n    if (!this.pcManager) {\n      throw new UnexpectedConnectionState('publisher is closed');\n    }\n    return this.pcManager.addPublisherTrack(track);\n  }\n\n  // websocket reconnect behavior. if websocket is interrupted, and the PeerConnection\n  // continues to work, we can reconnect to websocket to continue the session\n  // after a number of retries, we'll close and give up permanently\n  private handleDisconnect = (connection: string, disconnectReason?: ReconnectReason) => {\n    if (this._isClosed) {\n      return;\n    }\n\n    this.log.warn(`${connection} disconnected`, this.logContext);\n    if (this.reconnectAttempts === 0) {\n      // only reset start time on the first try\n      this.reconnectStart = Date.now();\n    }\n\n    const disconnect = (duration: number) => {\n      this.log.warn(\n        `could not recover connection after ${this.reconnectAttempts} attempts, ${duration}ms. giving up`,\n        this.logContext,\n      );\n      this.emit(EngineEvent.Disconnected);\n      this.close();\n    };\n\n    const duration = Date.now() - this.reconnectStart;\n    let delay = this.getNextRetryDelay({\n      elapsedMs: duration,\n      retryCount: this.reconnectAttempts,\n    });\n\n    if (delay === null) {\n      disconnect(duration);\n      return;\n    }\n    if (connection === leaveReconnect) {\n      delay = 0;\n    }\n\n    this.log.debug(`reconnecting in ${delay}ms`, this.logContext);\n\n    this.clearReconnectTimeout();\n    if (this.token && this.regionUrlProvider) {\n      // token may have been refreshed, we do not want to recreate the regionUrlProvider\n      // since the current engine may have inherited a regional url\n      this.regionUrlProvider.updateToken(this.token);\n    }\n    this.reconnectTimeout = CriticalTimers.setTimeout(\n      () => this.attemptReconnect(disconnectReason),\n      delay,\n    );\n  };\n\n  private async attemptReconnect(reason?: ReconnectReason) {\n    if (this._isClosed) {\n      return;\n    }\n    // guard for attempting reconnection multiple times while one attempt is still not finished\n    if (this.attemptingReconnect) {\n      log.warn('already attempting reconnect, returning early', this.logContext);\n      return;\n    }\n    if (\n      this.clientConfiguration?.resumeConnection === ClientConfigSetting.DISABLED ||\n      // signaling state could change to closed due to hardware sleep\n      // those connections cannot be resumed\n      (this.pcManager?.currentState ?? PCTransportState.NEW) === PCTransportState.NEW\n    ) {\n      this.fullReconnectOnNext = true;\n    }\n\n    try {\n      this.attemptingReconnect = true;\n      if (this.fullReconnectOnNext) {\n        await this.restartConnection();\n      } else {\n        await this.resumeConnection(reason);\n      }\n      this.clearPendingReconnect();\n      this.fullReconnectOnNext = false;\n    } catch (e) {\n      this.reconnectAttempts += 1;\n      let recoverable = true;\n      if (e instanceof UnexpectedConnectionState) {\n        this.log.debug('received unrecoverable error', { ...this.logContext, error: e });\n        // unrecoverable\n        recoverable = false;\n      } else if (!(e instanceof SignalReconnectError)) {\n        // cannot resume\n        this.fullReconnectOnNext = true;\n      }\n\n      if (recoverable) {\n        this.handleDisconnect('reconnect', ReconnectReason.RR_UNKNOWN);\n      } else {\n        this.log.info(\n          `could not recover connection after ${this.reconnectAttempts} attempts, ${\n            Date.now() - this.reconnectStart\n          }ms. giving up`,\n          this.logContext,\n        );\n        this.emit(EngineEvent.Disconnected);\n        await this.close();\n      }\n    } finally {\n      this.attemptingReconnect = false;\n    }\n  }\n\n  private getNextRetryDelay(context: ReconnectContext) {\n    try {\n      return this.reconnectPolicy.nextRetryDelayInMs(context);\n    } catch (e) {\n      this.log.warn('encountered error in reconnect policy', { ...this.logContext, error: e });\n    }\n\n    // error in user code with provided reconnect policy, stop reconnecting\n    return null;\n  }\n\n  private async restartConnection(regionUrl?: string) {\n    try {\n      if (!this.url || !this.token) {\n        // permanent failure, don't attempt reconnection\n        throw new UnexpectedConnectionState('could not reconnect, url or token not saved');\n      }\n\n      this.log.info(`reconnecting, attempt: ${this.reconnectAttempts}`, this.logContext);\n      this.emit(EngineEvent.Restarting);\n\n      if (!this.client.isDisconnected) {\n        await this.client.sendLeave();\n      }\n      await this.cleanupPeerConnections();\n      await this.cleanupClient();\n\n      let joinResponse: JoinResponse;\n      try {\n        if (!this.signalOpts) {\n          this.log.warn(\n            'attempted connection restart, without signal options present',\n            this.logContext,\n          );\n          throw new SignalReconnectError();\n        }\n        // in case a regionUrl is passed, the region URL takes precedence\n        joinResponse = await this.join(regionUrl ?? this.url, this.token, this.signalOpts);\n      } catch (e) {\n        if (e instanceof ConnectionError && e.reason === ConnectionErrorReason.NotAllowed) {\n          throw new UnexpectedConnectionState('could not reconnect, token might be expired');\n        }\n        throw new SignalReconnectError();\n      }\n\n      if (this.shouldFailNext) {\n        this.shouldFailNext = false;\n        throw new Error('simulated failure');\n      }\n\n      this.client.setReconnected();\n      this.emit(EngineEvent.SignalRestarted, joinResponse);\n\n      await this.waitForPCReconnected();\n\n      // re-check signal connection state before setting engine as resumed\n      if (this.client.currentState !== SignalConnectionState.CONNECTED) {\n        throw new SignalReconnectError('Signal connection got severed during reconnect');\n      }\n\n      this.regionUrlProvider?.resetAttempts();\n      // reconnect success\n      this.emit(EngineEvent.Restarted);\n    } catch (error) {\n      const nextRegionUrl = await this.regionUrlProvider?.getNextBestRegionUrl();\n      if (nextRegionUrl) {\n        await this.restartConnection(nextRegionUrl);\n        return;\n      } else {\n        // no more regions to try (or we're not on cloud)\n        this.regionUrlProvider?.resetAttempts();\n        throw error;\n      }\n    }\n  }\n\n  private async resumeConnection(reason?: ReconnectReason): Promise<void> {\n    if (!this.url || !this.token) {\n      // permanent failure, don't attempt reconnection\n      throw new UnexpectedConnectionState('could not reconnect, url or token not saved');\n    }\n    // trigger publisher reconnect\n    if (!this.pcManager) {\n      throw new UnexpectedConnectionState('publisher and subscriber connections unset');\n    }\n\n    this.log.info(`resuming signal connection, attempt ${this.reconnectAttempts}`, this.logContext);\n    this.emit(EngineEvent.Resuming);\n\n    try {\n      this.setupSignalClientCallbacks();\n      const res = await this.client.reconnect(this.url, this.token, this.participantSid, reason);\n      if (res) {\n        const rtcConfig = this.makeRTCConfiguration(res);\n        this.pcManager.updateConfiguration(rtcConfig);\n      }\n    } catch (error) {\n      let message = '';\n      if (error instanceof Error) {\n        message = error.message;\n        this.log.error(error.message, { ...this.logContext, error });\n      }\n      if (error instanceof ConnectionError && error.reason === ConnectionErrorReason.NotAllowed) {\n        throw new UnexpectedConnectionState('could not reconnect, token might be expired');\n      }\n      if (error instanceof ConnectionError && error.reason === ConnectionErrorReason.LeaveRequest) {\n        throw error;\n      }\n      throw new SignalReconnectError(message);\n    }\n    this.emit(EngineEvent.SignalResumed);\n\n    if (this.shouldFailNext) {\n      this.shouldFailNext = false;\n      throw new Error('simulated failure');\n    }\n\n    await this.pcManager.triggerIceRestart();\n\n    await this.waitForPCReconnected();\n\n    // re-check signal connection state before setting engine as resumed\n    if (this.client.currentState !== SignalConnectionState.CONNECTED) {\n      throw new SignalReconnectError('Signal connection got severed during reconnect');\n    }\n\n    this.client.setReconnected();\n\n    // recreate publish datachannel if it's id is null\n    // (for safari https://bugs.webkit.org/show_bug.cgi?id=184688)\n    if (this.reliableDC?.readyState === 'open' && this.reliableDC.id === null) {\n      this.createDataChannels();\n    }\n\n    // resume success\n    this.emit(EngineEvent.Resumed);\n  }\n\n  async waitForPCInitialConnection(timeout?: number, abortController?: AbortController) {\n    if (!this.pcManager) {\n      throw new UnexpectedConnectionState('PC manager is closed');\n    }\n    await this.pcManager.ensurePCTransportConnection(abortController, timeout);\n  }\n\n  private async waitForPCReconnected() {\n    this.pcState = PCState.Reconnecting;\n\n    this.log.debug('waiting for peer connection to reconnect', this.logContext);\n    try {\n      await sleep(minReconnectWait); // FIXME setTimeout again not ideal for a connection critical path\n      if (!this.pcManager) {\n        throw new UnexpectedConnectionState('PC manager is closed');\n      }\n      await this.pcManager.ensurePCTransportConnection(undefined, this.peerConnectionTimeout);\n      this.pcState = PCState.Connected;\n    } catch (e: any) {\n      // TODO do we need a `failed` state here for the PC?\n      this.pcState = PCState.Disconnected;\n      throw new ConnectionError(`could not establish PC connection, ${e.message}`);\n    }\n  }\n\n  waitForRestarted = () => {\n    return new Promise<void>((resolve, reject) => {\n      if (this.pcState === PCState.Connected) {\n        resolve();\n      }\n      const onRestarted = () => {\n        this.off(EngineEvent.Disconnected, onDisconnected);\n        resolve();\n      };\n      const onDisconnected = () => {\n        this.off(EngineEvent.Restarted, onRestarted);\n        reject();\n      };\n      this.once(EngineEvent.Restarted, onRestarted);\n      this.once(EngineEvent.Disconnected, onDisconnected);\n    });\n  };\n\n  /* @internal */\n  async sendDataPacket(packet: DataPacket, kind: DataPacket_Kind) {\n    const msg = packet.toBinary();\n\n    // make sure we do have a data connection\n    await this.ensurePublisherConnected(kind);\n\n    const dc = this.dataChannelForKind(kind);\n    if (dc) {\n      dc.send(msg);\n    }\n\n    this.updateAndEmitDCBufferStatus(kind);\n  }\n\n  private updateAndEmitDCBufferStatus = (kind: DataPacket_Kind) => {\n    const status = this.isBufferStatusLow(kind);\n    if (typeof status !== 'undefined' && status !== this.dcBufferStatus.get(kind)) {\n      this.dcBufferStatus.set(kind, status);\n      this.emit(EngineEvent.DCBufferStatusChanged, status, kind);\n    }\n  };\n\n  private isBufferStatusLow = (kind: DataPacket_Kind): boolean | undefined => {\n    const dc = this.dataChannelForKind(kind);\n    if (dc) {\n      return dc.bufferedAmount <= dc.bufferedAmountLowThreshold;\n    }\n  };\n\n  /**\n   * @internal\n   */\n  async ensureDataTransportConnected(\n    kind: DataPacket_Kind,\n    subscriber: boolean = this.subscriberPrimary,\n  ) {\n    if (!this.pcManager) {\n      throw new UnexpectedConnectionState('PC manager is closed');\n    }\n    const transport = subscriber ? this.pcManager.subscriber : this.pcManager.publisher;\n    const transportName = subscriber ? 'Subscriber' : 'Publisher';\n    if (!transport) {\n      throw new ConnectionError(`${transportName} connection not set`);\n    }\n\n    if (\n      !subscriber &&\n      !this.pcManager.publisher.isICEConnected &&\n      this.pcManager.publisher.getICEConnectionState() !== 'checking'\n    ) {\n      // start negotiation\n      this.negotiate();\n    }\n\n    const targetChannel = this.dataChannelForKind(kind, subscriber);\n    if (targetChannel?.readyState === 'open') {\n      return;\n    }\n\n    // wait until ICE connected\n    const endTime = new Date().getTime() + this.peerConnectionTimeout;\n    while (new Date().getTime() < endTime) {\n      if (\n        transport.isICEConnected &&\n        this.dataChannelForKind(kind, subscriber)?.readyState === 'open'\n      ) {\n        return;\n      }\n      await sleep(50);\n    }\n\n    throw new ConnectionError(\n      `could not establish ${transportName} connection, state: ${transport.getICEConnectionState()}`,\n    );\n  }\n\n  private async ensurePublisherConnected(kind: DataPacket_Kind) {\n    await this.ensureDataTransportConnected(kind, false);\n  }\n\n  /* @internal */\n  verifyTransport(): boolean {\n    if (!this.pcManager) {\n      return false;\n    }\n    // primary connection\n    if (this.pcManager.currentState !== PCTransportState.CONNECTED) {\n      return false;\n    }\n\n    // ensure signal is connected\n    if (!this.client.ws || this.client.ws.readyState === WebSocket.CLOSED) {\n      return false;\n    }\n    return true;\n  }\n\n  /** @internal */\n  async negotiate(): Promise<void> {\n    // observe signal state\n    return new Promise<void>(async (resolve, reject) => {\n      if (!this.pcManager) {\n        reject(new NegotiationError('PC manager is closed'));\n        return;\n      }\n\n      this.pcManager.requirePublisher();\n\n      const abortController = new AbortController();\n\n      const handleClosed = () => {\n        abortController.abort();\n        this.log.debug('engine disconnected while negotiation was ongoing', this.logContext);\n        resolve();\n        return;\n      };\n\n      if (this.isClosed) {\n        reject('cannot negotiate on closed engine');\n      }\n      this.on(EngineEvent.Closing, handleClosed);\n\n      this.pcManager.publisher.once(\n        PCEvents.RTPVideoPayloadTypes,\n        (rtpTypes: MediaAttributes['rtp']) => {\n          const rtpMap = new Map<number, VideoCodec>();\n          rtpTypes.forEach((rtp) => {\n            const codec = rtp.codec.toLowerCase();\n            if (isVideoCodec(codec)) {\n              rtpMap.set(rtp.payload, codec);\n            }\n          });\n          this.emit(EngineEvent.RTPVideoMapUpdate, rtpMap);\n        },\n      );\n\n      try {\n        await this.pcManager.negotiate(abortController);\n        resolve();\n      } catch (e: any) {\n        if (e instanceof NegotiationError) {\n          this.fullReconnectOnNext = true;\n        }\n        this.handleDisconnect('negotiation', ReconnectReason.RR_UNKNOWN);\n        reject(e);\n      } finally {\n        this.off(EngineEvent.Closing, handleClosed);\n      }\n    });\n  }\n\n  dataChannelForKind(kind: DataPacket_Kind, sub?: boolean): RTCDataChannel | undefined {\n    if (!sub) {\n      if (kind === DataPacket_Kind.LOSSY) {\n        return this.lossyDC;\n      }\n      if (kind === DataPacket_Kind.RELIABLE) {\n        return this.reliableDC;\n      }\n    } else {\n      if (kind === DataPacket_Kind.LOSSY) {\n        return this.lossyDCSub;\n      }\n      if (kind === DataPacket_Kind.RELIABLE) {\n        return this.reliableDCSub;\n      }\n    }\n  }\n\n  /** @internal */\n  sendSyncState(remoteTracks: RemoteTrackPublication[], localTracks: LocalTrackPublication[]) {\n    if (!this.pcManager) {\n      this.log.warn('sync state cannot be sent without peer connection setup', this.logContext);\n      return;\n    }\n    const previousAnswer = this.pcManager.subscriber.getLocalDescription();\n    const previousOffer = this.pcManager.subscriber.getRemoteDescription();\n\n    /* 1. autosubscribe on, so subscribed tracks = all tracks - unsub tracks,\n          in this case, we send unsub tracks, so server add all tracks to this\n          subscribe pc and unsub special tracks from it.\n       2. autosubscribe off, we send subscribed tracks.\n    */\n    const autoSubscribe = this.signalOpts?.autoSubscribe ?? true;\n    const trackSids = new Array<string>();\n\n    remoteTracks.forEach((track) => {\n      if (track.isDesired !== autoSubscribe) {\n        trackSids.push(track.trackSid);\n      }\n    });\n\n    this.client.sendSyncState(\n      new SyncState({\n        answer: previousAnswer\n          ? toProtoSessionDescription({\n              sdp: previousAnswer.sdp,\n              type: previousAnswer.type,\n            })\n          : undefined,\n        offer: previousOffer\n          ? toProtoSessionDescription({\n              sdp: previousOffer.sdp,\n              type: previousOffer.type,\n            })\n          : undefined,\n        subscription: new UpdateSubscription({\n          trackSids,\n          subscribe: !autoSubscribe,\n          participantTracks: [],\n        }),\n        publishTracks: getTrackPublicationInfo(localTracks),\n        dataChannels: this.dataChannelsInfo(),\n      }),\n    );\n  }\n\n  /* @internal */\n  failNext() {\n    // debugging method to fail the next reconnect/resume attempt\n    this.shouldFailNext = true;\n  }\n\n  private dataChannelsInfo(): DataChannelInfo[] {\n    const infos: DataChannelInfo[] = [];\n    const getInfo = (dc: RTCDataChannel | undefined, target: SignalTarget) => {\n      if (dc?.id !== undefined && dc.id !== null) {\n        infos.push(\n          new DataChannelInfo({\n            label: dc.label,\n            id: dc.id,\n            target,\n          }),\n        );\n      }\n    };\n    getInfo(this.dataChannelForKind(DataPacket_Kind.LOSSY), SignalTarget.PUBLISHER);\n    getInfo(this.dataChannelForKind(DataPacket_Kind.RELIABLE), SignalTarget.PUBLISHER);\n    getInfo(this.dataChannelForKind(DataPacket_Kind.LOSSY, true), SignalTarget.SUBSCRIBER);\n    getInfo(this.dataChannelForKind(DataPacket_Kind.RELIABLE, true), SignalTarget.SUBSCRIBER);\n    return infos;\n  }\n\n  private clearReconnectTimeout() {\n    if (this.reconnectTimeout) {\n      CriticalTimers.clearTimeout(this.reconnectTimeout);\n    }\n  }\n\n  private clearPendingReconnect() {\n    this.clearReconnectTimeout();\n    this.reconnectAttempts = 0;\n  }\n\n  private handleBrowserOnLine = () => {\n    // in case the engine is currently reconnecting, attempt a reconnect immediately after the browser state has changed to 'onLine'\n    if (this.client.currentState === SignalConnectionState.RECONNECTING) {\n      this.clearReconnectTimeout();\n      this.attemptReconnect(ReconnectReason.RR_SIGNAL_DISCONNECTED);\n    }\n  };\n\n  private registerOnLineListener() {\n    if (isWeb()) {\n      window.addEventListener('online', this.handleBrowserOnLine);\n    }\n  }\n\n  private deregisterOnLineListener() {\n    if (isWeb()) {\n      window.removeEventListener('online', this.handleBrowserOnLine);\n    }\n  }\n}\n\nclass SignalReconnectError extends Error {}\n\nexport type EngineEventCallbacks = {\n  connected: (joinResp: JoinResponse) => void;\n  disconnected: (reason?: DisconnectReason) => void;\n  resuming: () => void;\n  resumed: () => void;\n  restarting: () => void;\n  restarted: () => void;\n  signalResumed: () => void;\n  signalRestarted: (joinResp: JoinResponse) => void;\n  closing: () => void;\n  mediaTrackAdded: (\n    track: MediaStreamTrack,\n    streams: MediaStream,\n    receiver?: RTCRtpReceiver,\n  ) => void;\n  activeSpeakersUpdate: (speakers: Array<SpeakerInfo>) => void;\n  dataPacketReceived: (userPacket: UserPacket, kind: DataPacket_Kind) => void;\n  transportsCreated: (publisher: PCTransport, subscriber: PCTransport) => void;\n  /** @internal */\n  trackSenderAdded: (track: Track, sender: RTCRtpSender) => void;\n  rtpVideoMapUpdate: (rtpMap: Map<number, VideoCodec>) => void;\n  dcBufferStatusChanged: (isLow: boolean, kind: DataPacket_Kind) => void;\n  participantUpdate: (infos: ParticipantInfo[]) => void;\n  roomUpdate: (room: RoomModel) => void;\n  connectionQualityUpdate: (update: ConnectionQualityUpdate) => void;\n  speakersChanged: (speakerUpdates: SpeakerInfo[]) => void;\n  streamStateChanged: (update: StreamStateUpdate) => void;\n  subscriptionError: (resp: SubscriptionResponse) => void;\n  subscriptionPermissionUpdate: (update: SubscriptionPermissionUpdate) => void;\n  subscribedQualityUpdate: (update: SubscribedQualityUpdate) => void;\n  localTrackUnpublished: (unpublishedResponse: TrackUnpublishedResponse) => void;\n  remoteMute: (trackSid: string, muted: boolean) => void;\n};\n", "import log from '../logger';\nimport type { RegionInfo, RegionSettings } from '../proto/livekit_rtc_pb';\nimport { ConnectionError, ConnectionErrorReason } from './errors';\nimport { isCloud } from './utils';\n\nexport class RegionUrlProvider {\n  private serverUrl: URL;\n\n  private token: string;\n\n  private regionSettings: RegionSettings | undefined;\n\n  private lastUpdateAt: number = 0;\n\n  private settingsCacheTime = 3_000;\n\n  private attemptedRegions: RegionInfo[] = [];\n\n  constructor(url: string, token: string) {\n    this.serverUrl = new URL(url);\n    this.token = token;\n  }\n\n  updateToken(token: string) {\n    this.token = token;\n  }\n\n  isCloud() {\n    return isCloud(this.serverUrl);\n  }\n\n  getServerUrl() {\n    return this.serverUrl;\n  }\n\n  async getNextBestRegionUrl(abortSignal?: AbortSignal) {\n    if (!this.isCloud()) {\n      throw Error('region availability is only supported for LiveKit Cloud domains');\n    }\n    if (!this.regionSettings || Date.now() - this.lastUpdateAt > this.settingsCacheTime) {\n      this.regionSettings = await this.fetchRegionSettings(abortSignal);\n    }\n    const regionsLeft = this.regionSettings.regions.filter(\n      (region) => !this.attemptedRegions.find((attempted) => attempted.url === region.url),\n    );\n    if (regionsLeft.length > 0) {\n      const nextRegion = regionsLeft[0];\n      this.attemptedRegions.push(nextRegion);\n      log.debug(`next region: ${nextRegion.region}`);\n      return nextRegion.url;\n    } else {\n      return null;\n    }\n  }\n\n  resetAttempts() {\n    this.attemptedRegions = [];\n  }\n\n  /* @internal */\n  async fetchRegionSettings(signal?: AbortSignal) {\n    const regionSettingsResponse = await fetch(`${getCloudConfigUrl(this.serverUrl)}/regions`, {\n      headers: { authorization: `Bearer ${this.token}` },\n      signal,\n    });\n    if (regionSettingsResponse.ok) {\n      const regionSettings = (await regionSettingsResponse.json()) as RegionSettings;\n      this.lastUpdateAt = Date.now();\n      return regionSettings;\n    } else {\n      throw new ConnectionError(\n        `Could not fetch region settings: ${regionSettingsResponse.statusText}`,\n        regionSettingsResponse.status === 401 ? ConnectionErrorReason.NotAllowed : undefined,\n        regionSettingsResponse.status,\n      );\n    }\n  }\n}\n\nfunction getCloudConfigUrl(serverUrl: URL) {\n  return `${serverUrl.protocol.replace('ws', 'http')}//${serverUrl.host}/settings`;\n}\n", "export const monitorFrequency = 2000;\n\n// key stats for senders and receivers\ninterface SenderStats {\n  /** number of packets sent */\n  packetsSent?: number;\n\n  /** number of bytes sent */\n  bytesSent?: number;\n\n  /** jitter as perceived by remote */\n  jitter?: number;\n\n  /** packets reported lost by remote */\n  packetsLost?: number;\n\n  /** RTT reported by remote */\n  roundTripTime?: number;\n\n  /** ID of the outbound stream */\n  streamId?: string;\n\n  timestamp: number;\n}\n\nexport interface AudioSenderStats extends SenderStats {\n  type: 'audio';\n}\n\nexport interface VideoSenderStats extends SenderStats {\n  type: 'video';\n\n  firCount: number;\n\n  pliCount: number;\n\n  nackCount: number;\n\n  rid: string;\n\n  frameWidth: number;\n\n  frameHeight: number;\n\n  framesSent: number;\n\n  // bandwidth, cpu, other, none\n  qualityLimitationReason: string;\n\n  qualityLimitationResolutionChanges: number;\n\n  retransmittedPacketsSent: number;\n}\n\ninterface ReceiverStats {\n  jitterBufferDelay?: number;\n\n  /** packets reported lost by remote */\n  packetsLost?: number;\n\n  /** number of packets sent */\n  packetsReceived?: number;\n\n  bytesReceived?: number;\n\n  streamId?: string;\n\n  jitter?: number;\n\n  timestamp: number;\n}\n\nexport interface AudioReceiverStats extends ReceiverStats {\n  type: 'audio';\n\n  concealedSamples?: number;\n\n  concealmentEvents?: number;\n\n  silentConcealedSamples?: number;\n\n  silentConcealmentEvents?: number;\n\n  totalAudioEnergy?: number;\n\n  totalSamplesDuration?: number;\n}\n\nexport interface VideoReceiverStats extends ReceiverStats {\n  type: 'video';\n\n  framesDecoded: number;\n\n  framesDropped: number;\n\n  framesReceived: number;\n\n  frameWidth?: number;\n\n  frameHeight?: number;\n\n  firCount?: number;\n\n  pliCount?: number;\n\n  nackCount?: number;\n\n  decoderImplementation?: string;\n\n  mimeType?: string;\n}\n\nexport function computeBitrate<T extends ReceiverStats | SenderStats>(\n  currentStats: T,\n  prevStats?: T,\n): number {\n  if (!prevStats) {\n    return 0;\n  }\n  let bytesNow: number | undefined;\n  let bytesPrev: number | undefined;\n  if ('bytesReceived' in currentStats) {\n    bytesNow = (currentStats as ReceiverStats).bytesReceived;\n    bytesPrev = (prevStats as ReceiverStats).bytesReceived;\n  } else if ('bytesSent' in currentStats) {\n    bytesNow = (currentStats as SenderStats).bytesSent;\n    bytesPrev = (prevStats as SenderStats).bytesSent;\n  }\n  if (\n    bytesNow === undefined ||\n    bytesPrev === undefined ||\n    currentStats.timestamp === undefined ||\n    prevStats.timestamp === undefined\n  ) {\n    return 0;\n  }\n  return ((bytesNow - bytesPrev) * 8 * 1000) / (currentStats.timestamp - prevStats.timestamp);\n}\n", "import { TrackEvent } from '../events';\nimport { computeBitrate, monitorFrequency } from '../stats';\nimport type { AudioSenderStats } from '../stats';\nimport type { LoggerOptions } from '../types';\nimport { isWeb, unwrapConstraint } from '../utils';\nimport LocalTrack from './LocalTrack';\nimport { Track } from './Track';\nimport type { AudioCaptureOptions } from './options';\nimport type { TrackProcessor } from './processor/types';\nimport { constraintsForOptions, detectSilence } from './utils';\n\nexport default class LocalAudioTrack extends LocalTrack {\n  /** @internal */\n  stopOnMute: boolean = false;\n\n  private audioContext?: AudioContext;\n\n  private prevStats?: AudioSenderStats;\n\n  /**\n   *\n   * @param mediaTrack\n   * @param constraints MediaTrackConstraints that are being used when restarting or reacquiring tracks\n   * @param userProvidedTrack Signals to the SDK whether or not the mediaTrack should be managed (i.e. released and reacquired) internally by the SDK\n   */\n  constructor(\n    mediaTrack: MediaStreamTrack,\n    constraints?: MediaTrackConstraints,\n    userProvidedTrack = true,\n    audioContext?: AudioContext,\n    loggerOptions?: LoggerOptions,\n  ) {\n    super(mediaTrack, Track.Kind.Audio, constraints, userProvidedTrack, loggerOptions);\n    this.audioContext = audioContext;\n    this.checkForSilence();\n  }\n\n  async setDeviceId(deviceId: ConstrainDOMString): Promise<boolean> {\n    if (this._constraints.deviceId === deviceId) {\n      return true;\n    }\n    this._constraints.deviceId = deviceId;\n    if (!this.isMuted) {\n      await this.restartTrack();\n    }\n    return (\n      this.isMuted || unwrapConstraint(deviceId) === this.mediaStreamTrack.getSettings().deviceId\n    );\n  }\n\n  async mute(): Promise<LocalAudioTrack> {\n    const unlock = await this.muteLock.lock();\n    try {\n      // disabled special handling as it will cause BT headsets to switch communication modes\n      if (this.source === Track.Source.Microphone && this.stopOnMute && !this.isUserProvided) {\n        this.log.debug('stopping mic track', this.logContext);\n        // also stop the track, so that microphone indicator is turned off\n        this._mediaStreamTrack.stop();\n      }\n      await super.mute();\n      return this;\n    } finally {\n      unlock();\n    }\n  }\n\n  async unmute(): Promise<LocalAudioTrack> {\n    const unlock = await this.muteLock.lock();\n    try {\n      const deviceHasChanged =\n        this._constraints.deviceId &&\n        this._mediaStreamTrack.getSettings().deviceId !==\n          unwrapConstraint(this._constraints.deviceId);\n\n      if (\n        this.source === Track.Source.Microphone &&\n        (this.stopOnMute || this._mediaStreamTrack.readyState === 'ended' || deviceHasChanged) &&\n        !this.isUserProvided\n      ) {\n        this.log.debug('reacquiring mic track', this.logContext);\n        await this.restartTrack();\n      }\n      await super.unmute();\n\n      return this;\n    } finally {\n      unlock();\n    }\n  }\n\n  async restartTrack(options?: AudioCaptureOptions) {\n    let constraints: MediaTrackConstraints | undefined;\n    if (options) {\n      const streamConstraints = constraintsForOptions({ audio: options });\n      if (typeof streamConstraints.audio !== 'boolean') {\n        constraints = streamConstraints.audio;\n      }\n    }\n    await this.restart(constraints);\n  }\n\n  protected async restart(constraints?: MediaTrackConstraints): Promise<LocalTrack> {\n    const track = await super.restart(constraints);\n    this.checkForSilence();\n    return track;\n  }\n\n  /* @internal */\n  startMonitor() {\n    if (!isWeb()) {\n      return;\n    }\n    if (this.monitorInterval) {\n      return;\n    }\n    this.monitorInterval = setInterval(() => {\n      this.monitorSender();\n    }, monitorFrequency);\n  }\n\n  protected monitorSender = async () => {\n    if (!this.sender) {\n      this._currentBitrate = 0;\n      return;\n    }\n\n    let stats: AudioSenderStats | undefined;\n    try {\n      stats = await this.getSenderStats();\n    } catch (e) {\n      this.log.error('could not get audio sender stats', { ...this.logContext, error: e });\n      return;\n    }\n\n    if (stats && this.prevStats) {\n      this._currentBitrate = computeBitrate(stats, this.prevStats);\n    }\n\n    this.prevStats = stats;\n  };\n\n  async setProcessor(processor: TrackProcessor<this['kind']>) {\n    const unlock = await this.processorLock.lock();\n    try {\n      if (!this.audioContext) {\n        throw Error(\n          'Audio context needs to be set on LocalAudioTrack in order to enable processors',\n        );\n      }\n      if (this.processor) {\n        await this.stopProcessor();\n      }\n      if (this.kind === 'unknown') {\n        throw TypeError('cannot set processor on track of unknown kind');\n      }\n\n      const processorOptions = {\n        kind: this.kind,\n        track: this._mediaStreamTrack,\n        audioContext: this.audioContext,\n      };\n      this.log.debug(`setting up audio processor ${processor.name}`, this.logContext);\n\n      await processor.init(processorOptions);\n      this.processor = processor;\n      if (this.processor.processedTrack) {\n        await this.sender?.replaceTrack(this.processor.processedTrack);\n      }\n    } finally {\n      unlock();\n    }\n  }\n\n  /**\n   * @internal\n   * @experimental\n   */\n  setAudioContext(audioContext: AudioContext | undefined) {\n    this.audioContext = audioContext;\n  }\n\n  async getSenderStats(): Promise<AudioSenderStats | undefined> {\n    if (!this.sender?.getStats) {\n      return undefined;\n    }\n\n    const stats = await this.sender.getStats();\n    let audioStats: AudioSenderStats | undefined;\n    stats.forEach((v) => {\n      if (v.type === 'outbound-rtp') {\n        audioStats = {\n          type: 'audio',\n          streamId: v.id,\n          packetsSent: v.packetsSent,\n          packetsLost: v.packetsLost,\n          bytesSent: v.bytesSent,\n          timestamp: v.timestamp,\n          roundTripTime: v.roundTripTime,\n          jitter: v.jitter,\n        };\n      }\n    });\n\n    return audioStats;\n  }\n\n  async checkForSilence() {\n    const trackIsSilent = await detectSilence(this);\n    if (trackIsSilent) {\n      if (!this.isMuted) {\n        this.log.warn('silence detected on local audio track', this.logContext);\n      }\n      this.emit(TrackEvent.AudioSilenceDetected);\n    }\n    return trackIsSilent;\n  }\n}\n", "import log from '../../logger';\nimport { TrackInvalidError } from '../errors';\nimport LocalAudioTrack from '../track/LocalAudioTrack';\nimport LocalVideoTrack from '../track/LocalVideoTrack';\nimport { Track } from '../track/Track';\nimport type {\n  BackupVideoCodec,\n  TrackPublishOptions,\n  VideoCodec,\n  VideoEncoding,\n} from '../track/options';\nimport { ScreenSharePresets, VideoPreset, VideoPresets, VideoPresets43 } from '../track/options';\nimport type { LoggerOptions } from '../types';\nimport { getReactNativeOs, isFireFox, isReactNative, isSVCCodec } from '../utils';\n\n/** @internal */\nexport function mediaTrackToLocalTrack(\n  mediaStreamTrack: MediaStreamTrack,\n  constraints?: MediaTrackConstraints,\n  loggerOptions?: LoggerOptions,\n): LocalVideoTrack | LocalAudioTrack {\n  switch (mediaStreamTrack.kind) {\n    case 'audio':\n      return new LocalAudioTrack(mediaStreamTrack, constraints, false, undefined, loggerOptions);\n    case 'video':\n      return new LocalVideoTrack(mediaStreamTrack, constraints, false, loggerOptions);\n    default:\n      throw new TrackInvalidError(`unsupported track type: ${mediaStreamTrack.kind}`);\n  }\n}\n\n/* @internal */\nexport const presets169 = Object.values(VideoPresets);\n\n/* @internal */\nexport const presets43 = Object.values(VideoPresets43);\n\n/* @internal */\nexport const presetsScreenShare = Object.values(ScreenSharePresets);\n\n/* @internal */\nexport const defaultSimulcastPresets169 = [VideoPresets.h180, VideoPresets.h360];\n\n/* @internal */\nexport const defaultSimulcastPresets43 = [VideoPresets43.h180, VideoPresets43.h360];\n\n/* @internal */\nexport const computeDefaultScreenShareSimulcastPresets = (fromPreset: VideoPreset) => {\n  const layers = [{ scaleResolutionDownBy: 2, fps: fromPreset.encoding.maxFramerate }];\n  return layers.map(\n    (t) =>\n      new VideoPreset(\n        Math.floor(fromPreset.width / t.scaleResolutionDownBy),\n        Math.floor(fromPreset.height / t.scaleResolutionDownBy),\n        Math.max(\n          150_000,\n          Math.floor(\n            fromPreset.encoding.maxBitrate /\n              (t.scaleResolutionDownBy ** 2 *\n                ((fromPreset.encoding.maxFramerate ?? 30) / (t.fps ?? 30))),\n          ),\n        ),\n        t.fps,\n        fromPreset.encoding.priority,\n      ),\n  );\n};\n\n// /**\n//  *\n//  * @internal\n//  * @experimental\n//  */\n// const computeDefaultMultiCodecSimulcastEncodings = (width: number, height: number) => {\n//   // use vp8 as a default\n//   const vp8 = determineAppropriateEncoding(false, width, height);\n//   const vp9 = { ...vp8, maxBitrate: vp8.maxBitrate * 0.9 };\n//   const h264 = { ...vp8, maxBitrate: vp8.maxBitrate * 1.1 };\n//   const av1 = { ...vp8, maxBitrate: vp8.maxBitrate * 0.7 };\n//   return {\n//     vp8,\n//     vp9,\n//     h264,\n//     av1,\n//   };\n// };\n\nconst videoRids = ['q', 'h', 'f'];\n\n/* @internal */\nexport function computeVideoEncodings(\n  isScreenShare: boolean,\n  width?: number,\n  height?: number,\n  options?: TrackPublishOptions,\n): RTCRtpEncodingParameters[] {\n  let videoEncoding: VideoEncoding | undefined = options?.videoEncoding;\n\n  if (isScreenShare) {\n    videoEncoding = options?.screenShareEncoding;\n  }\n\n  const useSimulcast = options?.simulcast;\n  const scalabilityMode = options?.scalabilityMode;\n  const videoCodec = options?.videoCodec;\n\n  if ((!videoEncoding && !useSimulcast && !scalabilityMode) || !width || !height) {\n    // when we aren't simulcasting or svc, will need to return a single encoding without\n    // capping bandwidth. we always require a encoding for dynacast\n    return [{}];\n  }\n\n  if (!videoEncoding) {\n    // find the right encoding based on width/height\n    videoEncoding = determineAppropriateEncoding(isScreenShare, width, height, videoCodec);\n    log.debug('using video encoding', videoEncoding);\n  }\n\n  const original = new VideoPreset(\n    width,\n    height,\n    videoEncoding.maxBitrate,\n    videoEncoding.maxFramerate,\n    videoEncoding.priority,\n  );\n\n  if (scalabilityMode && isSVCCodec(videoCodec)) {\n    log.debug(`using svc with scalabilityMode ${scalabilityMode}`);\n\n    const sm = new ScalabilityMode(scalabilityMode);\n\n    const encodings: RTCRtpEncodingParameters[] = [];\n\n    if (sm.spatial > 3) {\n      throw new Error(`unsupported scalabilityMode: ${scalabilityMode}`);\n    }\n    for (let i = 0; i < sm.spatial; i += 1) {\n      encodings.push({\n        rid: videoRids[2 - i],\n        maxBitrate: videoEncoding.maxBitrate / 3 ** i,\n        /* @ts-ignore */\n        maxFramerate: original.encoding.maxFramerate,\n      });\n    }\n    /* @ts-ignore */\n    encodings[0].scalabilityMode = scalabilityMode;\n    log.debug('encodings', encodings);\n    return encodings;\n  }\n\n  if (!useSimulcast) {\n    return [videoEncoding];\n  }\n\n  let presets: Array<VideoPreset> = [];\n  if (isScreenShare) {\n    presets =\n      sortPresets(options?.screenShareSimulcastLayers) ??\n      defaultSimulcastLayers(isScreenShare, original);\n  } else {\n    presets =\n      sortPresets(options?.videoSimulcastLayers) ?? defaultSimulcastLayers(isScreenShare, original);\n  }\n  let midPreset: VideoPreset | undefined;\n  if (presets.length > 0) {\n    const lowPreset = presets[0];\n    if (presets.length > 1) {\n      [, midPreset] = presets;\n    }\n\n    // NOTE:\n    //   1. Ordering of these encodings is important. Chrome seems\n    //      to use the index into encodings to decide which layer\n    //      to disable when CPU constrained.\n    //      So encodings should be ordered in increasing spatial\n    //      resolution order.\n    //   2. ion-sfu translates rids into layers. So, all encodings\n    //      should have the base layer `q` and then more added\n    //      based on other conditions.\n    const size = Math.max(width, height);\n    if (size >= 960 && midPreset) {\n      return encodingsFromPresets(width, height, [lowPreset, midPreset, original]);\n    }\n    if (size >= 480) {\n      return encodingsFromPresets(width, height, [lowPreset, original]);\n    }\n  }\n  return encodingsFromPresets(width, height, [original]);\n}\n\nexport function computeTrackBackupEncodings(\n  track: LocalVideoTrack,\n  videoCodec: BackupVideoCodec,\n  opts: TrackPublishOptions,\n) {\n  // backupCodec should not be true anymore, default codec is set in LocalParticipant.publish\n  if (\n    !opts.backupCodec ||\n    opts.backupCodec === true ||\n    opts.backupCodec.codec === opts.videoCodec\n  ) {\n    // backup codec publishing is disabled\n    return;\n  }\n  if (videoCodec !== opts.backupCodec.codec) {\n    log.warn('requested a different codec than specified as backup', {\n      serverRequested: videoCodec,\n      backup: opts.backupCodec.codec,\n    });\n  }\n\n  opts.videoCodec = videoCodec;\n  // use backup encoding setting as videoEncoding for backup codec publishing\n  opts.videoEncoding = opts.backupCodec.encoding;\n\n  const settings = track.mediaStreamTrack.getSettings();\n  const width = settings.width ?? track.dimensions?.width;\n  const height = settings.height ?? track.dimensions?.height;\n\n  const encodings = computeVideoEncodings(\n    track.source === Track.Source.ScreenShare,\n    width,\n    height,\n    opts,\n  );\n  return encodings;\n}\n\n/* @internal */\nexport function determineAppropriateEncoding(\n  isScreenShare: boolean,\n  width: number,\n  height: number,\n  codec?: VideoCodec,\n): VideoEncoding {\n  const presets = presetsForResolution(isScreenShare, width, height);\n  let { encoding } = presets[0];\n\n  // handle portrait by swapping dimensions\n  const size = Math.max(width, height);\n\n  for (let i = 0; i < presets.length; i += 1) {\n    const preset = presets[i];\n    encoding = preset.encoding;\n    if (preset.width >= size) {\n      break;\n    }\n  }\n  // presets are based on the assumption of vp8 as a codec\n  // for other codecs we adjust the maxBitrate if no specific videoEncoding has been provided\n  // users should override these with ones that are optimized for their use case\n  // NOTE: SVC codec bitrates are inclusive of all scalability layers. while\n  // bitrate for non-SVC codecs does not include other simulcast layers.\n  if (codec) {\n    switch (codec) {\n      case 'av1':\n        encoding = { ...encoding };\n        encoding.maxBitrate = encoding.maxBitrate * 0.7;\n        break;\n      case 'vp9':\n        encoding = { ...encoding };\n        encoding.maxBitrate = encoding.maxBitrate * 0.85;\n        break;\n      default:\n        break;\n    }\n  }\n\n  return encoding;\n}\n\n/* @internal */\nexport function presetsForResolution(\n  isScreenShare: boolean,\n  width: number,\n  height: number,\n): VideoPreset[] {\n  if (isScreenShare) {\n    return presetsScreenShare;\n  }\n  const aspect = width > height ? width / height : height / width;\n  if (Math.abs(aspect - 16.0 / 9) < Math.abs(aspect - 4.0 / 3)) {\n    return presets169;\n  }\n  return presets43;\n}\n\n/* @internal */\nexport function defaultSimulcastLayers(\n  isScreenShare: boolean,\n  original: VideoPreset,\n): VideoPreset[] {\n  if (isScreenShare) {\n    return computeDefaultScreenShareSimulcastPresets(original);\n  }\n  const { width, height } = original;\n  const aspect = width > height ? width / height : height / width;\n  if (Math.abs(aspect - 16.0 / 9) < Math.abs(aspect - 4.0 / 3)) {\n    return defaultSimulcastPresets169;\n  }\n  return defaultSimulcastPresets43;\n}\n\n// presets should be ordered by low, medium, high\nfunction encodingsFromPresets(\n  width: number,\n  height: number,\n  presets: VideoPreset[],\n): RTCRtpEncodingParameters[] {\n  const encodings: RTCRtpEncodingParameters[] = [];\n  presets.forEach((preset, idx) => {\n    if (idx >= videoRids.length) {\n      return;\n    }\n    const size = Math.min(width, height);\n    const rid = videoRids[idx];\n    const encoding: RTCRtpEncodingParameters = {\n      rid,\n      scaleResolutionDownBy: Math.max(1, size / Math.min(preset.width, preset.height)),\n      maxBitrate: preset.encoding.maxBitrate,\n    };\n    if (preset.encoding.maxFramerate) {\n      encoding.maxFramerate = preset.encoding.maxFramerate;\n    }\n    const canSetPriority = isFireFox() || idx === 0;\n    if (preset.encoding.priority && canSetPriority) {\n      encoding.priority = preset.encoding.priority;\n      encoding.networkPriority = preset.encoding.priority;\n    }\n    encodings.push(encoding);\n  });\n\n  // RN ios simulcast requires all same framerates.\n  if (isReactNative() && getReactNativeOs() === 'ios') {\n    let topFramerate: number | undefined = undefined;\n    encodings.forEach((encoding) => {\n      if (!topFramerate) {\n        topFramerate = encoding.maxFramerate;\n      } else if (encoding.maxFramerate && encoding.maxFramerate > topFramerate) {\n        topFramerate = encoding.maxFramerate;\n      }\n    });\n\n    let notifyOnce = true;\n    encodings.forEach((encoding) => {\n      if (encoding.maxFramerate != topFramerate) {\n        if (notifyOnce) {\n          notifyOnce = false;\n          log.info(\n            `Simulcast on iOS React-Native requires all encodings to share the same framerate.`,\n          );\n        }\n        log.info(`Setting framerate of encoding \\\"${encoding.rid ?? ''}\\\" to ${topFramerate}`);\n        encoding.maxFramerate = topFramerate;\n      }\n    });\n  }\n\n  return encodings;\n}\n\n/** @internal */\nexport function sortPresets(presets: Array<VideoPreset> | undefined) {\n  if (!presets) return;\n  return presets.sort((a, b) => {\n    const { encoding: aEnc } = a;\n    const { encoding: bEnc } = b;\n\n    if (aEnc.maxBitrate > bEnc.maxBitrate) {\n      return 1;\n    }\n    if (aEnc.maxBitrate < bEnc.maxBitrate) return -1;\n    if (aEnc.maxBitrate === bEnc.maxBitrate && aEnc.maxFramerate && bEnc.maxFramerate) {\n      return aEnc.maxFramerate > bEnc.maxFramerate ? 1 : -1;\n    }\n    return 0;\n  });\n}\n\n/** @internal */\nexport class ScalabilityMode {\n  spatial: number;\n\n  temporal: number;\n\n  suffix: undefined | 'h' | '_KEY' | '_KEY_SHIFT';\n\n  constructor(scalabilityMode: string) {\n    const results = scalabilityMode.match(/^L(\\d)T(\\d)(h|_KEY|_KEY_SHIFT){0,1}$/);\n    if (!results) {\n      throw new Error('invalid scalability mode');\n    }\n\n    this.spatial = parseInt(results[1]);\n    this.temporal = parseInt(results[2]);\n    if (results.length > 3) {\n      switch (results[3]) {\n        case 'h':\n        case '_KEY':\n        case '_KEY_SHIFT':\n          this.suffix = results[3];\n      }\n    }\n  }\n\n  toString(): string {\n    return `L${this.spatial}T${this.temporal}${this.suffix ?? ''}`;\n  }\n}\n", "import type { SignalClient } from '../../api/SignalClient';\nimport type { StructuredLogger } from '../../logger';\nimport { VideoLayer, VideoQuality } from '../../proto/livekit_models_pb';\nimport { SubscribedCodec, SubscribedQuality } from '../../proto/livekit_rtc_pb';\nimport { ScalabilityMode } from '../participant/publishUtils';\nimport type { VideoSenderStats } from '../stats';\nimport { computeBitrate, monitorFrequency } from '../stats';\nimport type { LoggerOptions } from '../types';\nimport { Mutex, isFireFox, isMobile, isWeb, unwrapConstraint } from '../utils';\nimport LocalTrack from './LocalTrack';\nimport { Track } from './Track';\nimport type { VideoCaptureOptions, VideoCodec } from './options';\nimport type { TrackProcessor } from './processor/types';\nimport { constraintsForOptions } from './utils';\n\nexport class SimulcastTrackInfo {\n  codec: VideoCodec;\n\n  mediaStreamTrack: MediaStreamTrack;\n\n  sender?: RTCRtpSender;\n\n  encodings?: RTCRtpEncodingParameters[];\n\n  constructor(codec: VideoCodec, mediaStreamTrack: MediaStreamTrack) {\n    this.codec = codec;\n    this.mediaStreamTrack = mediaStreamTrack;\n  }\n}\n\nconst refreshSubscribedCodecAfterNewCodec = 5000;\n\nexport default class LocalVideoTrack extends LocalTrack {\n  /* @internal */\n  signalClient?: SignalClient;\n\n  private prevStats?: Map<string, VideoSenderStats>;\n\n  private encodings?: RTCRtpEncodingParameters[];\n\n  /* @internal */\n  simulcastCodecs: Map<VideoCodec, SimulcastTrackInfo> = new Map<VideoCodec, SimulcastTrackInfo>();\n\n  private subscribedCodecs?: SubscribedCodec[];\n\n  // prevents concurrent manipulations to track sender\n  // if multiple get/setParameter are called concurrently, certain timing of events\n  // could lead to the browser throwing an exception in `setParameter`, due to\n  // a missing `getParameter` call.\n  private senderLock: Mutex;\n\n  /**\n   *\n   * @param mediaTrack\n   * @param constraints MediaTrackConstraints that are being used when restarting or reacquiring tracks\n   * @param userProvidedTrack Signals to the SDK whether or not the mediaTrack should be managed (i.e. released and reacquired) internally by the SDK\n   */\n  constructor(\n    mediaTrack: MediaStreamTrack,\n    constraints?: MediaTrackConstraints,\n    userProvidedTrack = true,\n    loggerOptions?: LoggerOptions,\n  ) {\n    super(mediaTrack, Track.Kind.Video, constraints, userProvidedTrack, loggerOptions);\n    this.senderLock = new Mutex();\n  }\n\n  get isSimulcast(): boolean {\n    if (this.sender && this.sender.getParameters().encodings.length > 1) {\n      return true;\n    }\n    return false;\n  }\n\n  /* @internal */\n  startMonitor(signalClient: SignalClient) {\n    this.signalClient = signalClient;\n    if (!isWeb()) {\n      return;\n    }\n    // save original encodings\n    // TODO : merge simulcast tracks stats\n    const params = this.sender?.getParameters();\n    if (params) {\n      this.encodings = params.encodings;\n    }\n\n    if (this.monitorInterval) {\n      return;\n    }\n    this.monitorInterval = setInterval(() => {\n      this.monitorSender();\n    }, monitorFrequency);\n  }\n\n  stop() {\n    this._mediaStreamTrack.getConstraints();\n    this.simulcastCodecs.forEach((trackInfo) => {\n      trackInfo.mediaStreamTrack.stop();\n    });\n    super.stop();\n  }\n\n  async pauseUpstream() {\n    await super.pauseUpstream();\n    for await (const sc of this.simulcastCodecs.values()) {\n      await sc.sender?.replaceTrack(null);\n    }\n  }\n\n  async resumeUpstream() {\n    await super.resumeUpstream();\n    for await (const sc of this.simulcastCodecs.values()) {\n      await sc.sender?.replaceTrack(sc.mediaStreamTrack);\n    }\n  }\n\n  async mute(): Promise<LocalVideoTrack> {\n    const unlock = await this.muteLock.lock();\n    try {\n      if (this.source === Track.Source.Camera && !this.isUserProvided) {\n        this.log.debug('stopping camera track', this.logContext);\n        // also stop the track, so that camera indicator is turned off\n        this._mediaStreamTrack.stop();\n      }\n      await super.mute();\n      return this;\n    } finally {\n      unlock();\n    }\n  }\n\n  async unmute(): Promise<LocalVideoTrack> {\n    const unlock = await this.muteLock.lock();\n    try {\n      if (this.source === Track.Source.Camera && !this.isUserProvided) {\n        this.log.debug('reacquiring camera track', this.logContext);\n        await this.restartTrack();\n      }\n      await super.unmute();\n      return this;\n    } finally {\n      unlock();\n    }\n  }\n\n  protected setTrackMuted(muted: boolean) {\n    super.setTrackMuted(muted);\n    for (const sc of this.simulcastCodecs.values()) {\n      sc.mediaStreamTrack.enabled = !muted;\n    }\n  }\n\n  async getSenderStats(): Promise<VideoSenderStats[]> {\n    if (!this.sender?.getStats) {\n      return [];\n    }\n\n    const items: VideoSenderStats[] = [];\n\n    const stats = await this.sender.getStats();\n    stats.forEach((v) => {\n      if (v.type === 'outbound-rtp') {\n        const vs: VideoSenderStats = {\n          type: 'video',\n          streamId: v.id,\n          frameHeight: v.frameHeight,\n          frameWidth: v.frameWidth,\n          firCount: v.firCount,\n          pliCount: v.pliCount,\n          nackCount: v.nackCount,\n          packetsSent: v.packetsSent,\n          bytesSent: v.bytesSent,\n          framesSent: v.framesSent,\n          timestamp: v.timestamp,\n          rid: v.rid ?? v.id,\n          retransmittedPacketsSent: v.retransmittedPacketsSent,\n          qualityLimitationReason: v.qualityLimitationReason,\n          qualityLimitationResolutionChanges: v.qualityLimitationResolutionChanges,\n        };\n\n        // locate the appropriate remote-inbound-rtp item\n        const r = stats.get(v.remoteId);\n        if (r) {\n          vs.jitter = r.jitter;\n          vs.packetsLost = r.packetsLost;\n          vs.roundTripTime = r.roundTripTime;\n        }\n\n        items.push(vs);\n      }\n    });\n\n    return items;\n  }\n\n  setPublishingQuality(maxQuality: VideoQuality) {\n    const qualities: SubscribedQuality[] = [];\n    for (let q = VideoQuality.LOW; q <= VideoQuality.HIGH; q += 1) {\n      qualities.push(\n        new SubscribedQuality({\n          quality: q,\n          enabled: q <= maxQuality,\n        }),\n      );\n    }\n    this.log.debug(`setting publishing quality. max quality ${maxQuality}`, this.logContext);\n    this.setPublishingLayers(qualities);\n  }\n\n  async setDeviceId(deviceId: ConstrainDOMString): Promise<boolean> {\n    if (\n      this._constraints.deviceId === deviceId &&\n      this._mediaStreamTrack.getSettings().deviceId === unwrapConstraint(deviceId)\n    ) {\n      return true;\n    }\n    this._constraints.deviceId = deviceId;\n    // when video is muted, underlying media stream track is stopped and\n    // will be restarted later\n    if (!this.isMuted) {\n      await this.restartTrack();\n    }\n    return (\n      this.isMuted || unwrapConstraint(deviceId) === this._mediaStreamTrack.getSettings().deviceId\n    );\n  }\n\n  async restartTrack(options?: VideoCaptureOptions) {\n    let constraints: MediaTrackConstraints | undefined;\n    if (options) {\n      const streamConstraints = constraintsForOptions({ video: options });\n      if (typeof streamConstraints.video !== 'boolean') {\n        constraints = streamConstraints.video;\n      }\n    }\n    await this.restart(constraints);\n\n    for await (const sc of this.simulcastCodecs.values()) {\n      if (sc.sender) {\n        sc.mediaStreamTrack = this.mediaStreamTrack.clone();\n        await sc.sender.replaceTrack(sc.mediaStreamTrack);\n      }\n    }\n  }\n\n  async setProcessor(processor: TrackProcessor<Track.Kind>, showProcessedStreamLocally = true) {\n    await super.setProcessor(processor, showProcessedStreamLocally);\n\n    if (this.processor?.processedTrack) {\n      for await (const sc of this.simulcastCodecs.values()) {\n        await sc.sender?.replaceTrack(this.processor.processedTrack);\n      }\n    }\n  }\n\n  addSimulcastTrack(codec: VideoCodec, encodings?: RTCRtpEncodingParameters[]): SimulcastTrackInfo {\n    if (this.simulcastCodecs.has(codec)) {\n      throw new Error(`${codec} already added`);\n    }\n    const simulcastCodecInfo: SimulcastTrackInfo = {\n      codec,\n      mediaStreamTrack: this.mediaStreamTrack.clone(),\n      sender: undefined,\n      encodings,\n    };\n    this.simulcastCodecs.set(codec, simulcastCodecInfo);\n    return simulcastCodecInfo;\n  }\n\n  setSimulcastTrackSender(codec: VideoCodec, sender: RTCRtpSender) {\n    const simulcastCodecInfo = this.simulcastCodecs.get(codec);\n    if (!simulcastCodecInfo) {\n      return;\n    }\n    simulcastCodecInfo.sender = sender;\n\n    // browser will reenable disabled codec/layers after new codec has been published,\n    // so refresh subscribedCodecs after publish a new codec\n    setTimeout(() => {\n      if (this.subscribedCodecs) {\n        this.setPublishingCodecs(this.subscribedCodecs);\n      }\n    }, refreshSubscribedCodecAfterNewCodec);\n  }\n\n  /**\n   * @internal\n   * Sets codecs that should be publishing, returns new codecs that have not yet\n   * been published\n   */\n  async setPublishingCodecs(codecs: SubscribedCodec[]): Promise<VideoCodec[]> {\n    this.log.debug('setting publishing codecs', {\n      ...this.logContext,\n      codecs,\n      currentCodec: this.codec,\n    });\n    // only enable simulcast codec for preference codec setted\n    if (!this.codec && codecs.length > 0) {\n      await this.setPublishingLayers(codecs[0].qualities);\n      return [];\n    }\n\n    this.subscribedCodecs = codecs;\n\n    const newCodecs: VideoCodec[] = [];\n    for await (const codec of codecs) {\n      if (!this.codec || this.codec === codec.codec) {\n        await this.setPublishingLayers(codec.qualities);\n      } else {\n        const simulcastCodecInfo = this.simulcastCodecs.get(codec.codec as VideoCodec);\n        this.log.debug(`try setPublishingCodec for ${codec.codec}`, {\n          ...this.logContext,\n          simulcastCodecInfo,\n        });\n        if (!simulcastCodecInfo || !simulcastCodecInfo.sender) {\n          for (const q of codec.qualities) {\n            if (q.enabled) {\n              newCodecs.push(codec.codec as VideoCodec);\n              break;\n            }\n          }\n        } else if (simulcastCodecInfo.encodings) {\n          this.log.debug(`try setPublishingLayersForSender ${codec.codec}`, this.logContext);\n          await setPublishingLayersForSender(\n            simulcastCodecInfo.sender,\n            simulcastCodecInfo.encodings!,\n            codec.qualities,\n            this.senderLock,\n            this.log,\n            this.logContext,\n          );\n        }\n      }\n    }\n    return newCodecs;\n  }\n\n  /**\n   * @internal\n   * Sets layers that should be publishing\n   */\n  async setPublishingLayers(qualities: SubscribedQuality[]) {\n    this.log.debug('setting publishing layers', { ...this.logContext, qualities });\n    if (!this.sender || !this.encodings) {\n      return;\n    }\n\n    await setPublishingLayersForSender(\n      this.sender,\n      this.encodings,\n      qualities,\n      this.senderLock,\n      this.log,\n      this.logContext,\n    );\n  }\n\n  protected monitorSender = async () => {\n    if (!this.sender) {\n      this._currentBitrate = 0;\n      return;\n    }\n\n    let stats: VideoSenderStats[] | undefined;\n    try {\n      stats = await this.getSenderStats();\n    } catch (e) {\n      this.log.error('could not get audio sender stats', { ...this.logContext, error: e });\n      return;\n    }\n    const statsMap = new Map<string, VideoSenderStats>(stats.map((s) => [s.rid, s]));\n\n    if (this.prevStats) {\n      let totalBitrate = 0;\n      statsMap.forEach((s, key) => {\n        const prev = this.prevStats?.get(key);\n        totalBitrate += computeBitrate(s, prev);\n      });\n      this._currentBitrate = totalBitrate;\n    }\n\n    this.prevStats = statsMap;\n  };\n\n  protected async handleAppVisibilityChanged() {\n    await super.handleAppVisibilityChanged();\n    if (!isMobile()) return;\n    if (this.isInBackground && this.source === Track.Source.Camera) {\n      this._mediaStreamTrack.enabled = false;\n    }\n  }\n}\n\nasync function setPublishingLayersForSender(\n  sender: RTCRtpSender,\n  senderEncodings: RTCRtpEncodingParameters[],\n  qualities: SubscribedQuality[],\n  senderLock: Mutex,\n  log: StructuredLogger,\n  logContext: Record<string, unknown>,\n) {\n  const unlock = await senderLock.lock();\n  log.debug('setPublishingLayersForSender', { ...logContext, sender, qualities, senderEncodings });\n  try {\n    const params = sender.getParameters();\n    const { encodings } = params;\n    if (!encodings) {\n      return;\n    }\n\n    if (encodings.length !== senderEncodings.length) {\n      log.warn('cannot set publishing layers, encodings mismatch');\n      return;\n    }\n\n    let hasChanged = false;\n\n    /* disable closable spatial layer as it has video blur / frozen issue with current server / client\n    1. chrome 113: when switching to up layer with scalability Mode change, it will generate a\n          low resolution frame and recover very quickly, but noticable\n    2. livekit sfu: additional pli request cause video frozen for a few frames, also noticable */\n    const closableSpatial = false;\n    /* @ts-ignore */\n    if (closableSpatial && encodings[0].scalabilityMode) {\n      // svc dynacast encodings\n      const encoding = encodings[0];\n      /* @ts-ignore */\n      // const mode = new ScalabilityMode(encoding.scalabilityMode);\n      let maxQuality = VideoQuality.OFF;\n      qualities.forEach((q) => {\n        if (q.enabled && (maxQuality === VideoQuality.OFF || q.quality > maxQuality)) {\n          maxQuality = q.quality;\n        }\n      });\n\n      if (maxQuality === VideoQuality.OFF) {\n        if (encoding.active) {\n          encoding.active = false;\n          hasChanged = true;\n        }\n      } else if (!encoding.active /* || mode.spatial !== maxQuality + 1*/) {\n        hasChanged = true;\n        encoding.active = true;\n        /*\n        @ts-ignore\n        const originalMode = new ScalabilityMode(senderEncodings[0].scalabilityMode)\n        mode.spatial = maxQuality + 1;\n        mode.suffix = originalMode.suffix;\n        if (mode.spatial === 1) {\n          // no suffix for L1Tx\n          mode.suffix = undefined;\n        }\n        @ts-ignore\n        encoding.scalabilityMode = mode.toString();\n        encoding.scaleResolutionDownBy = 2 ** (2 - maxQuality);\n      */\n      }\n    } else {\n      // simulcast dynacast encodings\n      encodings.forEach((encoding, idx) => {\n        let rid = encoding.rid ?? '';\n        if (rid === '') {\n          rid = 'q';\n        }\n        const quality = videoQualityForRid(rid);\n        const subscribedQuality = qualities.find((q) => q.quality === quality);\n        if (!subscribedQuality) {\n          return;\n        }\n        if (encoding.active !== subscribedQuality.enabled) {\n          hasChanged = true;\n          encoding.active = subscribedQuality.enabled;\n          log.debug(\n            `setting layer ${subscribedQuality.quality} to ${\n              encoding.active ? 'enabled' : 'disabled'\n            }`,\n            logContext,\n          );\n\n          // FireFox does not support setting encoding.active to false, so we\n          // have a workaround of lowering its bitrate and resolution to the min.\n          if (isFireFox()) {\n            if (subscribedQuality.enabled) {\n              encoding.scaleResolutionDownBy = senderEncodings[idx].scaleResolutionDownBy;\n              encoding.maxBitrate = senderEncodings[idx].maxBitrate;\n              /* @ts-ignore */\n              encoding.maxFrameRate = senderEncodings[idx].maxFrameRate;\n            } else {\n              encoding.scaleResolutionDownBy = 4;\n              encoding.maxBitrate = 10;\n              /* @ts-ignore */\n              encoding.maxFrameRate = 2;\n            }\n          }\n        }\n      });\n    }\n\n    if (hasChanged) {\n      params.encodings = encodings;\n      log.debug(`setting encodings`, { ...logContext, encodings: params.encodings });\n      await sender.setParameters(params);\n    }\n  } finally {\n    unlock();\n  }\n}\n\nexport function videoQualityForRid(rid: string): VideoQuality {\n  switch (rid) {\n    case 'f':\n      return VideoQuality.HIGH;\n    case 'h':\n      return VideoQuality.MEDIUM;\n    case 'q':\n      return VideoQuality.LOW;\n    default:\n      return VideoQuality.HIGH;\n  }\n}\n\nexport function videoLayersFromEncodings(\n  width: number,\n  height: number,\n  encodings?: RTCRtpEncodingParameters[],\n  svc?: boolean,\n): VideoLayer[] {\n  // default to a single layer, HQ\n  if (!encodings) {\n    return [\n      new VideoLayer({\n        quality: VideoQuality.HIGH,\n        width,\n        height,\n        bitrate: 0,\n        ssrc: 0,\n      }),\n    ];\n  }\n\n  if (svc) {\n    // svc layers\n    /* @ts-ignore */\n    const encodingSM = encodings[0].scalabilityMode as string;\n    const sm = new ScalabilityMode(encodingSM);\n    const layers = [];\n    for (let i = 0; i < sm.spatial; i += 1) {\n      layers.push(\n        new VideoLayer({\n          quality: VideoQuality.HIGH - i,\n          width: Math.ceil(width / 2 ** i),\n          height: Math.ceil(height / 2 ** i),\n          bitrate: encodings[0].maxBitrate ? Math.ceil(encodings[0].maxBitrate / 3 ** i) : 0,\n          ssrc: 0,\n        }),\n      );\n    }\n    return layers;\n  }\n\n  return encodings.map((encoding) => {\n    const scale = encoding.scaleResolutionDownBy ?? 1;\n    let quality = videoQualityForRid(encoding.rid ?? '');\n    return new VideoLayer({\n      quality,\n      width: Math.ceil(width / scale),\n      height: Math.ceil(height / scale),\n      bitrate: encoding.maxBitrate ?? 0,\n      ssrc: 0,\n    });\n  });\n}\n", "import { TrackEvent } from '../events';\nimport { monitorFrequency } from '../stats';\nimport type { LoggerOptions } from '../types';\nimport { Track } from './Track';\n\nexport default abstract class RemoteTrack extends Track {\n  /** @internal */\n  receiver?: RTCRtpReceiver;\n\n  constructor(\n    mediaTrack: MediaStreamTrack,\n    sid: string,\n    kind: Track.Kind,\n    receiver?: RTCRtpReceiver,\n    loggerOptions?: LoggerOptions,\n  ) {\n    super(mediaTrack, kind, loggerOptions);\n\n    this.sid = sid;\n    this.receiver = receiver;\n  }\n\n  /** @internal */\n  setMuted(muted: boolean) {\n    if (this.isMuted !== muted) {\n      this.isMuted = muted;\n      this._mediaStreamTrack.enabled = !muted;\n      this.emit(muted ? TrackEvent.Muted : TrackEvent.Unmuted, this);\n    }\n  }\n\n  /** @internal */\n  setMediaStream(stream: MediaStream) {\n    // this is needed to determine when the track is finished\n    this.mediaStream = stream;\n    const onRemoveTrack = (event: MediaStreamTrackEvent) => {\n      if (event.track === this._mediaStreamTrack) {\n        stream.removeEventListener('removetrack', onRemoveTrack);\n        this.receiver = undefined;\n        this._currentBitrate = 0;\n        this.emit(TrackEvent.Ended, this);\n      }\n    };\n    stream.addEventListener('removetrack', onRemoveTrack);\n  }\n\n  start() {\n    this.startMonitor();\n    // use `enabled` of track to enable re-use of transceiver\n    super.enable();\n  }\n\n  stop() {\n    this.stopMonitor();\n    // use `enabled` of track to enable re-use of transceiver\n    super.disable();\n  }\n\n  /**\n   * Gets the RTCStatsReport for the RemoteTrack's underlying RTCRtpReceiver\n   * See https://developer.mozilla.org/en-US/docs/Web/API/RTCStatsReport\n   *\n   * @returns Promise<RTCStatsReport> | undefined\n   */\n  async getRTCStatsReport(): Promise<RTCStatsReport | undefined> {\n    if (!this.receiver?.getStats) {\n      return;\n    }\n    const statsReport = await this.receiver.getStats();\n    return statsReport;\n  }\n\n  /* @internal */\n  startMonitor() {\n    if (!this.monitorInterval) {\n      this.monitorInterval = setInterval(() => this.monitorReceiver(), monitorFrequency);\n    }\n  }\n\n  protected abstract monitorReceiver(): void;\n}\n", "import { TrackEvent } from '../events';\nimport { computeBitrate } from '../stats';\nimport type { AudioReceiverStats } from '../stats';\nimport type { LoggerOptions } from '../types';\nimport { isReactNative, supportsSetSinkId } from '../utils';\nimport RemoteTrack from './RemoteTrack';\nimport { Track } from './Track';\nimport type { AudioOutputOptions } from './options';\n\nexport default class RemoteAudioTrack extends RemoteTrack {\n  private prevStats?: AudioReceiverStats;\n\n  private elementVolume: number | undefined;\n\n  private audioContext?: AudioContext;\n\n  private gainNode?: GainNode;\n\n  private sourceNode?: MediaStreamAudioSourceNode;\n\n  private webAudioPluginNodes: AudioNode[];\n\n  private sinkId?: string;\n\n  constructor(\n    mediaTrack: MediaStreamTrack,\n    sid: string,\n    receiver?: RTCRtpReceiver,\n    audioContext?: AudioContext,\n    audioOutput?: AudioOutputOptions,\n    loggerOptions?: LoggerOptions,\n  ) {\n    super(mediaTrack, sid, Track.Kind.Audio, receiver, loggerOptions);\n    this.audioContext = audioContext;\n    this.webAudioPluginNodes = [];\n    if (audioOutput) {\n      this.sinkId = audioOutput.deviceId;\n    }\n  }\n\n  /**\n   * sets the volume for all attached audio elements\n   */\n  setVolume(volume: number) {\n    for (const el of this.attachedElements) {\n      if (this.audioContext) {\n        this.gainNode?.gain.setTargetAtTime(volume, 0, 0.1);\n      } else {\n        el.volume = volume;\n      }\n    }\n    if (isReactNative()) {\n      // @ts-ignore\n      this._mediaStreamTrack._setVolume(volume);\n    }\n    this.elementVolume = volume;\n  }\n\n  /**\n   * gets the volume of attached audio elements (loudest)\n   */\n  getVolume(): number {\n    if (this.elementVolume) {\n      return this.elementVolume;\n    }\n    if (isReactNative()) {\n      // RN volume value defaults to 1.0 if hasn't been changed.\n      return 1.0;\n    }\n    let highestVolume = 0;\n    this.attachedElements.forEach((element) => {\n      if (element.volume > highestVolume) {\n        highestVolume = element.volume;\n      }\n    });\n    return highestVolume;\n  }\n\n  /**\n   * calls setSinkId on all attached elements, if supported\n   * @param deviceId audio output device\n   */\n  async setSinkId(deviceId: string) {\n    this.sinkId = deviceId;\n    await Promise.all(\n      this.attachedElements.map((elm) => {\n        if (!supportsSetSinkId(elm)) {\n          return;\n        }\n        /* @ts-ignore */\n        return elm.setSinkId(deviceId) as Promise<void>;\n      }),\n    );\n  }\n\n  attach(): HTMLMediaElement;\n  attach(element: HTMLMediaElement): HTMLMediaElement;\n  attach(element?: HTMLMediaElement): HTMLMediaElement {\n    const needsNewWebAudioConnection = this.attachedElements.length === 0;\n    if (!element) {\n      element = super.attach();\n    } else {\n      super.attach(element);\n    }\n\n    if (this.sinkId && supportsSetSinkId(element)) {\n      /* @ts-ignore */\n      element.setSinkId(this.sinkId);\n    }\n    if (this.audioContext && needsNewWebAudioConnection) {\n      this.log.debug('using audio context mapping', this.logContext);\n      this.connectWebAudio(this.audioContext, element);\n      element.volume = 0;\n      element.muted = true;\n    }\n\n    if (this.elementVolume) {\n      // make sure volume setting is being applied to the newly attached element\n      this.setVolume(this.elementVolume);\n    }\n\n    return element;\n  }\n\n  /**\n   * Detaches from all attached elements\n   */\n  detach(): HTMLMediaElement[];\n\n  /**\n   * Detach from a single element\n   * @param element\n   */\n  detach(element: HTMLMediaElement): HTMLMediaElement;\n  detach(element?: HTMLMediaElement): HTMLMediaElement | HTMLMediaElement[] {\n    let detached: HTMLMediaElement | HTMLMediaElement[];\n    if (!element) {\n      detached = super.detach();\n      this.disconnectWebAudio();\n    } else {\n      detached = super.detach(element);\n      // if there are still any attached elements after detaching, connect webaudio to the first element that's left\n      // disconnect webaudio otherwise\n      if (this.audioContext) {\n        if (this.attachedElements.length > 0) {\n          this.connectWebAudio(this.audioContext, this.attachedElements[0]);\n        } else {\n          this.disconnectWebAudio();\n        }\n      }\n    }\n    return detached;\n  }\n\n  /**\n   * @internal\n   * @experimental\n   */\n  setAudioContext(audioContext: AudioContext | undefined) {\n    this.audioContext = audioContext;\n    if (audioContext && this.attachedElements.length > 0) {\n      this.connectWebAudio(audioContext, this.attachedElements[0]);\n    } else if (!audioContext) {\n      this.disconnectWebAudio();\n    }\n  }\n\n  /**\n   * @internal\n   * @experimental\n   * @param {AudioNode[]} nodes - An array of WebAudio nodes. These nodes should not be connected to each other when passed, as the sdk will take care of connecting them in the order of the array.\n   */\n  setWebAudioPlugins(nodes: AudioNode[]) {\n    this.webAudioPluginNodes = nodes;\n    if (this.attachedElements.length > 0 && this.audioContext) {\n      this.connectWebAudio(this.audioContext, this.attachedElements[0]);\n    }\n  }\n\n  private connectWebAudio(context: AudioContext, element: HTMLMediaElement) {\n    this.disconnectWebAudio();\n    // @ts-ignore attached elements always have a srcObject set\n    this.sourceNode = context.createMediaStreamSource(element.srcObject);\n    let lastNode: AudioNode = this.sourceNode;\n    this.webAudioPluginNodes.forEach((node) => {\n      lastNode.connect(node);\n      lastNode = node;\n    });\n    this.gainNode = context.createGain();\n    lastNode.connect(this.gainNode);\n    this.gainNode.connect(context.destination);\n\n    if (this.elementVolume) {\n      this.gainNode.gain.setTargetAtTime(this.elementVolume, 0, 0.1);\n    }\n\n    // try to resume the context if it isn't running already\n    if (context.state !== 'running') {\n      context\n        .resume()\n        .then(() => {\n          if (context.state !== 'running') {\n            this.emit(\n              TrackEvent.AudioPlaybackFailed,\n              new Error(\"Audio Context couldn't be started automatically\"),\n            );\n          }\n        })\n        .catch((e) => {\n          this.emit(TrackEvent.AudioPlaybackFailed, e);\n        });\n    }\n  }\n\n  private disconnectWebAudio() {\n    this.gainNode?.disconnect();\n    this.sourceNode?.disconnect();\n    this.gainNode = undefined;\n    this.sourceNode = undefined;\n  }\n\n  protected monitorReceiver = async () => {\n    if (!this.receiver) {\n      this._currentBitrate = 0;\n      return;\n    }\n    const stats = await this.getReceiverStats();\n\n    if (stats && this.prevStats && this.receiver) {\n      this._currentBitrate = computeBitrate(stats, this.prevStats);\n    }\n\n    this.prevStats = stats;\n  };\n\n  protected async getReceiverStats(): Promise<AudioReceiverStats | undefined> {\n    if (!this.receiver || !this.receiver.getStats) {\n      return;\n    }\n\n    const stats = await this.receiver.getStats();\n    let receiverStats: AudioReceiverStats | undefined;\n    stats.forEach((v) => {\n      if (v.type === 'inbound-rtp') {\n        receiverStats = {\n          type: 'audio',\n          timestamp: v.timestamp,\n          jitter: v.jitter,\n          bytesReceived: v.bytesReceived,\n          concealedSamples: v.concealedSamples,\n          concealmentEvents: v.concealmentEvents,\n          silentConcealedSamples: v.silentConcealedSamples,\n          silentConcealmentEvents: v.silentConcealmentEvents,\n          totalAudioEnergy: v.totalAudioEnergy,\n          totalSamplesDuration: v.totalSamplesDuration,\n        };\n      }\n    });\n    return receiverStats;\n  }\n}\n", "import { debounce } from 'ts-debounce';\nimport { TrackEvent } from '../events';\nimport type { VideoReceiverStats } from '../stats';\nimport { computeBitrate } from '../stats';\nimport CriticalTimers from '../timers';\nimport type { LoggerOptions } from '../types';\nimport type { ObservableMediaElement } from '../utils';\nimport { getDevicePixelRatio, getIntersectionObserver, getResizeObserver, isWeb } from '../utils';\nimport RemoteTrack from './RemoteTrack';\nimport { Track, attachToElement, detachTrack } from './Track';\nimport type { AdaptiveStreamSettings } from './types';\n\nconst REACTION_DELAY = 100;\n\nexport default class RemoteVideoTrack extends RemoteTrack {\n  private prevStats?: VideoReceiverStats;\n\n  private elementInfos: ElementInfo[] = [];\n\n  private adaptiveStreamSettings?: AdaptiveStreamSettings;\n\n  private lastVisible?: boolean;\n\n  private lastDimensions?: Track.Dimensions;\n\n  constructor(\n    mediaTrack: MediaStreamTrack,\n    sid: string,\n    receiver?: RTCRtpReceiver,\n    adaptiveStreamSettings?: AdaptiveStreamSettings,\n    loggerOptions?: LoggerOptions,\n  ) {\n    super(mediaTrack, sid, Track.Kind.Video, receiver, loggerOptions);\n    this.adaptiveStreamSettings = adaptiveStreamSettings;\n  }\n\n  get isAdaptiveStream(): boolean {\n    return this.adaptiveStreamSettings !== undefined;\n  }\n\n  /**\n   * Note: When using adaptiveStream, you need to use remoteVideoTrack.attach() to add the track to a HTMLVideoElement, otherwise your video tracks might never start\n   */\n  get mediaStreamTrack() {\n    return this._mediaStreamTrack;\n  }\n\n  /** @internal */\n  setMuted(muted: boolean) {\n    super.setMuted(muted);\n\n    this.attachedElements.forEach((element) => {\n      // detach or attach\n      if (muted) {\n        detachTrack(this._mediaStreamTrack, element);\n      } else {\n        attachToElement(this._mediaStreamTrack, element);\n      }\n    });\n  }\n\n  attach(): HTMLMediaElement;\n  attach(element: HTMLMediaElement): HTMLMediaElement;\n  attach(element?: HTMLMediaElement): HTMLMediaElement {\n    if (!element) {\n      element = super.attach();\n    } else {\n      super.attach(element);\n    }\n\n    // It's possible attach is called multiple times on an element. When that's\n    // the case, we'd want to avoid adding duplicate elementInfos\n    if (\n      this.adaptiveStreamSettings &&\n      this.elementInfos.find((info) => info.element === element) === undefined\n    ) {\n      const elementInfo = new HTMLElementInfo(element);\n      this.observeElementInfo(elementInfo);\n    }\n    return element;\n  }\n\n  /**\n   * Observe an ElementInfo for changes when adaptive streaming.\n   * @param elementInfo\n   * @internal\n   */\n  observeElementInfo(elementInfo: ElementInfo) {\n    if (\n      this.adaptiveStreamSettings &&\n      this.elementInfos.find((info) => info === elementInfo) === undefined\n    ) {\n      elementInfo.handleResize = () => {\n        this.debouncedHandleResize();\n      };\n      elementInfo.handleVisibilityChanged = () => {\n        this.updateVisibility();\n      };\n      this.elementInfos.push(elementInfo);\n      elementInfo.observe();\n      // trigger the first resize update cycle\n      // if the tab is backgrounded, the initial resize event does not fire until\n      // the tab comes into focus for the first time.\n      this.debouncedHandleResize();\n      this.updateVisibility();\n    } else {\n      this.log.warn('visibility resize observer not triggered', this.logContext);\n    }\n  }\n\n  /**\n   * Stop observing an ElementInfo for changes.\n   * @param elementInfo\n   * @internal\n   */\n  stopObservingElementInfo(elementInfo: ElementInfo) {\n    if (!this.isAdaptiveStream) {\n      this.log.warn('stopObservingElementInfo ignored', this.logContext);\n      return;\n    }\n    const stopElementInfos = this.elementInfos.filter((info) => info === elementInfo);\n    for (const info of stopElementInfos) {\n      info.stopObserving();\n    }\n    this.elementInfos = this.elementInfos.filter((info) => info !== elementInfo);\n    this.updateVisibility();\n    this.debouncedHandleResize();\n  }\n\n  detach(): HTMLMediaElement[];\n  detach(element: HTMLMediaElement): HTMLMediaElement;\n  detach(element?: HTMLMediaElement): HTMLMediaElement | HTMLMediaElement[] {\n    let detachedElements: HTMLMediaElement[] = [];\n    if (element) {\n      this.stopObservingElement(element);\n      return super.detach(element);\n    }\n    detachedElements = super.detach();\n\n    for (const e of detachedElements) {\n      this.stopObservingElement(e);\n    }\n\n    return detachedElements;\n  }\n\n  /** @internal */\n  getDecoderImplementation(): string | undefined {\n    return this.prevStats?.decoderImplementation;\n  }\n\n  protected monitorReceiver = async () => {\n    if (!this.receiver) {\n      this._currentBitrate = 0;\n      return;\n    }\n    const stats = await this.getReceiverStats();\n\n    if (stats && this.prevStats && this.receiver) {\n      this._currentBitrate = computeBitrate(stats, this.prevStats);\n    }\n\n    this.prevStats = stats;\n  };\n\n  private async getReceiverStats(): Promise<VideoReceiverStats | undefined> {\n    if (!this.receiver || !this.receiver.getStats) {\n      return;\n    }\n\n    const stats = await this.receiver.getStats();\n    let receiverStats: VideoReceiverStats | undefined;\n    let codecID = '';\n    let codecs = new Map<string, any>();\n    stats.forEach((v) => {\n      if (v.type === 'inbound-rtp') {\n        codecID = v.codecId;\n        receiverStats = {\n          type: 'video',\n          framesDecoded: v.framesDecoded,\n          framesDropped: v.framesDropped,\n          framesReceived: v.framesReceived,\n          packetsReceived: v.packetsReceived,\n          packetsLost: v.packetsLost,\n          frameWidth: v.frameWidth,\n          frameHeight: v.frameHeight,\n          pliCount: v.pliCount,\n          firCount: v.firCount,\n          nackCount: v.nackCount,\n          jitter: v.jitter,\n          timestamp: v.timestamp,\n          bytesReceived: v.bytesReceived,\n          decoderImplementation: v.decoderImplementation,\n        };\n      } else if (v.type === 'codec') {\n        codecs.set(v.id, v);\n      }\n    });\n    if (receiverStats && codecID !== '' && codecs.get(codecID)) {\n      receiverStats.mimeType = codecs.get(codecID).mimeType;\n    }\n    return receiverStats;\n  }\n\n  private stopObservingElement(element: HTMLMediaElement) {\n    const stopElementInfos = this.elementInfos.filter((info) => info.element === element);\n    for (const info of stopElementInfos) {\n      this.stopObservingElementInfo(info);\n    }\n  }\n\n  protected async handleAppVisibilityChanged() {\n    await super.handleAppVisibilityChanged();\n    if (!this.isAdaptiveStream) return;\n    this.updateVisibility();\n  }\n\n  private readonly debouncedHandleResize = debounce(() => {\n    this.updateDimensions();\n  }, REACTION_DELAY);\n\n  private updateVisibility() {\n    const lastVisibilityChange = this.elementInfos.reduce(\n      (prev, info) => Math.max(prev, info.visibilityChangedAt || 0),\n      0,\n    );\n\n    const backgroundPause =\n      this.adaptiveStreamSettings?.pauseVideoInBackground ?? true // default to true\n        ? this.isInBackground\n        : false;\n    const isPiPMode = this.elementInfos.some((info) => info.pictureInPicture);\n    const isVisible =\n      (this.elementInfos.some((info) => info.visible) && !backgroundPause) || isPiPMode;\n\n    if (this.lastVisible === isVisible) {\n      return;\n    }\n\n    if (!isVisible && Date.now() - lastVisibilityChange < REACTION_DELAY) {\n      // delay hidden events\n      CriticalTimers.setTimeout(() => {\n        this.updateVisibility();\n      }, REACTION_DELAY);\n      return;\n    }\n\n    this.lastVisible = isVisible;\n    this.emit(TrackEvent.VisibilityChanged, isVisible, this);\n  }\n\n  private updateDimensions() {\n    let maxWidth = 0;\n    let maxHeight = 0;\n    const pixelDensity = this.getPixelDensity();\n    for (const info of this.elementInfos) {\n      const currentElementWidth = info.width() * pixelDensity;\n      const currentElementHeight = info.height() * pixelDensity;\n      if (currentElementWidth + currentElementHeight > maxWidth + maxHeight) {\n        maxWidth = currentElementWidth;\n        maxHeight = currentElementHeight;\n      }\n    }\n\n    if (this.lastDimensions?.width === maxWidth && this.lastDimensions?.height === maxHeight) {\n      return;\n    }\n\n    this.lastDimensions = {\n      width: maxWidth,\n      height: maxHeight,\n    };\n\n    this.emit(TrackEvent.VideoDimensionsChanged, this.lastDimensions, this);\n  }\n\n  private getPixelDensity(): number {\n    const pixelDensity = this.adaptiveStreamSettings?.pixelDensity;\n    if (pixelDensity === 'screen') {\n      return getDevicePixelRatio();\n    } else if (!pixelDensity) {\n      // when unset, we'll pick a sane default here.\n      // for higher pixel density devices (mobile phones, etc), we'll use 2\n      // otherwise it defaults to 1\n      const devicePixelRatio = getDevicePixelRatio();\n      if (devicePixelRatio > 2) {\n        return 2;\n      } else {\n        return 1;\n      }\n    }\n    return pixelDensity;\n  }\n}\n\nexport interface ElementInfo {\n  element: object;\n  width(): number;\n  height(): number;\n  visible: boolean;\n  pictureInPicture: boolean;\n  visibilityChangedAt: number | undefined;\n\n  handleResize?: () => void;\n  handleVisibilityChanged?: () => void;\n  observe(): void;\n  stopObserving(): void;\n}\n\nclass HTMLElementInfo implements ElementInfo {\n  element: HTMLMediaElement;\n\n  get visible(): boolean {\n    return this.isPiP || this.isIntersecting;\n  }\n\n  get pictureInPicture(): boolean {\n    return this.isPiP;\n  }\n\n  visibilityChangedAt: number | undefined;\n\n  handleResize?: () => void;\n\n  handleVisibilityChanged?: () => void;\n\n  private isPiP: boolean;\n\n  private isIntersecting: boolean;\n\n  constructor(element: HTMLMediaElement, visible?: boolean) {\n    this.element = element;\n    this.isIntersecting = visible ?? isElementInViewport(element);\n    this.isPiP = isWeb() && document.pictureInPictureElement === element;\n    this.visibilityChangedAt = 0;\n  }\n\n  width(): number {\n    return this.element.clientWidth;\n  }\n\n  height(): number {\n    return this.element.clientHeight;\n  }\n\n  observe() {\n    // make sure we update the current visible state once we start to observe\n    this.isIntersecting = isElementInViewport(this.element);\n    this.isPiP = document.pictureInPictureElement === this.element;\n\n    (this.element as ObservableMediaElement).handleResize = () => {\n      this.handleResize?.();\n    };\n    (this.element as ObservableMediaElement).handleVisibilityChanged = this.onVisibilityChanged;\n\n    getIntersectionObserver().observe(this.element);\n    getResizeObserver().observe(this.element);\n    (this.element as HTMLVideoElement).addEventListener('enterpictureinpicture', this.onEnterPiP);\n    (this.element as HTMLVideoElement).addEventListener('leavepictureinpicture', this.onLeavePiP);\n  }\n\n  private onVisibilityChanged = (entry: IntersectionObserverEntry) => {\n    const { target, isIntersecting } = entry;\n    if (target === this.element) {\n      this.isIntersecting = isIntersecting;\n      this.visibilityChangedAt = Date.now();\n      this.handleVisibilityChanged?.();\n    }\n  };\n\n  private onEnterPiP = () => {\n    this.isPiP = true;\n    this.handleVisibilityChanged?.();\n  };\n\n  private onLeavePiP = () => {\n    this.isPiP = false;\n    this.handleVisibilityChanged?.();\n  };\n\n  stopObserving() {\n    getIntersectionObserver()?.unobserve(this.element);\n    getResizeObserver()?.unobserve(this.element);\n    (this.element as HTMLVideoElement).removeEventListener(\n      'enterpictureinpicture',\n      this.onEnterPiP,\n    );\n    (this.element as HTMLVideoElement).removeEventListener(\n      'leavepictureinpicture',\n      this.onLeavePiP,\n    );\n  }\n}\n\n// does not account for occlusion by other elements\nfunction isElementInViewport(el: HTMLElement) {\n  let top = el.offsetTop;\n  let left = el.offsetLeft;\n  const width = el.offsetWidth;\n  const height = el.offsetHeight;\n  const { hidden } = el;\n  const { opacity, display } = getComputedStyle(el);\n\n  while (el.offsetParent) {\n    el = el.offsetParent as HTMLElement;\n    top += el.offsetTop;\n    left += el.offsetLeft;\n  }\n\n  return (\n    top < window.pageYOffset + window.innerHeight &&\n    left < window.pageXOffset + window.innerWidth &&\n    top + height > window.pageYOffset &&\n    left + width > window.pageXOffset &&\n    !hidden &&\n    (opacity !== '' ? parseFloat(opacity) > 0 : true) &&\n    display !== 'none'\n  );\n}\n", "import { EventEmitter } from 'events';\nimport type TypedEventEmitter from 'typed-emitter';\nimport log, { LoggerNames, getLogger } from '../../logger';\nimport { Encryption_Type } from '../../proto/livekit_models_pb';\nimport type { SubscriptionError, TrackInfo } from '../../proto/livekit_models_pb';\nimport type { UpdateSubscription, UpdateTrackSettings } from '../../proto/livekit_rtc_pb';\nimport { TrackEvent } from '../events';\nimport type { LoggerOptions } from '../types';\nimport LocalAudioTrack from './LocalAudioTrack';\nimport LocalVideoTrack from './LocalVideoTrack';\nimport RemoteAudioTrack from './RemoteAudioTrack';\nimport type RemoteTrack from './RemoteTrack';\nimport RemoteVideoTrack from './RemoteVideoTrack';\nimport { Track } from './Track';\nimport { getLogContextFromTrack } from './utils';\n\nexport class TrackPublication extends (EventEmitter as new () => TypedEventEmitter<PublicationEventCallbacks>) {\n  kind: Track.Kind;\n\n  trackName: string;\n\n  trackSid: Track.SID;\n\n  track?: Track;\n\n  source: Track.Source;\n\n  /** MimeType of the published track */\n  mimeType?: string;\n\n  /** dimension of the original published stream, video-only */\n  dimensions?: Track.Dimensions;\n\n  /** true if track was simulcasted to server, video-only */\n  simulcasted?: boolean;\n\n  /** @internal */\n  trackInfo?: TrackInfo;\n\n  protected metadataMuted: boolean = false;\n\n  protected encryption: Encryption_Type = Encryption_Type.NONE;\n\n  protected log = log;\n\n  private loggerContextCb?: LoggerOptions['loggerContextCb'];\n\n  constructor(kind: Track.Kind, id: string, name: string, loggerOptions?: LoggerOptions) {\n    super();\n    this.log = getLogger(loggerOptions?.loggerName ?? LoggerNames.Publication);\n    this.loggerContextCb = this.loggerContextCb;\n    this.setMaxListeners(100);\n    this.kind = kind;\n    this.trackSid = id;\n    this.trackName = name;\n    this.source = Track.Source.Unknown;\n  }\n\n  /** @internal */\n  setTrack(track?: Track) {\n    if (this.track) {\n      this.track.off(TrackEvent.Muted, this.handleMuted);\n      this.track.off(TrackEvent.Unmuted, this.handleUnmuted);\n    }\n\n    this.track = track;\n\n    if (track) {\n      // forward events\n      track.on(TrackEvent.Muted, this.handleMuted);\n      track.on(TrackEvent.Unmuted, this.handleUnmuted);\n    }\n  }\n\n  protected get logContext() {\n    return {\n      ...this.loggerContextCb?.(),\n      ...getLogContextFromTrack(this),\n    };\n  }\n\n  get isMuted(): boolean {\n    return this.metadataMuted;\n  }\n\n  get isEnabled(): boolean {\n    return true;\n  }\n\n  get isSubscribed(): boolean {\n    return this.track !== undefined;\n  }\n\n  get isEncrypted(): boolean {\n    return this.encryption !== Encryption_Type.NONE;\n  }\n\n  /**\n   * an [AudioTrack] if this publication holds an audio track\n   */\n  get audioTrack(): LocalAudioTrack | RemoteAudioTrack | undefined {\n    if (this.track instanceof LocalAudioTrack || this.track instanceof RemoteAudioTrack) {\n      return this.track;\n    }\n  }\n\n  /**\n   * an [VideoTrack] if this publication holds a video track\n   */\n  get videoTrack(): LocalVideoTrack | RemoteVideoTrack | undefined {\n    if (this.track instanceof LocalVideoTrack || this.track instanceof RemoteVideoTrack) {\n      return this.track;\n    }\n  }\n\n  handleMuted = () => {\n    this.emit(TrackEvent.Muted);\n  };\n\n  handleUnmuted = () => {\n    this.emit(TrackEvent.Unmuted);\n  };\n\n  /** @internal */\n  updateInfo(info: TrackInfo) {\n    this.trackSid = info.sid;\n    this.trackName = info.name;\n    this.source = Track.sourceFromProto(info.source);\n    this.mimeType = info.mimeType;\n    if (this.kind === Track.Kind.Video && info.width > 0) {\n      this.dimensions = {\n        width: info.width,\n        height: info.height,\n      };\n      this.simulcasted = info.simulcast;\n    }\n    this.encryption = info.encryption;\n    this.trackInfo = info;\n    this.log.debug('update publication info', { ...this.logContext, info });\n  }\n}\n\nexport namespace TrackPublication {\n  export enum SubscriptionStatus {\n    Desired = 'desired',\n    Subscribed = 'subscribed',\n    Unsubscribed = 'unsubscribed',\n  }\n\n  export enum PermissionStatus {\n    Allowed = 'allowed',\n    NotAllowed = 'not_allowed',\n  }\n}\n\nexport type PublicationEventCallbacks = {\n  muted: () => void;\n  unmuted: () => void;\n  ended: (track?: Track) => void;\n  updateSettings: (settings: UpdateTrackSettings) => void;\n  subscriptionPermissionChanged: (\n    status: TrackPublication.PermissionStatus,\n    prevStatus: TrackPublication.PermissionStatus,\n  ) => void;\n  updateSubscription: (sub: UpdateSubscription) => void;\n  subscribed: (track: RemoteTrack) => void;\n  unsubscribed: (track: RemoteTrack) => void;\n  subscriptionStatusChanged: (\n    status: TrackPublication.SubscriptionStatus,\n    prevStatus: TrackPublication.SubscriptionStatus,\n  ) => void;\n  subscriptionFailed: (error: SubscriptionError) => void;\n};\n", "import type { TrackInfo } from '../../proto/livekit_models_pb';\nimport { TrackEvent } from '../events';\nimport type { LoggerOptions } from '../types';\nimport type LocalAudioTrack from './LocalAudioTrack';\nimport type LocalTrack from './LocalTrack';\nimport type LocalVideoTrack from './LocalVideoTrack';\nimport type { Track } from './Track';\nimport { TrackPublication } from './TrackPublication';\nimport type { TrackPublishOptions } from './options';\n\nexport default class LocalTrackPublication extends TrackPublication {\n  track?: LocalTrack = undefined;\n\n  options?: TrackPublishOptions;\n\n  get isUpstreamPaused() {\n    return this.track?.isUpstreamPaused;\n  }\n\n  constructor(kind: Track.Kind, ti: TrackInfo, track?: LocalTrack, loggerOptions?: LoggerOptions) {\n    super(kind, ti.sid, ti.name, loggerOptions);\n\n    this.updateInfo(ti);\n    this.setTrack(track);\n  }\n\n  setTrack(track?: Track) {\n    if (this.track) {\n      this.track.off(TrackEvent.Ended, this.handleTrackEnded);\n    }\n\n    super.setTrack(track);\n\n    if (track) {\n      track.on(TrackEvent.Ended, this.handleTrackEnded);\n    }\n  }\n\n  get isMuted(): boolean {\n    if (this.track) {\n      return this.track.isMuted;\n    }\n    return super.isMuted;\n  }\n\n  get audioTrack(): LocalAudioTrack | undefined {\n    return super.audioTrack as LocalAudioTrack | undefined;\n  }\n\n  get videoTrack(): LocalVideoTrack | undefined {\n    return super.videoTrack as LocalVideoTrack | undefined;\n  }\n\n  /**\n   * Mute the track associated with this publication\n   */\n  async mute() {\n    return this.track?.mute();\n  }\n\n  /**\n   * Unmute track associated with this publication\n   */\n  async unmute() {\n    return this.track?.unmute();\n  }\n\n  /**\n   * Pauses the media stream track associated with this publication from being sent to the server\n   * and signals \"muted\" event to other participants\n   * Useful if you want to pause the stream without pausing the local media stream track\n   */\n  async pauseUpstream() {\n    await this.track?.pauseUpstream();\n  }\n\n  /**\n   * Resumes sending the media stream track associated with this publication to the server after a call to [[pauseUpstream()]]\n   * and signals \"unmuted\" event to other participants (unless the track is explicitly muted)\n   */\n  async resumeUpstream() {\n    await this.track?.resumeUpstream();\n  }\n\n  handleTrackEnded = () => {\n    this.emit(TrackEvent.Ended);\n  };\n}\n", "import { EventEmitter } from 'events';\nimport type TypedEmitter from 'typed-emitter';\nimport log, { LoggerNames, StructuredLogger, getLogger } from '../../logger';\nimport {\n  DataPacket_Kind,\n  ParticipantInfo,\n  ParticipantPermission,\n  ConnectionQuality as ProtoQuality,\n  SubscriptionError,\n} from '../../proto/livekit_models_pb';\nimport { ParticipantEvent, TrackEvent } from '../events';\nimport LocalAudioTrack from '../track/LocalAudioTrack';\nimport type LocalTrackPublication from '../track/LocalTrackPublication';\nimport RemoteAudioTrack from '../track/RemoteAudioTrack';\nimport type RemoteTrack from '../track/RemoteTrack';\nimport type RemoteTrackPublication from '../track/RemoteTrackPublication';\nimport { Track } from '../track/Track';\nimport type { TrackPublication } from '../track/TrackPublication';\nimport type { LoggerOptions } from '../types';\n\nexport enum ConnectionQuality {\n  Excellent = 'excellent',\n  Good = 'good',\n  Poor = 'poor',\n  /**\n   * Indicates that a participant has temporarily (or permanently) lost connection to LiveKit.\n   * For permanent disconnection a `ParticipantDisconnected` event will be emitted after a timeout\n   */\n  Lost = 'lost',\n  Unknown = 'unknown',\n}\n\nfunction qualityFromProto(q: ProtoQuality): ConnectionQuality {\n  switch (q) {\n    case ProtoQuality.EXCELLENT:\n      return ConnectionQuality.Excellent;\n    case ProtoQuality.GOOD:\n      return ConnectionQuality.Good;\n    case ProtoQuality.POOR:\n      return ConnectionQuality.Poor;\n    case ProtoQuality.LOST:\n      return ConnectionQuality.Lost;\n    default:\n      return ConnectionQuality.Unknown;\n  }\n}\n\nexport default class Participant extends (EventEmitter as new () => TypedEmitter<ParticipantEventCallbacks>) {\n  protected participantInfo?: ParticipantInfo;\n\n  audioTracks: Map<string, TrackPublication>;\n\n  videoTracks: Map<string, TrackPublication>;\n\n  /** map of track sid => all published tracks */\n  tracks: Map<string, TrackPublication>;\n\n  /** audio level between 0-1.0, 1 being loudest, 0 being softest */\n  audioLevel: number = 0;\n\n  /** if participant is currently speaking */\n  isSpeaking: boolean = false;\n\n  /** server assigned unique id */\n  sid: string;\n\n  /** client assigned identity, encoded in JWT token */\n  identity: string;\n\n  /** client assigned display name, encoded in JWT token */\n  name?: string;\n\n  /** client metadata, opaque to livekit */\n  metadata?: string;\n\n  lastSpokeAt?: Date | undefined;\n\n  permissions?: ParticipantPermission;\n\n  private _connectionQuality: ConnectionQuality = ConnectionQuality.Unknown;\n\n  protected audioContext?: AudioContext;\n\n  protected log: StructuredLogger = log;\n\n  protected loggerOptions?: LoggerOptions;\n\n  protected get logContext() {\n    return {\n      ...this.loggerOptions?.loggerContextCb?.(),\n      participantSid: this.sid,\n      participantId: this.identity,\n    };\n  }\n\n  get isEncrypted() {\n    return this.tracks.size > 0 && Array.from(this.tracks.values()).every((tr) => tr.isEncrypted);\n  }\n\n  get isAgent() {\n    return this.permissions?.agent ?? false;\n  }\n\n  /** @internal */\n  constructor(\n    sid: string,\n    identity: string,\n    name?: string,\n    metadata?: string,\n    loggerOptions?: LoggerOptions,\n  ) {\n    super();\n\n    this.log = getLogger(loggerOptions?.loggerName ?? LoggerNames.Participant);\n    this.loggerOptions = loggerOptions;\n\n    this.setMaxListeners(100);\n    this.sid = sid;\n    this.identity = identity;\n    this.name = name;\n    this.metadata = metadata;\n    this.audioTracks = new Map();\n    this.videoTracks = new Map();\n    this.tracks = new Map();\n  }\n\n  getTracks(): TrackPublication[] {\n    return Array.from(this.tracks.values());\n  }\n\n  /**\n   * Finds the first track that matches the source filter, for example, getting\n   * the user's camera track with getTrackBySource(Track.Source.Camera).\n   * @param source\n   * @returns\n   */\n  getTrack(source: Track.Source): TrackPublication | undefined {\n    for (const [, pub] of this.tracks) {\n      if (pub.source === source) {\n        return pub;\n      }\n    }\n  }\n\n  /**\n   * Finds the first track that matches the track's name.\n   * @param name\n   * @returns\n   */\n  getTrackByName(name: string): TrackPublication | undefined {\n    for (const [, pub] of this.tracks) {\n      if (pub.trackName === name) {\n        return pub;\n      }\n    }\n  }\n\n  get connectionQuality(): ConnectionQuality {\n    return this._connectionQuality;\n  }\n\n  get isCameraEnabled(): boolean {\n    const track = this.getTrack(Track.Source.Camera);\n    return !(track?.isMuted ?? true);\n  }\n\n  get isMicrophoneEnabled(): boolean {\n    const track = this.getTrack(Track.Source.Microphone);\n    return !(track?.isMuted ?? true);\n  }\n\n  get isScreenShareEnabled(): boolean {\n    const track = this.getTrack(Track.Source.ScreenShare);\n    return !!track;\n  }\n\n  get isLocal(): boolean {\n    return false;\n  }\n\n  /** when participant joined the room */\n  get joinedAt(): Date | undefined {\n    if (this.participantInfo) {\n      return new Date(Number.parseInt(this.participantInfo.joinedAt.toString()) * 1000);\n    }\n    return new Date();\n  }\n\n  /** @internal */\n  updateInfo(info: ParticipantInfo): boolean {\n    // it's possible the update could be applied out of order due to await\n    // during reconnect sequences. when that happens, it's possible for server\n    // to have sent more recent version of participant info while JS is waiting\n    // to process the existing payload.\n    // when the participant sid remains the same, and we already have a later version\n    // of the payload, they can be safely skipped\n    if (\n      this.participantInfo &&\n      this.participantInfo.sid === info.sid &&\n      this.participantInfo.version > info.version\n    ) {\n      return false;\n    }\n    this.identity = info.identity;\n    this.sid = info.sid;\n    this._setName(info.name);\n    this._setMetadata(info.metadata);\n    if (info.permission) {\n      this.setPermissions(info.permission);\n    }\n    // set this last so setMetadata can detect changes\n    this.participantInfo = info;\n    this.log.trace('update participant info', { ...this.logContext, info });\n    return true;\n  }\n\n  /**\n   * Updates metadata from server\n   **/\n  private _setMetadata(md: string) {\n    const changed = this.metadata !== md;\n    const prevMetadata = this.metadata;\n    this.metadata = md;\n\n    if (changed) {\n      this.emit(ParticipantEvent.ParticipantMetadataChanged, prevMetadata);\n    }\n  }\n\n  private _setName(name: string) {\n    const changed = this.name !== name;\n    this.name = name;\n\n    if (changed) {\n      this.emit(ParticipantEvent.ParticipantNameChanged, name);\n    }\n  }\n\n  /** @internal */\n  setPermissions(permissions: ParticipantPermission): boolean {\n    const prevPermissions = this.permissions;\n    const changed =\n      permissions.canPublish !== this.permissions?.canPublish ||\n      permissions.canSubscribe !== this.permissions?.canSubscribe ||\n      permissions.canPublishData !== this.permissions?.canPublishData ||\n      permissions.hidden !== this.permissions?.hidden ||\n      permissions.recorder !== this.permissions?.recorder ||\n      permissions.canPublishSources.length !== this.permissions.canPublishSources.length ||\n      permissions.canPublishSources.some(\n        (value, index) => value !== this.permissions?.canPublishSources[index],\n      );\n    this.permissions = permissions;\n\n    if (changed) {\n      this.emit(ParticipantEvent.ParticipantPermissionsChanged, prevPermissions);\n    }\n    return changed;\n  }\n\n  /** @internal */\n  setIsSpeaking(speaking: boolean) {\n    if (speaking === this.isSpeaking) {\n      return;\n    }\n    this.isSpeaking = speaking;\n    if (speaking) {\n      this.lastSpokeAt = new Date();\n    }\n    this.emit(ParticipantEvent.IsSpeakingChanged, speaking);\n  }\n\n  /** @internal */\n  setConnectionQuality(q: ProtoQuality) {\n    const prevQuality = this._connectionQuality;\n    this._connectionQuality = qualityFromProto(q);\n    if (prevQuality !== this._connectionQuality) {\n      this.emit(ParticipantEvent.ConnectionQualityChanged, this._connectionQuality);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  setAudioContext(ctx: AudioContext | undefined) {\n    this.audioContext = ctx;\n    this.audioTracks.forEach(\n      (track) =>\n        (track.track instanceof RemoteAudioTrack || track.track instanceof LocalAudioTrack) &&\n        track.track.setAudioContext(ctx),\n    );\n  }\n\n  protected addTrackPublication(publication: TrackPublication) {\n    // forward publication driven events\n    publication.on(TrackEvent.Muted, () => {\n      this.emit(ParticipantEvent.TrackMuted, publication);\n    });\n\n    publication.on(TrackEvent.Unmuted, () => {\n      this.emit(ParticipantEvent.TrackUnmuted, publication);\n    });\n\n    const pub = publication;\n    if (pub.track) {\n      pub.track.sid = publication.trackSid;\n    }\n\n    this.tracks.set(publication.trackSid, publication);\n    switch (publication.kind) {\n      case Track.Kind.Audio:\n        this.audioTracks.set(publication.trackSid, publication);\n        break;\n      case Track.Kind.Video:\n        this.videoTracks.set(publication.trackSid, publication);\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nexport type ParticipantEventCallbacks = {\n  trackPublished: (publication: RemoteTrackPublication) => void;\n  trackSubscribed: (track: RemoteTrack, publication: RemoteTrackPublication) => void;\n  trackSubscriptionFailed: (trackSid: string, reason?: SubscriptionError) => void;\n  trackUnpublished: (publication: RemoteTrackPublication) => void;\n  trackUnsubscribed: (track: RemoteTrack, publication: RemoteTrackPublication) => void;\n  trackMuted: (publication: TrackPublication) => void;\n  trackUnmuted: (publication: TrackPublication) => void;\n  localTrackPublished: (publication: LocalTrackPublication) => void;\n  localTrackUnpublished: (publication: LocalTrackPublication) => void;\n  participantMetadataChanged: (prevMetadata: string | undefined, participant?: any) => void;\n  participantNameChanged: (name: string) => void;\n  dataReceived: (payload: Uint8Array, kind: DataPacket_Kind) => void;\n  isSpeakingChanged: (speaking: boolean) => void;\n  connectionQualityChanged: (connectionQuality: ConnectionQuality) => void;\n  trackStreamStateChanged: (\n    publication: RemoteTrackPublication,\n    streamState: Track.StreamState,\n  ) => void;\n  trackSubscriptionPermissionChanged: (\n    publication: RemoteTrackPublication,\n    status: TrackPublication.PermissionStatus,\n  ) => void;\n  mediaDevicesError: (error: Error) => void;\n  audioStreamAcquired: () => void;\n  participantPermissionsChanged: (prevPermissions?: ParticipantPermission) => void;\n  trackSubscriptionStatusChanged: (\n    publication: RemoteTrackPublication,\n    status: TrackPublication.SubscriptionStatus,\n  ) => void;\n};\n", "import { TrackPermission } from '../../proto/livekit_rtc_pb';\n\nexport interface ParticipantTrackPermission {\n  /**\n   * The participant identity this permission applies to.\n   * You can either provide this or `participantSid`\n   */\n  participantIdentity?: string;\n\n  /**\n   * The participant server id this permission applies to.\n   * You can either provide this or `participantIdentity`\n   */\n  participantSid?: string;\n\n  /**\n   * Grant permission to all all tracks. Takes precedence over allowedTrackSids.\n   * false if unset.\n   */\n  allowAll?: boolean;\n\n  /**\n   * The list of track ids that the target participant can subscribe to.\n   * When unset, it'll allow all tracks to be subscribed by the participant.\n   * When empty, this participant is disallowed from subscribing to any tracks.\n   */\n  allowedTrackSids?: string[];\n}\n\nexport function trackPermissionToProto(perms: ParticipantTrackPermission): TrackPermission {\n  if (!perms.participantSid && !perms.participantIdentity) {\n    throw new Error(\n      'Invalid track permission, must provide at least one of participantIdentity and participantSid',\n    );\n  }\n  return new TrackPermission({\n    participantIdentity: perms.participantIdentity ?? '',\n    participantSid: perms.participantSid ?? '',\n    allTracks: perms.allowAll ?? false,\n    trackSids: perms.allowedTrackSids || [],\n  });\n}\n", "import {\n  ParticipantTracks,\n  SubscriptionError,\n  TrackInfo,\n  VideoQuality,\n} from '../../proto/livekit_models_pb';\nimport { UpdateSubscription, UpdateTrackSettings } from '../../proto/livekit_rtc_pb';\nimport { TrackEvent } from '../events';\nimport type { LoggerOptions } from '../types';\nimport type RemoteTrack from './RemoteTrack';\nimport RemoteVideoTrack from './RemoteVideoTrack';\nimport { Track } from './Track';\nimport { TrackPublication } from './TrackPublication';\n\nexport default class RemoteTrackPublication extends TrackPublication {\n  track?: RemoteTrack = undefined;\n\n  /** @internal */\n  protected allowed = true;\n\n  // keeps track of client's desire to subscribe to a track, also true if autoSubscribe is active\n  protected subscribed?: boolean;\n\n  protected disabled: boolean = false;\n\n  protected currentVideoQuality?: VideoQuality = VideoQuality.HIGH;\n\n  protected videoDimensions?: Track.Dimensions;\n\n  protected fps?: number;\n\n  protected subscriptionError?: SubscriptionError;\n\n  constructor(\n    kind: Track.Kind,\n    ti: TrackInfo,\n    autoSubscribe: boolean | undefined,\n    loggerOptions?: LoggerOptions,\n  ) {\n    super(kind, ti.sid, ti.name, loggerOptions);\n    this.subscribed = autoSubscribe;\n    this.updateInfo(ti);\n  }\n\n  /**\n   * Subscribe or unsubscribe to this remote track\n   * @param subscribed true to subscribe to a track, false to unsubscribe\n   */\n  setSubscribed(subscribed: boolean) {\n    const prevStatus = this.subscriptionStatus;\n    const prevPermission = this.permissionStatus;\n    this.subscribed = subscribed;\n    // reset allowed status when desired subscription state changes\n    // server will notify client via signal message if it's not allowed\n    if (subscribed) {\n      this.allowed = true;\n    }\n\n    const sub = new UpdateSubscription({\n      trackSids: [this.trackSid],\n      subscribe: this.subscribed,\n      participantTracks: [\n        new ParticipantTracks({\n          // sending an empty participant id since TrackPublication doesn't keep it\n          // this is filled in by the participant that receives this message\n          participantSid: '',\n          trackSids: [this.trackSid],\n        }),\n      ],\n    });\n    this.emit(TrackEvent.UpdateSubscription, sub);\n    this.emitSubscriptionUpdateIfChanged(prevStatus);\n    this.emitPermissionUpdateIfChanged(prevPermission);\n  }\n\n  get subscriptionStatus(): TrackPublication.SubscriptionStatus {\n    if (this.subscribed === false) {\n      return TrackPublication.SubscriptionStatus.Unsubscribed;\n    }\n    if (!super.isSubscribed) {\n      return TrackPublication.SubscriptionStatus.Desired;\n    }\n    return TrackPublication.SubscriptionStatus.Subscribed;\n  }\n\n  get permissionStatus(): TrackPublication.PermissionStatus {\n    return this.allowed\n      ? TrackPublication.PermissionStatus.Allowed\n      : TrackPublication.PermissionStatus.NotAllowed;\n  }\n\n  /**\n   * Returns true if track is subscribed, and ready for playback\n   */\n  get isSubscribed(): boolean {\n    if (this.subscribed === false) {\n      return false;\n    }\n    return super.isSubscribed;\n  }\n\n  // returns client's desire to subscribe to a track, also true if autoSubscribe is enabled\n  get isDesired(): boolean {\n    return this.subscribed !== false;\n  }\n\n  get isEnabled(): boolean {\n    return !this.disabled;\n  }\n\n  /**\n   * disable server from sending down data for this track. this is useful when\n   * the participant is off screen, you may disable streaming down their video\n   * to reduce bandwidth requirements\n   * @param enabled\n   */\n  setEnabled(enabled: boolean) {\n    if (!this.isManualOperationAllowed() || this.disabled === !enabled) {\n      return;\n    }\n    this.disabled = !enabled;\n\n    this.emitTrackUpdate();\n  }\n\n  /**\n   * for tracks that support simulcasting, adjust subscribed quality\n   *\n   * This indicates the highest quality the client can accept. if network\n   * bandwidth does not allow, server will automatically reduce quality to\n   * optimize for uninterrupted video\n   */\n  setVideoQuality(quality: VideoQuality) {\n    if (!this.isManualOperationAllowed() || this.currentVideoQuality === quality) {\n      return;\n    }\n    this.currentVideoQuality = quality;\n    this.videoDimensions = undefined;\n\n    this.emitTrackUpdate();\n  }\n\n  setVideoDimensions(dimensions: Track.Dimensions) {\n    if (!this.isManualOperationAllowed()) {\n      return;\n    }\n    if (\n      this.videoDimensions?.width === dimensions.width &&\n      this.videoDimensions?.height === dimensions.height\n    ) {\n      return;\n    }\n    if (this.track instanceof RemoteVideoTrack) {\n      this.videoDimensions = dimensions;\n    }\n    this.currentVideoQuality = undefined;\n\n    this.emitTrackUpdate();\n  }\n\n  setVideoFPS(fps: number) {\n    if (!this.isManualOperationAllowed()) {\n      return;\n    }\n\n    if (!(this.track instanceof RemoteVideoTrack)) {\n      return;\n    }\n\n    if (this.fps === fps) {\n      return;\n    }\n\n    this.fps = fps;\n    this.emitTrackUpdate();\n  }\n\n  get videoQuality(): VideoQuality | undefined {\n    return this.currentVideoQuality;\n  }\n\n  /** @internal */\n  setTrack(track?: RemoteTrack) {\n    const prevStatus = this.subscriptionStatus;\n    const prevPermission = this.permissionStatus;\n    const prevTrack = this.track;\n    if (prevTrack === track) {\n      return;\n    }\n    if (prevTrack) {\n      // unregister listener\n      prevTrack.off(TrackEvent.VideoDimensionsChanged, this.handleVideoDimensionsChange);\n      prevTrack.off(TrackEvent.VisibilityChanged, this.handleVisibilityChange);\n      prevTrack.off(TrackEvent.Ended, this.handleEnded);\n      prevTrack.detach();\n      prevTrack.stopMonitor();\n      this.emit(TrackEvent.Unsubscribed, prevTrack);\n    }\n    super.setTrack(track);\n    if (track) {\n      track.sid = this.trackSid;\n      track.on(TrackEvent.VideoDimensionsChanged, this.handleVideoDimensionsChange);\n      track.on(TrackEvent.VisibilityChanged, this.handleVisibilityChange);\n      track.on(TrackEvent.Ended, this.handleEnded);\n      this.emit(TrackEvent.Subscribed, track);\n    }\n    this.emitPermissionUpdateIfChanged(prevPermission);\n    this.emitSubscriptionUpdateIfChanged(prevStatus);\n  }\n\n  /** @internal */\n  setAllowed(allowed: boolean) {\n    const prevStatus = this.subscriptionStatus;\n    const prevPermission = this.permissionStatus;\n    this.allowed = allowed;\n    this.emitPermissionUpdateIfChanged(prevPermission);\n    this.emitSubscriptionUpdateIfChanged(prevStatus);\n  }\n\n  /** @internal */\n  setSubscriptionError(error: SubscriptionError) {\n    this.emit(TrackEvent.SubscriptionFailed, error);\n  }\n\n  /** @internal */\n  updateInfo(info: TrackInfo) {\n    super.updateInfo(info);\n    const prevMetadataMuted = this.metadataMuted;\n    this.metadataMuted = info.muted;\n    if (this.track) {\n      this.track.setMuted(info.muted);\n    } else if (prevMetadataMuted !== info.muted) {\n      this.emit(info.muted ? TrackEvent.Muted : TrackEvent.Unmuted);\n    }\n  }\n\n  private emitSubscriptionUpdateIfChanged(previousStatus: TrackPublication.SubscriptionStatus) {\n    const currentStatus = this.subscriptionStatus;\n    if (previousStatus === currentStatus) {\n      return;\n    }\n    this.emit(TrackEvent.SubscriptionStatusChanged, currentStatus, previousStatus);\n  }\n\n  private emitPermissionUpdateIfChanged(\n    previousPermissionStatus: TrackPublication.PermissionStatus,\n  ) {\n    const currentPermissionStatus = this.permissionStatus;\n    if (currentPermissionStatus !== previousPermissionStatus) {\n      this.emit(\n        TrackEvent.SubscriptionPermissionChanged,\n        this.permissionStatus,\n        previousPermissionStatus,\n      );\n    }\n  }\n\n  private isManualOperationAllowed(): boolean {\n    if (this.kind === Track.Kind.Video && this.isAdaptiveStream) {\n      this.log.warn(\n        'adaptive stream is enabled, cannot change video track settings',\n        this.logContext,\n      );\n      return false;\n    }\n    if (!this.isDesired) {\n      this.log.warn('cannot update track settings when not subscribed', this.logContext);\n      return false;\n    }\n    return true;\n  }\n\n  protected handleEnded = (track: RemoteTrack) => {\n    this.setTrack(undefined);\n    this.emit(TrackEvent.Ended, track);\n  };\n\n  protected get isAdaptiveStream(): boolean {\n    return this.track instanceof RemoteVideoTrack && this.track.isAdaptiveStream;\n  }\n\n  protected handleVisibilityChange = (visible: boolean) => {\n    this.log.debug(\n      `adaptivestream video visibility ${this.trackSid}, visible=${visible}`,\n      this.logContext,\n    );\n    this.disabled = !visible;\n    this.emitTrackUpdate();\n  };\n\n  protected handleVideoDimensionsChange = (dimensions: Track.Dimensions) => {\n    this.log.debug(\n      `adaptivestream video dimensions ${dimensions.width}x${dimensions.height}`,\n      this.logContext,\n    );\n    this.videoDimensions = dimensions;\n    this.emitTrackUpdate();\n  };\n\n  /* @internal */\n  emitTrackUpdate() {\n    const settings: UpdateTrackSettings = new UpdateTrackSettings({\n      trackSids: [this.trackSid],\n      disabled: this.disabled,\n      fps: this.fps,\n    });\n    if (this.videoDimensions) {\n      settings.width = Math.ceil(this.videoDimensions.width);\n      settings.height = Math.ceil(this.videoDimensions.height);\n    } else if (this.currentVideoQuality !== undefined) {\n      settings.quality = this.currentVideoQuality;\n    } else {\n      // defaults to high quality\n      settings.quality = VideoQuality.HIGH;\n    }\n\n    this.emit(TrackEvent.UpdateSettings, settings);\n  }\n}\n", "import type { SignalClient } from '../../api/SignalClient';\nimport type { ParticipantInfo, SubscriptionError } from '../../proto/livekit_models_pb';\nimport type { UpdateSubscription, UpdateTrackSettings } from '../../proto/livekit_rtc_pb';\nimport { ParticipantEvent, TrackEvent } from '../events';\nimport RemoteAudioTrack from '../track/RemoteAudioTrack';\nimport type RemoteTrack from '../track/RemoteTrack';\nimport RemoteTrackPublication from '../track/RemoteTrackPublication';\nimport RemoteVideoTrack from '../track/RemoteVideoTrack';\nimport { Track } from '../track/Track';\nimport type { TrackPublication } from '../track/TrackPublication';\nimport type { AudioOutputOptions } from '../track/options';\nimport type { AdaptiveStreamSettings } from '../track/types';\nimport { getLogContextFromTrack } from '../track/utils';\nimport type { LoggerOptions } from '../types';\nimport Participant from './Participant';\nimport type { ParticipantEventCallbacks } from './Participant';\n\nexport default class RemoteParticipant extends Participant {\n  audioTracks: Map<string, RemoteTrackPublication>;\n\n  videoTracks: Map<string, RemoteTrackPublication>;\n\n  tracks: Map<string, RemoteTrackPublication>;\n\n  signalClient: SignalClient;\n\n  private volumeMap: Map<Track.Source, number>;\n\n  private audioOutput?: AudioOutputOptions;\n\n  /** @internal */\n  static fromParticipantInfo(signalClient: SignalClient, pi: ParticipantInfo): RemoteParticipant {\n    return new RemoteParticipant(signalClient, pi.sid, pi.identity, pi.name, pi.metadata);\n  }\n\n  /** @internal */\n  constructor(\n    signalClient: SignalClient,\n    sid: string,\n    identity?: string,\n    name?: string,\n    metadata?: string,\n    loggerOptions?: LoggerOptions,\n  ) {\n    super(sid, identity || '', name, metadata, loggerOptions);\n    this.signalClient = signalClient;\n    this.tracks = new Map();\n    this.audioTracks = new Map();\n    this.videoTracks = new Map();\n    this.volumeMap = new Map();\n  }\n\n  protected addTrackPublication(publication: RemoteTrackPublication) {\n    super.addTrackPublication(publication);\n\n    // register action events\n    publication.on(TrackEvent.UpdateSettings, (settings: UpdateTrackSettings) => {\n      this.log.debug('send update settings', {\n        ...this.logContext,\n        ...getLogContextFromTrack(publication),\n      });\n      this.signalClient.sendUpdateTrackSettings(settings);\n    });\n    publication.on(TrackEvent.UpdateSubscription, (sub: UpdateSubscription) => {\n      sub.participantTracks.forEach((pt) => {\n        pt.participantSid = this.sid;\n      });\n      this.signalClient.sendUpdateSubscription(sub);\n    });\n    publication.on(\n      TrackEvent.SubscriptionPermissionChanged,\n      (status: TrackPublication.PermissionStatus) => {\n        this.emit(ParticipantEvent.TrackSubscriptionPermissionChanged, publication, status);\n      },\n    );\n    publication.on(\n      TrackEvent.SubscriptionStatusChanged,\n      (status: TrackPublication.SubscriptionStatus) => {\n        this.emit(ParticipantEvent.TrackSubscriptionStatusChanged, publication, status);\n      },\n    );\n    publication.on(TrackEvent.Subscribed, (track: RemoteTrack) => {\n      this.emit(ParticipantEvent.TrackSubscribed, track, publication);\n    });\n    publication.on(TrackEvent.Unsubscribed, (previousTrack: RemoteTrack) => {\n      this.emit(ParticipantEvent.TrackUnsubscribed, previousTrack, publication);\n    });\n    publication.on(TrackEvent.SubscriptionFailed, (error: SubscriptionError) => {\n      this.emit(ParticipantEvent.TrackSubscriptionFailed, publication.trackSid, error);\n    });\n  }\n\n  getTrack(source: Track.Source): RemoteTrackPublication | undefined {\n    const track = super.getTrack(source);\n    if (track) {\n      return track as RemoteTrackPublication;\n    }\n  }\n\n  getTrackByName(name: string): RemoteTrackPublication | undefined {\n    const track = super.getTrackByName(name);\n    if (track) {\n      return track as RemoteTrackPublication;\n    }\n  }\n\n  /**\n   * sets the volume on the participant's audio track\n   * by default, this affects the microphone publication\n   * a different source can be passed in as a second argument\n   * if no track exists the volume will be applied when the microphone track is added\n   */\n  setVolume(\n    volume: number,\n    source: Track.Source.Microphone | Track.Source.ScreenShareAudio = Track.Source.Microphone,\n  ) {\n    this.volumeMap.set(source, volume);\n    const audioPublication = this.getTrack(source);\n    if (audioPublication && audioPublication.track) {\n      (audioPublication.track as RemoteAudioTrack).setVolume(volume);\n    }\n  }\n\n  /**\n   * gets the volume on the participant's microphone track\n   */\n  getVolume(\n    source: Track.Source.Microphone | Track.Source.ScreenShareAudio = Track.Source.Microphone,\n  ) {\n    const audioPublication = this.getTrack(source);\n    if (audioPublication && audioPublication.track) {\n      return (audioPublication.track as RemoteAudioTrack).getVolume();\n    }\n    return this.volumeMap.get(source);\n  }\n\n  /** @internal */\n  addSubscribedMediaTrack(\n    mediaTrack: MediaStreamTrack,\n    sid: Track.SID,\n    mediaStream: MediaStream,\n    receiver?: RTCRtpReceiver,\n    adaptiveStreamSettings?: AdaptiveStreamSettings,\n    triesLeft?: number,\n  ) {\n    // find the track publication\n    // it's possible for the media track to arrive before participant info\n    let publication = this.getTrackPublication(sid);\n\n    // it's also possible that the browser didn't honor our original track id\n    // FireFox would use its own local uuid instead of server track id\n    if (!publication) {\n      if (!sid.startsWith('TR')) {\n        // find the first track that matches type\n        this.tracks.forEach((p) => {\n          if (!publication && mediaTrack.kind === p.kind.toString()) {\n            publication = p;\n          }\n        });\n      }\n    }\n\n    // when we couldn't locate the track, it's possible that the metadata hasn't\n    // yet arrived. Wait a bit longer for it to arrive, or fire an error\n    if (!publication) {\n      if (triesLeft === 0) {\n        this.log.error('could not find published track', {\n          ...this.logContext,\n          trackSid: sid,\n        });\n        this.emit(ParticipantEvent.TrackSubscriptionFailed, sid);\n        return;\n      }\n\n      if (triesLeft === undefined) triesLeft = 20;\n      setTimeout(() => {\n        this.addSubscribedMediaTrack(\n          mediaTrack,\n          sid,\n          mediaStream,\n          receiver,\n          adaptiveStreamSettings,\n          triesLeft! - 1,\n        );\n      }, 150);\n      return;\n    }\n\n    if (mediaTrack.readyState === 'ended') {\n      this.log.error(\n        'unable to subscribe because MediaStreamTrack is ended. Do not call MediaStreamTrack.stop()',\n        { ...this.logContext, ...getLogContextFromTrack(publication) },\n      );\n      this.emit(ParticipantEvent.TrackSubscriptionFailed, sid);\n      return;\n    }\n\n    const isVideo = mediaTrack.kind === 'video';\n    let track: RemoteTrack;\n    if (isVideo) {\n      track = new RemoteVideoTrack(mediaTrack, sid, receiver, adaptiveStreamSettings);\n    } else {\n      track = new RemoteAudioTrack(mediaTrack, sid, receiver, this.audioContext, this.audioOutput);\n    }\n\n    // set track info\n    track.source = publication.source;\n    // keep publication's muted status\n    track.isMuted = publication.isMuted;\n    track.setMediaStream(mediaStream);\n    track.start();\n\n    publication.setTrack(track);\n    // set participant volumes on new audio tracks\n    if (this.volumeMap.has(publication.source) && track instanceof RemoteAudioTrack) {\n      track.setVolume(this.volumeMap.get(publication.source)!);\n    }\n\n    return publication;\n  }\n\n  /** @internal */\n  get hasMetadata(): boolean {\n    return !!this.participantInfo;\n  }\n\n  getTrackPublication(sid: Track.SID): RemoteTrackPublication | undefined {\n    return this.tracks.get(sid);\n  }\n\n  /** @internal */\n  updateInfo(info: ParticipantInfo): boolean {\n    if (!super.updateInfo(info)) {\n      return false;\n    }\n\n    // we are getting a list of all available tracks, reconcile in here\n    // and send out events for changes\n\n    // reconcile track publications, publish events only if metadata is already there\n    // i.e. changes since the local participant has joined\n    const validTracks = new Map<string, RemoteTrackPublication>();\n    const newTracks = new Map<string, RemoteTrackPublication>();\n\n    info.tracks.forEach((ti) => {\n      let publication = this.getTrackPublication(ti.sid);\n      if (!publication) {\n        // new publication\n        const kind = Track.kindFromProto(ti.type);\n        if (!kind) {\n          return;\n        }\n        publication = new RemoteTrackPublication(\n          kind,\n          ti,\n          this.signalClient.connectOptions?.autoSubscribe,\n          { loggerContextCb: () => this.logContext, loggerName: this.loggerOptions?.loggerName },\n        );\n        publication.updateInfo(ti);\n        newTracks.set(ti.sid, publication);\n        const existingTrackOfSource = Array.from(this.tracks.values()).find(\n          (publishedTrack) => publishedTrack.source === publication?.source,\n        );\n        if (existingTrackOfSource && publication.source !== Track.Source.Unknown) {\n          this.log.debug(\n            `received a second track publication for ${this.identity} with the same source: ${publication.source}`,\n            {\n              ...this.logContext,\n              oldTrack: getLogContextFromTrack(existingTrackOfSource),\n              newTrack: getLogContextFromTrack(publication),\n            },\n          );\n        }\n        this.addTrackPublication(publication);\n      } else {\n        publication.updateInfo(ti);\n      }\n      validTracks.set(ti.sid, publication);\n    });\n\n    // detect removed tracks\n    this.tracks.forEach((publication) => {\n      if (!validTracks.has(publication.trackSid)) {\n        this.log.trace('detected removed track on remote participant, unpublishing', {\n          ...this.logContext,\n          ...getLogContextFromTrack(publication),\n        });\n        this.unpublishTrack(publication.trackSid, true);\n      }\n    });\n\n    // always emit events for new publications, Room will not forward them unless it's ready\n    newTracks.forEach((publication) => {\n      this.emit(ParticipantEvent.TrackPublished, publication);\n    });\n    return true;\n  }\n\n  /** @internal */\n  unpublishTrack(sid: Track.SID, sendUnpublish?: boolean) {\n    const publication = <RemoteTrackPublication>this.tracks.get(sid);\n    if (!publication) {\n      return;\n    }\n\n    // also send unsubscribe, if track is actively subscribed\n    const { track } = publication;\n    if (track) {\n      track.stop();\n      publication.setTrack(undefined);\n    }\n\n    // remove track from maps only after unsubscribed has been fired\n    this.tracks.delete(sid);\n\n    // remove from the right type map\n    switch (publication.kind) {\n      case Track.Kind.Audio:\n        this.audioTracks.delete(sid);\n        break;\n      case Track.Kind.Video:\n        this.videoTracks.delete(sid);\n        break;\n      default:\n        break;\n    }\n\n    if (sendUnpublish) {\n      this.emit(ParticipantEvent.TrackUnpublished, publication);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  async setAudioOutput(output: AudioOutputOptions) {\n    this.audioOutput = output;\n    const promises: Promise<void>[] = [];\n    this.audioTracks.forEach((pub) => {\n      if (pub.track instanceof RemoteAudioTrack) {\n        promises.push(pub.track.setSinkId(output.deviceId ?? 'default'));\n      }\n    });\n    await Promise.all(promises);\n  }\n\n  /** @internal */\n  emit<E extends keyof ParticipantEventCallbacks>(\n    event: E,\n    ...args: Parameters<ParticipantEventCallbacks[E]>\n  ): boolean {\n    this.log.trace('participant event', { ...this.logContext, event, args });\n    return super.emit(event, ...args);\n  }\n}\n", "import type { InternalRoomOptions } from '../../options';\nimport {\n  DataPacket,\n  DataPacket_Kind,\n  Encryption_Type,\n  ParticipantInfo,\n  ParticipantPermission,\n  UserPacket,\n} from '../../proto/livekit_models_pb';\nimport {\n  AddTrackRequest,\n  SimulcastCodec,\n  SubscribedQualityUpdate,\n  TrackUnpublishedResponse,\n} from '../../proto/livekit_rtc_pb';\nimport { PCTransportState } from '../PCTransportManager';\nimport type RTCEngine from '../RTCEngine';\nimport { defaultVideoCodec } from '../defaults';\nimport { DeviceUnsupportedError, TrackInvalidError, UnexpectedConnectionState } from '../errors';\nimport { EngineEvent, ParticipantEvent, TrackEvent } from '../events';\nimport LocalAudioTrack from '../track/LocalAudioTrack';\nimport LocalTrack from '../track/LocalTrack';\nimport LocalTrackPublication from '../track/LocalTrackPublication';\nimport LocalVideoTrack, { videoLayersFromEncodings } from '../track/LocalVideoTrack';\nimport { Track } from '../track/Track';\nimport type {\n  AudioCaptureOptions,\n  BackupVideoCodec,\n  CreateLocalTracksOptions,\n  ScreenShareCaptureOptions,\n  TrackPublishOptions,\n  VideoCaptureOptions,\n} from '../track/options';\nimport { ScreenSharePresets, VideoPresets, isBackupCodec } from '../track/options';\nimport {\n  constraintsForOptions,\n  getLogContextFromTrack,\n  mergeDefaultOptions,\n  mimeTypeToVideoCodecString,\n  screenCaptureToDisplayMediaStreamOptions,\n} from '../track/utils';\nimport type { DataPublishOptions } from '../types';\nimport {\n  Future,\n  isFireFox,\n  isSVCCodec,\n  isSafari,\n  isSafari17,\n  isWeb,\n  supportsAV1,\n  supportsVP9,\n} from '../utils';\nimport Participant from './Participant';\nimport type { ParticipantTrackPermission } from './ParticipantTrackPermission';\nimport { trackPermissionToProto } from './ParticipantTrackPermission';\nimport RemoteParticipant from './RemoteParticipant';\nimport {\n  computeTrackBackupEncodings,\n  computeVideoEncodings,\n  mediaTrackToLocalTrack,\n} from './publishUtils';\n\nexport default class LocalParticipant extends Participant {\n  audioTracks: Map<string, LocalTrackPublication>;\n\n  videoTracks: Map<string, LocalTrackPublication>;\n\n  /** map of track sid => all published tracks */\n  tracks: Map<string, LocalTrackPublication>;\n\n  /** @internal */\n  engine: RTCEngine;\n\n  /** @internal */\n  activeDeviceMap: Map<MediaDeviceKind, string>;\n\n  private pendingPublishing = new Set<Track.Source>();\n\n  private pendingPublishPromises = new Map<LocalTrack, Promise<LocalTrackPublication>>();\n\n  private cameraError: Error | undefined;\n\n  private microphoneError: Error | undefined;\n\n  private participantTrackPermissions: Array<ParticipantTrackPermission> = [];\n\n  private allParticipantsAllowedToSubscribe: boolean = true;\n\n  // keep a pointer to room options\n  private roomOptions: InternalRoomOptions;\n\n  private encryptionType: Encryption_Type = Encryption_Type.NONE;\n\n  private reconnectFuture?: Future<void>;\n\n  /** @internal */\n  constructor(sid: string, identity: string, engine: RTCEngine, options: InternalRoomOptions) {\n    super(sid, identity, undefined, undefined, {\n      loggerName: options.loggerName,\n      loggerContextCb: () => this.engine.logContext,\n    });\n    this.audioTracks = new Map();\n    this.videoTracks = new Map();\n    this.tracks = new Map();\n    this.engine = engine;\n    this.roomOptions = options;\n    this.setupEngine(engine);\n    this.activeDeviceMap = new Map();\n  }\n\n  get lastCameraError(): Error | undefined {\n    return this.cameraError;\n  }\n\n  get lastMicrophoneError(): Error | undefined {\n    return this.microphoneError;\n  }\n\n  get isE2EEEnabled(): boolean {\n    return this.encryptionType !== Encryption_Type.NONE;\n  }\n\n  getTrack(source: Track.Source): LocalTrackPublication | undefined {\n    const track = super.getTrack(source);\n    if (track) {\n      return track as LocalTrackPublication;\n    }\n  }\n\n  getTrackByName(name: string): LocalTrackPublication | undefined {\n    const track = super.getTrackByName(name);\n    if (track) {\n      return track as LocalTrackPublication;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  setupEngine(engine: RTCEngine) {\n    this.engine = engine;\n    this.engine.on(EngineEvent.RemoteMute, (trackSid: string, muted: boolean) => {\n      const pub = this.tracks.get(trackSid);\n      if (!pub || !pub.track) {\n        return;\n      }\n      if (muted) {\n        pub.mute();\n      } else {\n        pub.unmute();\n      }\n    });\n\n    this.engine\n      .on(EngineEvent.Connected, this.handleReconnected)\n      .on(EngineEvent.SignalRestarted, this.handleReconnected)\n      .on(EngineEvent.SignalResumed, this.handleReconnected)\n      .on(EngineEvent.Restarting, this.handleReconnecting)\n      .on(EngineEvent.Resuming, this.handleReconnecting)\n      .on(EngineEvent.LocalTrackUnpublished, this.handleLocalTrackUnpublished)\n      .on(EngineEvent.SubscribedQualityUpdate, this.handleSubscribedQualityUpdate)\n      .on(EngineEvent.Disconnected, this.handleDisconnected);\n  }\n\n  private handleReconnecting = () => {\n    if (!this.reconnectFuture) {\n      this.reconnectFuture = new Future<void>();\n    }\n  };\n\n  private handleReconnected = () => {\n    this.reconnectFuture?.resolve?.();\n    this.reconnectFuture = undefined;\n    this.updateTrackSubscriptionPermissions();\n  };\n\n  private handleDisconnected = () => {\n    if (this.reconnectFuture) {\n      this.reconnectFuture.promise.catch((e) => this.log.warn(e.message, this.logContext));\n      this.reconnectFuture?.reject?.('Got disconnected during reconnection attempt');\n      this.reconnectFuture = undefined;\n    }\n  };\n\n  /**\n   * Sets and updates the metadata of the local participant.\n   * The change does not take immediate effect.\n   * If successful, a `ParticipantEvent.MetadataChanged` event will be emitted on the local participant.\n   * Note: this requires `canUpdateOwnMetadata` permission.\n   * @param metadata\n   */\n  setMetadata(metadata: string): void {\n    this.engine.client.sendUpdateLocalMetadata(metadata, this.name ?? '');\n  }\n\n  /**\n   * Sets and updates the name of the local participant.\n   * The change does not take immediate effect.\n   * If successful, a `ParticipantEvent.ParticipantNameChanged` event will be emitted on the local participant.\n   * Note: this requires `canUpdateOwnMetadata` permission.\n   * @param metadata\n   */\n  setName(name: string): void {\n    this.engine.client.sendUpdateLocalMetadata(this.metadata ?? '', name);\n  }\n\n  /**\n   * Enable or disable a participant's camera track.\n   *\n   * If a track has already published, it'll mute or unmute the track.\n   * Resolves with a `LocalTrackPublication` instance if successful and `undefined` otherwise\n   */\n  setCameraEnabled(\n    enabled: boolean,\n    options?: VideoCaptureOptions,\n    publishOptions?: TrackPublishOptions,\n  ): Promise<LocalTrackPublication | undefined> {\n    return this.setTrackEnabled(Track.Source.Camera, enabled, options, publishOptions);\n  }\n\n  /**\n   * Enable or disable a participant's microphone track.\n   *\n   * If a track has already published, it'll mute or unmute the track.\n   * Resolves with a `LocalTrackPublication` instance if successful and `undefined` otherwise\n   */\n  setMicrophoneEnabled(\n    enabled: boolean,\n    options?: AudioCaptureOptions,\n    publishOptions?: TrackPublishOptions,\n  ): Promise<LocalTrackPublication | undefined> {\n    return this.setTrackEnabled(Track.Source.Microphone, enabled, options, publishOptions);\n  }\n\n  /**\n   * Start or stop sharing a participant's screen\n   * Resolves with a `LocalTrackPublication` instance if successful and `undefined` otherwise\n   */\n  setScreenShareEnabled(\n    enabled: boolean,\n    options?: ScreenShareCaptureOptions,\n    publishOptions?: TrackPublishOptions,\n  ): Promise<LocalTrackPublication | undefined> {\n    return this.setTrackEnabled(Track.Source.ScreenShare, enabled, options, publishOptions);\n  }\n\n  /** @internal */\n  setPermissions(permissions: ParticipantPermission): boolean {\n    const prevPermissions = this.permissions;\n    const changed = super.setPermissions(permissions);\n    if (changed && prevPermissions) {\n      this.emit(ParticipantEvent.ParticipantPermissionsChanged, prevPermissions);\n    }\n    return changed;\n  }\n\n  /** @internal */\n  async setE2EEEnabled(enabled: boolean) {\n    this.encryptionType = enabled ? Encryption_Type.GCM : Encryption_Type.NONE;\n    await this.republishAllTracks(undefined, false);\n  }\n\n  /**\n   * Enable or disable publishing for a track by source. This serves as a simple\n   * way to manage the common tracks (camera, mic, or screen share).\n   * Resolves with LocalTrackPublication if successful and void otherwise\n   */\n  private async setTrackEnabled(\n    source: Extract<Track.Source, Track.Source.Camera>,\n    enabled: boolean,\n    options?: VideoCaptureOptions,\n    publishOptions?: TrackPublishOptions,\n  ): Promise<LocalTrackPublication | undefined>;\n  private async setTrackEnabled(\n    source: Extract<Track.Source, Track.Source.Microphone>,\n    enabled: boolean,\n    options?: AudioCaptureOptions,\n    publishOptions?: TrackPublishOptions,\n  ): Promise<LocalTrackPublication | undefined>;\n  private async setTrackEnabled(\n    source: Extract<Track.Source, Track.Source.ScreenShare>,\n    enabled: boolean,\n    options?: ScreenShareCaptureOptions,\n    publishOptions?: TrackPublishOptions,\n  ): Promise<LocalTrackPublication | undefined>;\n  private async setTrackEnabled(\n    source: Track.Source,\n    enabled: true,\n    options?: VideoCaptureOptions | AudioCaptureOptions | ScreenShareCaptureOptions,\n    publishOptions?: TrackPublishOptions,\n  ) {\n    this.log.debug('setTrackEnabled', { ...this.logContext, source, enabled });\n    let track = this.getTrack(source);\n    if (enabled) {\n      if (track) {\n        await track.unmute();\n      } else {\n        let localTracks: Array<LocalTrack> | undefined;\n        if (this.pendingPublishing.has(source)) {\n          this.log.info('skipping duplicate published source', { ...this.logContext, source });\n          // no-op it's already been requested\n          return;\n        }\n        this.pendingPublishing.add(source);\n        try {\n          switch (source) {\n            case Track.Source.Camera:\n              localTracks = await this.createTracks({\n                video: (options as VideoCaptureOptions | undefined) ?? true,\n              });\n\n              break;\n            case Track.Source.Microphone:\n              localTracks = await this.createTracks({\n                audio: (options as AudioCaptureOptions | undefined) ?? true,\n              });\n              break;\n            case Track.Source.ScreenShare:\n              localTracks = await this.createScreenTracks({\n                ...(options as ScreenShareCaptureOptions | undefined),\n              });\n              break;\n            default:\n              throw new TrackInvalidError(source);\n          }\n          const publishPromises: Array<Promise<LocalTrackPublication>> = [];\n          for (const localTrack of localTracks) {\n            this.log.info('publishing track', {\n              ...this.logContext,\n              ...getLogContextFromTrack(localTrack),\n            });\n            publishPromises.push(this.publishTrack(localTrack, publishOptions));\n          }\n          const publishedTracks = await Promise.all(publishPromises);\n          // for screen share publications including audio, this will only return the screen share publication, not the screen share audio one\n          // revisit if we want to return an array of tracks instead for v2\n          [track] = publishedTracks;\n        } catch (e) {\n          localTracks?.forEach((tr) => {\n            tr.stop();\n          });\n          if (e instanceof Error && !(e instanceof TrackInvalidError)) {\n            this.emit(ParticipantEvent.MediaDevicesError, e);\n          }\n          throw e;\n        } finally {\n          this.pendingPublishing.delete(source);\n        }\n      }\n    } else if (track && track.track) {\n      // screenshare cannot be muted, unpublish instead\n      if (source === Track.Source.ScreenShare) {\n        track = await this.unpublishTrack(track.track);\n        const screenAudioTrack = this.getTrack(Track.Source.ScreenShareAudio);\n        if (screenAudioTrack && screenAudioTrack.track) {\n          this.unpublishTrack(screenAudioTrack.track);\n        }\n      } else {\n        await track.mute();\n      }\n    }\n    return track;\n  }\n\n  /**\n   * Publish both camera and microphone at the same time. This is useful for\n   * displaying a single Permission Dialog box to the end user.\n   */\n  async enableCameraAndMicrophone() {\n    if (\n      this.pendingPublishing.has(Track.Source.Camera) ||\n      this.pendingPublishing.has(Track.Source.Microphone)\n    ) {\n      // no-op it's already been requested\n      return;\n    }\n\n    this.pendingPublishing.add(Track.Source.Camera);\n    this.pendingPublishing.add(Track.Source.Microphone);\n    try {\n      const tracks: LocalTrack[] = await this.createTracks({\n        audio: true,\n        video: true,\n      });\n\n      await Promise.all(tracks.map((track) => this.publishTrack(track)));\n    } finally {\n      this.pendingPublishing.delete(Track.Source.Camera);\n      this.pendingPublishing.delete(Track.Source.Microphone);\n    }\n  }\n\n  /**\n   * Create local camera and/or microphone tracks\n   * @param options\n   * @returns\n   */\n  async createTracks(options?: CreateLocalTracksOptions): Promise<LocalTrack[]> {\n    const opts = mergeDefaultOptions(\n      options,\n      this.roomOptions?.audioCaptureDefaults,\n      this.roomOptions?.videoCaptureDefaults,\n    );\n\n    const constraints = constraintsForOptions(opts);\n    let stream: MediaStream | undefined;\n    try {\n      stream = await navigator.mediaDevices.getUserMedia(constraints);\n    } catch (err) {\n      if (err instanceof Error) {\n        if (constraints.audio) {\n          this.microphoneError = err;\n        }\n        if (constraints.video) {\n          this.cameraError = err;\n        }\n      }\n\n      throw err;\n    }\n\n    if (constraints.audio) {\n      this.microphoneError = undefined;\n      this.emit(ParticipantEvent.AudioStreamAcquired);\n    }\n    if (constraints.video) {\n      this.cameraError = undefined;\n    }\n\n    return stream.getTracks().map((mediaStreamTrack) => {\n      const isAudio = mediaStreamTrack.kind === 'audio';\n      let trackOptions = isAudio ? options!.audio : options!.video;\n      if (typeof trackOptions === 'boolean' || !trackOptions) {\n        trackOptions = {};\n      }\n      let trackConstraints: MediaTrackConstraints | undefined;\n      const conOrBool = isAudio ? constraints.audio : constraints.video;\n      if (typeof conOrBool !== 'boolean') {\n        trackConstraints = conOrBool;\n      }\n      const track = mediaTrackToLocalTrack(mediaStreamTrack, trackConstraints, {\n        loggerName: this.roomOptions.loggerName,\n        loggerContextCb: () => this.logContext,\n      });\n      if (track.kind === Track.Kind.Video) {\n        track.source = Track.Source.Camera;\n      } else if (track.kind === Track.Kind.Audio) {\n        track.source = Track.Source.Microphone;\n      }\n      track.mediaStream = stream;\n      return track;\n    });\n  }\n\n  /**\n   * Creates a screen capture tracks with getDisplayMedia().\n   * A LocalVideoTrack is always created and returned.\n   * If { audio: true }, and the browser supports audio capture, a LocalAudioTrack is also created.\n   */\n  async createScreenTracks(options?: ScreenShareCaptureOptions): Promise<Array<LocalTrack>> {\n    if (options === undefined) {\n      options = {};\n    }\n\n    if (navigator.mediaDevices.getDisplayMedia === undefined) {\n      throw new DeviceUnsupportedError('getDisplayMedia not supported');\n    }\n\n    if (options.resolution === undefined && !isSafari17()) {\n      // we need to constrain the dimensions, otherwise it could lead to low bitrate\n      // due to encoding a huge video. Encoding such large surfaces is really expensive\n      // unfortunately Safari 17 has a but and cannot be constrained by default\n      options.resolution = ScreenSharePresets.h1080fps30.resolution;\n    }\n\n    const constraints = screenCaptureToDisplayMediaStreamOptions(options);\n    const stream: MediaStream = await navigator.mediaDevices.getDisplayMedia(constraints);\n\n    const tracks = stream.getVideoTracks();\n    if (tracks.length === 0) {\n      throw new TrackInvalidError('no video track found');\n    }\n    const screenVideo = new LocalVideoTrack(tracks[0], undefined, false, {\n      loggerName: this.roomOptions.loggerName,\n      loggerContextCb: () => this.logContext,\n    });\n    screenVideo.source = Track.Source.ScreenShare;\n    if (options.contentHint) {\n      screenVideo.mediaStreamTrack.contentHint = options.contentHint;\n    }\n\n    const localTracks: Array<LocalTrack> = [screenVideo];\n    if (stream.getAudioTracks().length > 0) {\n      this.emit(ParticipantEvent.AudioStreamAcquired);\n      const screenAudio = new LocalAudioTrack(\n        stream.getAudioTracks()[0],\n        undefined,\n        false,\n        this.audioContext,\n        { loggerName: this.roomOptions.loggerName, loggerContextCb: () => this.logContext },\n      );\n      screenAudio.source = Track.Source.ScreenShareAudio;\n      localTracks.push(screenAudio);\n    }\n    return localTracks;\n  }\n\n  /**\n   * Publish a new track to the room\n   * @param track\n   * @param options\n   */\n  async publishTrack(\n    track: LocalTrack | MediaStreamTrack,\n    options?: TrackPublishOptions,\n  ): Promise<LocalTrackPublication> {\n    await this.reconnectFuture?.promise;\n    if (track instanceof LocalTrack && this.pendingPublishPromises.has(track)) {\n      await this.pendingPublishPromises.get(track);\n    }\n    let defaultConstraints: MediaTrackConstraints | undefined;\n    if (track instanceof MediaStreamTrack) {\n      defaultConstraints = track.getConstraints();\n    } else {\n      // we want to access constraints directly as `track.mediaStreamTrack`\n      // might be pointing to a non-device track (e.g. processed track) already\n      defaultConstraints = track.constraints;\n      let deviceKind: MediaDeviceKind | undefined = undefined;\n      switch (track.source) {\n        case Track.Source.Microphone:\n          deviceKind = 'audioinput';\n          break;\n        case Track.Source.Camera:\n          deviceKind = 'videoinput';\n        default:\n          break;\n      }\n      if (deviceKind && this.activeDeviceMap.has(deviceKind)) {\n        defaultConstraints = {\n          ...defaultConstraints,\n          deviceId: this.activeDeviceMap.get(deviceKind),\n        };\n      }\n    }\n    // convert raw media track into audio or video track\n    if (track instanceof MediaStreamTrack) {\n      switch (track.kind) {\n        case 'audio':\n          track = new LocalAudioTrack(track, defaultConstraints, true, this.audioContext, {\n            loggerName: this.roomOptions.loggerName,\n            loggerContextCb: () => this.logContext,\n          });\n          break;\n        case 'video':\n          track = new LocalVideoTrack(track, defaultConstraints, true, {\n            loggerName: this.roomOptions.loggerName,\n            loggerContextCb: () => this.logContext,\n          });\n          break;\n        default:\n          throw new TrackInvalidError(`unsupported MediaStreamTrack kind ${track.kind}`);\n      }\n    } else {\n      track.updateLoggerOptions({\n        loggerName: this.roomOptions.loggerName,\n        loggerContextCb: () => this.logContext,\n      });\n    }\n\n    if (track instanceof LocalAudioTrack) {\n      track.setAudioContext(this.audioContext);\n    }\n\n    // is it already published? if so skip\n    let existingPublication: LocalTrackPublication | undefined;\n    this.tracks.forEach((publication) => {\n      if (!publication.track) {\n        return;\n      }\n      if (publication.track === track) {\n        existingPublication = <LocalTrackPublication>publication;\n      }\n    });\n\n    if (existingPublication) {\n      this.log.warn('track has already been published, skipping', {\n        ...this.logContext,\n        ...getLogContextFromTrack(existingPublication),\n      });\n      return existingPublication;\n    }\n\n    const isStereoInput =\n      ('channelCount' in track.mediaStreamTrack.getSettings() &&\n        // @ts-ignore `channelCount` on getSettings() is currently only available for Safari, but is generally the best way to determine a stereo track https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackSettings/channelCount\n        track.mediaStreamTrack.getSettings().channelCount === 2) ||\n      track.mediaStreamTrack.getConstraints().channelCount === 2;\n    const isStereo = options?.forceStereo ?? isStereoInput;\n\n    // disable dtx for stereo track if not enabled explicitly\n    if (isStereo) {\n      if (!options) {\n        options = {};\n      }\n      if (options.dtx === undefined) {\n        this.log.info(\n          `Opus DTX will be disabled for stereo tracks by default. Enable them explicitly to make it work.`,\n          {\n            ...this.logContext,\n            ...getLogContextFromTrack(track),\n          },\n        );\n      }\n      if (options.red === undefined) {\n        this.log.info(\n          `Opus RED will be disabled for stereo tracks by default. Enable them explicitly to make it work.`,\n        );\n      }\n      options.dtx ??= false;\n      options.red ??= false;\n    }\n    const opts: TrackPublishOptions = {\n      ...this.roomOptions.publishDefaults,\n      ...options,\n    };\n\n    // disable simulcast if e2ee is set on safari\n    if (isSafari() && this.roomOptions.e2ee) {\n      this.log.info(\n        `End-to-end encryption is set up, simulcast publishing will be disabled on Safari`,\n        {\n          ...this.logContext,\n        },\n      );\n      opts.simulcast = false;\n    }\n\n    if (opts.source) {\n      track.source = opts.source;\n    }\n    const publishPromise = this.publish(track, opts, isStereo);\n    this.pendingPublishPromises.set(track, publishPromise);\n    try {\n      const publication = await publishPromise;\n      return publication;\n    } catch (e) {\n      throw e;\n    } finally {\n      this.pendingPublishPromises.delete(track);\n    }\n  }\n\n  private async publish(track: LocalTrack, opts: TrackPublishOptions, isStereo: boolean) {\n    const existingTrackOfSource = Array.from(this.tracks.values()).find(\n      (publishedTrack) => track instanceof LocalTrack && publishedTrack.source === track.source,\n    );\n    if (existingTrackOfSource && track.source !== Track.Source.Unknown) {\n      this.log.info(`publishing a second track with the same source: ${track.source}`, {\n        ...this.logContext,\n        ...getLogContextFromTrack(track),\n      });\n    }\n    if (opts.stopMicTrackOnMute && track instanceof LocalAudioTrack) {\n      track.stopOnMute = true;\n    }\n\n    if (track.source === Track.Source.ScreenShare && isFireFox()) {\n      // Firefox does not work well with simulcasted screen share\n      // we frequently get no data on layer 0 when enabled\n      opts.simulcast = false;\n    }\n\n    // require full AV1/VP9 SVC support prior to using it\n    if (opts.videoCodec === 'av1' && !supportsAV1()) {\n      opts.videoCodec = undefined;\n    }\n    if (opts.videoCodec === 'vp9' && !supportsVP9()) {\n      opts.videoCodec = undefined;\n    }\n    if (opts.videoCodec === undefined) {\n      opts.videoCodec = defaultVideoCodec;\n    }\n    const videoCodec = opts.videoCodec;\n\n    // handle track actions\n    track.on(TrackEvent.Muted, this.onTrackMuted);\n    track.on(TrackEvent.Unmuted, this.onTrackUnmuted);\n    track.on(TrackEvent.Ended, this.handleTrackEnded);\n    track.on(TrackEvent.UpstreamPaused, this.onTrackUpstreamPaused);\n    track.on(TrackEvent.UpstreamResumed, this.onTrackUpstreamResumed);\n\n    // create track publication from track\n    const req = new AddTrackRequest({\n      // get local track id for use during publishing\n      cid: track.mediaStreamTrack.id,\n      name: opts.name,\n      type: Track.kindToProto(track.kind),\n      muted: track.isMuted,\n      source: Track.sourceToProto(track.source),\n      disableDtx: !(opts.dtx ?? true),\n      encryption: this.encryptionType,\n      stereo: isStereo,\n      disableRed: this.isE2EEEnabled || !(opts.red ?? true),\n      stream: opts?.stream,\n    });\n\n    // compute encodings and layers for video\n    let encodings: RTCRtpEncodingParameters[] | undefined;\n    if (track.kind === Track.Kind.Video) {\n      let dims: Track.Dimensions = {\n        width: 0,\n        height: 0,\n      };\n      try {\n        dims = await track.waitForDimensions();\n      } catch (e) {\n        // use defaults, it's quite painful for congestion control without simulcast\n        // so using default dims according to publish settings\n        const defaultRes =\n          this.roomOptions.videoCaptureDefaults?.resolution ?? VideoPresets.h720.resolution;\n        dims = {\n          width: defaultRes.width,\n          height: defaultRes.height,\n        };\n        // log failure\n        this.log.error('could not determine track dimensions, using defaults', {\n          ...this.logContext,\n          ...getLogContextFromTrack(track),\n          dims,\n        });\n      }\n      // width and height should be defined for video\n      req.width = dims.width;\n      req.height = dims.height;\n      // for svc codecs, disable simulcast and use vp8 for backup codec\n      if (track instanceof LocalVideoTrack) {\n        if (isSVCCodec(videoCodec)) {\n          // vp9 svc with screenshare has problem to encode, always use L1T3 here\n          if (track.source === Track.Source.ScreenShare && videoCodec === 'vp9') {\n            opts.scalabilityMode = 'L1T3';\n          }\n          // set scalabilityMode to 'L3T3_KEY' by default\n          opts.scalabilityMode = opts.scalabilityMode ?? 'L3T3_KEY';\n        }\n\n        req.simulcastCodecs = [\n          new SimulcastCodec({\n            codec: videoCodec,\n            cid: track.mediaStreamTrack.id,\n          }),\n        ];\n\n        // set up backup\n        if (opts.backupCodec === true) {\n          opts.backupCodec = { codec: defaultVideoCodec };\n        }\n        if (\n          opts.backupCodec &&\n          videoCodec !== opts.backupCodec.codec &&\n          // TODO remove this once e2ee is supported for backup codecs\n          req.encryption === Encryption_Type.NONE\n        ) {\n          // multi-codec simulcast requires dynacast\n          if (!this.roomOptions.dynacast) {\n            this.roomOptions.dynacast = true;\n          }\n          req.simulcastCodecs.push(\n            new SimulcastCodec({\n              codec: opts.backupCodec.codec,\n              cid: '',\n            }),\n          );\n        }\n      }\n\n      encodings = computeVideoEncodings(\n        track.source === Track.Source.ScreenShare,\n        req.width,\n        req.height,\n        opts,\n      );\n      req.layers = videoLayersFromEncodings(\n        req.width,\n        req.height,\n        encodings,\n        isSVCCodec(opts.videoCodec),\n      );\n    } else if (track.kind === Track.Kind.Audio) {\n      encodings = [\n        {\n          maxBitrate: opts.audioPreset?.maxBitrate ?? opts.audioBitrate,\n          priority: opts.audioPreset?.priority ?? 'high',\n          networkPriority: opts.audioPreset?.priority ?? 'high',\n        },\n      ];\n    }\n\n    if (!this.engine || this.engine.isClosed) {\n      throw new UnexpectedConnectionState('cannot publish track when not connected');\n    }\n\n    const ti = await this.engine.addTrack(req);\n    // server might not support the codec the client has requested, in that case, fallback\n    // to a supported codec\n    let primaryCodecMime: string | undefined;\n    ti.codecs.forEach((codec) => {\n      if (primaryCodecMime === undefined) {\n        primaryCodecMime = codec.mimeType;\n      }\n    });\n    if (primaryCodecMime && track.kind === Track.Kind.Video) {\n      const updatedCodec = mimeTypeToVideoCodecString(primaryCodecMime);\n      if (updatedCodec !== videoCodec) {\n        this.log.debug('falling back to server selected codec', {\n          ...this.logContext,\n          ...getLogContextFromTrack(track),\n          codec: updatedCodec,\n        });\n        /* @ts-ignore */\n        opts.videoCodec = updatedCodec;\n\n        // recompute encodings since bitrates/etc could have changed\n        encodings = computeVideoEncodings(\n          track.source === Track.Source.ScreenShare,\n          req.width,\n          req.height,\n          opts,\n        );\n      }\n    }\n\n    const publication = new LocalTrackPublication(track.kind, ti, track, {\n      loggerName: this.roomOptions.loggerName,\n      loggerContextCb: () => this.logContext,\n    });\n    // save options for when it needs to be republished again\n    publication.options = opts;\n    track.sid = ti.sid;\n\n    if (!this.engine.pcManager) {\n      throw new UnexpectedConnectionState('pcManager is not ready');\n    }\n    this.log.debug(`publishing ${track.kind} with encodings`, {\n      ...this.logContext,\n      encodings,\n      trackInfo: ti,\n    });\n\n    track.sender = await this.engine.createSender(track, opts, encodings);\n\n    if (encodings) {\n      if (isFireFox() && track.kind === Track.Kind.Audio) {\n        /* Refer to RFC https://datatracker.ietf.org/doc/html/rfc7587#section-6.1,\n           livekit-server uses maxaveragebitrate=510000 in the answer sdp to permit client to\n           publish high quality audio track. But firefox always uses this value as the actual\n           bitrates, causing the audio bitrates to rise to 510Kbps in any stereo case unexpectedly.\n           So the client need to modify maxaverragebitrates in answer sdp to user provided value to\n           fix the issue.\n         */\n        let trackTransceiver: RTCRtpTransceiver | undefined = undefined;\n        for (const transceiver of this.engine.pcManager.publisher.getTransceivers()) {\n          if (transceiver.sender === track.sender) {\n            trackTransceiver = transceiver;\n            break;\n          }\n        }\n        if (trackTransceiver) {\n          this.engine.pcManager.publisher.setTrackCodecBitrate({\n            transceiver: trackTransceiver,\n            codec: 'opus',\n            maxbr: encodings[0]?.maxBitrate ? encodings[0].maxBitrate / 1000 : 0,\n          });\n        }\n      } else if (track.codec && isSVCCodec(track.codec) && encodings[0]?.maxBitrate) {\n        this.engine.pcManager.publisher.setTrackCodecBitrate({\n          cid: req.cid,\n          codec: track.codec,\n          maxbr: encodings[0].maxBitrate / 1000,\n        });\n      }\n    }\n\n    await this.engine.negotiate();\n\n    if (track instanceof LocalVideoTrack) {\n      track.startMonitor(this.engine.client);\n    } else if (track instanceof LocalAudioTrack) {\n      track.startMonitor();\n    }\n\n    this.addTrackPublication(publication);\n\n    // send event for publication\n    this.emit(ParticipantEvent.LocalTrackPublished, publication);\n    return publication;\n  }\n\n  override get isLocal(): boolean {\n    return true;\n  }\n\n  /** @internal\n   * publish additional codec to existing track\n   */\n  async publishAdditionalCodecForTrack(\n    track: LocalTrack | MediaStreamTrack,\n    videoCodec: BackupVideoCodec,\n    options?: TrackPublishOptions,\n  ) {\n    // TODO remove once e2ee is supported for backup tracks\n    if (this.encryptionType !== Encryption_Type.NONE) {\n      return;\n    }\n\n    // is it not published? if so skip\n    let existingPublication: LocalTrackPublication | undefined;\n    this.tracks.forEach((publication) => {\n      if (!publication.track) {\n        return;\n      }\n      if (publication.track === track) {\n        existingPublication = <LocalTrackPublication>publication;\n      }\n    });\n    if (!existingPublication) {\n      throw new TrackInvalidError('track is not published');\n    }\n\n    if (!(track instanceof LocalVideoTrack)) {\n      throw new TrackInvalidError('track is not a video track');\n    }\n\n    const opts: TrackPublishOptions = {\n      ...this.roomOptions?.publishDefaults,\n      ...options,\n    };\n\n    const encodings = computeTrackBackupEncodings(track, videoCodec, opts);\n    if (!encodings) {\n      this.log.info(\n        `backup codec has been disabled, ignoring request to add additional codec for track`,\n        {\n          ...this.logContext,\n          ...getLogContextFromTrack(track),\n        },\n      );\n      return;\n    }\n    const simulcastTrack = track.addSimulcastTrack(videoCodec, encodings);\n    const req = new AddTrackRequest({\n      cid: simulcastTrack.mediaStreamTrack.id,\n      type: Track.kindToProto(track.kind),\n      muted: track.isMuted,\n      source: Track.sourceToProto(track.source),\n      sid: track.sid,\n      simulcastCodecs: [\n        {\n          codec: opts.videoCodec,\n          cid: simulcastTrack.mediaStreamTrack.id,\n        },\n      ],\n    });\n    req.layers = videoLayersFromEncodings(req.width, req.height, encodings);\n\n    if (!this.engine || this.engine.isClosed) {\n      throw new UnexpectedConnectionState('cannot publish track when not connected');\n    }\n\n    const ti = await this.engine.addTrack(req);\n\n    const transceiverInit: RTCRtpTransceiverInit = { direction: 'sendonly' };\n    if (encodings) {\n      transceiverInit.sendEncodings = encodings;\n    }\n    await this.engine.createSimulcastSender(track, simulcastTrack, opts, encodings);\n\n    await this.engine.negotiate();\n    this.log.debug(`published ${videoCodec} for track ${track.sid}`, {\n      ...this.logContext,\n      encodings,\n      trackInfo: ti,\n    });\n  }\n\n  async unpublishTrack(\n    track: LocalTrack | MediaStreamTrack,\n    stopOnUnpublish?: boolean,\n  ): Promise<LocalTrackPublication | undefined> {\n    // look through all published tracks to find the right ones\n    const publication = this.getPublicationForTrack(track);\n\n    const pubLogContext = publication ? getLogContextFromTrack(publication) : undefined;\n\n    this.log.debug('unpublishing track', {\n      ...this.logContext,\n      ...pubLogContext,\n    });\n\n    if (!publication || !publication.track) {\n      this.log.warn('track was not unpublished because no publication was found', {\n        ...this.logContext,\n        ...pubLogContext,\n      });\n      return undefined;\n    }\n\n    track = publication.track;\n    track.off(TrackEvent.Muted, this.onTrackMuted);\n    track.off(TrackEvent.Unmuted, this.onTrackUnmuted);\n    track.off(TrackEvent.Ended, this.handleTrackEnded);\n    track.off(TrackEvent.UpstreamPaused, this.onTrackUpstreamPaused);\n    track.off(TrackEvent.UpstreamResumed, this.onTrackUpstreamResumed);\n\n    if (stopOnUnpublish === undefined) {\n      stopOnUnpublish = this.roomOptions?.stopLocalTrackOnUnpublish ?? true;\n    }\n    if (stopOnUnpublish) {\n      track.stop();\n    }\n\n    let negotiationNeeded = false;\n    const trackSender = track.sender;\n    track.sender = undefined;\n    if (\n      this.engine.pcManager &&\n      this.engine.pcManager.currentState < PCTransportState.FAILED &&\n      trackSender\n    ) {\n      try {\n        for (const transceiver of this.engine.pcManager.publisher.getTransceivers()) {\n          // if sender is not currently sending (after replaceTrack(null))\n          // removeTrack would have no effect.\n          // to ensure we end up successfully removing the track, manually set\n          // the transceiver to inactive\n          if (transceiver.sender === trackSender) {\n            transceiver.direction = 'inactive';\n            negotiationNeeded = true;\n          }\n        }\n        if (this.engine.removeTrack(trackSender)) {\n          negotiationNeeded = true;\n        }\n        if (track instanceof LocalVideoTrack) {\n          for (const [, trackInfo] of track.simulcastCodecs) {\n            if (trackInfo.sender) {\n              if (this.engine.removeTrack(trackInfo.sender)) {\n                negotiationNeeded = true;\n              }\n              trackInfo.sender = undefined;\n            }\n          }\n          track.simulcastCodecs.clear();\n        }\n      } catch (e) {\n        this.log.warn('failed to unpublish track', {\n          ...this.logContext,\n          ...pubLogContext,\n          error: e,\n        });\n      }\n    }\n\n    // remove from our maps\n    this.tracks.delete(publication.trackSid);\n    switch (publication.kind) {\n      case Track.Kind.Audio:\n        this.audioTracks.delete(publication.trackSid);\n        break;\n      case Track.Kind.Video:\n        this.videoTracks.delete(publication.trackSid);\n        break;\n      default:\n        break;\n    }\n\n    this.emit(ParticipantEvent.LocalTrackUnpublished, publication);\n    publication.setTrack(undefined);\n\n    if (negotiationNeeded) {\n      await this.engine.negotiate();\n    }\n    return publication;\n  }\n\n  async unpublishTracks(\n    tracks: LocalTrack[] | MediaStreamTrack[],\n  ): Promise<LocalTrackPublication[]> {\n    const results = await Promise.all(tracks.map((track) => this.unpublishTrack(track)));\n    return results.filter(\n      (track) => track instanceof LocalTrackPublication,\n    ) as LocalTrackPublication[];\n  }\n\n  async republishAllTracks(options?: TrackPublishOptions, restartTracks: boolean = true) {\n    const localPubs: LocalTrackPublication[] = [];\n    this.tracks.forEach((pub) => {\n      if (pub.track) {\n        if (options) {\n          pub.options = { ...pub.options, ...options };\n        }\n        localPubs.push(pub);\n      }\n    });\n\n    await Promise.all(\n      localPubs.map(async (pub) => {\n        const track = pub.track!;\n        await this.unpublishTrack(track, false);\n        if (\n          restartTracks &&\n          !track.isMuted &&\n          track.source !== Track.Source.ScreenShare &&\n          track.source !== Track.Source.ScreenShareAudio &&\n          (track instanceof LocalAudioTrack || track instanceof LocalVideoTrack) &&\n          !track.isUserProvided\n        ) {\n          // generally we need to restart the track before publishing, often a full reconnect\n          // is necessary because computer had gone to sleep.\n          this.log.debug('restarting existing track', {\n            ...this.logContext,\n            track: pub.trackSid,\n          });\n          await track.restartTrack();\n        }\n        await this.publishTrack(track, pub.options);\n      }),\n    );\n  }\n\n  /**\n   * Publish a new data payload to the room. Data will be forwarded to each\n   * participant in the room if the destination field in publishOptions is empty\n   *\n   * @param data Uint8Array of the payload. To send string data, use TextEncoder.encode\n   * @param kind whether to send this as reliable or lossy.\n   * For data that you need delivery guarantee (such as chat messages), use Reliable.\n   * For data that should arrive as quickly as possible, but you are ok with dropped\n   * packets, use Lossy.\n   * @param publishOptions optionally specify a `topic` and `destination`\n   */\n  async publishData(\n    data: Uint8Array,\n    kind: DataPacket_Kind,\n    publishOptions?: DataPublishOptions,\n  ): Promise<void>;\n  /**\n   * Publish a new data payload to the room. Data will be forwarded to each\n   * participant in the room if the destination argument is empty\n   *\n   * @param data Uint8Array of the payload. To send string data, use TextEncoder.encode\n   * @param kind whether to send this as reliable or lossy.\n   * For data that you need delivery guarantee (such as chat messages), use Reliable.\n   * For data that should arrive as quickly as possible, but you are ok with dropped\n   * packets, use Lossy.\n   * @param destination the participants who will receive the message\n   */\n  async publishData(\n    data: Uint8Array,\n    kind: DataPacket_Kind,\n    destination?: RemoteParticipant[] | string[],\n  ): Promise<void>;\n\n  async publishData(\n    data: Uint8Array,\n    kind: DataPacket_Kind,\n    publishOptions: DataPublishOptions | RemoteParticipant[] | string[] = {},\n  ) {\n    const destination = Array.isArray(publishOptions)\n      ? publishOptions\n      : publishOptions?.destination;\n    const destinationSids: string[] = [];\n\n    const topic = !Array.isArray(publishOptions) ? publishOptions.topic : undefined;\n\n    if (destination !== undefined) {\n      destination.forEach((val: any) => {\n        if (val instanceof RemoteParticipant) {\n          destinationSids.push(val.sid);\n        } else {\n          destinationSids.push(val);\n        }\n      });\n    }\n\n    const packet = new DataPacket({\n      kind,\n      value: {\n        case: 'user',\n        value: new UserPacket({\n          participantSid: this.sid,\n          payload: data,\n          destinationSids: destinationSids,\n          topic,\n        }),\n      },\n    });\n\n    await this.engine.sendDataPacket(packet, kind);\n  }\n\n  /**\n   * Control who can subscribe to LocalParticipant's published tracks.\n   *\n   * By default, all participants can subscribe. This allows fine-grained control over\n   * who is able to subscribe at a participant and track level.\n   *\n   * Note: if access is given at a track-level (i.e. both [allParticipantsAllowed] and\n   * [ParticipantTrackPermission.allTracksAllowed] are false), any newer published tracks\n   * will not grant permissions to any participants and will require a subsequent\n   * permissions update to allow subscription.\n   *\n   * @param allParticipantsAllowed Allows all participants to subscribe all tracks.\n   *  Takes precedence over [[participantTrackPermissions]] if set to true.\n   *  By default this is set to true.\n   * @param participantTrackPermissions Full list of individual permissions per\n   *  participant/track. Any omitted participants will not receive any permissions.\n   */\n  setTrackSubscriptionPermissions(\n    allParticipantsAllowed: boolean,\n    participantTrackPermissions: ParticipantTrackPermission[] = [],\n  ) {\n    this.participantTrackPermissions = participantTrackPermissions;\n    this.allParticipantsAllowedToSubscribe = allParticipantsAllowed;\n    if (!this.engine.client.isDisconnected) {\n      this.updateTrackSubscriptionPermissions();\n    }\n  }\n\n  /** @internal */\n  updateInfo(info: ParticipantInfo): boolean {\n    if (info.sid !== this.sid) {\n      // drop updates that specify a wrong sid.\n      // the sid for local participant is only explicitly set on join and full reconnect\n      return false;\n    }\n    if (!super.updateInfo(info)) {\n      return false;\n    }\n\n    // reconcile track mute status.\n    // if server's track mute status doesn't match actual, we'll have to update\n    // the server's copy\n    info.tracks.forEach((ti) => {\n      const pub = this.tracks.get(ti.sid);\n\n      if (pub) {\n        const mutedOnServer = pub.isMuted || (pub.track?.isUpstreamPaused ?? false);\n        if (mutedOnServer !== ti.muted) {\n          this.log.debug('updating server mute state after reconcile', {\n            ...this.logContext,\n            ...getLogContextFromTrack(pub),\n            mutedOnServer,\n          });\n          this.engine.client.sendMuteTrack(ti.sid, mutedOnServer);\n        }\n      }\n    });\n    return true;\n  }\n\n  private updateTrackSubscriptionPermissions = () => {\n    this.log.debug('updating track subscription permissions', {\n      ...this.logContext,\n      allParticipantsAllowed: this.allParticipantsAllowedToSubscribe,\n      participantTrackPermissions: this.participantTrackPermissions,\n    });\n    this.engine.client.sendUpdateSubscriptionPermissions(\n      this.allParticipantsAllowedToSubscribe,\n      this.participantTrackPermissions.map((p) => trackPermissionToProto(p)),\n    );\n  };\n\n  /** @internal */\n  private onTrackUnmuted = (track: LocalTrack) => {\n    this.onTrackMuted(track, track.isUpstreamPaused);\n  };\n\n  // when the local track changes in mute status, we'll notify server as such\n  /** @internal */\n  private onTrackMuted = (track: LocalTrack, muted?: boolean) => {\n    if (muted === undefined) {\n      muted = true;\n    }\n\n    if (!track.sid) {\n      this.log.error('could not update mute status for unpublished track', {\n        ...this.logContext,\n        ...getLogContextFromTrack(track),\n      });\n      return;\n    }\n\n    this.engine.updateMuteStatus(track.sid, muted);\n  };\n\n  private onTrackUpstreamPaused = (track: LocalTrack) => {\n    this.log.debug('upstream paused', {\n      ...this.logContext,\n      ...getLogContextFromTrack(track),\n    });\n    this.onTrackMuted(track, true);\n  };\n\n  private onTrackUpstreamResumed = (track: LocalTrack) => {\n    this.log.debug('upstream resumed', {\n      ...this.logContext,\n      ...getLogContextFromTrack(track),\n    });\n    this.onTrackMuted(track, track.isMuted);\n  };\n\n  private handleSubscribedQualityUpdate = async (update: SubscribedQualityUpdate) => {\n    if (!this.roomOptions?.dynacast) {\n      return;\n    }\n    const pub = this.videoTracks.get(update.trackSid);\n    if (!pub) {\n      this.log.warn('received subscribed quality update for unknown track', {\n        ...this.logContext,\n        trackSid: update.trackSid,\n      });\n      return;\n    }\n    if (update.subscribedCodecs.length > 0) {\n      if (!pub.videoTrack) {\n        return;\n      }\n      const newCodecs = await pub.videoTrack.setPublishingCodecs(update.subscribedCodecs);\n      for await (const codec of newCodecs) {\n        if (isBackupCodec(codec)) {\n          this.log.debug(`publish ${codec} for ${pub.videoTrack.sid}`, {\n            ...this.logContext,\n            ...getLogContextFromTrack(pub),\n          });\n          await this.publishAdditionalCodecForTrack(pub.videoTrack, codec, pub.options);\n        }\n      }\n    } else if (update.subscribedQualities.length > 0) {\n      await pub.videoTrack?.setPublishingLayers(update.subscribedQualities);\n    }\n  };\n\n  private handleLocalTrackUnpublished = (unpublished: TrackUnpublishedResponse) => {\n    const track = this.tracks.get(unpublished.trackSid);\n    if (!track) {\n      this.log.warn('received unpublished event for unknown track', {\n        ...this.logContext,\n        trackSid: unpublished.trackSid,\n      });\n      return;\n    }\n    this.unpublishTrack(track.track!);\n  };\n\n  private handleTrackEnded = async (track: LocalTrack) => {\n    if (\n      track.source === Track.Source.ScreenShare ||\n      track.source === Track.Source.ScreenShareAudio\n    ) {\n      this.log.debug('unpublishing local track due to TrackEnded', {\n        ...this.logContext,\n        ...getLogContextFromTrack(track),\n      });\n      this.unpublishTrack(track);\n    } else if (track.isUserProvided) {\n      await track.mute();\n    } else if (track instanceof LocalAudioTrack || track instanceof LocalVideoTrack) {\n      try {\n        if (isWeb()) {\n          try {\n            const currentPermissions = await navigator?.permissions.query({\n              // the permission query for camera and microphone currently not supported in Safari and Firefox\n              // @ts-ignore\n              name: track.source === Track.Source.Camera ? 'camera' : 'microphone',\n            });\n            if (currentPermissions && currentPermissions.state === 'denied') {\n              this.log.warn(`user has revoked access to ${track.source}`, {\n                ...this.logContext,\n                ...getLogContextFromTrack(track),\n              });\n\n              // detect granted change after permissions were denied to try and resume then\n              currentPermissions.onchange = () => {\n                if (currentPermissions.state !== 'denied') {\n                  if (!track.isMuted) {\n                    track.restartTrack();\n                  }\n                  currentPermissions.onchange = null;\n                }\n              };\n              throw new Error('GetUserMedia Permission denied');\n            }\n          } catch (e: any) {\n            // permissions query fails for firefox, we continue and try to restart the track\n          }\n        }\n        if (!track.isMuted) {\n          this.log.debug('track ended, attempting to use a different device', {\n            ...this.logContext,\n            ...getLogContextFromTrack(track),\n          });\n          await track.restartTrack();\n        }\n      } catch (e) {\n        this.log.warn(`could not restart track, muting instead`, {\n          ...this.logContext,\n          ...getLogContextFromTrack(track),\n        });\n        await track.mute();\n      }\n    }\n  };\n\n  private getPublicationForTrack(\n    track: LocalTrack | MediaStreamTrack,\n  ): LocalTrackPublication | undefined {\n    let publication: LocalTrackPublication | undefined;\n    this.tracks.forEach((pub) => {\n      const localTrack = pub.track;\n      if (!localTrack) {\n        return;\n      }\n\n      // this looks overly complicated due to this object tree\n      if (track instanceof MediaStreamTrack) {\n        if (localTrack instanceof LocalAudioTrack || localTrack instanceof LocalVideoTrack) {\n          if (localTrack.mediaStreamTrack === track) {\n            publication = <LocalTrackPublication>pub;\n          }\n        }\n      } else if (track === localTrack) {\n        publication = <LocalTrackPublication>pub;\n      }\n    });\n    return publication;\n  }\n}\n", "import { protoInt64 } from '@bufbuild/protobuf';\nimport { EventEmitter } from 'events';\nimport type TypedEmitter from 'typed-emitter';\nimport 'webrtc-adapter';\nimport { EncryptionEvent } from '../e2ee';\nimport { E2EEManager } from '../e2ee/E2eeManager';\nimport log, { LoggerNames, getLogger } from '../logger';\nimport type {\n  InternalRoomConnectOptions,\n  InternalRoomOptions,\n  RoomConnectOptions,\n  RoomOptions,\n} from '../options';\nimport {\n  DataPacket_Kind,\n  DisconnectReason,\n  ParticipantInfo,\n  ParticipantInfo_State,\n  ParticipantPermission,\n  Room as RoomModel,\n  ServerInfo,\n  SpeakerInfo,\n  SubscriptionError,\n  TrackInfo,\n  TrackSource,\n  TrackType,\n  UserPacket,\n} from '../proto/livekit_models_pb';\nimport {\n  ConnectionQualityUpdate,\n  JoinResponse,\n  LeaveRequest,\n  SimulateScenario,\n  StreamStateUpdate,\n  SubscriptionPermissionUpdate,\n  SubscriptionResponse,\n} from '../proto/livekit_rtc_pb';\nimport { getBrowser } from '../utils/browserParser';\nimport DeviceManager from './DeviceManager';\nimport RTCEngine from './RTCEngine';\nimport { RegionUrlProvider } from './RegionUrlProvider';\nimport {\n  audioDefaults,\n  publishDefaults,\n  roomConnectOptionDefaults,\n  roomOptionDefaults,\n  videoDefaults,\n} from './defaults';\nimport { ConnectionError, ConnectionErrorReason, UnsupportedServer } from './errors';\nimport { EngineEvent, ParticipantEvent, RoomEvent, TrackEvent } from './events';\nimport LocalParticipant from './participant/LocalParticipant';\nimport type Participant from './participant/Participant';\nimport type { ConnectionQuality } from './participant/Participant';\nimport RemoteParticipant from './participant/RemoteParticipant';\nimport CriticalTimers from './timers';\nimport LocalAudioTrack from './track/LocalAudioTrack';\nimport LocalTrackPublication from './track/LocalTrackPublication';\nimport LocalVideoTrack from './track/LocalVideoTrack';\nimport type RemoteTrack from './track/RemoteTrack';\nimport RemoteTrackPublication from './track/RemoteTrackPublication';\nimport { Track } from './track/Track';\nimport type { TrackPublication } from './track/TrackPublication';\nimport type { AdaptiveStreamSettings } from './track/types';\nimport { getNewAudioContext, sourceToKind } from './track/utils';\nimport type { SimulationOptions, SimulationScenario } from './types';\nimport {\n  Future,\n  Mutex,\n  createDummyVideoStreamTrack,\n  getEmptyAudioStreamTrack,\n  isCloud,\n  isWeb,\n  supportsSetSinkId,\n  toHttpUrl,\n  unpackStreamId,\n  unwrapConstraint,\n} from './utils';\n\nexport enum ConnectionState {\n  Disconnected = 'disconnected',\n  Connecting = 'connecting',\n  Connected = 'connected',\n  Reconnecting = 'reconnecting',\n}\n\nconst connectionReconcileFrequency = 2 * 1000;\n\n/** @deprecated RoomState has been renamed to [[ConnectionState]] */\nexport const RoomState = ConnectionState;\n\n/**\n * In LiveKit, a room is the logical grouping for a list of participants.\n * Participants in a room can publish tracks, and subscribe to others' tracks.\n *\n * a Room fires [[RoomEvent | RoomEvents]].\n *\n * @noInheritDoc\n */\nclass Room extends (EventEmitter as new () => TypedEmitter<RoomEventCallbacks>) {\n  state: ConnectionState = ConnectionState.Disconnected;\n\n  /** map of sid: [[RemoteParticipant]] */\n  participants: Map<string, RemoteParticipant>;\n\n  /**\n   * list of participants that are actively speaking. when this changes\n   * a [[RoomEvent.ActiveSpeakersChanged]] event is fired\n   */\n  activeSpeakers: Participant[] = [];\n\n  /** @internal */\n  engine!: RTCEngine;\n\n  /** the current participant */\n  localParticipant: LocalParticipant;\n\n  /** options of room */\n  options: InternalRoomOptions;\n\n  /** reflects the sender encryption status of the local participant */\n  isE2EEEnabled: boolean = false;\n\n  private roomInfo?: RoomModel;\n\n  private identityToSid: Map<string, string>;\n\n  /** connect options of room */\n  private connOptions?: InternalRoomConnectOptions;\n\n  private audioEnabled = true;\n\n  private audioContext?: AudioContext;\n\n  /** used for aborting pending connections to a LiveKit server */\n  private abortController?: AbortController;\n\n  /** future holding client initiated connection attempt */\n  private connectFuture?: Future<void>;\n\n  private disconnectLock: Mutex;\n\n  private e2eeManager: E2EEManager | undefined;\n\n  private connectionReconcileInterval?: ReturnType<typeof setInterval>;\n\n  private regionUrlProvider?: RegionUrlProvider;\n\n  private regionUrl?: string;\n\n  private isVideoPlaybackBlocked: boolean = false;\n\n  private log = log;\n\n  private bufferedEvents: Array<any> = [];\n\n  /**\n   * Creates a new Room, the primary construct for a LiveKit session.\n   * @param options\n   */\n  constructor(options?: RoomOptions) {\n    super();\n    this.setMaxListeners(100);\n    this.participants = new Map();\n    this.identityToSid = new Map();\n    this.options = { ...roomOptionDefaults, ...options };\n\n    this.log = getLogger(this.options.loggerName ?? LoggerNames.Room);\n\n    this.options.audioCaptureDefaults = {\n      ...audioDefaults,\n      ...options?.audioCaptureDefaults,\n    };\n    this.options.videoCaptureDefaults = {\n      ...videoDefaults,\n      ...options?.videoCaptureDefaults,\n    };\n    this.options.publishDefaults = {\n      ...publishDefaults,\n      ...options?.publishDefaults,\n    };\n\n    this.maybeCreateEngine();\n\n    this.disconnectLock = new Mutex();\n\n    this.localParticipant = new LocalParticipant('', '', this.engine, this.options);\n\n    if (this.options.videoCaptureDefaults.deviceId) {\n      this.localParticipant.activeDeviceMap.set(\n        'videoinput',\n        unwrapConstraint(this.options.videoCaptureDefaults.deviceId),\n      );\n    }\n    if (this.options.audioCaptureDefaults.deviceId) {\n      this.localParticipant.activeDeviceMap.set(\n        'audioinput',\n        unwrapConstraint(this.options.audioCaptureDefaults.deviceId),\n      );\n    }\n    if (this.options.audioOutput?.deviceId) {\n      this.switchActiveDevice(\n        'audiooutput',\n        unwrapConstraint(this.options.audioOutput.deviceId),\n      ).catch((e) => this.log.warn(`Could not set audio output: ${e.message}`, this.logContext));\n    }\n\n    if (this.options.e2ee) {\n      this.setupE2EE();\n    }\n  }\n\n  /**\n   * @experimental\n   */\n  async setE2EEEnabled(enabled: boolean) {\n    if (this.e2eeManager) {\n      await Promise.all([this.localParticipant.setE2EEEnabled(enabled)]);\n      if (this.localParticipant.identity !== '') {\n        this.e2eeManager.setParticipantCryptorEnabled(enabled, this.localParticipant.identity);\n      }\n    } else {\n      throw Error('e2ee not configured, please set e2ee settings within the room options');\n    }\n  }\n\n  private setupE2EE() {\n    if (this.options.e2ee) {\n      this.e2eeManager = new E2EEManager(this.options.e2ee);\n      this.e2eeManager.on(\n        EncryptionEvent.ParticipantEncryptionStatusChanged,\n        (enabled, participant) => {\n          if (participant instanceof LocalParticipant) {\n            this.isE2EEEnabled = enabled;\n          }\n          this.emit(RoomEvent.ParticipantEncryptionStatusChanged, enabled, participant);\n        },\n      );\n      this.e2eeManager.on(EncryptionEvent.EncryptionError, (error) =>\n        this.emit(RoomEvent.EncryptionError, error),\n      );\n      this.e2eeManager?.setup(this);\n    }\n  }\n\n  private get logContext() {\n    return {\n      room: this.name,\n      roomSid: this.sid,\n      identity: this.localParticipant.identity,\n    };\n  }\n\n  /**\n   * if the current room has a participant with `recorder: true` in its JWT grant\n   **/\n  get isRecording(): boolean {\n    return this.roomInfo?.activeRecording ?? false;\n  }\n\n  /** server assigned unique room id */\n  get sid(): string {\n    return this.roomInfo?.sid ?? '';\n  }\n\n  /** user assigned name, derived from JWT token */\n  get name(): string {\n    return this.roomInfo?.name ?? '';\n  }\n\n  /** room metadata */\n  get metadata(): string | undefined {\n    return this.roomInfo?.metadata;\n  }\n\n  get numParticipants(): number {\n    return this.roomInfo?.numParticipants ?? 0;\n  }\n\n  get numPublishers(): number {\n    return this.roomInfo?.numPublishers ?? 0;\n  }\n\n  private maybeCreateEngine() {\n    if (this.engine && !this.engine.isClosed) {\n      return;\n    }\n\n    this.engine = new RTCEngine(this.options);\n\n    this.engine\n      .on(EngineEvent.ParticipantUpdate, this.handleParticipantUpdates)\n      .on(EngineEvent.RoomUpdate, this.handleRoomUpdate)\n      .on(EngineEvent.SpeakersChanged, this.handleSpeakersChanged)\n      .on(EngineEvent.StreamStateChanged, this.handleStreamStateUpdate)\n      .on(EngineEvent.ConnectionQualityUpdate, this.handleConnectionQualityUpdate)\n      .on(EngineEvent.SubscriptionError, this.handleSubscriptionError)\n      .on(EngineEvent.SubscriptionPermissionUpdate, this.handleSubscriptionPermissionUpdate)\n      .on(\n        EngineEvent.MediaTrackAdded,\n        (mediaTrack: MediaStreamTrack, stream: MediaStream, receiver?: RTCRtpReceiver) => {\n          this.onTrackAdded(mediaTrack, stream, receiver);\n        },\n      )\n      .on(EngineEvent.Disconnected, (reason?: DisconnectReason) => {\n        this.handleDisconnect(this.options.stopLocalTrackOnUnpublish, reason);\n      })\n      .on(EngineEvent.ActiveSpeakersUpdate, this.handleActiveSpeakersUpdate)\n      .on(EngineEvent.DataPacketReceived, this.handleDataPacket)\n      .on(EngineEvent.Resuming, () => {\n        this.clearConnectionReconcile();\n        if (this.setAndEmitConnectionState(ConnectionState.Reconnecting)) {\n          this.emit(RoomEvent.Reconnecting);\n        }\n      })\n      .on(EngineEvent.Resumed, () => {\n        this.setAndEmitConnectionState(ConnectionState.Connected);\n        this.emit(RoomEvent.Reconnected);\n        this.registerConnectionReconcile();\n        this.updateSubscriptions();\n        this.emitBufferedEvents();\n      })\n      .on(EngineEvent.SignalResumed, () => {\n        this.bufferedEvents = [];\n        if (this.state === ConnectionState.Reconnecting) {\n          this.sendSyncState();\n        }\n      })\n      .on(EngineEvent.Restarting, this.handleRestarting)\n      .on(EngineEvent.SignalRestarted, this.handleSignalRestarted)\n      .on(EngineEvent.DCBufferStatusChanged, (status, kind) => {\n        this.emit(RoomEvent.DCBufferStatusChanged, status, kind);\n      });\n\n    if (this.localParticipant) {\n      this.localParticipant.setupEngine(this.engine);\n    }\n    if (this.e2eeManager) {\n      this.e2eeManager.setupEngine(this.engine);\n    }\n  }\n\n  /**\n   * getLocalDevices abstracts navigator.mediaDevices.enumerateDevices.\n   * In particular, it handles Chrome's unique behavior of creating `default`\n   * devices. When encountered, it'll be removed from the list of devices.\n   * The actual default device will be placed at top.\n   * @param kind\n   * @returns a list of available local devices\n   */\n  static getLocalDevices(\n    kind?: MediaDeviceKind,\n    requestPermissions: boolean = true,\n  ): Promise<MediaDeviceInfo[]> {\n    return DeviceManager.getInstance().getDevices(kind, requestPermissions);\n  }\n\n  /**\n   * prepareConnection should be called as soon as the page is loaded, in order\n   * to speed up the connection attempt. This function will\n   * - perform DNS resolution and pre-warm the DNS cache\n   * - establish TLS connection and cache TLS keys\n   *\n   * With LiveKit Cloud, it will also determine the best edge data center for\n   * the current client to connect to if a token is provided.\n   */\n  async prepareConnection(url: string, token?: string) {\n    if (this.state !== ConnectionState.Disconnected) {\n      return;\n    }\n    this.log.debug(`prepareConnection to ${url}`, this.logContext);\n    try {\n      if (isCloud(new URL(url)) && token) {\n        this.regionUrlProvider = new RegionUrlProvider(url, token);\n        const regionUrl = await this.regionUrlProvider.getNextBestRegionUrl();\n        // we will not replace the regionUrl if an attempt had already started\n        // to avoid overriding regionUrl after a new connection attempt had started\n        if (regionUrl && this.state === ConnectionState.Disconnected) {\n          this.regionUrl = regionUrl;\n          await fetch(toHttpUrl(regionUrl), { method: 'HEAD' });\n          this.log.debug(`prepared connection to ${regionUrl}`, this.logContext);\n        }\n      } else {\n        await fetch(toHttpUrl(url), { method: 'HEAD' });\n      }\n    } catch (e) {\n      this.log.warn('could not prepare connection', { ...this.logContext, error: e });\n    }\n  }\n\n  connect = async (url: string, token: string, opts?: RoomConnectOptions): Promise<void> => {\n    // In case a disconnect called happened right before the connect call, make sure the disconnect is completed first by awaiting its lock\n    const unlockDisconnect = await this.disconnectLock.lock();\n\n    if (this.state === ConnectionState.Connected) {\n      // when the state is reconnecting or connected, this function returns immediately\n      this.log.info(`already connected to room ${this.name}`, this.logContext);\n      unlockDisconnect();\n      return Promise.resolve();\n    }\n\n    if (this.connectFuture) {\n      unlockDisconnect();\n      return this.connectFuture.promise;\n    }\n\n    this.setAndEmitConnectionState(ConnectionState.Connecting);\n    if (this.regionUrlProvider?.getServerUrl().toString() !== url) {\n      this.regionUrl = undefined;\n      this.regionUrlProvider = undefined;\n    }\n    if (isCloud(new URL(url))) {\n      if (this.regionUrlProvider === undefined) {\n        this.regionUrlProvider = new RegionUrlProvider(url, token);\n      } else {\n        this.regionUrlProvider.updateToken(token);\n      }\n      // trigger the first fetch without waiting for a response\n      // if initial connection fails, this will speed up picking regional url\n      // on subsequent runs\n      this.regionUrlProvider.fetchRegionSettings().catch((e) => {\n        this.log.warn('could not fetch region settings', { ...this.logContext, error: e });\n      });\n    }\n\n    const connectFn = async (\n      resolve: () => void,\n      reject: (reason: any) => void,\n      regionUrl?: string,\n    ) => {\n      if (this.abortController) {\n        this.abortController.abort();\n      }\n\n      // explicit creation as local var needed to satisfy TS compiler when passing it to `attemptConnection` further down\n      const abortController = new AbortController();\n      this.abortController = abortController;\n\n      // at this point the intention to connect has been signalled so we can allow cancelling of the connection via disconnect() again\n      unlockDisconnect?.();\n\n      try {\n        await this.attemptConnection(regionUrl ?? url, token, opts, abortController);\n        this.abortController = undefined;\n        resolve();\n      } catch (e) {\n        if (\n          this.regionUrlProvider &&\n          e instanceof ConnectionError &&\n          e.reason !== ConnectionErrorReason.Cancelled &&\n          e.reason !== ConnectionErrorReason.NotAllowed\n        ) {\n          let nextUrl: string | null = null;\n          try {\n            nextUrl = await this.regionUrlProvider.getNextBestRegionUrl(\n              this.abortController?.signal,\n            );\n          } catch (error) {\n            if (\n              error instanceof ConnectionError &&\n              (error.status === 401 || error.reason === ConnectionErrorReason.Cancelled)\n            ) {\n              this.handleDisconnect(this.options.stopLocalTrackOnUnpublish);\n              reject(error);\n              return;\n            }\n          }\n          if (nextUrl) {\n            this.log.info(\n              `Initial connection failed with ConnectionError: ${e.message}. Retrying with another region: ${nextUrl}`,\n              this.logContext,\n            );\n            await connectFn(resolve, reject, nextUrl);\n          } else {\n            this.handleDisconnect(this.options.stopLocalTrackOnUnpublish);\n            reject(e);\n          }\n        } else {\n          this.handleDisconnect(this.options.stopLocalTrackOnUnpublish);\n          reject(e);\n        }\n      }\n    };\n\n    const regionUrl = this.regionUrl;\n    this.regionUrl = undefined;\n    this.connectFuture = new Future(\n      (resolve, reject) => {\n        connectFn(resolve, reject, regionUrl);\n      },\n      () => {\n        this.clearConnectionFutures();\n      },\n    );\n\n    return this.connectFuture.promise;\n  };\n\n  private connectSignal = async (\n    url: string,\n    token: string,\n    engine: RTCEngine,\n    connectOptions: InternalRoomConnectOptions,\n    roomOptions: InternalRoomOptions,\n    abortController: AbortController,\n  ): Promise<JoinResponse> => {\n    const joinResponse = await engine.join(\n      url,\n      token,\n      {\n        autoSubscribe: connectOptions.autoSubscribe,\n        publishOnly: connectOptions.publishOnly,\n        adaptiveStream:\n          typeof roomOptions.adaptiveStream === 'object' ? true : roomOptions.adaptiveStream,\n        maxRetries: connectOptions.maxRetries,\n        e2eeEnabled: !!this.e2eeManager,\n        websocketTimeout: connectOptions.websocketTimeout,\n      },\n      abortController.signal,\n    );\n\n    let serverInfo: Partial<ServerInfo> | undefined = joinResponse.serverInfo;\n    if (!serverInfo) {\n      serverInfo = { version: joinResponse.serverVersion, region: joinResponse.serverRegion };\n    }\n\n    this.log.debug(\n      `connected to Livekit Server ${Object.entries(serverInfo)\n        .map(([key, value]) => `${key}: ${value}`)\n        .join(', ')}`,\n      {\n        room: joinResponse.room?.name,\n        roomSid: joinResponse.room?.sid,\n        identity: joinResponse.participant?.identity,\n      },\n    );\n\n    if (!joinResponse.serverVersion) {\n      throw new UnsupportedServer('unknown server version');\n    }\n\n    if (joinResponse.serverVersion === '0.15.1' && this.options.dynacast) {\n      this.log.debug('disabling dynacast due to server version', this.logContext);\n      // dynacast has a bug in 0.15.1, so we cannot use it then\n      roomOptions.dynacast = false;\n    }\n\n    return joinResponse;\n  };\n\n  private applyJoinResponse = (joinResponse: JoinResponse) => {\n    const pi = joinResponse.participant!;\n\n    this.localParticipant.sid = pi.sid;\n    this.localParticipant.identity = pi.identity;\n\n    // populate remote participants, these should not trigger new events\n    this.handleParticipantUpdates([pi, ...joinResponse.otherParticipants]);\n\n    if (joinResponse.room) {\n      this.handleRoomUpdate(joinResponse.room);\n    }\n\n    if (this.options.e2ee && this.e2eeManager) {\n      this.e2eeManager.setSifTrailer(joinResponse.sifTrailer);\n    }\n  };\n\n  private attemptConnection = async (\n    url: string,\n    token: string,\n    opts: RoomConnectOptions | undefined,\n    abortController: AbortController,\n  ) => {\n    if (this.state === ConnectionState.Reconnecting) {\n      this.log.info('Reconnection attempt replaced by new connection attempt', this.logContext);\n      // make sure we close and recreate the existing engine in order to get rid of any potentially ongoing reconnection attempts\n      this.recreateEngine();\n    } else {\n      // create engine if previously disconnected\n      this.maybeCreateEngine();\n    }\n    if (this.regionUrlProvider?.isCloud()) {\n      this.engine.setRegionUrlProvider(this.regionUrlProvider);\n    }\n\n    this.acquireAudioContext();\n\n    this.connOptions = { ...roomConnectOptionDefaults, ...opts } as InternalRoomConnectOptions;\n\n    if (this.connOptions.rtcConfig) {\n      this.engine.rtcConfig = this.connOptions.rtcConfig;\n    }\n    if (this.connOptions.peerConnectionTimeout) {\n      this.engine.peerConnectionTimeout = this.connOptions.peerConnectionTimeout;\n    }\n\n    try {\n      const joinResponse = await this.connectSignal(\n        url,\n        token,\n        this.engine,\n        this.connOptions,\n        this.options,\n        abortController,\n      );\n\n      this.applyJoinResponse(joinResponse);\n      // forward metadata changed for the local participant\n      this.setupLocalParticipantEvents();\n      this.emit(RoomEvent.SignalConnected);\n    } catch (err) {\n      await this.engine.close();\n      this.recreateEngine();\n      const resultingError = new ConnectionError(`could not establish signal connection`);\n      if (err instanceof Error) {\n        resultingError.message = `${resultingError.message}: ${err.message}`;\n      }\n      if (err instanceof ConnectionError) {\n        resultingError.reason = err.reason;\n        resultingError.status = err.status;\n      }\n      this.log.debug(`error trying to establish signal connection`, {\n        ...this.logContext,\n        error: err,\n      });\n      throw resultingError;\n    }\n\n    if (abortController.signal.aborted) {\n      await this.engine.close();\n      this.recreateEngine();\n      throw new ConnectionError(`Connection attempt aborted`);\n    }\n\n    try {\n      await this.engine.waitForPCInitialConnection(\n        this.connOptions.peerConnectionTimeout,\n        abortController,\n      );\n    } catch (e) {\n      await this.engine.close();\n      this.recreateEngine();\n      throw e;\n    }\n\n    // also hook unload event\n    if (isWeb() && this.options.disconnectOnPageLeave) {\n      // capturing both 'pagehide' and 'beforeunload' to capture broadest set of browser behaviors\n      window.addEventListener('pagehide', this.onPageLeave);\n      window.addEventListener('beforeunload', this.onPageLeave);\n    }\n    if (isWeb()) {\n      document.addEventListener('freeze', this.onPageLeave);\n      navigator.mediaDevices?.addEventListener('devicechange', this.handleDeviceChange);\n    }\n    this.setAndEmitConnectionState(ConnectionState.Connected);\n    this.emit(RoomEvent.Connected);\n    this.registerConnectionReconcile();\n  };\n\n  /**\n   * disconnects the room, emits [[RoomEvent.Disconnected]]\n   */\n  disconnect = async (stopTracks = true) => {\n    const unlock = await this.disconnectLock.lock();\n    try {\n      if (this.state === ConnectionState.Disconnected) {\n        this.log.debug('already disconnected', this.logContext);\n        return;\n      }\n      this.log.info('disconnect from room', {\n        ...this.logContext,\n      });\n      if (\n        this.state === ConnectionState.Connecting ||\n        this.state === ConnectionState.Reconnecting\n      ) {\n        // try aborting pending connection attempt\n        this.log.warn('abort connection attempt', this.logContext);\n        this.abortController?.abort();\n        // in case the abort controller didn't manage to cancel the connection attempt, reject the connect promise explicitly\n        this.connectFuture?.reject?.(new ConnectionError('Client initiated disconnect'));\n        this.connectFuture = undefined;\n      }\n      // send leave\n      if (!this.engine?.client.isDisconnected) {\n        await this.engine.client.sendLeave();\n      }\n      // close engine (also closes client)\n      if (this.engine) {\n        await this.engine.close();\n      }\n      this.handleDisconnect(stopTracks, DisconnectReason.CLIENT_INITIATED);\n      /* @ts-ignore */\n      this.engine = undefined;\n    } finally {\n      unlock();\n    }\n  };\n\n  /**\n   * retrieves a participant by identity\n   * @param identity\n   * @returns\n   */\n  getParticipantByIdentity(identity: string): Participant | undefined {\n    if (this.localParticipant.identity === identity) {\n      return this.localParticipant;\n    }\n    const sid = this.identityToSid.get(identity);\n    if (sid) {\n      return this.participants.get(sid);\n    }\n  }\n\n  private clearConnectionFutures() {\n    this.connectFuture = undefined;\n  }\n\n  /**\n   * @internal for testing\n   */\n  async simulateScenario(scenario: SimulationScenario, arg?: any) {\n    let postAction = () => {};\n    let req: SimulateScenario | undefined;\n    switch (scenario) {\n      case 'signal-reconnect':\n        // @ts-expect-error function is private\n        await this.engine.client.handleOnClose('simulate disconnect');\n        break;\n      case 'speaker':\n        req = new SimulateScenario({\n          scenario: {\n            case: 'speakerUpdate',\n            value: 3,\n          },\n        });\n        break;\n      case 'node-failure':\n        req = new SimulateScenario({\n          scenario: {\n            case: 'nodeFailure',\n            value: true,\n          },\n        });\n        break;\n      case 'server-leave':\n        req = new SimulateScenario({\n          scenario: {\n            case: 'serverLeave',\n            value: true,\n          },\n        });\n        break;\n      case 'migration':\n        req = new SimulateScenario({\n          scenario: {\n            case: 'migration',\n            value: true,\n          },\n        });\n        break;\n      case 'resume-reconnect':\n        this.engine.failNext();\n        // @ts-expect-error function is private\n        await this.engine.client.handleOnClose('simulate resume-disconnect');\n        break;\n      case 'disconnect-signal-on-resume':\n        postAction = async () => {\n          // @ts-expect-error function is private\n          await this.engine.client.handleOnClose('simulate resume-disconnect');\n        };\n        req = new SimulateScenario({\n          scenario: {\n            case: 'disconnectSignalOnResume',\n            value: true,\n          },\n        });\n        break;\n      case 'disconnect-signal-on-resume-no-messages':\n        postAction = async () => {\n          // @ts-expect-error function is private\n          await this.engine.client.handleOnClose('simulate resume-disconnect');\n        };\n        req = new SimulateScenario({\n          scenario: {\n            case: 'disconnectSignalOnResumeNoMessages',\n            value: true,\n          },\n        });\n        break;\n      case 'full-reconnect':\n        this.engine.fullReconnectOnNext = true;\n        // @ts-expect-error function is private\n        await this.engine.client.handleOnClose('simulate full-reconnect');\n        break;\n      case 'force-tcp':\n      case 'force-tls':\n        req = new SimulateScenario({\n          scenario: {\n            case: 'switchCandidateProtocol',\n            value: scenario === 'force-tls' ? 2 : 1,\n          },\n        });\n        postAction = async () => {\n          const onLeave = this.engine.client.onLeave;\n          if (onLeave) {\n            onLeave(\n              new LeaveRequest({\n                reason: DisconnectReason.CLIENT_INITIATED,\n                canReconnect: true,\n              }),\n            );\n          }\n        };\n        break;\n      case 'subscriber-bandwidth':\n        if (arg === undefined || typeof arg !== 'number') {\n          throw new Error('subscriber-bandwidth requires a number as argument');\n        }\n        req = new SimulateScenario({\n          scenario: {\n            case: 'subscriberBandwidth',\n            value: BigInt(arg),\n          },\n        });\n        break;\n\n      default:\n    }\n    if (req) {\n      await this.engine.client.sendSimulateScenario(req);\n      await postAction();\n    }\n  }\n\n  private onPageLeave = async () => {\n    await this.disconnect();\n  };\n\n  /**\n   * Browsers have different policies regarding audio playback. Most requiring\n   * some form of user interaction (click/tap/etc).\n   * In those cases, audio will be silent until a click/tap triggering one of the following\n   * - `startAudio`\n   * - `getUserMedia`\n   */\n  startAudio = async () => {\n    const elements: Array<HTMLMediaElement> = [];\n    const browser = getBrowser();\n    if (browser && browser.os === 'iOS') {\n      /**\n       * iOS blocks audio element playback if\n       * - user is not publishing audio themselves and\n       * - no other audio source is playing\n       *\n       * as a workaround, we create an audio element with an empty track, so that\n       * silent audio is always playing\n       */\n      const audioId = 'livekit-dummy-audio-el';\n      let dummyAudioEl = document.getElementById(audioId) as HTMLAudioElement | null;\n      if (!dummyAudioEl) {\n        dummyAudioEl = document.createElement('audio');\n        dummyAudioEl.id = audioId;\n        dummyAudioEl.autoplay = true;\n        dummyAudioEl.hidden = true;\n        const track = getEmptyAudioStreamTrack();\n        track.enabled = true;\n        const stream = new MediaStream([track]);\n        dummyAudioEl.srcObject = stream;\n        document.addEventListener('visibilitychange', () => {\n          if (!dummyAudioEl) {\n            return;\n          }\n          // set the srcObject to null on page hide in order to prevent lock screen controls to show up for it\n          dummyAudioEl.srcObject = document.hidden ? null : stream;\n          if (!document.hidden) {\n            this.log.debug(\n              'page visible again, triggering startAudio to resume playback and update playback status',\n              this.logContext,\n            );\n            this.startAudio();\n          }\n        });\n        document.body.append(dummyAudioEl);\n        this.once(RoomEvent.Disconnected, () => {\n          dummyAudioEl?.remove();\n          dummyAudioEl = null;\n        });\n      }\n      elements.push(dummyAudioEl);\n    }\n\n    this.participants.forEach((p) => {\n      p.audioTracks.forEach((t) => {\n        if (t.track) {\n          t.track.attachedElements.forEach((e) => {\n            elements.push(e);\n          });\n        }\n      });\n    });\n\n    try {\n      await Promise.all([\n        this.acquireAudioContext(),\n        ...elements.map((e) => {\n          e.muted = false;\n          return e.play();\n        }),\n      ]);\n      this.handleAudioPlaybackStarted();\n    } catch (err) {\n      this.handleAudioPlaybackFailed(err);\n      throw err;\n    }\n  };\n\n  startVideo = async () => {\n    const elements: HTMLMediaElement[] = [];\n    for (const p of this.participants.values()) {\n      p.videoTracks.forEach((tr) => {\n        tr.track?.attachedElements.forEach((el) => {\n          if (!elements.includes(el)) {\n            elements.push(el);\n          }\n        });\n      });\n    }\n    await Promise.all(elements.map((el) => el.play()))\n      .then(() => {\n        this.handleVideoPlaybackStarted();\n      })\n      .catch((e) => {\n        if (e.name === 'NotAllowedError') {\n          this.handleVideoPlaybackFailed();\n        } else {\n          this.log.warn(\n            'Resuming video playback failed, make sure you call `startVideo` directly in a user gesture handler',\n            this.logContext,\n          );\n        }\n      });\n  };\n\n  /**\n   * Returns true if audio playback is enabled\n   */\n  get canPlaybackAudio(): boolean {\n    return this.audioEnabled;\n  }\n\n  /**\n   * Returns true if video playback is enabled\n   */\n  get canPlaybackVideo(): boolean {\n    return !this.isVideoPlaybackBlocked;\n  }\n\n  /**\n   * Returns the active audio output device used in this room.\n   * @return the previously successfully set audio output device ID or an empty string if the default device is used.\n   * @deprecated use `getActiveDevice('audiooutput')` instead\n   */\n  getActiveAudioOutputDevice(): string {\n    return this.options.audioOutput?.deviceId ?? '';\n  }\n\n  getActiveDevice(kind: MediaDeviceKind): string | undefined {\n    return this.localParticipant.activeDeviceMap.get(kind);\n  }\n\n  /**\n   * Switches all active devices used in this room to the given device.\n   *\n   * Note: setting AudioOutput is not supported on some browsers. See [setSinkId](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/setSinkId#browser_compatibility)\n   *\n   * @param kind use `videoinput` for camera track,\n   *  `audioinput` for microphone track,\n   *  `audiooutput` to set speaker for all incoming audio tracks\n   * @param deviceId\n   */\n  async switchActiveDevice(kind: MediaDeviceKind, deviceId: string, exact: boolean = false) {\n    let deviceHasChanged = false;\n    let success = true;\n    const deviceConstraint = exact ? { exact: deviceId } : deviceId;\n    if (kind === 'audioinput') {\n      const prevDeviceId = this.options.audioCaptureDefaults!.deviceId;\n      this.options.audioCaptureDefaults!.deviceId = deviceConstraint;\n      deviceHasChanged = prevDeviceId !== deviceConstraint;\n      const tracks = Array.from(this.localParticipant.audioTracks.values()).filter(\n        (track) => track.source === Track.Source.Microphone,\n      );\n      try {\n        success = (\n          await Promise.all(tracks.map((t) => t.audioTrack?.setDeviceId(deviceConstraint)))\n        ).every((val) => val === true);\n      } catch (e) {\n        this.options.audioCaptureDefaults!.deviceId = prevDeviceId;\n        throw e;\n      }\n    } else if (kind === 'videoinput') {\n      const prevDeviceId = this.options.videoCaptureDefaults!.deviceId;\n      this.options.videoCaptureDefaults!.deviceId = deviceConstraint;\n      deviceHasChanged = prevDeviceId !== deviceConstraint;\n      const tracks = Array.from(this.localParticipant.videoTracks.values()).filter(\n        (track) => track.source === Track.Source.Camera,\n      );\n      try {\n        success = (\n          await Promise.all(tracks.map((t) => t.videoTrack?.setDeviceId(deviceConstraint)))\n        ).every((val) => val === true);\n      } catch (e) {\n        this.options.videoCaptureDefaults!.deviceId = prevDeviceId;\n        throw e;\n      }\n    } else if (kind === 'audiooutput') {\n      if (\n        (!supportsSetSinkId() && !this.options.expWebAudioMix) ||\n        (this.options.expWebAudioMix && this.audioContext && !('setSinkId' in this.audioContext))\n      ) {\n        throw new Error('cannot switch audio output, setSinkId not supported');\n      }\n      this.options.audioOutput ??= {};\n      const prevDeviceId = this.options.audioOutput.deviceId;\n      this.options.audioOutput.deviceId = deviceId;\n      deviceHasChanged = prevDeviceId !== deviceConstraint;\n\n      try {\n        if (this.options.expWebAudioMix) {\n          // @ts-expect-error setSinkId is not yet in the typescript type of AudioContext\n          this.audioContext?.setSinkId(deviceId);\n        } else {\n          await Promise.all(\n            Array.from(this.participants.values()).map((p) => p.setAudioOutput({ deviceId })),\n          );\n        }\n      } catch (e) {\n        this.options.audioOutput.deviceId = prevDeviceId;\n        throw e;\n      }\n    }\n    if (deviceHasChanged && success) {\n      this.localParticipant.activeDeviceMap.set(kind, deviceId);\n      this.emit(RoomEvent.ActiveDeviceChanged, kind, deviceId);\n    }\n\n    return success;\n  }\n\n  private setupLocalParticipantEvents() {\n    this.localParticipant\n      .on(ParticipantEvent.ParticipantMetadataChanged, this.onLocalParticipantMetadataChanged)\n      .on(ParticipantEvent.ParticipantNameChanged, this.onLocalParticipantNameChanged)\n      .on(ParticipantEvent.TrackMuted, this.onLocalTrackMuted)\n      .on(ParticipantEvent.TrackUnmuted, this.onLocalTrackUnmuted)\n      .on(ParticipantEvent.LocalTrackPublished, this.onLocalTrackPublished)\n      .on(ParticipantEvent.LocalTrackUnpublished, this.onLocalTrackUnpublished)\n      .on(ParticipantEvent.ConnectionQualityChanged, this.onLocalConnectionQualityChanged)\n      .on(ParticipantEvent.MediaDevicesError, this.onMediaDevicesError)\n      .on(ParticipantEvent.AudioStreamAcquired, this.startAudio)\n      .on(\n        ParticipantEvent.ParticipantPermissionsChanged,\n        this.onLocalParticipantPermissionsChanged,\n      );\n  }\n\n  private recreateEngine() {\n    this.engine?.close();\n    /* @ts-ignore */\n    this.engine = undefined;\n\n    // clear out existing remote participants, since they may have attached\n    // the old engine\n    this.participants.clear();\n    this.bufferedEvents = [];\n    this.maybeCreateEngine();\n  }\n\n  private onTrackAdded(\n    mediaTrack: MediaStreamTrack,\n    stream: MediaStream,\n    receiver?: RTCRtpReceiver,\n  ) {\n    // don't fire onSubscribed when connecting\n    // WebRTC fires onTrack as soon as setRemoteDescription is called on the offer\n    // at that time, ICE connectivity has not been established so the track is not\n    // technically subscribed.\n    // We'll defer these events until when the room is connected or eventually disconnected.\n    if (this.state === ConnectionState.Connecting || this.state === ConnectionState.Reconnecting) {\n      const reconnectedHandler = () => {\n        this.onTrackAdded(mediaTrack, stream, receiver);\n        cleanup();\n      };\n      const cleanup = () => {\n        this.off(RoomEvent.Reconnected, reconnectedHandler);\n        this.off(RoomEvent.Connected, reconnectedHandler);\n        this.off(RoomEvent.Disconnected, cleanup);\n      };\n      this.once(RoomEvent.Reconnected, reconnectedHandler);\n      this.once(RoomEvent.Connected, reconnectedHandler);\n      this.once(RoomEvent.Disconnected, cleanup);\n      return;\n    }\n    if (this.state === ConnectionState.Disconnected) {\n      this.log.warn('skipping incoming track after Room disconnected', this.logContext);\n      return;\n    }\n    const parts = unpackStreamId(stream.id);\n    const participantId = parts[0];\n    let streamId = parts[1];\n    let trackId = mediaTrack.id;\n    // firefox will get streamId (pID|trackId) instead of (pID|streamId) as it doesn't support sync tracks by stream\n    // and generates its own track id instead of infer from sdp track id.\n    if (streamId && streamId.startsWith('TR')) trackId = streamId;\n\n    if (participantId === this.localParticipant.sid) {\n      this.log.warn('tried to create RemoteParticipant for local participant', this.logContext);\n      return;\n    }\n\n    const participant = this.participants.get(participantId) as RemoteParticipant | undefined;\n\n    if (!participant) {\n      this.log.error(\n        `Tried to add a track for a participant, that's not present. Sid: ${participantId}`,\n        this.logContext,\n      );\n      return;\n    }\n\n    let adaptiveStreamSettings: AdaptiveStreamSettings | undefined;\n    if (this.options.adaptiveStream) {\n      if (typeof this.options.adaptiveStream === 'object') {\n        adaptiveStreamSettings = this.options.adaptiveStream;\n      } else {\n        adaptiveStreamSettings = {};\n      }\n    }\n    participant.addSubscribedMediaTrack(\n      mediaTrack,\n      trackId,\n      stream,\n      receiver,\n      adaptiveStreamSettings,\n    );\n  }\n\n  private handleRestarting = () => {\n    this.clearConnectionReconcile();\n    // also unwind existing participants & existing subscriptions\n    for (const p of this.participants.values()) {\n      this.handleParticipantDisconnected(p.sid, p);\n    }\n\n    if (this.setAndEmitConnectionState(ConnectionState.Reconnecting)) {\n      this.emit(RoomEvent.Reconnecting);\n    }\n  };\n\n  private handleSignalRestarted = async (joinResponse: JoinResponse) => {\n    this.log.debug(`signal reconnected to server, region ${joinResponse.serverRegion}`, {\n      ...this.logContext,\n      region: joinResponse.serverRegion,\n    });\n    this.bufferedEvents = [];\n\n    this.applyJoinResponse(joinResponse);\n\n    try {\n      // unpublish & republish tracks\n      await this.localParticipant.republishAllTracks(undefined, true);\n    } catch (error) {\n      this.log.error('error trying to re-publish tracks after reconnection', {\n        ...this.logContext,\n        error,\n      });\n    }\n\n    try {\n      await this.engine.waitForRestarted();\n      this.log.debug(`fully reconnected to server`, {\n        ...this.logContext,\n        region: joinResponse.serverRegion,\n      });\n    } catch {\n      // reconnection failed, handleDisconnect is being invoked already, just return here\n      return;\n    }\n    this.setAndEmitConnectionState(ConnectionState.Connected);\n    this.emit(RoomEvent.Reconnected);\n    this.registerConnectionReconcile();\n    this.emitBufferedEvents();\n  };\n\n  private handleDisconnect(shouldStopTracks = true, reason?: DisconnectReason) {\n    this.clearConnectionReconcile();\n    this.bufferedEvents = [];\n    if (this.state === ConnectionState.Disconnected) {\n      return;\n    }\n\n    this.regionUrl = undefined;\n\n    try {\n      this.participants.forEach((p) => {\n        p.tracks.forEach((pub) => {\n          p.unpublishTrack(pub.trackSid);\n        });\n      });\n\n      this.localParticipant.tracks.forEach((pub) => {\n        if (pub.track) {\n          this.localParticipant.unpublishTrack(pub.track, shouldStopTracks);\n        }\n        if (shouldStopTracks) {\n          pub.track?.detach();\n          pub.track?.stop();\n        }\n      });\n\n      this.localParticipant\n        .off(ParticipantEvent.ParticipantMetadataChanged, this.onLocalParticipantMetadataChanged)\n        .off(ParticipantEvent.ParticipantNameChanged, this.onLocalParticipantNameChanged)\n        .off(ParticipantEvent.TrackMuted, this.onLocalTrackMuted)\n        .off(ParticipantEvent.TrackUnmuted, this.onLocalTrackUnmuted)\n        .off(ParticipantEvent.LocalTrackPublished, this.onLocalTrackPublished)\n        .off(ParticipantEvent.LocalTrackUnpublished, this.onLocalTrackUnpublished)\n        .off(ParticipantEvent.ConnectionQualityChanged, this.onLocalConnectionQualityChanged)\n        .off(ParticipantEvent.MediaDevicesError, this.onMediaDevicesError)\n        .off(ParticipantEvent.AudioStreamAcquired, this.startAudio)\n        .off(\n          ParticipantEvent.ParticipantPermissionsChanged,\n          this.onLocalParticipantPermissionsChanged,\n        );\n\n      this.localParticipant.tracks.clear();\n      this.localParticipant.videoTracks.clear();\n      this.localParticipant.audioTracks.clear();\n\n      this.participants.clear();\n      this.activeSpeakers = [];\n      if (this.audioContext && typeof this.options.expWebAudioMix === 'boolean') {\n        this.audioContext.close();\n        this.audioContext = undefined;\n      }\n      if (isWeb()) {\n        window.removeEventListener('beforeunload', this.onPageLeave);\n        window.removeEventListener('pagehide', this.onPageLeave);\n        window.removeEventListener('freeze', this.onPageLeave);\n        navigator.mediaDevices?.removeEventListener('devicechange', this.handleDeviceChange);\n      }\n    } finally {\n      this.setAndEmitConnectionState(ConnectionState.Disconnected);\n      this.emit(RoomEvent.Disconnected, reason);\n    }\n  }\n\n  private handleParticipantUpdates = (participantInfos: ParticipantInfo[]) => {\n    // handle changes to participant state, and send events\n    participantInfos.forEach((info) => {\n      if (info.identity === this.localParticipant.identity) {\n        this.localParticipant.updateInfo(info);\n        return;\n      }\n\n      // ensure identity <=> sid mapping\n      const sid = this.identityToSid.get(info.identity);\n      if (sid && sid !== info.sid) {\n        // sid had changed, need to remove previous participant\n        this.handleParticipantDisconnected(sid, this.participants.get(sid));\n      }\n\n      let remoteParticipant = this.participants.get(info.sid);\n      const isNewParticipant = !remoteParticipant;\n\n      // when it's disconnected, send updates\n      if (info.state === ParticipantInfo_State.DISCONNECTED) {\n        this.handleParticipantDisconnected(info.sid, remoteParticipant);\n      } else {\n        // create participant if doesn't exist\n        remoteParticipant = this.getOrCreateParticipant(info.sid, info);\n        if (!isNewParticipant) {\n          // just update, no events\n          remoteParticipant.updateInfo(info);\n        }\n      }\n    });\n  };\n\n  private handleParticipantDisconnected(sid: string, participant?: RemoteParticipant) {\n    // remove and send event\n    this.participants.delete(sid);\n    if (!participant) {\n      return;\n    }\n\n    this.identityToSid.delete(participant.identity);\n    participant.tracks.forEach((publication) => {\n      participant.unpublishTrack(publication.trackSid, true);\n    });\n    this.emit(RoomEvent.ParticipantDisconnected, participant);\n  }\n\n  // updates are sent only when there's a change to speaker ordering\n  private handleActiveSpeakersUpdate = (speakers: SpeakerInfo[]) => {\n    const activeSpeakers: Participant[] = [];\n    const seenSids: any = {};\n    speakers.forEach((speaker) => {\n      seenSids[speaker.sid] = true;\n      if (speaker.sid === this.localParticipant.sid) {\n        this.localParticipant.audioLevel = speaker.level;\n        this.localParticipant.setIsSpeaking(true);\n        activeSpeakers.push(this.localParticipant);\n      } else {\n        const p = this.participants.get(speaker.sid);\n        if (p) {\n          p.audioLevel = speaker.level;\n          p.setIsSpeaking(true);\n          activeSpeakers.push(p);\n        }\n      }\n    });\n\n    if (!seenSids[this.localParticipant.sid]) {\n      this.localParticipant.audioLevel = 0;\n      this.localParticipant.setIsSpeaking(false);\n    }\n    this.participants.forEach((p) => {\n      if (!seenSids[p.sid]) {\n        p.audioLevel = 0;\n        p.setIsSpeaking(false);\n      }\n    });\n\n    this.activeSpeakers = activeSpeakers;\n    this.emitWhenConnected(RoomEvent.ActiveSpeakersChanged, activeSpeakers);\n  };\n\n  // process list of changed speakers\n  private handleSpeakersChanged = (speakerUpdates: SpeakerInfo[]) => {\n    const lastSpeakers = new Map<string, Participant>();\n    this.activeSpeakers.forEach((p) => {\n      lastSpeakers.set(p.sid, p);\n    });\n    speakerUpdates.forEach((speaker) => {\n      let p: Participant | undefined = this.participants.get(speaker.sid);\n      if (speaker.sid === this.localParticipant.sid) {\n        p = this.localParticipant;\n      }\n      if (!p) {\n        return;\n      }\n      p.audioLevel = speaker.level;\n      p.setIsSpeaking(speaker.active);\n\n      if (speaker.active) {\n        lastSpeakers.set(speaker.sid, p);\n      } else {\n        lastSpeakers.delete(speaker.sid);\n      }\n    });\n    const activeSpeakers = Array.from(lastSpeakers.values());\n    activeSpeakers.sort((a, b) => b.audioLevel - a.audioLevel);\n    this.activeSpeakers = activeSpeakers;\n    this.emitWhenConnected(RoomEvent.ActiveSpeakersChanged, activeSpeakers);\n  };\n\n  private handleStreamStateUpdate = (streamStateUpdate: StreamStateUpdate) => {\n    streamStateUpdate.streamStates.forEach((streamState) => {\n      const participant = this.participants.get(streamState.participantSid);\n      if (!participant) {\n        return;\n      }\n      const pub = participant.getTrackPublication(streamState.trackSid);\n      if (!pub || !pub.track) {\n        return;\n      }\n      pub.track.streamState = Track.streamStateFromProto(streamState.state);\n      participant.emit(ParticipantEvent.TrackStreamStateChanged, pub, pub.track.streamState);\n      this.emitWhenConnected(\n        RoomEvent.TrackStreamStateChanged,\n        pub,\n        pub.track.streamState,\n        participant,\n      );\n    });\n  };\n\n  private handleSubscriptionPermissionUpdate = (update: SubscriptionPermissionUpdate) => {\n    const participant = this.participants.get(update.participantSid);\n    if (!participant) {\n      return;\n    }\n    const pub = participant.getTrackPublication(update.trackSid);\n    if (!pub) {\n      return;\n    }\n\n    pub.setAllowed(update.allowed);\n  };\n\n  private handleSubscriptionError = (update: SubscriptionResponse) => {\n    const participant = Array.from(this.participants.values()).find((p) =>\n      p.tracks.has(update.trackSid),\n    );\n    if (!participant) {\n      return;\n    }\n    const pub = participant.getTrackPublication(update.trackSid);\n    if (!pub) {\n      return;\n    }\n\n    pub.setSubscriptionError(update.err);\n  };\n\n  private handleDataPacket = (userPacket: UserPacket, kind: DataPacket_Kind) => {\n    // find the participant\n    const participant = this.participants.get(userPacket.participantSid);\n\n    this.emit(RoomEvent.DataReceived, userPacket.payload, participant, kind, userPacket.topic);\n\n    // also emit on the participant\n    participant?.emit(ParticipantEvent.DataReceived, userPacket.payload, kind);\n  };\n\n  private handleAudioPlaybackStarted = () => {\n    if (this.canPlaybackAudio) {\n      return;\n    }\n    this.audioEnabled = true;\n    this.emit(RoomEvent.AudioPlaybackStatusChanged, true);\n  };\n\n  private handleAudioPlaybackFailed = (e: any) => {\n    this.log.warn('could not playback audio', { ...this.logContext, error: e });\n    if (!this.canPlaybackAudio) {\n      return;\n    }\n    this.audioEnabled = false;\n    this.emit(RoomEvent.AudioPlaybackStatusChanged, false);\n  };\n\n  private handleVideoPlaybackStarted = () => {\n    if (this.isVideoPlaybackBlocked) {\n      this.isVideoPlaybackBlocked = false;\n      this.emit(RoomEvent.VideoPlaybackStatusChanged, true);\n    }\n  };\n\n  private handleVideoPlaybackFailed = () => {\n    if (!this.isVideoPlaybackBlocked) {\n      this.isVideoPlaybackBlocked = true;\n      this.emit(RoomEvent.VideoPlaybackStatusChanged, false);\n    }\n  };\n\n  private handleDeviceChange = async () => {\n    this.emit(RoomEvent.MediaDevicesChanged);\n  };\n\n  private handleRoomUpdate = (room: RoomModel) => {\n    const oldRoom = this.roomInfo;\n    this.roomInfo = room;\n    if (oldRoom && oldRoom.metadata !== room.metadata) {\n      this.emitWhenConnected(RoomEvent.RoomMetadataChanged, room.metadata);\n    }\n    if (oldRoom?.activeRecording !== room.activeRecording) {\n      this.emitWhenConnected(RoomEvent.RecordingStatusChanged, room.activeRecording);\n    }\n  };\n\n  private handleConnectionQualityUpdate = (update: ConnectionQualityUpdate) => {\n    update.updates.forEach((info) => {\n      if (info.participantSid === this.localParticipant.sid) {\n        this.localParticipant.setConnectionQuality(info.quality);\n        return;\n      }\n      const participant = this.participants.get(info.participantSid);\n      if (participant) {\n        participant.setConnectionQuality(info.quality);\n      }\n    });\n  };\n\n  private async acquireAudioContext() {\n    if (\n      typeof this.options.expWebAudioMix !== 'boolean' &&\n      this.options.expWebAudioMix.audioContext\n    ) {\n      // override audio context with custom audio context if supplied by user\n      this.audioContext = this.options.expWebAudioMix.audioContext;\n    } else if (!this.audioContext || this.audioContext.state === 'closed') {\n      // by using an AudioContext, it reduces lag on audio elements\n      // https://stackoverflow.com/questions/9811429/html5-audio-tag-on-safari-has-a-delay/54119854#54119854\n      this.audioContext = getNewAudioContext() ?? undefined;\n    }\n\n    if (this.audioContext && this.audioContext.state === 'suspended') {\n      // for iOS a newly created AudioContext is always in `suspended` state.\n      // we try our best to resume the context here, if that doesn't work, we just continue with regular processing\n      try {\n        await this.audioContext.resume();\n      } catch (e: any) {\n        this.log.warn('Could not resume audio context', { ...this.logContext, error: e });\n      }\n    }\n\n    if (this.options.expWebAudioMix) {\n      this.participants.forEach((participant) => participant.setAudioContext(this.audioContext));\n    }\n\n    this.localParticipant.setAudioContext(this.audioContext);\n\n    const newContextIsRunning = this.audioContext?.state === 'running';\n    if (newContextIsRunning !== this.canPlaybackAudio) {\n      this.audioEnabled = newContextIsRunning;\n      this.emit(RoomEvent.AudioPlaybackStatusChanged, newContextIsRunning);\n    }\n  }\n\n  private createParticipant(id: string, info?: ParticipantInfo): RemoteParticipant {\n    let participant: RemoteParticipant;\n    if (info) {\n      participant = RemoteParticipant.fromParticipantInfo(this.engine.client, info);\n    } else {\n      participant = new RemoteParticipant(this.engine.client, id, '', undefined, undefined, {\n        loggerContextCb: () => this.logContext,\n        loggerName: this.options.loggerName,\n      });\n    }\n    if (this.options.expWebAudioMix) {\n      participant.setAudioContext(this.audioContext);\n    }\n    if (this.options.audioOutput?.deviceId) {\n      participant\n        .setAudioOutput(this.options.audioOutput)\n        .catch((e) => this.log.warn(`Could not set audio output: ${e.message}`, this.logContext));\n    }\n    return participant;\n  }\n\n  private getOrCreateParticipant(id: string, info: ParticipantInfo): RemoteParticipant {\n    if (this.participants.has(id)) {\n      return this.participants.get(id) as RemoteParticipant;\n    }\n    const participant = this.createParticipant(id, info);\n    this.participants.set(id, participant);\n\n    this.identityToSid.set(info.identity, info.sid);\n    // if we have valid info and the participant wasn't in the map before, we can assume the participant is new\n    // firing here to make sure that `ParticipantConnected` fires before the initial track events\n    this.emitWhenConnected(RoomEvent.ParticipantConnected, participant);\n\n    // also forward events\n    // trackPublished is only fired for tracks added after both local participant\n    // and remote participant joined the room\n    participant\n      .on(ParticipantEvent.TrackPublished, (trackPublication: RemoteTrackPublication) => {\n        this.emitWhenConnected(RoomEvent.TrackPublished, trackPublication, participant);\n      })\n      .on(\n        ParticipantEvent.TrackSubscribed,\n        (track: RemoteTrack, publication: RemoteTrackPublication) => {\n          // monitor playback status\n          if (track.kind === Track.Kind.Audio) {\n            track.on(TrackEvent.AudioPlaybackStarted, this.handleAudioPlaybackStarted);\n            track.on(TrackEvent.AudioPlaybackFailed, this.handleAudioPlaybackFailed);\n          } else if (track.kind === Track.Kind.Video) {\n            track.on(TrackEvent.VideoPlaybackFailed, this.handleVideoPlaybackFailed);\n            track.on(TrackEvent.VideoPlaybackStarted, this.handleVideoPlaybackStarted);\n          }\n          this.emit(RoomEvent.TrackSubscribed, track, publication, participant);\n        },\n      )\n      .on(ParticipantEvent.TrackUnpublished, (publication: RemoteTrackPublication) => {\n        this.emit(RoomEvent.TrackUnpublished, publication, participant);\n      })\n      .on(\n        ParticipantEvent.TrackUnsubscribed,\n        (track: RemoteTrack, publication: RemoteTrackPublication) => {\n          this.emit(RoomEvent.TrackUnsubscribed, track, publication, participant);\n        },\n      )\n      .on(ParticipantEvent.TrackSubscriptionFailed, (sid: string) => {\n        this.emit(RoomEvent.TrackSubscriptionFailed, sid, participant);\n      })\n      .on(ParticipantEvent.TrackMuted, (pub: TrackPublication) => {\n        this.emitWhenConnected(RoomEvent.TrackMuted, pub, participant);\n      })\n      .on(ParticipantEvent.TrackUnmuted, (pub: TrackPublication) => {\n        this.emitWhenConnected(RoomEvent.TrackUnmuted, pub, participant);\n      })\n      .on(ParticipantEvent.ParticipantMetadataChanged, (metadata: string | undefined) => {\n        this.emitWhenConnected(RoomEvent.ParticipantMetadataChanged, metadata, participant);\n      })\n      .on(ParticipantEvent.ParticipantNameChanged, (name) => {\n        this.emitWhenConnected(RoomEvent.ParticipantNameChanged, name, participant);\n      })\n      .on(ParticipantEvent.ConnectionQualityChanged, (quality: ConnectionQuality) => {\n        this.emitWhenConnected(RoomEvent.ConnectionQualityChanged, quality, participant);\n      })\n      .on(\n        ParticipantEvent.ParticipantPermissionsChanged,\n        (prevPermissions?: ParticipantPermission) => {\n          this.emitWhenConnected(\n            RoomEvent.ParticipantPermissionsChanged,\n            prevPermissions,\n            participant,\n          );\n        },\n      )\n      .on(ParticipantEvent.TrackSubscriptionStatusChanged, (pub, status) => {\n        this.emitWhenConnected(RoomEvent.TrackSubscriptionStatusChanged, pub, status, participant);\n      })\n      .on(ParticipantEvent.TrackSubscriptionFailed, (trackSid, error) => {\n        this.emit(RoomEvent.TrackSubscriptionFailed, trackSid, participant, error);\n      })\n      .on(ParticipantEvent.TrackSubscriptionPermissionChanged, (pub, status) => {\n        this.emitWhenConnected(\n          RoomEvent.TrackSubscriptionPermissionChanged,\n          pub,\n          status,\n          participant,\n        );\n      });\n\n    // update info at the end after callbacks have been set up\n    if (info) {\n      participant.updateInfo(info);\n    }\n    return participant;\n  }\n\n  private sendSyncState() {\n    const remoteTracks = Array.from(this.participants.values()).reduce((acc, participant) => {\n      acc.push(...(participant.getTracks() as RemoteTrackPublication[])); // FIXME would be nice to have this return RemoteTrackPublications directly instead of the type cast\n      return acc;\n    }, [] as RemoteTrackPublication[]);\n    const localTracks = this.localParticipant.getTracks() as LocalTrackPublication[]; // FIXME would be nice to have this return LocalTrackPublications directly instead of the type cast\n    this.engine.sendSyncState(remoteTracks, localTracks);\n  }\n\n  /**\n   * After resuming, we'll need to notify the server of the current\n   * subscription settings.\n   */\n  private updateSubscriptions() {\n    for (const p of this.participants.values()) {\n      for (const pub of p.videoTracks.values()) {\n        if (pub.isSubscribed && pub instanceof RemoteTrackPublication) {\n          pub.emitTrackUpdate();\n        }\n      }\n    }\n  }\n\n  private registerConnectionReconcile() {\n    this.clearConnectionReconcile();\n    let consecutiveFailures = 0;\n    this.connectionReconcileInterval = CriticalTimers.setInterval(() => {\n      if (\n        // ensure we didn't tear it down\n        !this.engine ||\n        // engine detected close, but Room missed it\n        this.engine.isClosed ||\n        // transports failed without notifying engine\n        !this.engine.verifyTransport()\n      ) {\n        consecutiveFailures++;\n        this.log.warn('detected connection state mismatch', {\n          ...this.logContext,\n          numFailures: consecutiveFailures,\n          engine: {\n            closed: this.engine.isClosed,\n            transportsConnected: this.engine.verifyTransport(),\n          },\n        });\n        if (consecutiveFailures >= 3) {\n          this.recreateEngine();\n          this.handleDisconnect(\n            this.options.stopLocalTrackOnUnpublish,\n            DisconnectReason.STATE_MISMATCH,\n          );\n        }\n      } else {\n        consecutiveFailures = 0;\n      }\n    }, connectionReconcileFrequency);\n  }\n\n  private clearConnectionReconcile() {\n    if (this.connectionReconcileInterval) {\n      CriticalTimers.clearInterval(this.connectionReconcileInterval);\n    }\n  }\n\n  private setAndEmitConnectionState(state: ConnectionState): boolean {\n    if (state === this.state) {\n      // unchanged\n      return false;\n    }\n    this.state = state;\n    this.emit(RoomEvent.ConnectionStateChanged, this.state);\n    return true;\n  }\n\n  private emitBufferedEvents() {\n    this.bufferedEvents.forEach(([ev, args]) => {\n      this.emit(ev, ...args);\n    });\n    this.bufferedEvents = [];\n  }\n\n  private emitWhenConnected<E extends keyof RoomEventCallbacks>(\n    event: E,\n    ...args: Parameters<RoomEventCallbacks[E]>\n  ): boolean {\n    if (this.state === ConnectionState.Connected) {\n      return this.emit(event, ...args);\n    } else if (this.state === ConnectionState.Reconnecting) {\n      // in case the room is reconnecting, buffer the events by firing them later after emitting RoomEvent.Reconnected\n      this.bufferedEvents.push([event, args]);\n    }\n    return false;\n  }\n\n  private onLocalParticipantMetadataChanged = (metadata: string | undefined) => {\n    this.emit(RoomEvent.ParticipantMetadataChanged, metadata, this.localParticipant);\n  };\n\n  private onLocalParticipantNameChanged = (name: string) => {\n    this.emit(RoomEvent.ParticipantNameChanged, name, this.localParticipant);\n  };\n\n  private onLocalTrackMuted = (pub: TrackPublication) => {\n    this.emit(RoomEvent.TrackMuted, pub, this.localParticipant);\n  };\n\n  private onLocalTrackUnmuted = (pub: TrackPublication) => {\n    this.emit(RoomEvent.TrackUnmuted, pub, this.localParticipant);\n  };\n\n  private onLocalTrackPublished = async (pub: LocalTrackPublication) => {\n    this.emit(RoomEvent.LocalTrackPublished, pub, this.localParticipant);\n    if (pub.track instanceof LocalAudioTrack) {\n      const trackIsSilent = await pub.track.checkForSilence();\n      if (trackIsSilent) {\n        this.emit(RoomEvent.LocalAudioSilenceDetected, pub);\n      }\n    }\n    const deviceId = await pub.track?.getDeviceId();\n    const deviceKind = sourceToKind(pub.source);\n    if (\n      deviceKind &&\n      deviceId &&\n      deviceId !== this.localParticipant.activeDeviceMap.get(deviceKind)\n    ) {\n      this.localParticipant.activeDeviceMap.set(deviceKind, deviceId);\n      this.emit(RoomEvent.ActiveDeviceChanged, deviceKind, deviceId);\n    }\n  };\n\n  private onLocalTrackUnpublished = (pub: LocalTrackPublication) => {\n    this.emit(RoomEvent.LocalTrackUnpublished, pub, this.localParticipant);\n  };\n\n  private onLocalConnectionQualityChanged = (quality: ConnectionQuality) => {\n    this.emit(RoomEvent.ConnectionQualityChanged, quality, this.localParticipant);\n  };\n\n  private onMediaDevicesError = (e: Error) => {\n    this.emit(RoomEvent.MediaDevicesError, e);\n  };\n\n  private onLocalParticipantPermissionsChanged = (prevPermissions?: ParticipantPermission) => {\n    this.emit(RoomEvent.ParticipantPermissionsChanged, prevPermissions, this.localParticipant);\n  };\n\n  /**\n   * Allows to populate a room with simulated participants.\n   * No actual connection to a server will be established, all state is\n   * @experimental\n   */\n  async simulateParticipants(options: SimulationOptions) {\n    const publishOptions = {\n      audio: true,\n      video: true,\n      useRealTracks: false,\n      ...options.publish,\n    };\n    const participantOptions = {\n      count: 9,\n      audio: false,\n      video: true,\n      aspectRatios: [1.66, 1.7, 1.3],\n      ...options.participants,\n    };\n    this.handleDisconnect();\n    this.roomInfo = new RoomModel({\n      sid: 'RM_SIMULATED',\n      name: 'simulated-room',\n      emptyTimeout: 0,\n      maxParticipants: 0,\n      creationTime: protoInt64.parse(new Date().getTime()),\n      metadata: '',\n      numParticipants: 1,\n      numPublishers: 1,\n      turnPassword: '',\n      enabledCodecs: [],\n      activeRecording: false,\n    });\n\n    this.localParticipant.updateInfo(\n      new ParticipantInfo({\n        identity: 'simulated-local',\n        name: 'local-name',\n      }),\n    );\n    this.setupLocalParticipantEvents();\n    this.emit(RoomEvent.SignalConnected);\n    this.emit(RoomEvent.Connected);\n    this.setAndEmitConnectionState(ConnectionState.Connected);\n    if (publishOptions.video) {\n      const camPub = new LocalTrackPublication(\n        Track.Kind.Video,\n        new TrackInfo({\n          source: TrackSource.CAMERA,\n          sid: Math.floor(Math.random() * 10_000).toString(),\n          type: TrackType.AUDIO,\n          name: 'video-dummy',\n        }),\n        new LocalVideoTrack(\n          publishOptions.useRealTracks\n            ? (\n                await window.navigator.mediaDevices.getUserMedia({ video: true })\n              ).getVideoTracks()[0]\n            : createDummyVideoStreamTrack(\n                160 * (participantOptions.aspectRatios[0] ?? 1),\n                160,\n                true,\n                true,\n              ),\n          undefined,\n          false,\n          { loggerName: this.options.loggerName, loggerContextCb: () => this.logContext },\n        ),\n        { loggerName: this.options.loggerName, loggerContextCb: () => this.logContext },\n      );\n      // @ts-ignore\n      this.localParticipant.addTrackPublication(camPub);\n      this.localParticipant.emit(ParticipantEvent.LocalTrackPublished, camPub);\n    }\n    if (publishOptions.audio) {\n      const audioPub = new LocalTrackPublication(\n        Track.Kind.Audio,\n        new TrackInfo({\n          source: TrackSource.MICROPHONE,\n          sid: Math.floor(Math.random() * 10_000).toString(),\n          type: TrackType.AUDIO,\n        }),\n        new LocalAudioTrack(\n          publishOptions.useRealTracks\n            ? (await navigator.mediaDevices.getUserMedia({ audio: true })).getAudioTracks()[0]\n            : getEmptyAudioStreamTrack(),\n          undefined,\n          false,\n          this.audioContext,\n          { loggerName: this.options.loggerName, loggerContextCb: () => this.logContext },\n        ),\n        { loggerName: this.options.loggerName, loggerContextCb: () => this.logContext },\n      );\n      // @ts-ignore\n      this.localParticipant.addTrackPublication(audioPub);\n      this.localParticipant.emit(ParticipantEvent.LocalTrackPublished, audioPub);\n    }\n\n    for (let i = 0; i < participantOptions.count - 1; i += 1) {\n      let info: ParticipantInfo = new ParticipantInfo({\n        sid: Math.floor(Math.random() * 10_000).toString(),\n        identity: `simulated-${i}`,\n        state: ParticipantInfo_State.ACTIVE,\n        tracks: [],\n        joinedAt: protoInt64.parse(Date.now()),\n      });\n      const p = this.getOrCreateParticipant(info.identity, info);\n      if (participantOptions.video) {\n        const dummyVideo = createDummyVideoStreamTrack(\n          160 * (participantOptions.aspectRatios[i % participantOptions.aspectRatios.length] ?? 1),\n          160,\n          false,\n          true,\n        );\n        const videoTrack = new TrackInfo({\n          source: TrackSource.CAMERA,\n          sid: Math.floor(Math.random() * 10_000).toString(),\n          type: TrackType.AUDIO,\n        });\n        p.addSubscribedMediaTrack(dummyVideo, videoTrack.sid, new MediaStream([dummyVideo]));\n        info.tracks = [...info.tracks, videoTrack];\n      }\n      if (participantOptions.audio) {\n        const dummyTrack = getEmptyAudioStreamTrack();\n        const audioTrack = new TrackInfo({\n          source: TrackSource.MICROPHONE,\n          sid: Math.floor(Math.random() * 10_000).toString(),\n          type: TrackType.AUDIO,\n        });\n        p.addSubscribedMediaTrack(dummyTrack, audioTrack.sid, new MediaStream([dummyTrack]));\n        info.tracks = [...info.tracks, audioTrack];\n      }\n\n      p.updateInfo(info);\n    }\n  }\n\n  // /** @internal */\n  emit<E extends keyof RoomEventCallbacks>(\n    event: E,\n    ...args: Parameters<RoomEventCallbacks[E]>\n  ): boolean {\n    // active speaker updates are too spammy\n    if (event !== RoomEvent.ActiveSpeakersChanged) {\n      // only extract logContext from arguments in order to avoid logging the whole object tree\n      const minimizedArgs = mapArgs(args).filter((arg: unknown) => arg !== undefined);\n      this.log.debug(`room event ${event}`, { ...this.logContext, event, args: minimizedArgs });\n    }\n    return super.emit(event, ...args);\n  }\n}\n\nfunction mapArgs(args: unknown[]): any {\n  return args.map((arg: unknown) => {\n    if (!arg) {\n      return;\n    }\n    if (Array.isArray(arg)) {\n      return mapArgs(arg);\n    }\n    if (typeof arg === 'object') {\n      return 'logContext' in arg && arg.logContext;\n    }\n    return arg;\n  });\n}\n\nexport default Room;\n\nexport type RoomEventCallbacks = {\n  connected: () => void;\n  reconnecting: () => void;\n  reconnected: () => void;\n  disconnected: (reason?: DisconnectReason) => void;\n  /** @deprecated stateChanged has been renamed to connectionStateChanged */\n  stateChanged: (state: ConnectionState) => void;\n  connectionStateChanged: (state: ConnectionState) => void;\n  mediaDevicesChanged: () => void;\n  participantConnected: (participant: RemoteParticipant) => void;\n  participantDisconnected: (participant: RemoteParticipant) => void;\n  trackPublished: (publication: RemoteTrackPublication, participant: RemoteParticipant) => void;\n  trackSubscribed: (\n    track: RemoteTrack,\n    publication: RemoteTrackPublication,\n    participant: RemoteParticipant,\n  ) => void;\n  trackSubscriptionFailed: (\n    trackSid: string,\n    participant: RemoteParticipant,\n    reason?: SubscriptionError,\n  ) => void;\n  trackUnpublished: (publication: RemoteTrackPublication, participant: RemoteParticipant) => void;\n  trackUnsubscribed: (\n    track: RemoteTrack,\n    publication: RemoteTrackPublication,\n    participant: RemoteParticipant,\n  ) => void;\n  trackMuted: (publication: TrackPublication, participant: Participant) => void;\n  trackUnmuted: (publication: TrackPublication, participant: Participant) => void;\n  localTrackPublished: (publication: LocalTrackPublication, participant: LocalParticipant) => void;\n  localTrackUnpublished: (\n    publication: LocalTrackPublication,\n    participant: LocalParticipant,\n  ) => void;\n  localAudioSilenceDetected: (publication: LocalTrackPublication) => void;\n  participantMetadataChanged: (\n    metadata: string | undefined,\n    participant: RemoteParticipant | LocalParticipant,\n  ) => void;\n  participantNameChanged: (name: string, participant: RemoteParticipant | LocalParticipant) => void;\n  participantPermissionsChanged: (\n    prevPermissions: ParticipantPermission | undefined,\n    participant: RemoteParticipant | LocalParticipant,\n  ) => void;\n  activeSpeakersChanged: (speakers: Array<Participant>) => void;\n  roomMetadataChanged: (metadata: string) => void;\n  dataReceived: (\n    payload: Uint8Array,\n    participant?: RemoteParticipant,\n    kind?: DataPacket_Kind,\n    topic?: string,\n  ) => void;\n  connectionQualityChanged: (quality: ConnectionQuality, participant: Participant) => void;\n  mediaDevicesError: (error: Error) => void;\n  trackStreamStateChanged: (\n    publication: RemoteTrackPublication,\n    streamState: Track.StreamState,\n    participant: RemoteParticipant,\n  ) => void;\n  trackSubscriptionPermissionChanged: (\n    publication: RemoteTrackPublication,\n    status: TrackPublication.PermissionStatus,\n    participant: RemoteParticipant,\n  ) => void;\n  trackSubscriptionStatusChanged: (\n    publication: RemoteTrackPublication,\n    status: TrackPublication.SubscriptionStatus,\n    participant: RemoteParticipant,\n  ) => void;\n  audioPlaybackChanged: (playing: boolean) => void;\n  videoPlaybackChanged: (playing: boolean) => void;\n  signalConnected: () => void;\n  recordingStatusChanged: (recording: boolean) => void;\n  participantEncryptionStatusChanged: (encrypted: boolean, participant?: Participant) => void;\n  encryptionError: (error: Error) => void;\n  dcBufferStatusChanged: (isLow: boolean, kind: DataPacket_Kind) => void;\n  activeDeviceChanged: (kind: MediaDeviceKind, deviceId: string) => void;\n};\n", "import { EventEmitter } from 'events';\nimport type TypedEmitter from 'typed-emitter';\nimport type { RoomConnectOptions, RoomOptions } from '../../options';\nimport type RTCEngine from '../../room/RTCEngine';\nimport Room, { ConnectionState } from '../../room/Room';\n\ntype LogMessage = {\n  level: 'info' | 'warning' | 'error';\n  message: string;\n};\n\nexport enum CheckStatus {\n  IDLE,\n  RUNNING,\n  SKIPPED,\n  SUCCESS,\n  FAILED,\n}\n\nexport type CheckInfo = {\n  name: string;\n  logs: Array<LogMessage>;\n  status: CheckStatus;\n  description: string;\n};\n\nexport interface CheckerOptions {\n  errorsAsWarnings?: boolean;\n  roomOptions?: RoomOptions;\n  connectOptions?: RoomConnectOptions;\n}\n\nexport abstract class Checker extends (EventEmitter as new () => TypedEmitter<CheckerCallbacks>) {\n  protected url: string;\n\n  protected token: string;\n\n  room: Room;\n\n  connectOptions?: RoomConnectOptions;\n\n  status: CheckStatus = CheckStatus.IDLE;\n\n  logs: Array<LogMessage> = [];\n\n  errorsAsWarnings: boolean = false;\n\n  name: string;\n\n  constructor(url: string, token: string, options: CheckerOptions = {}) {\n    super();\n    this.url = url;\n    this.token = token;\n    this.name = this.constructor.name;\n    this.room = new Room(options.roomOptions);\n    this.connectOptions = options.connectOptions;\n    if (options.errorsAsWarnings) {\n      this.errorsAsWarnings = options.errorsAsWarnings;\n    }\n  }\n\n  abstract get description(): string;\n\n  protected abstract perform(): Promise<void>;\n\n  async run(onComplete?: () => void) {\n    if (this.status !== CheckStatus.IDLE) {\n      throw Error('check is running already');\n    }\n    this.setStatus(CheckStatus.RUNNING);\n\n    try {\n      await this.perform();\n    } catch (err) {\n      if (err instanceof Error) {\n        if (this.errorsAsWarnings) {\n          this.appendWarning(err.message);\n        } else {\n          this.appendError(err.message);\n        }\n      }\n    }\n\n    await this.disconnect();\n\n    // sleep for a bit to ensure disconnect\n    await new Promise((resolve) => setTimeout(resolve, 500));\n\n    // @ts-ignore\n    if (this.status !== CheckStatus.SKIPPED) {\n      this.setStatus(this.isSuccess() ? CheckStatus.SUCCESS : CheckStatus.FAILED);\n    }\n\n    if (onComplete) {\n      onComplete();\n    }\n    return this.getInfo();\n  }\n\n  protected isSuccess(): boolean {\n    return !this.logs.some((l) => l.level === 'error');\n  }\n\n  protected async connect(): Promise<Room> {\n    if (this.room.state === ConnectionState.Connected) {\n      return this.room;\n    }\n    await this.room.connect(this.url, this.token);\n    return this.room;\n  }\n\n  protected async disconnect() {\n    if (this.room && this.room.state !== ConnectionState.Disconnected) {\n      await this.room.disconnect();\n      // wait for it to go through\n      await new Promise((resolve) => setTimeout(resolve, 500));\n    }\n  }\n\n  protected skip() {\n    this.setStatus(CheckStatus.SKIPPED);\n  }\n\n  protected appendMessage(message: string) {\n    this.logs.push({ level: 'info', message });\n    this.emit('update', this.getInfo());\n  }\n\n  protected appendWarning(message: string) {\n    this.logs.push({ level: 'warning', message });\n    this.emit('update', this.getInfo());\n  }\n\n  protected appendError(message: string) {\n    this.logs.push({ level: 'error', message });\n    this.emit('update', this.getInfo());\n  }\n\n  protected setStatus(status: CheckStatus) {\n    this.status = status;\n    this.emit('update', this.getInfo());\n  }\n\n  protected get engine(): RTCEngine | undefined {\n    return this.room?.engine;\n  }\n\n  getInfo(): CheckInfo {\n    return {\n      logs: this.logs,\n      name: this.name,\n      status: this.status,\n      description: this.description,\n    };\n  }\n}\nexport type InstantiableCheck<T extends Checker> = {\n  new (url: string, token: string, options?: CheckerOptions): T;\n};\n\ntype CheckerCallbacks = {\n  update: (info: CheckInfo) => void;\n};\n", "import DeviceManager from '../DeviceManager';\nimport { audioDefaults, videoDefaults } from '../defaults';\nimport { DeviceUnsupportedError, TrackInvalidError } from '../errors';\nimport { mediaTrackToLocalTrack } from '../participant/publishUtils';\nimport { isSafari17 } from '../utils';\nimport LocalAudioTrack from './LocalAudioTrack';\nimport type LocalTrack from './LocalTrack';\nimport LocalVideoTrack from './LocalVideoTrack';\nimport { Track } from './Track';\nimport type {\n  AudioCaptureOptions,\n  CreateLocalTracksOptions,\n  ScreenShareCaptureOptions,\n  VideoCaptureOptions,\n} from './options';\nimport { ScreenSharePresets } from './options';\nimport {\n  constraintsForOptions,\n  mergeDefaultOptions,\n  screenCaptureToDisplayMediaStreamOptions,\n} from './utils';\n\n/**\n * Creates a local video and audio track at the same time. When acquiring both\n * audio and video tracks together, it'll display a single permission prompt to\n * the user instead of two separate ones.\n * @param options\n */\nexport async function createLocalTracks(\n  options?: CreateLocalTracksOptions,\n): Promise<Array<LocalTrack>> {\n  // set default options to true\n  options ??= {};\n  options.audio ??= true;\n  options.video ??= true;\n\n  const opts = mergeDefaultOptions(options, audioDefaults, videoDefaults);\n  const constraints = constraintsForOptions(opts);\n\n  // Keep a reference to the promise on DeviceManager and await it in getLocalDevices()\n  // works around iOS Safari Bug https://bugs.webkit.org/show_bug.cgi?id=179363\n  const mediaPromise = navigator.mediaDevices.getUserMedia(constraints);\n\n  if (options.audio) {\n    DeviceManager.userMediaPromiseMap.set('audioinput', mediaPromise);\n    mediaPromise.catch(() => DeviceManager.userMediaPromiseMap.delete('audioinput'));\n  }\n  if (options.video) {\n    DeviceManager.userMediaPromiseMap.set('videoinput', mediaPromise);\n    mediaPromise.catch(() => DeviceManager.userMediaPromiseMap.delete('videoinput'));\n  }\n\n  const stream = await mediaPromise;\n  return stream.getTracks().map((mediaStreamTrack) => {\n    const isAudio = mediaStreamTrack.kind === 'audio';\n    let trackOptions = isAudio ? options!.audio : options!.video;\n    if (typeof trackOptions === 'boolean' || !trackOptions) {\n      trackOptions = {};\n    }\n    let trackConstraints: MediaTrackConstraints | undefined;\n    const conOrBool = isAudio ? constraints.audio : constraints.video;\n    if (typeof conOrBool !== 'boolean') {\n      trackConstraints = conOrBool;\n    }\n\n    // update the constraints with the device id the user gave permissions to in the permission prompt\n    // otherwise each track restart (e.g. mute - unmute) will try to initialize the device again -> causing additional permission prompts\n    if (trackConstraints) {\n      trackConstraints.deviceId = mediaStreamTrack.getSettings().deviceId;\n    } else {\n      trackConstraints = { deviceId: mediaStreamTrack.getSettings().deviceId };\n    }\n\n    const track = mediaTrackToLocalTrack(mediaStreamTrack, trackConstraints);\n    if (track.kind === Track.Kind.Video) {\n      track.source = Track.Source.Camera;\n    } else if (track.kind === Track.Kind.Audio) {\n      track.source = Track.Source.Microphone;\n    }\n    track.mediaStream = stream;\n    return track;\n  });\n}\n\n/**\n * Creates a [[LocalVideoTrack]] with getUserMedia()\n * @param options\n */\nexport async function createLocalVideoTrack(\n  options?: VideoCaptureOptions,\n): Promise<LocalVideoTrack> {\n  const tracks = await createLocalTracks({\n    audio: false,\n    video: options,\n  });\n  return <LocalVideoTrack>tracks[0];\n}\n\nexport async function createLocalAudioTrack(\n  options?: AudioCaptureOptions,\n): Promise<LocalAudioTrack> {\n  const tracks = await createLocalTracks({\n    audio: options,\n    video: false,\n  });\n  return <LocalAudioTrack>tracks[0];\n}\n\n/**\n * Creates a screen capture tracks with getDisplayMedia().\n * A LocalVideoTrack is always created and returned.\n * If { audio: true }, and the browser supports audio capture, a LocalAudioTrack is also created.\n */\nexport async function createLocalScreenTracks(\n  options?: ScreenShareCaptureOptions,\n): Promise<Array<LocalTrack>> {\n  if (options === undefined) {\n    options = {};\n  }\n  if (options.resolution === undefined && !isSafari17()) {\n    options.resolution = ScreenSharePresets.h1080fps30.resolution;\n  }\n\n  if (navigator.mediaDevices.getDisplayMedia === undefined) {\n    throw new DeviceUnsupportedError('getDisplayMedia not supported');\n  }\n\n  const constraints = screenCaptureToDisplayMediaStreamOptions(options);\n  const stream: MediaStream = await navigator.mediaDevices.getDisplayMedia(constraints);\n\n  const tracks = stream.getVideoTracks();\n  if (tracks.length === 0) {\n    throw new TrackInvalidError('no video track found');\n  }\n  const screenVideo = new LocalVideoTrack(tracks[0], undefined, false);\n  screenVideo.source = Track.Source.ScreenShare;\n  const localTracks: Array<LocalTrack> = [screenVideo];\n  if (stream.getAudioTracks().length > 0) {\n    const screenAudio = new LocalAudioTrack(stream.getAudioTracks()[0], undefined, false);\n    screenAudio.source = Track.Source.ScreenShareAudio;\n    localTracks.push(screenAudio);\n  }\n  return localTracks;\n}\n", "import { createLocalAudioTrack } from '../../room/track/create';\nimport { Checker } from './Checker';\n\nexport class PublishAudioCheck extends Checker {\n  get description(): string {\n    return 'Can publish audio';\n  }\n\n  async perform(): Promise<void> {\n    const room = await this.connect();\n\n    const track = await createLocalAudioTrack();\n    room.localParticipant.publishTrack(track);\n    // wait for a few seconds to publish\n    await new Promise((resolve) => setTimeout(resolve, 3000));\n\n    // verify RTC stats that it's publishing\n    const stats = await track.sender?.getStats();\n    if (!stats) {\n      throw new Error('Could not get RTCStats');\n    }\n    let numPackets = 0;\n    stats.forEach((stat) => {\n      if (stat.type === 'outbound-rtp' && stat.mediaType === 'audio') {\n        numPackets = stat.packetsSent;\n      }\n    });\n    if (numPackets === 0) {\n      throw new Error('Could not determine packets are sent');\n    }\n    this.appendMessage(`published ${numPackets} audio packets`);\n  }\n}\n", "import { createLocalVideoTrack } from '../../room/track/create';\nimport { Checker } from './Checker';\n\nexport class PublishVideoCheck extends Checker {\n  get description(): string {\n    return 'Can publish video';\n  }\n\n  async perform(): Promise<void> {\n    const room = await this.connect();\n\n    const track = await createLocalVideoTrack();\n    room.localParticipant.publishTrack(track);\n    // wait for a few seconds to publish\n    await new Promise((resolve) => setTimeout(resolve, 3000));\n\n    // verify RTC stats that it's publishing\n    const stats = await track.sender?.getStats();\n    if (!stats) {\n      throw new Error('Could not get RTCStats');\n    }\n    let numPackets = 0;\n    stats.forEach((stat) => {\n      if (stat.type === 'outbound-rtp' && stat.mediaType === 'video') {\n        numPackets = stat.packetsSent;\n      }\n    });\n    if (numPackets === 0) {\n      throw new Error('Could not determine packets are sent');\n    }\n    this.appendMessage(`published ${numPackets} video packets`);\n  }\n}\n", "import { ConnectionState } from '../../room/Room';\nimport { RoomEvent } from '../../room/events';\nimport { Checker } from './Checker';\n\nexport class ReconnectCheck extends Checker {\n  get description(): string {\n    return 'Resuming connection after interruption';\n  }\n\n  async perform(): Promise<void> {\n    const room = await this.connect();\n    let reconnectingTriggered = false;\n    let reconnected = false;\n\n    let reconnectResolver: (value: unknown) => void;\n    const reconnectTimeout = new Promise((resolve) => {\n      setTimeout(resolve, 5000);\n      reconnectResolver = resolve;\n    });\n\n    room\n      .on(RoomEvent.Reconnecting, () => {\n        reconnectingTriggered = true;\n      })\n      .on(RoomEvent.Reconnected, () => {\n        reconnected = true;\n        reconnectResolver(true);\n      });\n\n    room.engine.client.ws?.close();\n    const onClose = room.engine.client.onClose;\n    if (onClose) {\n      onClose('');\n    }\n\n    await reconnectTimeout;\n\n    if (!reconnectingTriggered) {\n      throw new Error('Did not attempt to reconnect');\n    } else if (!reconnected || room.state !== ConnectionState.Connected) {\n      this.appendWarning('reconnection is only possible in Redis-based configurations');\n      throw new Error('Not able to reconnect');\n    }\n  }\n}\n", "import { SignalClient } from '../../api/SignalClient';\nimport { Checker } from './Checker';\n\nexport class TURNCheck extends Checker {\n  get description(): string {\n    return 'Can connect via TURN';\n  }\n\n  async perform(): Promise<void> {\n    const signalClient = new SignalClient();\n    const joinRes = await signalClient.join(this.url, this.token, {\n      autoSubscribe: true,\n      maxRetries: 0,\n      e2eeEnabled: false,\n      websocketTimeout: 15_000,\n    });\n\n    let hasTLS = false;\n    let hasTURN = false;\n    let hasSTUN = false;\n\n    for (let iceServer of joinRes.iceServers) {\n      for (let url of iceServer.urls) {\n        if (url.startsWith('turn:')) {\n          hasTURN = true;\n          hasSTUN = true;\n        } else if (url.startsWith('turns:')) {\n          hasTURN = true;\n          hasSTUN = true;\n          hasTLS = true;\n        }\n        if (url.startsWith('stun:')) {\n          hasSTUN = true;\n        }\n      }\n    }\n    if (!hasSTUN) {\n      this.appendWarning('No STUN servers configured on server side.');\n    } else if (hasTURN && !hasTLS) {\n      this.appendWarning('TURN is configured server side, but TURN/TLS is unavailable.');\n    }\n    await signalClient.close();\n    if (this.connectOptions?.rtcConfig?.iceServers || hasTURN) {\n      await this.room!.connect(this.url, this.token, {\n        rtcConfig: {\n          iceTransportPolicy: 'relay',\n        },\n      });\n    } else {\n      this.appendWarning('No TURN servers configured.');\n      this.skip();\n      await new Promise((resolve) => setTimeout(resolve, 0));\n    }\n  }\n}\n", "import log from '../../logger';\nimport { RoomEvent } from '../../room/events';\nimport { Checker } from './Checker';\n\nexport class WebRTCCheck extends Checker {\n  get description(): string {\n    return 'Establishing WebRTC connection';\n  }\n\n  protected async perform(): Promise<void> {\n    let hasTcp = false;\n    let hasIpv4Udp = false;\n    this.room.on(RoomEvent.SignalConnected, () => {\n      const prevTrickle = this.room.engine.client.onTrickle;\n\n      const candidates: RTCIceCandidate[] = [];\n      this.room.engine.client.onTrickle = (sd, target) => {\n        if (sd.candidate) {\n          const candidate = new RTCIceCandidate(sd);\n          candidates.push(candidate);\n          let str = `${candidate.protocol} ${candidate.address}:${candidate.port} ${candidate.type}`;\n          if (candidate.address) {\n            if (isIPPrivate(candidate.address)) {\n              str += ' (private)';\n            } else {\n              if (candidate.protocol === 'tcp' && candidate.tcpType === 'passive') {\n                hasTcp = true;\n                str += ' (passive)';\n              } else if (candidate.protocol === 'udp') {\n                hasIpv4Udp = true;\n              }\n            }\n          }\n          this.appendMessage(str);\n        }\n        if (prevTrickle) {\n          prevTrickle(sd, target);\n        }\n      };\n\n      if (this.room.engine.pcManager) {\n        this.room.engine.pcManager.subscriber.onIceCandidateError = (ev) => {\n          if (ev instanceof RTCPeerConnectionIceErrorEvent) {\n            this.appendWarning(\n              `error with ICE candidate: ${ev.errorCode} ${ev.errorText} ${ev.url}`,\n            );\n          }\n        };\n      }\n    });\n    try {\n      await this.connect();\n      log.info('now the room is connected');\n    } catch (err) {\n      this.appendWarning('ports need to be open on firewall in order to connect.');\n      throw err;\n    }\n    if (!hasTcp) {\n      this.appendWarning('Server is not configured for ICE/TCP');\n    }\n    if (!hasIpv4Udp) {\n      this.appendWarning(\n        'No public IPv4 UDP candidates were found. Your server is likely not configured correctly',\n      );\n    }\n  }\n}\n\nfunction isIPPrivate(address: string): boolean {\n  const parts = address.split('.');\n  if (parts.length === 4) {\n    if (parts[0] === '10') {\n      return true;\n    } else if (parts[0] === '192' && parts[1] === '168') {\n      return true;\n    } else if (parts[0] === '172') {\n      const second = parseInt(parts[1], 10);\n      if (second >= 16 && second <= 31) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n", "import { SignalClient } from '../../api/SignalClient';\nimport { ServerInfo_Edition } from '../../proto/livekit_models_pb';\nimport { Checker } from './Checker';\n\nexport class WebSocketCheck extends Checker {\n  get description(): string {\n    return 'Connecting to signal connection via WebSocket';\n  }\n\n  protected async perform(): Promise<void> {\n    if (this.url.startsWith('ws:') || this.url.startsWith('http:')) {\n      this.appendWarning('Server is insecure, clients may block connections to it');\n    }\n\n    let signalClient = new SignalClient();\n    const joinRes = await signalClient.join(this.url, this.token, {\n      autoSubscribe: true,\n      maxRetries: 0,\n      e2eeEnabled: false,\n      websocketTimeout: 15_000,\n    });\n    this.appendMessage(`Connected to server, version ${joinRes.serverVersion}.`);\n    if (joinRes.serverInfo?.edition === ServerInfo_Edition.Cloud && joinRes.serverInfo?.region) {\n      this.appendMessage(`LiveKit Cloud: ${joinRes.serverInfo?.region}`);\n    }\n    await signalClient.close();\n  }\n}\n", "import { EventEmitter } from 'events';\nimport type TypedEmitter from 'typed-emitter';\nimport { CheckStatus, Checker } from './checks/Checker';\nimport type { CheckInfo, InstantiableCheck } from './checks/Checker';\nimport { PublishAudioCheck } from './checks/publishAudio';\nimport { PublishVideoCheck } from './checks/publishVideo';\nimport { ReconnectCheck } from './checks/reconnect';\nimport { TURNCheck } from './checks/turn';\nimport { WebRTCCheck } from './checks/webrtc';\nimport { WebSocketCheck } from './checks/websocket';\n\nexport type { CheckInfo, CheckStatus };\n\nexport class ConnectionCheck extends (EventEmitter as new () => TypedEmitter<ConnectionCheckCallbacks>) {\n  token: string;\n\n  url: string;\n\n  private checkResults: Map<number, CheckInfo> = new Map();\n\n  constructor(url: string, token: string) {\n    super();\n    this.url = url;\n    this.token = token;\n  }\n\n  private getNextCheckId() {\n    const nextId = this.checkResults.size;\n    this.checkResults.set(nextId, {\n      logs: [],\n      status: CheckStatus.IDLE,\n      name: '',\n      description: '',\n    });\n    return nextId;\n  }\n\n  private updateCheck(checkId: number, info: CheckInfo) {\n    this.checkResults.set(checkId, info);\n    this.emit('checkUpdate', checkId, info);\n  }\n\n  isSuccess() {\n    return Array.from(this.checkResults.values()).every((r) => r.status !== CheckStatus.FAILED);\n  }\n\n  getResults() {\n    return Array.from(this.checkResults.values());\n  }\n\n  async createAndRunCheck<T extends Checker>(check: InstantiableCheck<T>) {\n    const checkId = this.getNextCheckId();\n    const test = new check(this.url, this.token);\n    const handleUpdate = (info: CheckInfo) => {\n      this.updateCheck(checkId, info);\n    };\n    test.on('update', handleUpdate);\n    const result = await test.run();\n    test.off('update', handleUpdate);\n    return result;\n  }\n\n  async checkWebsocket() {\n    return this.createAndRunCheck(WebSocketCheck);\n  }\n\n  async checkWebRTC() {\n    return this.createAndRunCheck(WebRTCCheck);\n  }\n\n  async checkTURN() {\n    return this.createAndRunCheck(TURNCheck);\n  }\n\n  async checkReconnect() {\n    return this.createAndRunCheck(ReconnectCheck);\n  }\n\n  async checkPublishAudio() {\n    return this.createAndRunCheck(PublishAudioCheck);\n  }\n\n  async checkPublishVideo() {\n    return this.createAndRunCheck(PublishVideoCheck);\n  }\n}\n\ntype ConnectionCheckCallbacks = {\n  checkUpdate: (id: number, info: CheckInfo) => void;\n};\n", "import log from '../../logger';\nimport LocalTrack from './LocalTrack';\nimport type { VideoCaptureOptions } from './options';\n\ntype FacingMode = NonNullable<VideoCaptureOptions['facingMode']>;\ntype FacingModeFromLocalTrackOptions = {\n  /**\n   * If no facing mode can be determined, this value will be used.\n   * @defaultValue 'user'\n   */\n  defaultFacingMode?: FacingMode;\n};\ntype FacingModeFromLocalTrackReturnValue = {\n  /**\n   * The (probable) facingMode of the track.\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints/facingMode | MDN docs on facingMode}\n   */\n  facingMode: FacingMode;\n  /**\n   * The confidence that the returned facingMode is correct.\n   */\n  confidence: 'high' | 'medium' | 'low';\n};\n\n/**\n * Try to analyze the local track to determine the facing mode of a track.\n *\n * @remarks\n * There is no property supported by all browsers to detect whether a video track originated from a user- or environment-facing camera device.\n * For this reason, we use the `facingMode` property when available, but will fall back on a string-based analysis of the device label to determine the facing mode.\n * If both methods fail, the default facing mode will be used.\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints/facingMode | MDN docs on facingMode}\n * @experimental\n */\nexport function facingModeFromLocalTrack(\n  localTrack: LocalTrack | MediaStreamTrack,\n  options: FacingModeFromLocalTrackOptions = {},\n): FacingModeFromLocalTrackReturnValue {\n  const track = localTrack instanceof LocalTrack ? localTrack.mediaStreamTrack : localTrack;\n  const trackSettings = track.getSettings();\n  let result: FacingModeFromLocalTrackReturnValue = {\n    facingMode: options.defaultFacingMode ?? 'user',\n    confidence: 'low',\n  };\n\n  // 1. Try to get facingMode from track settings.\n  if ('facingMode' in trackSettings) {\n    const rawFacingMode = trackSettings.facingMode;\n    log.debug('rawFacingMode', { rawFacingMode });\n    if (rawFacingMode && typeof rawFacingMode === 'string' && isFacingModeValue(rawFacingMode)) {\n      result = { facingMode: rawFacingMode, confidence: 'high' };\n    }\n  }\n\n  // 2. If we don't have a high confidence we try to get the facing mode from the device label.\n  if (['low', 'medium'].includes(result.confidence)) {\n    log.debug(`Try to get facing mode from device label: (${track.label})`);\n    const labelAnalysisResult = facingModeFromDeviceLabel(track.label);\n    if (labelAnalysisResult !== undefined) {\n      result = labelAnalysisResult;\n    }\n  }\n\n  return result;\n}\n\nconst knownDeviceLabels = new Map<string, FacingModeFromLocalTrackReturnValue>([\n  ['obs virtual camera', { facingMode: 'environment', confidence: 'medium' }],\n]);\nconst knownDeviceLabelSections = new Map<string, FacingModeFromLocalTrackReturnValue>([\n  ['iphone', { facingMode: 'environment', confidence: 'medium' }],\n  ['ipad', { facingMode: 'environment', confidence: 'medium' }],\n]);\n/**\n * Attempt to analyze the device label to determine the facing mode.\n *\n * @experimental\n */\nexport function facingModeFromDeviceLabel(\n  deviceLabel: string,\n): FacingModeFromLocalTrackReturnValue | undefined {\n  const label = deviceLabel.trim().toLowerCase();\n  // Empty string is a valid device label but we can't infer anything from it.\n  if (label === '') {\n    return undefined;\n  }\n\n  // Can we match against widely known device labels.\n  if (knownDeviceLabels.has(label)) {\n    return knownDeviceLabels.get(label);\n  }\n\n  // Can we match against sections of the device label.\n  return Array.from(knownDeviceLabelSections.entries()).find(([section]) =>\n    label.includes(section),\n  )?.[1];\n}\n\nfunction isFacingModeValue(item: string): item is FacingMode {\n  const allowedValues: FacingMode[] = ['user', 'environment', 'left', 'right'];\n  return item === undefined || allowedValues.includes(item as FacingMode);\n}\n", "const regex = '[^\\\\.\\\\s@:](?:[^\\\\s@:]*[^\\\\s@:\\\\.])?@[^\\\\.\\\\s@]+(?:\\\\.[^\\\\.\\\\s@]+)*';\n\nexport default function emailRegex({exact} = {}) {\n\treturn exact ? new RegExp(`^${regex}$`) : new RegExp(regex, 'g');\n}\n", "/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height,\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n", "import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const initialSideAxis = getSideAxis(initialPlacement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== 'none';\n      if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$filter2;\n                const placement = (_overflowsData$filter2 = overflowsData.filter(d => {\n                  if (hasFallbackAxisSideDirection) {\n                    const currentSideAxis = getSideAxis(d.placement);\n                    return currentSideAxis === initialSideAxis ||\n                    // Create a bias to the `y` side axis due to horizontal\n                    // reading directions favoring greater width.\n                    currentSideAxis === 'y';\n                  }\n                  return true;\n                }).map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: rawValue.mainAxis || 0,\n    crossAxis: rawValue.crossAxis || 0,\n    alignmentAxis: rawValue.alignmentAxis\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y,\n          enabled: {\n            [mainAxis]: checkMainAxis,\n            [crossAxis]: checkCrossAxis\n          }\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      var _state$middlewareData, _state$middlewareData2;\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\n      const maximumClippingWidth = width - overflow.left - overflow.right;\n      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);\n      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if ((_state$middlewareData = state.middlewareData.shift) != null && _state$middlewareData.enabled.x) {\n        availableWidth = maximumClippingWidth;\n      }\n      if ((_state$middlewareData2 = state.middlewareData.shift) != null && _state$middlewareData2.enabled.y) {\n        availableHeight = maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n", "function hasWindow() {\n  return typeof window !== 'undefined';\n}\nfunction getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  if (!hasWindow() || typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isTopLayer(element) {\n  return [':popover-open', ':modal'].some(selector => {\n    try {\n      return element.matches(selector);\n    } catch (e) {\n      return false;\n    }\n  });\n}\nfunction isContainingBlock(elementOrCss) {\n  const webkit = isWebKit();\n  const css = isElement(elementOrCss) ? getComputedStyle(elementOrCss) : elementOrCss;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else if (isTopLayer(currentNode)) {\n      return null;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.scrollX,\n    scrollTop: element.scrollY\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    const frameElement = getFrameElement(win);\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], frameElement && traverseIframes ? getOverflowAncestors(frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\nfunction getFrameElement(win) {\n  return win.parent && Object.getPrototypeOf(win.parent) ? win.frameElement : null;\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getFrameElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isTopLayer, isWebKit };\n", "import { rectToClientRect, autoPlacement as autoPlacement$1, shift as shift$1, flip as flip$1, size as size$1, hide as hide$1, arrow as arrow$1, inline as inline$1, limitShift as limitShift$1, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { detectOverflow, offset } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getDocumentElement, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentIFrame = win.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== win) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentIFrame = getWindow(currentIFrame).frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const window = getWindow(element);\n  if (!isHTMLElement(element)) {\n    return window;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nconst getElementRects = async function (_ref) {\n  let {\n    reference,\n    floating,\n    strategy\n  } = _ref;\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  return {\n    reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      ...(await getDimensionsFn(floating))\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    clearTimeout(timeoutId);\n    io && io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 100);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          resizeObserver && resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo && cleanupIo();\n    resizeObserver && resizeObserver.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, flip, hide, inline, limitShift, platform, shift, size };\n", "export const cssPrefix = 'lk';\n", "import type { Participant, Track, TrackPublication } from 'livekit-client';\nimport { LocalParticipant, RemoteParticipant } from 'livekit-client';\n\nimport type { PinState } from './types';\nimport type { TrackReference } from './track-reference';\nimport { isEqualTrackRef } from './track-reference';\n\nexport function isLocal(p: Participant) {\n  return p instanceof LocalParticipant;\n}\n\nexport function isRemote(p: Participant) {\n  return p instanceof RemoteParticipant;\n}\n\nexport const attachIfSubscribed = (\n  publication: TrackPublication | undefined,\n  element: HTMLMediaElement | null | undefined,\n) => {\n  if (!publication) return;\n  const { isSubscribed, track } = publication;\n  if (element && track) {\n    if (isSubscribed) {\n      track.attach(element);\n    } else {\n      track.detach(element);\n    }\n  }\n};\n\n/**\n * Check if the participant track source is pinned.\n * @deprecated Use {@link isParticipantTrackReferencePinned} instead.\n */\nexport function isParticipantSourcePinned(\n  participant: Participant,\n  source: Track.Source,\n  pinState: PinState | undefined,\n): boolean {\n  if (pinState === undefined) {\n    return false;\n  }\n\n  return pinState.some(\n    ({ source: pinnedSource, participant: pinnedParticipant }) =>\n      pinnedSource === source && pinnedParticipant.identity === participant.identity,\n  );\n}\n\n/**\n * Check if the participant track reference is pinned.\n */\nexport function isParticipantTrackReferencePinned(\n  trackRef: TrackReference,\n  pinState: PinState | undefined,\n): boolean {\n  if (pinState === undefined) {\n    return false;\n  }\n\n  return pinState.some((pinnedTrackRef) => isEqualTrackRef(pinnedTrackRef, trackRef));\n}\n\n/**\n * Calculates the scrollbar width by creating two HTML elements\n * and messaging the difference.\n * @internal\n */\nexport function getScrollBarWidth() {\n  const inner = document.createElement('p');\n  inner.style.width = '100%';\n  inner.style.height = '200px';\n\n  const outer = document.createElement('div');\n  outer.style.position = 'absolute';\n  outer.style.top = '0px';\n  outer.style.left = '0px';\n  outer.style.visibility = 'hidden';\n  outer.style.width = '200px';\n  outer.style.height = '150px';\n  outer.style.overflow = 'hidden';\n  outer.appendChild(inner);\n\n  document.body.appendChild(outer);\n  const w1 = inner.offsetWidth;\n  outer.style.overflow = 'scroll';\n  let w2 = inner.offsetWidth;\n  if (w1 === w2) {\n    w2 = outer.clientWidth;\n  }\n  document.body.removeChild(outer);\n  const scrollBarWidth = w1 - w2;\n  return scrollBarWidth;\n}\n", "/**\n * The TrackReference type is a logical grouping of participant publication and/or subscribed track.\n *\n */\n\nimport type { Participant, Track, TrackPublication } from 'livekit-client';\n// ## TrackReference Types\n\n/** @public */\nexport type TrackReferencePlaceholder = {\n  participant: Participant;\n  publication?: never;\n  source: Track.Source;\n};\n\n/** @public */\nexport type TrackReference = {\n  participant: Participant;\n  publication: TrackPublication;\n  source: Track.Source;\n};\n\n/** @public */\nexport type TrackReferenceOrPlaceholder = TrackReference | TrackReferencePlaceholder;\n\n// ### TrackReference Type Predicates\n/** @internal */\nexport function isTrackReference(trackReference: unknown): trackReference is TrackReference {\n  if (typeof trackReference === 'undefined') {\n    return false;\n  }\n  return (\n    isTrackReferenceSubscribed(trackReference as TrackReference) ||\n    isTrackReferencePublished(trackReference as TrackReference)\n  );\n}\n\nfunction isTrackReferenceSubscribed(trackReference?: TrackReferenceOrPlaceholder): boolean {\n  if (!trackReference) {\n    return false;\n  }\n  return (\n    trackReference.hasOwnProperty('participant') &&\n    trackReference.hasOwnProperty('source') &&\n    trackReference.hasOwnProperty('track') &&\n    typeof trackReference.publication?.track !== 'undefined'\n  );\n}\n\nfunction isTrackReferencePublished(trackReference?: TrackReferenceOrPlaceholder): boolean {\n  if (!trackReference) {\n    return false;\n  }\n  return (\n    trackReference.hasOwnProperty('participant') &&\n    trackReference.hasOwnProperty('source') &&\n    trackReference.hasOwnProperty('publication') &&\n    typeof trackReference.publication !== 'undefined'\n  );\n}\n\nexport function isTrackReferencePlaceholder(\n  trackReference?: TrackReferenceOrPlaceholder,\n): trackReference is TrackReferencePlaceholder {\n  if (!trackReference) {\n    return false;\n  }\n  return (\n    trackReference.hasOwnProperty('participant') &&\n    trackReference.hasOwnProperty('source') &&\n    typeof trackReference.publication === 'undefined'\n  );\n}\n", "import type { Track } from 'livekit-client';\nimport type { PinState } from '../types';\nimport type { TrackReferenceOrPlaceholder } from './track-reference.types';\nimport { isTrackReference, isTrackReferencePlaceholder } from './track-reference.types';\n\n/**\n * Returns a id to identify the `TrackReference` or `TrackReferencePlaceholder` based on\n * participant, track source and trackSid.\n * @remarks\n * The id pattern is: `${participantIdentity}_${trackSource}_${trackSid}` for `TrackReference`\n * and `${participantIdentity}_${trackSource}_placeholder` for `TrackReferencePlaceholder`.\n */\nexport function getTrackReferenceId(trackReference: TrackReferenceOrPlaceholder | number) {\n  if (typeof trackReference === 'string' || typeof trackReference === 'number') {\n    return `${trackReference}`;\n  } else if (isTrackReferencePlaceholder(trackReference)) {\n    return `${trackReference.participant.identity}_${trackReference.source}_placeholder`;\n  } else if (isTrackReference(trackReference)) {\n    return `${trackReference.participant.identity}_${trackReference.publication.source}_${trackReference.publication.trackSid}`;\n  } else {\n    throw new Error(`Can't generate a id for the given track reference: ${trackReference}`);\n  }\n}\n\nexport type TrackReferenceId = ReturnType<typeof getTrackReferenceId>;\n\n/** Returns the Source of the TrackReference. */\nexport function getTrackReferenceSource(trackReference: TrackReferenceOrPlaceholder): Track.Source {\n  if (isTrackReference(trackReference)) {\n    return trackReference.publication.source;\n  } else {\n    return trackReference.source;\n  }\n}\n\nexport function isEqualTrackRef(\n  a?: TrackReferenceOrPlaceholder,\n  b?: TrackReferenceOrPlaceholder,\n): boolean {\n  if (a === undefined || b === undefined) {\n    return false;\n  }\n  if (isTrackReference(a) && isTrackReference(b)) {\n    return a.publication.trackSid === b.publication.trackSid;\n  } else {\n    return getTrackReferenceId(a) === getTrackReferenceId(b);\n  }\n}\n\n/**\n * Check if the `TrackReference` is pinned.\n */\nexport function isTrackReferencePinned(\n  trackReference: TrackReferenceOrPlaceholder,\n  pinState: PinState | undefined,\n): boolean {\n  if (typeof pinState === 'undefined') {\n    return false;\n  }\n  if (isTrackReference(trackReference)) {\n    return pinState.some(\n      (pinnedTrackReference) =>\n        pinnedTrackReference.participant.identity === trackReference.participant.identity &&\n        isTrackReference(pinnedTrackReference) &&\n        pinnedTrackReference.publication.trackSid === trackReference.publication.trackSid,\n    );\n  } else if (isTrackReferencePlaceholder(trackReference)) {\n    return pinState.some(\n      (pinnedTrackReference) =>\n        pinnedTrackReference.participant.identity === trackReference.participant.identity &&\n        isTrackReferencePlaceholder(pinnedTrackReference) &&\n        pinnedTrackReference.source === trackReference.source,\n    );\n  } else {\n    return false;\n  }\n}\n\n/**\n * Check if the current `currentTrackRef` is the placeholder for next `nextTrackRef`.\n * Based on the participant identity and the source.\n * @internal\n */\nexport function isPlaceholderReplacement(\n  currentTrackRef: TrackReferenceOrPlaceholder,\n  nextTrackRef: TrackReferenceOrPlaceholder,\n) {\n  // if (typeof nextTrackRef === 'number' || typeof currentTrackRef === 'number') {\n  //   return false;\n  // }\n  return (\n    isTrackReferencePlaceholder(currentTrackRef) &&\n    isTrackReference(nextTrackRef) &&\n    nextTrackRef.participant.identity === currentTrackRef.participant.identity &&\n    nextTrackRef.source === currentTrackRef.source\n  );\n}\n", "/**\n * @internal\n */\nexport function isWeb(): boolean {\n  return typeof document !== 'undefined';\n}\n\n/**\n * Mobile browser detection based on `navigator.userAgent` string.\n * Defaults to returning `false` if not in a browser.\n *\n * @remarks\n * This should only be used if feature detection or other methods do not work!\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Browser_detection_using_the_user_agent#mobile_device_detection\n */\nexport function isMobileBrowser(): boolean {\n  return isWeb() ? /Mobi/i.test(window.navigator.userAgent) : false;\n}\n", "// The MIT License (MIT)\n\n// Copyright (c) Kevin Mårtensson <kevinmartensson@gmail.com> and Diego Perini\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\ninterface RegExOptions {\n  /**\n\t\tOnly match an exact string. Useful with `RegExp#test` to check if a string is a URL.\n\t\t@default false\n\t\t*/\n  readonly exact?: boolean;\n\n  /**\n\t\tForce URLs to start with a valid protocol or `www`. If set to `false` it'll match the TLD against a list of valid [TLDs](https://github.com/stephenmathieson/node-tlds).\n\t\t@default false\n    @deprecated This option will be removed in the next major version and has already no effect.\n\t\t*/\n  readonly strict?: boolean;\n}\n\nexport function createUrlRegExp(options: RegExOptions) {\n  options = {\n    ...options,\n  };\n\n  const protocol = `(?:(?:[a-z]+:)?//)?`;\n  const auth = '(?:\\\\S+(?::\\\\S*)?@)?';\n  const ip = new RegExp(\n    '(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}',\n    'g',\n  ).source;\n  const host = '(?:(?:[a-z\\\\u00a1-\\\\uffff0-9][-_]*)*[a-z\\\\u00a1-\\\\uffff0-9]+)';\n  const domain = '(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*';\n  const tld = `(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,}))\\\\.?`;\n  const port = '(?::\\\\d{2,5})?';\n  const path = '(?:[/?#][^\\\\s\"]*)?';\n  const regex = `(?:${protocol}|www\\\\.)${auth}(?:localhost|${ip}|${host}${domain}${tld})${port}${path}`;\n\n  return options.exact ? new RegExp(`(?:^${regex}$)`, 'i') : new RegExp(regex, 'ig');\n}\n", "import createEmailRegExp from 'email-regex';\n\nexport { createEmailRegExp };\n", "import { computePosition, flip, offset, shift } from '@floating-ui/dom';\n\nexport async function computeMenuPosition(\n  button: HTMLElement,\n  menu: HTMLElement,\n): Promise<{ x: number; y: number }> {\n  const { x, y } = await computePosition(button, menu, {\n    placement: 'top',\n    middleware: [offset(6), flip(), shift({ padding: 5 })],\n  });\n  return { x, y };\n}\n\nexport function wasClickOutside(insideElement: HTMLElement, event: MouseEvent): boolean {\n  const isOutside = !insideElement.contains(event.target as Node);\n  return isOutside;\n}\n", "import { createEmailRegExp } from './emailRegex';\nimport { createUrlRegExp } from './url-regex';\n\nexport type TokenizeGrammar = { [type: string]: RegExp };\n\nexport const createDefaultGrammar = () => {\n  return {\n    email: createEmailRegExp(),\n    url: createUrlRegExp({}),\n  } satisfies TokenizeGrammar;\n};\n\nexport function tokenize<T extends TokenizeGrammar>(input: string, grammar: T) {\n  const matches = Object.entries(grammar)\n    .map(([type, rx], weight) =>\n      Array.from(input.matchAll(rx)).map(({ index, 0: content }) => ({\n        type: type as keyof T,\n        weight,\n        content,\n        index: index ?? 0,\n      })),\n    )\n    .flat()\n    .sort((a, b) => {\n      const d = a.index - b.index;\n      return d !== 0 ? d : a.weight - b.weight;\n    })\n    .filter(({ index }, i, arr) => {\n      if (i === 0) return true;\n      const prev = arr[i - 1];\n      return prev.index + prev.content.length <= index;\n    });\n\n  const tokens = [];\n  let pos = 0;\n  for (const { type, content, index } of matches) {\n    if (index > pos) tokens.push(input.substring(pos, index));\n    tokens.push({ type, content });\n    pos = index + content.length;\n  }\n  if (input.length > pos) tokens.push(input.substring(pos));\n  return tokens;\n}\n", "import { ParticipantEvent, RoomEvent } from 'livekit-client';\n\nexport const allRemoteParticipantRoomEvents = [\n  RoomEvent.ConnectionStateChanged,\n  RoomEvent.RoomMetadataChanged,\n\n  RoomEvent.ActiveSpeakersChanged,\n  RoomEvent.ConnectionQualityChanged,\n\n  RoomEvent.ParticipantConnected,\n  RoomEvent.ParticipantDisconnected,\n  RoomEvent.ParticipantPermissionsChanged,\n  RoomEvent.ParticipantMetadataChanged,\n\n  RoomEvent.TrackMuted,\n  RoomEvent.TrackUnmuted,\n  RoomEvent.TrackPublished,\n  RoomEvent.TrackUnpublished,\n  RoomEvent.TrackStreamStateChanged,\n  RoomEvent.TrackSubscriptionFailed,\n  RoomEvent.TrackSubscriptionPermissionChanged,\n  RoomEvent.TrackSubscriptionStatusChanged,\n];\n\nexport const allParticipantRoomEvents = [\n  ...allRemoteParticipantRoomEvents,\n  RoomEvent.LocalTrackPublished,\n  RoomEvent.LocalTrackUnpublished,\n];\n\nexport const allRemoteParticipantEvents = [\n  ParticipantEvent.ConnectionQualityChanged,\n  ParticipantEvent.IsSpeakingChanged,\n  ParticipantEvent.ParticipantMetadataChanged,\n  ParticipantEvent.ParticipantPermissionsChanged,\n\n  ParticipantEvent.TrackMuted,\n  ParticipantEvent.TrackUnmuted,\n  ParticipantEvent.TrackPublished,\n  ParticipantEvent.TrackUnpublished,\n  ParticipantEvent.TrackStreamStateChanged,\n  ParticipantEvent.TrackSubscriptionFailed,\n  ParticipantEvent.TrackSubscriptionPermissionChanged,\n  ParticipantEvent.TrackSubscriptionStatusChanged,\n];\n\nexport const allParticipantEvents = [\n  ...allRemoteParticipantEvents,\n  ParticipantEvent.LocalTrackPublished,\n  ParticipantEvent.LocalTrackUnpublished,\n];\n", "import {\n  setLogLevel as setClientSdkLogLevel,\n  setLogExtension as setClientSdkLogExtension,\n  LogLevel as LogLevelEnum,\n} from 'livekit-client';\nimport loglevel from 'loglevel';\n\nexport const log = loglevel.getLogger('lk-components-js');\nlog.setDefaultLevel('WARN');\n\ntype LogLevel = Parameters<typeof setClientSdkLogLevel>[0];\ntype SetLogLevelOptions = {\n  liveKitClientLogLevel?: LogLevel;\n};\n\n/**\n * Set the log level for both the `@livekit/components-react` package and the `@livekit-client` package.\n * To set the `@livekit-client` log independently, use the `liveKitClientLogLevel` prop on the `options` object.\n * @public\n */\nexport function setLogLevel(level: LogLevel, options: SetLogLevelOptions = {}): void {\n  log.setLevel(level);\n  setClientSdkLogLevel(options.liveKitClientLogLevel ?? level);\n}\n\ntype LogExtension = (level: LogLevel, msg: string, context?: object) => void;\ntype SetLogExtensionOptions = {\n  liveKitClientLogExtension?: LogExtension;\n};\n\n/**\n * Set the log extension for both the `@livekit/components-react` package and the `@livekit-client` package.\n * To set the `@livekit-client` log extension, use the `liveKitClientLogExtension` prop on the `options` object.\n * @public\n */\nexport function setLogExtension(extension: LogExtension, options: SetLogExtensionOptions = {}) {\n  const originalFactory = log.methodFactory;\n\n  log.methodFactory = (methodName, configLevel, loggerName) => {\n    const rawMethod = originalFactory(methodName, configLevel, loggerName);\n\n    const logLevel = LogLevelEnum[methodName];\n    const needLog = logLevel >= configLevel && logLevel < LogLevelEnum.silent;\n\n    return (msg, context?: [msg: string, context: object]) => {\n      if (context) rawMethod(msg, context);\n      else rawMethod(msg);\n      if (needLog) {\n        extension(logLevel, msg, context);\n      }\n    };\n  };\n  log.setLevel(log.getLevel()); // Be sure to call setLevel method in order to apply plugin\n  setClientSdkLogExtension(options.liveKitClientLogExtension ?? extension);\n}\n", "import { log } from '../logger';\n\nexport type GridLayoutDefinition = {\n  /** Layout name (convention `<column_count>x<row_count>`). */\n  name: string;\n  /** Column count of the layout. */\n  columns: number;\n  /** Row count of the layout. */\n  rows: number;\n  // # Constraints that have to be meet to use this layout.\n  // ## 1. Participant range:\n  /** Minimum number of tiles needed to use this layout. */\n  minTiles: number;\n  /** Maximum tiles that fit into this layout. */\n  maxTiles: number;\n  // ## 2. Screen size limits:\n  /** Minimum width required to use this layout. */\n  minWidth: number;\n  /** Minimum height required to use this layout. */\n  minHeight: number;\n};\n\nexport const GRID_LAYOUTS: GridLayoutDefinition[] = [\n  {\n    columns: 1,\n    rows: 1,\n    name: '1x1',\n    minTiles: 1,\n    maxTiles: 1,\n    minWidth: 0,\n    minHeight: 0,\n  },\n  {\n    columns: 1,\n    rows: 2,\n    name: '1x2',\n    minTiles: 2,\n    maxTiles: 2,\n    minWidth: 0,\n    minHeight: 0,\n  },\n  {\n    columns: 2,\n    rows: 1,\n    name: '2x1',\n    minTiles: 2,\n    maxTiles: 2,\n    minWidth: 900,\n    minHeight: 0,\n  },\n  {\n    columns: 2,\n    rows: 2,\n    name: '2x2',\n    minTiles: 3,\n    maxTiles: 4,\n    minWidth: 560,\n    minHeight: 0,\n  },\n  {\n    columns: 3,\n    rows: 3,\n    name: '3x3',\n    minTiles: 5,\n    maxTiles: 9,\n    minWidth: 700,\n    minHeight: 0,\n  },\n  {\n    columns: 4,\n    rows: 4,\n    name: '4x4',\n    minTiles: 10,\n    maxTiles: 16,\n    minWidth: 960,\n    minHeight: 0,\n  },\n  {\n    columns: 5,\n    rows: 5,\n    name: '5x5',\n    minTiles: 17,\n    maxTiles: 25,\n    minWidth: 1100,\n    minHeight: 0,\n  },\n];\n\nexport function selectGridLayout(\n  layouts: GridLayoutDefinition[],\n  participantCount: number,\n  width: number,\n  height: number,\n): GridLayoutDefinition {\n  // Find the best layout to fit all participants.\n  let currentLayoutIndex = 0;\n  let layout = layouts.find((layout_, index, allLayouts) => {\n    currentLayoutIndex = index;\n    const isBiggerLayoutAvailable =\n      allLayouts.findIndex((l, i) => {\n        const layoutIsBiggerThanCurrent = i > index;\n        const layoutFitsSameAmountOfParticipants = l.maxTiles === layout_.maxTiles;\n        return layoutIsBiggerThanCurrent && layoutFitsSameAmountOfParticipants;\n      }) !== -1;\n    return layout_.maxTiles >= participantCount && !isBiggerLayoutAvailable;\n  });\n  if (layout === undefined) {\n    layout = layouts[layouts.length - 1];\n    if (layout) {\n      log.warn(\n        `No layout found for: participantCount: ${participantCount}, width/height: ${width}/${height} fallback to biggest available layout (${layout.name}).`,\n      );\n    } else {\n      throw new Error(`No layout or fallback layout found.`);\n    }\n  }\n\n  // Check if the layout fits into the screen constraints. If not, recursively check the next smaller layout.\n  if (width < layout.minWidth || height < layout.minHeight) {\n    // const currentLayoutIndex = layouts.indexOf(layout);\n    if (currentLayoutIndex > 0) {\n      const smallerLayout = layouts[currentLayoutIndex - 1];\n      layout = selectGridLayout(\n        layouts.slice(0, currentLayoutIndex),\n        smallerLayout.maxTiles,\n        width,\n        height,\n      );\n    }\n  }\n  return layout;\n}\n", "export function setDifference<T>(setA: Set<T>, setB: Set<T>): Set<T> {\n  const _difference = new Set(setA);\n  for (const elem of setB) {\n    _difference.delete(elem);\n  }\n  return _difference;\n}\n", "/**\n * Returns `true` if the browser supports screen sharing.\n */\nexport function supportsScreenSharing(): boolean {\n  return (\n    typeof navigator !== 'undefined' &&\n    navigator.mediaDevices &&\n    !!navigator.mediaDevices.getDisplayMedia\n  );\n}\n", "import type { Participant, Track, TrackPublication } from 'livekit-client';\nimport type { TrackReference, TrackReferenceOrPlaceholder } from './track-reference';\n\n// ## PinState Type\n/** @public */\nexport type PinState = TrackReferenceOrPlaceholder[];\nexport const PIN_DEFAULT_STATE: PinState = [];\n\n// ## WidgetState Types\n/** @public */\nexport type WidgetState = {\n  showChat: boolean;\n  unreadMessages: number;\n};\nexport const WIDGET_DEFAULT_STATE: WidgetState = { showChat: false, unreadMessages: 0 };\n\n// ## Track Source Types\nexport type TrackSourceWithOptions = { source: Track.Source; withPlaceholder: boolean };\n\nexport type SourcesArray = Track.Source[] | TrackSourceWithOptions[];\n\n// ### Track Source Type Predicates\nexport function isSourceWitOptions(source: SourcesArray[number]): source is TrackSourceWithOptions {\n  return typeof source === 'object';\n}\n\nexport function isSourcesWithOptions(sources: SourcesArray): sources is TrackSourceWithOptions[] {\n  return (\n    Array.isArray(sources) &&\n    (sources as TrackSourceWithOptions[]).filter(isSourceWitOptions).length > 0\n  );\n}\n\n// ## Loop Filter Types\nexport type TrackReferenceFilter = Parameters<TrackReferenceOrPlaceholder[]['filter']>['0'];\nexport type ParticipantFilter = Parameters<Participant[]['filter']>['0'];\n\n// ## Other Types\n/** @internal */\nexport interface ParticipantClickEvent {\n  participant: Participant;\n  track?: TrackPublication;\n}\n\nexport type TrackSource<T extends Track.Source> = RequireAtLeastOne<\n  { source: T; name: string; participant: Participant },\n  'name' | 'source'\n>;\n\n/**\n * The TrackIdentifier type is used to select Tracks either based on\n * - Track.Source and/or name of the track, e.g. `{source: Track.Source.Camera}` or `{name: \"my-track\"}`\n * - TrackReference (participant and publication)\n */\nexport type TrackIdentifier<T extends Track.Source = Track.Source> =\n  | TrackSource<T>\n  | TrackReference;\n\n// ## Util Types\ntype RequireAtLeastOne<T, Keys extends keyof T = keyof T> = Pick<T, Exclude<keyof T, Keys>> &\n  {\n    [K in Keys]-?: Required<Pick<T, K>> & Partial<Pick<T, Exclude<Keys, K>>>;\n  }[Keys];\n\nexport type RequireOnlyOne<T, Keys extends keyof T = keyof T> = Pick<T, Exclude<keyof T, Keys>> &\n  {\n    [K in Keys]-?: Required<Pick<T, K>> & Partial<Record<Exclude<Keys, K>, undefined>>;\n  }[Keys];\n\nexport type AudioSource = Track.Source.Microphone | Track.Source.ScreenShareAudio;\nexport type VideoSource = Track.Source.Camera | Track.Source.ScreenShare;\n", "import { Track } from 'livekit-client';\nimport type { TrackReferenceOrPlaceholder } from '../track-reference';\nimport { isTrackReference } from '../track-reference';\nimport {\n  sortParticipantsByAudioLevel,\n  sortParticipantsByIsSpeaking,\n  sortParticipantsByJoinedAt,\n  sortParticipantsByLastSpokenAT,\n  sortTrackReferencesByType,\n  sortTrackRefsByIsCameraEnabled,\n} from './base-sort-functions';\n\n/**\n * Default sort for `TrackReferenceOrPlaceholder`, it'll order participants by:\n * 1. local camera track (publication.isLocal)\n * 2. remote screen_share track\n * 3. local screen_share track\n * 4. remote dominant speaker camera track (sorted by speaker with the loudest audio level)\n * 5. other remote speakers that are recently active\n * 6. remote unmuted camera tracks\n * 7. remote tracks sorted by joinedAt\n */\nexport function sortTrackReferences(\n  tracks: TrackReferenceOrPlaceholder[],\n): TrackReferenceOrPlaceholder[] {\n  const localTracks: TrackReferenceOrPlaceholder[] = [];\n  const screenShareTracks: TrackReferenceOrPlaceholder[] = [];\n  const cameraTracks: TrackReferenceOrPlaceholder[] = [];\n  const undefinedTracks: TrackReferenceOrPlaceholder[] = [];\n\n  tracks.forEach((trackRef) => {\n    if (trackRef.participant.isLocal && trackRef.source === Track.Source.Camera) {\n      localTracks.push(trackRef);\n    } else if (trackRef.source === Track.Source.ScreenShare) {\n      screenShareTracks.push(trackRef);\n    } else if (trackRef.source === Track.Source.Camera) {\n      cameraTracks.push(trackRef);\n    } else {\n      undefinedTracks.push(trackRef);\n    }\n  });\n\n  const sortedScreenShareTracks = sortScreenShareTracks(screenShareTracks);\n  const sortedCameraTracks = sortCameraTracks(cameraTracks);\n\n  return [...localTracks, ...sortedScreenShareTracks, ...sortedCameraTracks, ...undefinedTracks];\n}\n\n/**\n * Sort an array of `TrackReference` screen shares.\n * Main sorting order:\n * 1. remote screen shares\n * 2. local screen shares\n * Secondary sorting by participant's joining time.\n */\nfunction sortScreenShareTracks(\n  screenShareTracks: TrackReferenceOrPlaceholder[],\n): TrackReferenceOrPlaceholder[] {\n  const localScreenShares: TrackReferenceOrPlaceholder[] = [];\n  const remoteScreenShares: TrackReferenceOrPlaceholder[] = [];\n\n  screenShareTracks.forEach((trackRef) => {\n    if (trackRef.participant.isLocal) {\n      localScreenShares.push(trackRef);\n    } else {\n      remoteScreenShares.push(trackRef);\n    }\n  });\n\n  localScreenShares.sort((a, b) => sortParticipantsByJoinedAt(a.participant, b.participant));\n  remoteScreenShares.sort((a, b) => sortParticipantsByJoinedAt(a.participant, b.participant));\n\n  const sortedScreenShareTrackRefs = [...remoteScreenShares, ...localScreenShares];\n  return sortedScreenShareTrackRefs;\n}\n\nfunction sortCameraTracks(\n  cameraTrackReferences: TrackReferenceOrPlaceholder[],\n): TrackReferenceOrPlaceholder[] {\n  const localCameraTracks: TrackReferenceOrPlaceholder[] = [];\n  const remoteCameraTracks: TrackReferenceOrPlaceholder[] = [];\n\n  cameraTrackReferences.forEach((trackRef) => {\n    if (trackRef.participant.isLocal) {\n      localCameraTracks.push(trackRef);\n    } else {\n      remoteCameraTracks.push(trackRef);\n    }\n  });\n\n  remoteCameraTracks.sort((a, b) => {\n    // Participant with higher audio level goes first.\n    if (a.participant.isSpeaking && b.participant.isSpeaking) {\n      return sortParticipantsByAudioLevel(a.participant, b.participant);\n    }\n\n    // A speaking participant goes before one that is not speaking.\n    if (a.participant.isSpeaking !== b.participant.isSpeaking) {\n      return sortParticipantsByIsSpeaking(a.participant, b.participant);\n    }\n\n    // A participant that spoke recently goes before a participant that spoke a while back.\n    if (a.participant.lastSpokeAt !== b.participant.lastSpokeAt) {\n      return sortParticipantsByLastSpokenAT(a.participant, b.participant);\n    }\n\n    // TrackReference before TrackReferencePlaceholder\n    if (isTrackReference(a) !== isTrackReference(b)) {\n      return sortTrackReferencesByType(a, b);\n    }\n\n    // Tiles with video on before tiles with muted video track.\n    if (a.participant.isCameraEnabled !== b.participant.isCameraEnabled) {\n      return sortTrackRefsByIsCameraEnabled(a, b);\n    }\n\n    // A participant that joined a long time ago goes before one that joined recently.\n    return sortParticipantsByJoinedAt(a.participant, b.participant);\n  });\n\n  return [...localCameraTracks, ...remoteCameraTracks];\n}\n", "import type { Participant } from 'livekit-client';\nimport { Track } from 'livekit-client';\nimport type { TrackReferenceOrPlaceholder } from '../track-reference';\nimport { getTrackReferenceSource, isTrackReference } from '../track-reference';\n\nexport function sortParticipantsByAudioLevel(\n  a: Pick<Participant, 'audioLevel'>,\n  b: Pick<Participant, 'audioLevel'>,\n): number {\n  return b.audioLevel - a.audioLevel;\n}\n\nexport function sortParticipantsByIsSpeaking(\n  a: Pick<Participant, 'isSpeaking'>,\n  b: Pick<Participant, 'isSpeaking'>,\n): number {\n  if (a.isSpeaking === b.isSpeaking) {\n    return 0;\n  } else {\n    return a.isSpeaking ? -1 : 1;\n  }\n}\n\nexport function sortParticipantsByLastSpokenAT(\n  a: Pick<Participant, 'lastSpokeAt'>,\n  b: Pick<Participant, 'lastSpokeAt'>,\n): number {\n  if (a.lastSpokeAt !== undefined || b.lastSpokeAt !== undefined) {\n    return (b.lastSpokeAt?.getTime() ?? 0) - (a.lastSpokeAt?.getTime() ?? 0);\n  } else {\n    return 0;\n  }\n}\n\nexport function sortParticipantsByJoinedAt(\n  a: Pick<Participant, 'joinedAt'>,\n  b: Pick<Participant, 'joinedAt'>,\n) {\n  return (a.joinedAt?.getTime() ?? 0) - (b.joinedAt?.getTime() ?? 0);\n}\n\nexport function sortTrackReferencesByType(\n  a: TrackReferenceOrPlaceholder,\n  b: TrackReferenceOrPlaceholder,\n) {\n  if (isTrackReference(a)) {\n    if (isTrackReference(b)) {\n      return 0;\n    } else {\n      return -1;\n    }\n  } else if (isTrackReference(b)) {\n    return 1;\n  } else {\n    return 0;\n  }\n}\n\n/** TrackReference with screen share source goes first. */\nexport function sortTrackReferencesByScreenShare(\n  a: TrackReferenceOrPlaceholder,\n  b: TrackReferenceOrPlaceholder,\n): number {\n  const sourceA = getTrackReferenceSource(a);\n  const sourceB = getTrackReferenceSource(b);\n\n  if (sourceA === sourceB) {\n    if (sourceA === Track.Source.ScreenShare) {\n      if (a.participant.isLocal === b.participant.isLocal) {\n        return 0;\n      } else {\n        return a.participant.isLocal ? 1 : -1;\n      }\n    }\n    return 0;\n  } else if (sourceA === Track.Source.ScreenShare) {\n    return -1;\n  } else if (sourceB === Track.Source.ScreenShare) {\n    return 1;\n  } else {\n    return 0;\n  }\n}\n\nexport function sortTrackRefsByIsCameraEnabled(\n  a: { participant: { isCameraEnabled: boolean } },\n  b: { participant: { isCameraEnabled: boolean } },\n) {\n  const aVideo = a.participant.isCameraEnabled;\n  const bVideo = b.participant.isCameraEnabled;\n\n  if (aVideo !== bVideo) {\n    if (aVideo) {\n      return -1;\n    } else {\n      return 1;\n    }\n  } else {\n    return 0;\n  }\n}\n", "import type { Participant } from 'livekit-client';\nimport { LocalParticipant } from 'livekit-client';\nimport {\n  sortParticipantsByAudioLevel,\n  sortParticipantsByIsSpeaking,\n  sortParticipantsByJoinedAt,\n  sortParticipantsByLastSpokenAT,\n} from './base-sort-functions';\n\n/**\n * Default sort for participants, it'll order participants by:\n * 1. local participant\n * 2. dominant speaker (speaker with the loudest audio level)\n * 3. other speakers that are recently active\n * 4. participants with video on\n * 5. by joinedAt\n */\nexport function sortParticipants(participants: Participant[]): Participant[] {\n  const sortedParticipants = [...participants];\n  sortedParticipants.sort((a, b) => {\n    // loudest speaker first\n    if (a.isSpeaking && b.isSpeaking) {\n      return sortParticipantsByAudioLevel(a, b);\n    }\n\n    // speaker goes first\n    if (a.isSpeaking !== b.isSpeaking) {\n      return sortParticipantsByIsSpeaking(a, b);\n    }\n\n    // last active speaker first\n    if (a.lastSpokeAt !== b.lastSpokeAt) {\n      return sortParticipantsByLastSpokenAT(a, b);\n    }\n\n    // video on\n    const aVideo = a.videoTracks.size > 0;\n    const bVideo = b.videoTracks.size > 0;\n    if (aVideo !== bVideo) {\n      if (aVideo) {\n        return -1;\n      } else {\n        return 1;\n      }\n    }\n\n    // joinedAt\n    return sortParticipantsByJoinedAt(a, b);\n  });\n  const localParticipant = sortedParticipants.find((p) => p instanceof LocalParticipant);\n  if (localParticipant) {\n    const localIdx = sortedParticipants.indexOf(localParticipant);\n    if (localIdx >= 0) {\n      sortedParticipants.splice(localIdx, 1);\n      if (sortedParticipants.length > 0) {\n        sortedParticipants.splice(0, 0, localParticipant);\n      } else {\n        sortedParticipants.push(localParticipant);\n      }\n    }\n  }\n  return sortedParticipants;\n}\n", "export function chunk<T>(input: Array<T>, size: number) {\n  return input.reduce(\n    (arr, item, idx) => {\n      return idx % size === 0\n        ? [...arr, [item]]\n        : [...arr.slice(0, -1), [...arr.slice(-1)[0], item]];\n    },\n    [] as Array<Array<T>>,\n  );\n}\n\nexport function zip<T, U>(a1: Array<T>, a2: Array<U>) {\n  const resultLength = Math.max(a1.length, a2.length);\n  return new Array(resultLength).fill([]).map((_val, idx) => [a1[idx], a2[idx]]);\n}\n\nexport function differenceBy<T>(a1: Array<T>, a2: Array<T>, by: (arg: T) => string) {\n  return a1.filter((c) => !a2.map((v) => by(v)).includes(by(c)));\n}\n", "/**\n * Internal test function.\n *\n * @internal\n */\n\nimport { Participant, Track, TrackPublication } from 'livekit-client';\nimport type { UpdatableItem } from '../sorting/tile-array-update';\nimport type { TrackReference, TrackReferencePlaceholder } from './track-reference.types';\nimport { getTrackReferenceId } from './track-reference.utils';\n\n// Test function:\nexport const mockTrackReferencePlaceholder = (\n  id: string,\n  source: Track.Source,\n): TrackReferencePlaceholder => {\n  return { participant: new Participant(`${id}`, `${id}`), source };\n};\n\nexport const mockTrackReferencePublished = (id: string, source: Track.Source): TrackReference => {\n  const kind = [Track.Source.Camera, Track.Source.ScreenShare].includes(source)\n    ? Track.Kind.Video\n    : Track.Kind.Audio;\n  return {\n    participant: new Participant(`${id}`, `${id}`),\n    publication: new TrackPublication(kind, `${id}`, `${id}`),\n    source: source,\n  };\n};\n\ntype mockTrackReferenceSubscribedOptions = {\n  mockPublication?: boolean;\n  mockParticipant?: boolean;\n  mockIsLocal?: boolean;\n};\n\nexport const mockTrackReferenceSubscribed = (\n  id: string,\n  source: Track.Source,\n  options: mockTrackReferenceSubscribedOptions = {},\n): TrackReference => {\n  const kind = [Track.Source.Camera, Track.Source.ScreenShare].includes(source)\n    ? Track.Kind.Video\n    : Track.Kind.Audio;\n\n  const publication = new TrackPublication(kind, `${id}`, `${id}`);\n  // @ts-expect-error\n  publication.track = {};\n  return {\n    participant: options.mockParticipant\n      ? (mockParticipant(id, options.mockIsLocal ?? false) as Participant)\n      : new Participant(`${id}`, `${id}`),\n    publication: options.mockPublication\n      ? (mockTrackPublication(`publicationId(${id})`, kind, source) as TrackPublication)\n      : publication,\n    source,\n  };\n};\n\nconst mockTrackPublication = (\n  id: string,\n  kind: Track.Kind,\n  source: Track.Source,\n): Pick<TrackPublication, 'kind' | 'trackSid' | 'trackName' | 'source'> => {\n  return {\n    kind,\n    trackSid: id,\n    trackName: `name_${id}`,\n    source: source,\n  };\n};\n\nfunction mockParticipant(\n  id: string,\n  isLocal: boolean,\n): Pick<Participant, 'sid' | 'identity' | 'isLocal'> {\n  return {\n    sid: `${id}_sid`,\n    identity: `${id}`,\n    isLocal: isLocal,\n  };\n}\n\nexport function flatTrackReferenceArray<T extends UpdatableItem>(list: T[]): string[] {\n  return list.map((item) => {\n    if (typeof item === 'string' || typeof item === 'number') {\n      return `${item}`;\n    } else {\n      return getTrackReferenceId(item);\n    }\n  });\n}\n", "import { differenceBy, chunk, zip } from '../helper/array-helper';\nimport { log } from '../logger';\nimport type { TrackReferenceOrPlaceholder } from '../track-reference';\nimport {\n  getTrackReferenceId,\n  isPlaceholderReplacement,\n  isTrackReference,\n  isTrackReferencePlaceholder,\n} from '../track-reference';\nimport { flatTrackReferenceArray } from '../track-reference/test-utils';\n\ntype VisualChanges<T> = {\n  dropped: T[];\n  added: T[];\n};\n\nexport type UpdatableItem = TrackReferenceOrPlaceholder | number;\n\n/** Check to see if anything visually changes on the page. */\nexport function visualPageChange<T extends UpdatableItem>(state: T[], next: T[]): VisualChanges<T> {\n  return {\n    dropped: differenceBy(state, next, getTrackReferenceId),\n    added: differenceBy(next, state, getTrackReferenceId),\n  };\n}\n\nfunction listNeedsUpdating<T>(changes: VisualChanges<T>): boolean {\n  return changes.added.length !== 0 || changes.dropped.length !== 0;\n}\n\nexport function findIndex<T extends UpdatableItem>(\n  trackReference: T,\n  trackReferences: T[],\n): number {\n  const indexToReplace = trackReferences.findIndex(\n    (trackReference_) =>\n      getTrackReferenceId(trackReference_) === getTrackReferenceId(trackReference),\n  );\n  if (indexToReplace === -1) {\n    throw new Error(\n      `Element not part of the array: ${getTrackReferenceId(\n        trackReference,\n      )} not in ${flatTrackReferenceArray(trackReferences)}`,\n    );\n  }\n  return indexToReplace;\n}\n\n/** Swap items in the complete list of all elements */\nexport function swapItems<T extends UpdatableItem>(\n  moveForward: T,\n  moveBack: T,\n  trackReferences: T[],\n): T[] {\n  const indexToReplace = findIndex(moveForward, trackReferences);\n  const indexReplaceWith = findIndex(moveBack, trackReferences);\n\n  trackReferences.splice(indexToReplace, 1, moveBack);\n  trackReferences.splice(indexReplaceWith, 1, moveForward);\n\n  return trackReferences;\n}\n\nexport function dropItem<T extends UpdatableItem>(itemToDrop: T, list: T[]): T[] {\n  const indexOfElementToDrop = findIndex(itemToDrop, list);\n  // const indexOfElementToDrop = list.findIndex((item) => item === itemToDrop, list);\n  list.splice(indexOfElementToDrop, 1);\n  return list;\n}\n\nfunction addItem<T extends UpdatableItem>(itemToAdd: T, list: T[]): T[] {\n  return [...list, itemToAdd];\n}\n\nexport function divideIntoPages<T>(list: T[], maxElementsOnPage: number): Array<T[]> {\n  const pages = chunk(list, maxElementsOnPage);\n  return pages;\n}\n\n/** Divide the list of elements into pages and and check if pages need updating. */\nexport function updatePages<T extends UpdatableItem>(\n  currentList: T[],\n  nextList: T[],\n  maxItemsOnPage: number,\n): T[] {\n  let updatedList: T[] = refreshList(currentList, nextList);\n\n  if (updatedList.length < nextList.length) {\n    // Items got added: Find newly added items and add them to the end of the list.\n    const addedItems = differenceBy(nextList, updatedList, getTrackReferenceId);\n    updatedList = [...updatedList, ...addedItems];\n  }\n  const currentPages = divideIntoPages(updatedList, maxItemsOnPage);\n  const nextPages = divideIntoPages(nextList, maxItemsOnPage);\n\n  zip(currentPages, nextPages).forEach(([currentPage, nextPage], pageIndex) => {\n    if (currentPage && nextPage) {\n      // 1) Identify  missing tile.\n      const updatedPage = divideIntoPages(updatedList, maxItemsOnPage)[pageIndex];\n      const changes = visualPageChange(updatedPage, nextPage);\n\n      if (listNeedsUpdating(changes)) {\n        log.debug(\n          `Detected visual changes on page: ${pageIndex}, current: ${flatTrackReferenceArray(\n            currentPage,\n          )}, next: ${flatTrackReferenceArray(nextPage)}`,\n          { changes },\n        );\n        // ## Swap Items\n        if (changes.added.length === changes.dropped.length) {\n          zip(changes.added, changes.dropped).forEach(([added, dropped]) => {\n            if (added && dropped) {\n              updatedList = swapItems<T>(added, dropped, updatedList);\n            } else {\n              throw new Error(\n                `For a swap action we need a addition and a removal one is missing: ${added}, ${dropped}`,\n              );\n            }\n          });\n        }\n        // ## Handle Drop Items\n        if (changes.added.length === 0 && changes.dropped.length > 0) {\n          changes.dropped.forEach((item) => {\n            updatedList = dropItem<T>(item, updatedList);\n          });\n        }\n        // ## Handle Item added\n        if (changes.added.length > 0 && changes.dropped.length === 0) {\n          changes.added.forEach((item) => {\n            updatedList = addItem<T>(item, updatedList);\n          });\n        }\n      }\n    }\n  });\n\n  if (updatedList.length > nextList.length) {\n    // Items got removed: Find items that got completely removed from the list.\n    const missingItems = differenceBy(updatedList, nextList, getTrackReferenceId);\n    updatedList = updatedList.filter(\n      (item) => !missingItems.map(getTrackReferenceId).includes(getTrackReferenceId(item)),\n    );\n  }\n\n  return updatedList;\n}\n\n/**\n * Update the current list with the items from the next list whenever the item ids are the same\n * or the current item is a placeholder and we find a track reference in the next list\n * to replace the placeholder with.\n * @remarks\n * This is needed because `TrackReference`s can change their internal state while keeping the same id.\n */\nfunction refreshList<T extends UpdatableItem>(currentList: T[], nextList: T[]): T[] {\n  return currentList.map((currentItem) => {\n    const updateForCurrentItem = nextList.find(\n      (newItem_) =>\n        // If the IDs match or ..\n        getTrackReferenceId(currentItem) === getTrackReferenceId(newItem_) ||\n        // ... if the current item is a placeholder and the new item is the track reference can replace it.\n        (typeof currentItem !== 'number' &&\n          isTrackReferencePlaceholder(currentItem) &&\n          isTrackReference(newItem_) &&\n          isPlaceholderReplacement(currentItem, newItem_)),\n    );\n    return updateForCurrentItem ?? currentItem;\n  });\n}\n", "import type {\n  AudioCaptureOptions,\n  LocalParticipant,\n  Room,\n  ScreenShareCaptureOptions,\n  VideoCaptureOptions,\n} from 'livekit-client';\nimport { Track } from 'livekit-client';\nimport type { Observable } from 'rxjs';\nimport { Subject, map, startWith } from 'rxjs';\nimport { observeParticipantMedia } from '../observables/participant';\nimport { prefixClass } from '../styles-interface';\n\nexport type CaptureOptionsBySource<T extends ToggleSource> = T extends Track.Source.Camera\n  ? VideoCaptureOptions\n  : T extends Track.Source.Microphone\n  ? AudioCaptureOptions\n  : T extends Track.Source.ScreenShare\n  ? ScreenShareCaptureOptions\n  : never;\n\nexport type MediaToggleType<T extends ToggleSource> = {\n  pendingObserver: Observable<boolean>;\n  toggle: (forceState?: boolean, captureOptions?: CaptureOptionsBySource<T>) => Promise<void>;\n  className: string;\n  enabledObserver: Observable<boolean>;\n};\n\nexport type ToggleSource = Exclude<\n  Track.Source,\n  Track.Source.ScreenShareAudio | Track.Source.Unknown\n>;\n\nexport function setupMediaToggle<T extends ToggleSource>(\n  source: T,\n  room: Room,\n  options?: CaptureOptionsBySource<T>,\n): MediaToggleType<T> {\n  const { localParticipant } = room;\n\n  const getSourceEnabled = (source: ToggleSource, localParticipant: LocalParticipant) => {\n    let isEnabled = false;\n    switch (source) {\n      case Track.Source.Camera:\n        isEnabled = localParticipant.isCameraEnabled;\n        break;\n      case Track.Source.Microphone:\n        isEnabled = localParticipant.isMicrophoneEnabled;\n        break;\n      case Track.Source.ScreenShare:\n        isEnabled = localParticipant.isScreenShareEnabled;\n        break;\n      default:\n        break;\n    }\n    return isEnabled;\n  };\n\n  const enabledObserver = observeParticipantMedia(localParticipant).pipe(\n    map((media) => {\n      return getSourceEnabled(source, media.participant as LocalParticipant);\n    }),\n    startWith(getSourceEnabled(source, localParticipant)),\n  );\n\n  const pendingSubject = new Subject<boolean>();\n  const toggle = async (forceState?: boolean, captureOptions?: CaptureOptionsBySource<T>) => {\n    try {\n      captureOptions ??= options;\n      // trigger observable update\n      pendingSubject.next(true);\n      switch (source) {\n        case Track.Source.Camera:\n          await localParticipant.setCameraEnabled(\n            forceState ?? !localParticipant.isCameraEnabled,\n            captureOptions as VideoCaptureOptions,\n          );\n          break;\n        case Track.Source.Microphone:\n          await localParticipant.setMicrophoneEnabled(\n            forceState ?? !localParticipant.isMicrophoneEnabled,\n            captureOptions as AudioCaptureOptions,\n          );\n          break;\n        case Track.Source.ScreenShare:\n          await localParticipant.setScreenShareEnabled(\n            forceState ?? !localParticipant.isScreenShareEnabled,\n            captureOptions as ScreenShareCaptureOptions,\n          );\n          break;\n        default:\n          break;\n      }\n    } finally {\n      pendingSubject.next(false);\n      // trigger observable update\n    }\n  };\n\n  const className: string = prefixClass('button');\n  return {\n    className,\n    toggle,\n    enabledObserver,\n    pendingObserver: pendingSubject.asObservable(),\n  };\n}\n\nexport function setupManualToggle() {\n  let state = false;\n\n  const enabledSubject = new Subject<boolean>();\n\n  const pendingSubject = new Subject<boolean>();\n\n  const toggle = async (forceState?: boolean) => {\n    pendingSubject.next(true);\n    state = forceState ?? !state;\n    enabledSubject.next(state);\n    pendingSubject.next(false);\n  };\n  const className: string = prefixClass('button');\n  return {\n    className,\n    toggle,\n    enabledObserver: enabledSubject.asObservable(),\n    pendingObserver: pendingSubject.asObservable(),\n  };\n}\n", "import type { Participant, RemoteParticipant, Room, TrackPublication } from 'livekit-client';\nimport { ParticipantEvent, RoomEvent, Track } from 'livekit-client';\nimport type { Subscriber } from 'rxjs';\nimport { map, switchMap, Observable, startWith } from 'rxjs';\nimport { observeRoomEvents } from './room';\nimport type { ParticipantEventCallbacks } from 'livekit-client/dist/src/room/participant/Participant';\nimport { allParticipantEvents, allParticipantRoomEvents } from '../helper/eventGroups';\nimport type { TrackIdentifier } from '../types';\nimport { getTrackByIdentifier } from '../components/mediaTrack';\nimport { TrackReferenceOrPlaceholder } from '../track-reference';\n\nexport function observeParticipantEvents<T extends Participant>(\n  participant: T,\n  ...events: ParticipantEvent[]\n) {\n  const observable = new Observable<T>((subscribe) => {\n    const onParticipantUpdate = () => {\n      subscribe.next(participant);\n    };\n\n    events.forEach((evt) => {\n      participant.on(evt as keyof ParticipantEventCallbacks, onParticipantUpdate);\n    });\n\n    const unsubscribe = () => {\n      events.forEach((evt) => {\n        participant.off(evt as keyof ParticipantEventCallbacks, onParticipantUpdate);\n      });\n    };\n    return unsubscribe;\n  }).pipe(startWith(participant));\n\n  return observable;\n}\n\nexport interface ParticipantMedia<T extends Participant = Participant> {\n  isCameraEnabled: boolean;\n  isMicrophoneEnabled: boolean;\n  isScreenShareEnabled: boolean;\n  microphoneTrack?: TrackPublication;\n  cameraTrack?: TrackPublication;\n  participant: T;\n}\n\nexport function observeParticipantMedia<T extends Participant>(participant: T) {\n  const participantObserver = observeParticipantEvents(\n    participant,\n    ParticipantEvent.TrackMuted,\n    ParticipantEvent.TrackUnmuted,\n    ParticipantEvent.ParticipantPermissionsChanged,\n    // ParticipantEvent.IsSpeakingChanged,\n    ParticipantEvent.TrackPublished,\n    ParticipantEvent.TrackUnpublished,\n    ParticipantEvent.LocalTrackPublished,\n    ParticipantEvent.LocalTrackUnpublished,\n    ParticipantEvent.MediaDevicesError,\n    ParticipantEvent.TrackSubscriptionStatusChanged,\n    // ParticipantEvent.ConnectionQualityChanged,\n  ).pipe(\n    map((p) => {\n      const { isMicrophoneEnabled, isCameraEnabled, isScreenShareEnabled } = p;\n      const microphoneTrack = p.getTrack(Track.Source.Microphone);\n      const cameraTrack = p.getTrack(Track.Source.Camera);\n      const participantMedia: ParticipantMedia<T> = {\n        isCameraEnabled,\n        isMicrophoneEnabled,\n        isScreenShareEnabled,\n        cameraTrack,\n        microphoneTrack,\n        participant: p,\n      };\n      return participantMedia;\n    }),\n  );\n\n  return participantObserver;\n}\n\nexport function createTrackObserver(participant: Participant, options: TrackIdentifier) {\n  return observeParticipantMedia(participant).pipe(\n    map(() => {\n      return { publication: getTrackByIdentifier(options) };\n    }),\n  );\n}\n\nexport function participantInfoObserver(participant: Participant) {\n  const observer = observeParticipantEvents(\n    participant,\n    ParticipantEvent.ParticipantMetadataChanged,\n    // ParticipantEvent.LocalTrackPublished,\n  ).pipe(\n    map(({ name, identity, metadata }) => {\n      return {\n        name,\n        identity,\n        metadata,\n      };\n    }),\n    startWith({\n      name: participant.name,\n      identity: participant.identity,\n      metadata: participant.metadata,\n    }),\n  );\n  return observer;\n}\n\nexport function createConnectionQualityObserver(participant: Participant) {\n  const observer = participantEventSelector(\n    participant,\n    ParticipantEvent.ConnectionQualityChanged,\n  ).pipe(\n    map(([quality]) => quality),\n    startWith(participant.connectionQuality),\n  );\n  return observer;\n}\n\nexport function participantEventSelector<T extends ParticipantEvent>(\n  participant: Participant,\n  event: T,\n) {\n  const observable = new Observable<\n    Parameters<ParticipantEventCallbacks[Extract<T, keyof ParticipantEventCallbacks>]>\n  >((subscribe) => {\n    const update = (\n      ...params: Parameters<ParticipantEventCallbacks[Extract<T, keyof ParticipantEventCallbacks>]>\n    ) => {\n      subscribe.next(params);\n    };\n    // @ts-expect-error not a perfect overlap between ParticipantEvent and keyof ParticipantEventCallbacks\n    participant.on(event, update);\n\n    const unsubscribe = () => {\n      // @ts-expect-error not a perfect overlap between ParticipantEvent and keyof ParticipantEventCallbacks\n      participant.off(event, update);\n    };\n    return unsubscribe;\n  });\n\n  return observable;\n}\n\nexport function mutedObserver(trackRef: TrackReferenceOrPlaceholder) {\n  return observeParticipantEvents(\n    trackRef.participant,\n    ParticipantEvent.TrackMuted,\n    ParticipantEvent.TrackUnmuted,\n    ParticipantEvent.TrackSubscribed,\n    ParticipantEvent.TrackUnsubscribed,\n    ParticipantEvent.LocalTrackPublished,\n    ParticipantEvent.LocalTrackUnpublished,\n  ).pipe(\n    map((participant) => {\n      const pub = trackRef.publication ?? participant.getTrack(trackRef.source);\n      return pub?.isMuted ?? true;\n    }),\n    startWith(\n      trackRef.publication?.isMuted ??\n        trackRef.participant.getTrack(trackRef.source)?.isMuted ??\n        true,\n    ),\n  );\n}\n\nexport function createIsSpeakingObserver(participant: Participant) {\n  return participantEventSelector(participant, ParticipantEvent.IsSpeakingChanged).pipe(\n    map(([isSpeaking]) => isSpeaking),\n  );\n}\n\ntype ConnectedParticipantsObserverOptions = {\n  additionalRoomEvents?: RoomEvent[];\n};\n\nexport function connectedParticipantsObserver(\n  room: Room,\n  options: ConnectedParticipantsObserverOptions = {},\n) {\n  let subscriber: Subscriber<RemoteParticipant[]> | undefined;\n\n  const observable = new Observable<RemoteParticipant[]>((sub) => {\n    subscriber = sub;\n    return () => listener.unsubscribe();\n  }).pipe(startWith(Array.from(room.participants.values())));\n\n  const additionalRoomEvents = options.additionalRoomEvents ?? allParticipantRoomEvents;\n\n  const roomEvents = Array.from(\n    new Set([\n      RoomEvent.ParticipantConnected,\n      RoomEvent.ParticipantDisconnected,\n      RoomEvent.ConnectionStateChanged,\n      ...additionalRoomEvents,\n    ]),\n  );\n\n  const listener = observeRoomEvents(room, ...roomEvents).subscribe(\n    (r) => subscriber?.next(Array.from(r.participants.values())),\n  );\n  if (room.participants.size > 0) {\n    subscriber?.next(Array.from(room.participants.values()));\n  }\n  return observable;\n}\n\nexport type ConnectedParticipantObserverOptions = {\n  additionalEvents?: ParticipantEvent[];\n};\n\nexport function connectedParticipantObserver(\n  room: Room,\n  identity: string,\n  options: ConnectedParticipantObserverOptions = {},\n) {\n  const additionalEvents = options.additionalEvents ?? allParticipantEvents;\n  const observable = observeRoomEvents(\n    room,\n    RoomEvent.ParticipantConnected,\n    RoomEvent.ParticipantDisconnected,\n    RoomEvent.ConnectionStateChanged,\n  ).pipe(\n    switchMap((r) => {\n      const participant = r.getParticipantByIdentity(identity) as RemoteParticipant | undefined;\n      if (participant) {\n        return observeParticipantEvents(participant, ...additionalEvents);\n      } else {\n        return new Observable<undefined>((subscribe) => subscribe.next(undefined));\n      }\n    }),\n    startWith(room.getParticipantByIdentity(identity) as RemoteParticipant | undefined),\n  );\n\n  return observable;\n}\n\nexport function participantPermissionObserver(participant: Participant) {\n  const observer = participantEventSelector(\n    participant,\n    ParticipantEvent.ParticipantPermissionsChanged,\n  ).pipe(\n    map(() => participant.permissions),\n    startWith(participant.permissions),\n  );\n  return observer;\n}\n", "import type { Subscriber, Subscription } from 'rxjs';\nimport { Subject, map, Observable, startWith, finalize, filter, concat } from 'rxjs';\nimport type { Participant, TrackPublication } from 'livekit-client';\nimport { LocalParticipant, Room, RoomEvent, Track } from 'livekit-client';\nimport type { RoomEventCallbacks } from 'livekit-client/dist/src/room/Room';\nimport { log } from '../logger';\nexport function observeRoomEvents(room: Room, ...events: RoomEvent[]): Observable<Room> {\n  const observable = new Observable<Room>((subscribe) => {\n    const onRoomUpdate = () => {\n      subscribe.next(room);\n    };\n\n    events.forEach((evt) => {\n      room.on(evt, onRoomUpdate);\n    });\n\n    const unsubscribe = () => {\n      events.forEach((evt) => {\n        room.off(evt, onRoomUpdate);\n      });\n    };\n    return unsubscribe;\n  }).pipe(startWith(room));\n\n  return observable;\n}\n\nexport function roomEventSelector<T extends RoomEvent>(room: Room, event: T) {\n  const observable = new Observable<Parameters<RoomEventCallbacks[T]>>((subscribe) => {\n    const update = (...params: Parameters<RoomEventCallbacks[T]>) => {\n      subscribe.next(params);\n    };\n    room.on(event as keyof RoomEventCallbacks, update);\n\n    const unsubscribe = () => {\n      room.off(event as keyof RoomEventCallbacks, update);\n    };\n    return unsubscribe;\n  });\n\n  return observable;\n}\n\nexport function roomObserver(room: Room) {\n  const observable = observeRoomEvents(\n    room,\n    RoomEvent.ParticipantConnected,\n    RoomEvent.ParticipantDisconnected,\n    RoomEvent.ActiveSpeakersChanged,\n    RoomEvent.TrackSubscribed,\n    RoomEvent.TrackUnsubscribed,\n    RoomEvent.LocalTrackPublished,\n    RoomEvent.LocalTrackUnpublished,\n    RoomEvent.AudioPlaybackStatusChanged,\n    RoomEvent.ConnectionStateChanged,\n  ).pipe(startWith(room));\n\n  return observable;\n}\n\nexport function connectionStateObserver(room: Room) {\n  return roomEventSelector(room, RoomEvent.ConnectionStateChanged).pipe(\n    map(([connectionState]) => connectionState),\n    startWith(room.state),\n  );\n}\nexport type ScreenShareTrackMap = Array<{\n  participant: Participant;\n  tracks: Array<TrackPublication>;\n}>;\n\nexport function screenShareObserver(room: Room) {\n  let screenShareSubscriber: Subscriber<ScreenShareTrackMap>;\n  const observers: Array<Subscription> = [];\n\n  const observable = new Observable<ScreenShareTrackMap>((subscriber) => {\n    screenShareSubscriber = subscriber;\n    return () => {\n      observers.forEach((observer) => {\n        observer.unsubscribe();\n      });\n    };\n  });\n  const screenShareTracks: ScreenShareTrackMap = [];\n\n  const handleSub = (publication: TrackPublication, participant: Participant) => {\n    if (\n      publication.source !== Track.Source.ScreenShare &&\n      publication.source !== Track.Source.ScreenShareAudio\n    ) {\n      return;\n    }\n    let trackMap = screenShareTracks.find((tr) => tr.participant.identity === participant.identity);\n    const getScreenShareTracks = (participant: Participant) => {\n      return participant\n        .getTracks()\n        .filter(\n          (track) =>\n            (track.source === Track.Source.ScreenShare ||\n              track.source === Track.Source.ScreenShareAudio) &&\n            track.track,\n        );\n    };\n    if (!trackMap) {\n      trackMap = {\n        participant,\n        tracks: getScreenShareTracks(participant),\n      };\n    } else {\n      const index = screenShareTracks.indexOf(trackMap);\n      screenShareTracks.splice(index, 1);\n      trackMap.tracks = getScreenShareTracks(participant);\n    }\n    if (trackMap.tracks.length > 0) {\n      screenShareTracks.push(trackMap);\n    }\n\n    screenShareSubscriber.next(screenShareTracks);\n  };\n  observers.push(\n    roomEventSelector(room, RoomEvent.TrackSubscribed).subscribe(([, ...args]) =>\n      handleSub(...args),\n    ),\n  );\n  observers.push(\n    roomEventSelector(room, RoomEvent.TrackUnsubscribed).subscribe(([, ...args]) =>\n      handleSub(...args),\n    ),\n  );\n  observers.push(\n    roomEventSelector(room, RoomEvent.LocalTrackPublished).subscribe((args) => handleSub(...args)),\n  );\n  observers.push(\n    roomEventSelector(room, RoomEvent.LocalTrackUnpublished).subscribe((args) => {\n      handleSub(...args);\n    }),\n  );\n  observers.push(\n    roomEventSelector(room, RoomEvent.TrackMuted).subscribe((args) => {\n      handleSub(...args);\n    }),\n  );\n  observers.push(\n    roomEventSelector(room, RoomEvent.TrackUnmuted).subscribe((args) => {\n      handleSub(...args);\n    }),\n  );\n  setTimeout(() => {\n    // TODO find way to avoid this timeout\n    for (const p of room.participants.values()) {\n      p.getTracks().forEach((track) => {\n        handleSub(track, p);\n      });\n    }\n  }, 1);\n\n  return observable;\n}\n\nexport function roomInfoObserver(room: Room) {\n  const observer = observeRoomEvents(\n    room,\n    RoomEvent.RoomMetadataChanged,\n    RoomEvent.ConnectionStateChanged,\n  ).pipe(\n    map((r) => {\n      return { name: r.name, metadata: r.metadata };\n    }),\n  );\n  return observer;\n}\n\nexport function activeSpeakerObserver(room: Room) {\n  return roomEventSelector(room, RoomEvent.ActiveSpeakersChanged).pipe(\n    map(([speakers]) => speakers),\n  );\n}\n\nexport function createMediaDeviceObserver(\n  kind?: MediaDeviceKind,\n  onError?: (e: Error) => void,\n  requestPermissions = true,\n) {\n  const onDeviceChange = async () => {\n    try {\n      const newDevices = await Room.getLocalDevices(kind, requestPermissions);\n      deviceSubject.next(newDevices);\n    } catch (e: any) {\n      onError?.(e);\n    }\n  };\n  const deviceSubject = new Subject<MediaDeviceInfo[]>();\n\n  const observable = deviceSubject.pipe(\n    finalize(() => {\n      navigator?.mediaDevices?.removeEventListener('devicechange', onDeviceChange);\n    }),\n  );\n\n  if (typeof window !== 'undefined') {\n    if (!window.isSecureContext) {\n      throw new Error(\n        `Accessing media devices is available only in secure contexts (HTTPS and localhost), in some or all supporting browsers. See: https://developer.mozilla.org/en-US/docs/Web/API/Navigator/mediaDevices`,\n      );\n    }\n    navigator?.mediaDevices?.addEventListener('devicechange', onDeviceChange);\n  }\n  // because we rely on an async function, concat the promise to retrieve the initial values with the observable\n  return concat(\n    Room.getLocalDevices(kind, requestPermissions).catch((e) => onError?.(e)),\n    observable,\n  );\n}\n\nexport function createDataObserver(room: Room) {\n  return roomEventSelector(room, RoomEvent.DataReceived);\n}\n\nexport function roomAudioPlaybackAllowedObservable(room: Room) {\n  const observable = observeRoomEvents(room, RoomEvent.AudioPlaybackStatusChanged).pipe(\n    map((room) => {\n      return { canPlayAudio: room.canPlaybackAudio };\n    }),\n  );\n  return observable;\n}\n\nexport function roomVideoPlaybackAllowedObservable(room: Room) {\n  const observable = observeRoomEvents(room, RoomEvent.VideoPlaybackStatusChanged).pipe(\n    map((room) => {\n      return { canPlayVideo: room.canPlaybackVideo };\n    }),\n  );\n  return observable;\n}\n\nexport function createActiveDeviceObservable(room: Room, kind: MediaDeviceKind) {\n  return roomEventSelector(room, RoomEvent.ActiveDeviceChanged).pipe(\n    filter(([kindOfDevice]) => kindOfDevice === kind),\n    map(([kind, deviceId]) => {\n      log.debug('activeDeviceObservable | RoomEvent.ActiveDeviceChanged', { kind, deviceId });\n      return deviceId;\n    }),\n    startWith(room.getActiveDevice(kind)),\n  );\n}\n\nexport function encryptionStatusObservable(room: Room, participant: Participant) {\n  return roomEventSelector(room, RoomEvent.ParticipantEncryptionStatusChanged).pipe(\n    filter(\n      ([, p]) =>\n        participant.identity === p?.identity ||\n        (!p && participant.identity === room.localParticipant.identity),\n    ),\n    map(([encrypted]) => encrypted),\n    startWith(\n      participant instanceof LocalParticipant ? participant.isE2EEEnabled : participant.isEncrypted,\n    ),\n  );\n}\n", "import { Track } from 'livekit-client';\nimport { map, startWith } from 'rxjs';\nimport { observeParticipantMedia } from '../observables/participant';\nimport { prefixClass } from '../styles-interface';\nimport { isTrackReference } from '../track-reference/track-reference.types';\nimport type { TrackIdentifier } from '../types';\n\nexport function setupMediaTrack(trackIdentifier: TrackIdentifier) {\n  const initialPub = getTrackByIdentifier(trackIdentifier);\n  const trackObserver = observeParticipantMedia(trackIdentifier.participant).pipe(\n    map(() => {\n      return getTrackByIdentifier(trackIdentifier);\n    }),\n    startWith(initialPub),\n  );\n  const className: string = prefixClass(\n    trackIdentifier.source === Track.Source.Camera ||\n      trackIdentifier.source === Track.Source.ScreenShare\n      ? 'participant-media-video'\n      : 'participant-media-audio',\n  );\n  return { className, trackObserver };\n}\n\nexport function getTrackByIdentifier(options: TrackIdentifier) {\n  if (isTrackReference(options)) {\n    return options.publication;\n  } else {\n    const { source, name, participant } = options;\n    if (source && name) {\n      return participant.getTracks().find((pub) => pub.source === source && pub.trackName === name);\n    } else if (name) {\n      return participant.getTrackByName(name);\n    } else if (source) {\n      return participant.getTrack(source);\n    } else {\n      throw new Error('At least one of source and name needs to be defined');\n    }\n  }\n}\n", "import type { UnprefixedClassNames as ComponentNoPrefixClasses } from '@livekit/components-styles/dist/types_unprefixed/index.scss';\nimport type { UnprefixedClassNames as PrefabNoPrefixClasses } from '@livekit/components-styles/dist/types_unprefixed/prefabs/index.scss';\nimport { cssPrefix } from './../constants';\n\ntype UnprefixedClassNames = ComponentNoPrefixClasses | PrefabNoPrefixClasses;\n\n/**\n * This function is a type safe way to add a prefix to a HTML class attribute.\n * Only classes defined in the styles module are valid, any other class produces a ts error.\n * @internal\n */\nexport function prefixClass<T extends UnprefixedClassNames>(unprefixedClassName: T) {\n  return `${cssPrefix}-${unprefixedClassName}` as const;\n}\n", "import {\n  Track,\n  type LocalAudioTrack,\n  type LocalVideoTrack,\n  type Room,\n  type LocalTrack,\n} from 'livekit-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { log } from '../logger';\nimport { prefixClass } from '../styles-interface';\nimport { createActiveDeviceObservable } from '../observables/room';\n\nexport type SetMediaDeviceOptions = {\n  /**\n   *  If true, adds an `exact` constraint to the getUserMedia request.\n   *  The request will fail if this option is true and the device specified is not actually available\n   */\n  exact?: boolean;\n};\n\nexport function setupDeviceSelector(\n  kind: MediaDeviceKind,\n  room?: Room,\n  localTrack?: LocalAudioTrack | LocalVideoTrack,\n) {\n  const activeDeviceSubject = new BehaviorSubject<string | undefined>(undefined);\n\n  const activeDeviceObservable = room\n    ? createActiveDeviceObservable(room, kind)\n    : activeDeviceSubject.asObservable();\n\n  const setActiveMediaDevice = async (id: string, options: SetMediaDeviceOptions = {}) => {\n    if (room) {\n      log.debug(`Switching active device of kind \"${kind}\" with id ${id}.`);\n      await room.switchActiveDevice(kind, id, options.exact);\n      const actualDeviceId: string | undefined = room.getActiveDevice(kind) ?? id;\n      if (actualDeviceId !== id && id !== 'default') {\n        log.info(\n          `We tried to select the device with id (${id}), but the browser decided to select the device with id (${actualDeviceId}) instead.`,\n        );\n      }\n      let targetTrack: LocalTrack | undefined = undefined;\n      if (kind === 'audioinput')\n        targetTrack = room.localParticipant.getTrack(Track.Source.Microphone)?.track;\n      else if (kind === 'videoinput') {\n        targetTrack = room.localParticipant.getTrack(Track.Source.Camera)?.track;\n      }\n      const useDefault =\n        (id === 'default' && !targetTrack) ||\n        (id === 'default' && targetTrack?.mediaStreamTrack.label.startsWith('Default'));\n      activeDeviceSubject.next(useDefault ? id : actualDeviceId);\n    } else if (localTrack) {\n      await localTrack.setDeviceId(options.exact ? { exact: id } : id);\n      const actualId = await localTrack.getDeviceId();\n      activeDeviceSubject.next(\n        id === 'default' && localTrack.mediaStreamTrack.label.startsWith('Default') ? id : actualId,\n      );\n    } else if (activeDeviceSubject.value !== id) {\n      log.warn(\n        'device switch skipped, please provide either a room or a local track to switch on. ',\n      );\n      activeDeviceSubject.next(id);\n    }\n  };\n  const className: string = prefixClass('media-device-select');\n  return {\n    className,\n    activeDeviceObservable,\n    setActiveMediaDevice,\n  };\n}\n", "import type { Room } from 'livekit-client';\nimport { prefixClass } from '../styles-interface';\n\nexport function setupDisconnectButton(room: Room) {\n  const disconnect = (stopTracks?: boolean) => {\n    room.disconnect(stopTracks);\n  };\n  const className: string = prefixClass('disconnect-button');\n  return { className, disconnect };\n}\n", "import type { Participant } from 'livekit-client';\nimport { createConnectionQualityObserver } from '../observables/participant';\nimport { prefixClass } from '../styles-interface';\n\nexport function setupConnectionQualityIndicator(participant: Participant) {\n  const className = prefixClass('connection-quality');\n  const connectionQualityObserver = createConnectionQualityObserver(participant);\n  return { className, connectionQualityObserver };\n}\n", "import type { Styles } from '@livekit/components-styles/dist/types_unprefixed/index.scss';\nimport { Track } from 'livekit-client';\nimport { mutedObserver } from '../observables/participant';\nimport { prefixClass } from '../styles-interface';\nimport type { TrackReferenceOrPlaceholder } from '../track-reference';\n\nexport function setupTrackMutedIndicator(trackRef: TrackReferenceOrPlaceholder) {\n  let classForSource: keyof Styles = 'track-muted-indicator-camera';\n  switch (trackRef.source) {\n    case Track.Source.Camera:\n      classForSource = 'track-muted-indicator-camera';\n      break;\n    case Track.Source.Microphone:\n      classForSource = 'track-muted-indicator-microphone';\n      break;\n\n    default:\n      break;\n  }\n  const className: string = prefixClass(classForSource);\n  const mediaMutedObserver = mutedObserver(trackRef);\n\n  return { className, mediaMutedObserver };\n}\n", "import type { Participant } from 'livekit-client';\nimport { participantInfoObserver } from '../observables/participant';\n\nexport function setupParticipantName(participant: Participant) {\n  const infoObserver = participantInfoObserver(participant);\n  return { className: 'lk-participant-name', infoObserver };\n}\n", "import { prefixClass } from '../styles-interface';\n\nexport function setupParticipantTile() {\n  const className: string = prefixClass('participant-tile');\n  return {\n    className,\n  };\n}\n", "/* eslint-disable camelcase */\nimport type { Participant, Room } from 'livekit-client';\nimport { DataPacket_Kind, RoomEvent } from 'livekit-client';\nimport { BehaviorSubject, Subject, scan, map, takeUntil } from 'rxjs';\nimport { DataTopic, sendMessage, setupDataMessageHandler } from '../observables/dataChannel';\n\n/** @public */\nexport interface ChatMessage {\n  timestamp: number;\n  message: string;\n}\n\n/** @public */\nexport interface ReceivedChatMessage extends ChatMessage {\n  from?: Participant;\n}\n\n/** @public */\nexport type MessageEncoder = (message: ChatMessage) => Uint8Array;\n/** @public */\nexport type MessageDecoder = (message: Uint8Array) => ReceivedChatMessage;\n/** @public */\nexport type ChatOptions = {\n  messageEncoder?: (message: ChatMessage) => Uint8Array;\n  messageDecoder?: (message: Uint8Array) => ReceivedChatMessage;\n  channelTopic?: string;\n};\n\ntype RawMessage = {\n  payload: Uint8Array;\n  topic: string | undefined;\n  from: Participant | undefined;\n};\n\nconst encoder = new TextEncoder();\nconst decoder = new TextDecoder();\n\nconst topicSubjectMap: Map<Room, Map<string, Subject<RawMessage>>> = new Map();\n\nconst encode = (message: ChatMessage) =>\n  encoder.encode(JSON.stringify({ message: message.message, timestamp: message.timestamp }));\n\nconst decode = (message: Uint8Array) => JSON.parse(decoder.decode(message)) as ReceivedChatMessage;\n\nexport function setupChat(room: Room, options?: ChatOptions) {\n  const onDestroyObservable = new Subject<void>();\n\n  const { messageDecoder, messageEncoder, channelTopic } = options ?? {};\n\n  const topic = channelTopic ?? DataTopic.CHAT;\n\n  let needsSetup = false;\n  if (!topicSubjectMap.has(room)) {\n    needsSetup = true;\n  }\n  const topicMap = topicSubjectMap.get(room) ?? new Map<string, Subject<RawMessage>>();\n  const messageSubject = topicMap.get(topic) ?? new Subject<RawMessage>();\n  topicMap.set(topic, messageSubject);\n  topicSubjectMap.set(room, topicMap);\n\n  if (needsSetup) {\n    /** Subscribe to all appropriate messages sent over the wire. */\n    const { messageObservable } = setupDataMessageHandler(room, topic);\n    messageObservable.pipe(takeUntil(onDestroyObservable)).subscribe(messageSubject);\n  }\n\n  const finalMessageDecoder = messageDecoder ?? decode;\n\n  /** Build up the message array over time. */\n  const messagesObservable = messageSubject.pipe(\n    map((msg) => {\n      const parsedMessage = finalMessageDecoder(msg.payload);\n      const newMessage: ReceivedChatMessage = { ...parsedMessage, from: msg.from };\n      return newMessage;\n    }),\n    scan<ReceivedChatMessage, ReceivedChatMessage[]>((acc, value) => [...acc, value], []),\n    takeUntil(onDestroyObservable),\n  );\n\n  const isSending$ = new BehaviorSubject<boolean>(false);\n\n  const finalMessageEncoder = messageEncoder ?? encode;\n\n  const send = async (message: string) => {\n    const timestamp = Date.now();\n    const encodedMsg = finalMessageEncoder({ message, timestamp });\n    isSending$.next(true);\n    try {\n      await sendMessage(room.localParticipant, encodedMsg, topic, {\n        kind: DataPacket_Kind.RELIABLE,\n      });\n      messageSubject.next({\n        payload: encodedMsg,\n        topic: topic,\n        from: room.localParticipant,\n      });\n    } finally {\n      isSending$.next(false);\n    }\n  };\n\n  function destroy() {\n    onDestroyObservable.next();\n    onDestroyObservable.complete();\n    topicSubjectMap.clear();\n  }\n  room.once(RoomEvent.Disconnected, destroy);\n\n  return { messageObservable: messagesObservable, isSendingObservable: isSending$, send };\n}\n", "import type { LocalParticipant, Participant, Room } from 'livekit-client';\nimport { DataPacket_Kind } from 'livekit-client';\nimport type { Subscriber } from 'rxjs';\nimport { Observable, filter, map } from 'rxjs';\nimport { createDataObserver } from './room';\n\nexport const DataTopic = {\n  CHAT: 'lk-chat-topic',\n} as const;\n\nexport type DataSendOptions = {\n  kind?: DataPacket_Kind;\n  destination?: string[];\n};\n\n/** Publish data from the LocalParticipant. */\nexport async function sendMessage(\n  localParticipant: LocalParticipant,\n  payload: Uint8Array,\n  topic?: string,\n  options: DataSendOptions = {},\n) {\n  const { kind, destination } = options;\n\n  await localParticipant.publishData(payload, kind ?? DataPacket_Kind.RELIABLE, {\n    destination,\n    topic,\n  });\n}\n\nexport interface BaseDataMessage<T extends string | undefined> {\n  topic?: T;\n  payload: Uint8Array;\n}\n\nexport interface ReceivedDataMessage<T extends string | undefined = string>\n  extends BaseDataMessage<T> {\n  from?: Participant;\n}\n\nexport function setupDataMessageHandler<T extends string>(\n  room: Room,\n  topic?: T,\n  onMessage?: (msg: ReceivedDataMessage<T>) => void,\n) {\n  /** Setup a Observable that returns all data messages belonging to a topic. */\n  const messageObservable = createDataObserver(room).pipe(\n    filter(([, , , messageTopic]) => topic === undefined || messageTopic === topic),\n    map(([payload, participant, , messageTopic]) => {\n      const msg = {\n        payload,\n        topic: messageTopic as T,\n        from: participant,\n      } satisfies ReceivedDataMessage<T>;\n      onMessage?.(msg);\n      return msg;\n    }),\n  );\n\n  let isSendingSubscriber: Subscriber<boolean>;\n  const isSendingObservable = new Observable<boolean>((subscriber) => {\n    isSendingSubscriber = subscriber;\n  });\n\n  const send = async (payload: Uint8Array, options: DataSendOptions = {}) => {\n    isSendingSubscriber.next(true);\n    try {\n      await sendMessage(room.localParticipant, payload, topic, options);\n    } finally {\n      isSendingSubscriber.next(false);\n    }\n  };\n\n  return { messageObservable, isSendingObservable, send };\n}\n", "import type { Room } from 'livekit-client';\nimport { log } from '../logger';\nimport { roomAudioPlaybackAllowedObservable } from '../observables/room';\nimport { prefixClass } from '../styles-interface';\n\nexport function setupStartAudio() {\n  const handleStartAudioPlayback = async (room: Room) => {\n    log.info('Start Audio for room: ', room);\n    await room.startAudio();\n  };\n  const className: string = prefixClass('start-audio-button');\n  return { className, roomAudioPlaybackAllowedObservable, handleStartAudioPlayback };\n}\n", "import type { Room } from 'livekit-client';\nimport { log } from '../logger';\nimport { roomVideoPlaybackAllowedObservable } from '../observables/room';\nimport { prefixClass } from '../styles-interface';\n\nexport function setupStartVideo() {\n  const handleStartVideoPlayback = async (room: Room) => {\n    log.info('Start Video for room: ', room);\n    await room.startVideo();\n  };\n  const className: string = prefixClass('start-audio-button');\n  return { className, roomVideoPlaybackAllowedObservable, handleStartVideoPlayback };\n}\n", "import { prefixClass } from '../styles-interface';\n\nexport function setupChatToggle() {\n  const className: string = [prefixClass('button'), prefixClass('chat-toggle')].join(' ');\n  return { className };\n}\n", "import { prefixClass } from '../styles-interface';\n\nexport function setupFocusToggle() {\n  const className: string = [prefixClass('button'), prefixClass('focus-toggle-button')].join(' ');\n  return { className };\n}\n", "// import { prefixClass } from '../styles-interface';\n\nexport function setupClearPinButton() {\n  // const className = prefixClass('clear-pin-button');\n  const className = 'lk-clear-pin-button lk-button';\n  return { className };\n}\n", "export function setupLiveKitRoom() {\n  const className = 'lk-room-container';\n  return { className };\n}\n", "import type {\n  LocalTrackPublication,\n  Participant,\n  RemoteTrackPublication,\n  Room,\n  Track,\n  TrackPublication,\n} from 'livekit-client';\nimport { RoomEvent, TrackEvent } from 'livekit-client';\nimport { map, Observable, startWith } from 'rxjs';\nimport { allParticipantRoomEvents } from '../helper';\nimport { log } from '../logger';\nimport type { TrackReference } from '../track-reference';\nimport { observeRoomEvents } from './room';\n\nexport function trackObservable(track: TrackPublication) {\n  const trackObserver = observeTrackEvents(\n    track,\n    TrackEvent.Muted,\n    TrackEvent.Unmuted,\n    TrackEvent.Subscribed,\n    TrackEvent.Unsubscribed,\n  );\n\n  return trackObserver;\n}\n\nexport function observeTrackEvents(track: TrackPublication, ...events: TrackEvent[]) {\n  const observable = new Observable<TrackPublication>((subscribe) => {\n    const onTrackUpdate = () => {\n      subscribe.next(track);\n    };\n\n    events.forEach((evt) => {\n      // @ts-expect-error type of `TrackEvent` and `PublicationCallbacks` are congruent\n      track.on(evt, onTrackUpdate);\n    });\n\n    const unsubscribe = () => {\n      events.forEach((evt) => {\n        // @ts-expect-error type of `TrackEvent` and `PublicationCallbacks` are congruent\n        track.off(evt, onTrackUpdate);\n      });\n    };\n    return unsubscribe;\n  }).pipe(startWith(track));\n\n  return observable;\n}\n\n/**\n * Create `TrackReferences` for all tracks that are included in the sources property.\n *  */\nfunction getTrackReferences(\n  room: Room,\n  sources: Track.Source[],\n  onlySubscribedTracks = true,\n): { trackReferences: TrackReference[]; participants: Participant[] } {\n  const localParticipant = room.localParticipant;\n  const allParticipants = [localParticipant, ...Array.from(room.participants.values())];\n  const trackReferences: TrackReference[] = [];\n\n  allParticipants.forEach((participant) => {\n    sources.forEach((source) => {\n      const sourceReferences = Array.from<RemoteTrackPublication | LocalTrackPublication>(\n        participant.tracks.values(),\n      )\n        .filter(\n          (track) =>\n            track.source === source &&\n            // either return all or only the ones that are subscribed\n            (!onlySubscribedTracks || track.track),\n        )\n        .map((track): TrackReference => {\n          return {\n            participant: participant,\n            publication: track,\n            source: track.source,\n          };\n        });\n\n      trackReferences.push(...sourceReferences);\n    });\n  });\n\n  return { trackReferences, participants: allParticipants };\n}\n\ntype TrackReferencesObservableOptions = {\n  additionalRoomEvents?: RoomEvent[];\n  onlySubscribed?: boolean;\n};\n\nexport function trackReferencesObservable(\n  room: Room,\n  sources: Track.Source[],\n  options: TrackReferencesObservableOptions,\n): Observable<{ trackReferences: TrackReference[]; participants: Participant[] }> {\n  const additionalRoomEvents = options.additionalRoomEvents ?? allParticipantRoomEvents;\n  const onlySubscribedTracks: boolean = options.onlySubscribed ?? true;\n  const roomEvents = Array.from(\n    new Set([\n      RoomEvent.ParticipantConnected,\n      RoomEvent.ParticipantDisconnected,\n      RoomEvent.ConnectionStateChanged,\n      RoomEvent.LocalTrackPublished,\n      RoomEvent.LocalTrackUnpublished,\n      RoomEvent.TrackPublished,\n      RoomEvent.TrackUnpublished,\n      RoomEvent.TrackSubscriptionStatusChanged,\n      ...additionalRoomEvents,\n    ]).values(),\n  );\n\n  const observable = observeRoomEvents(room, ...roomEvents).pipe(\n    map((room) => {\n      const data = getTrackReferences(room, sources, onlySubscribedTracks);\n      log.debug(`TrackReference[] was updated. (length ${data.trackReferences.length})`, data);\n      return data;\n    }),\n    startWith(getTrackReferences(room, sources, onlySubscribedTracks)),\n  );\n\n  return observable;\n}\n", "import type { Observable } from 'rxjs';\nimport { concat, distinctUntilChanged, fromEvent, map, of, skipUntil, timeout } from 'rxjs';\n\n/**\n * Returns true if the user is interacting with the HTML element,\n * and returns false if there is no interaction for a specified period of time.\n *\n * @internal\n */\nexport function createInteractingObservable(htmlElement: HTMLElement | null, inactiveAfter = 1000) {\n  if (htmlElement === null) return of(false);\n  const move$ = fromEvent(htmlElement, 'mousemove', { passive: true }).pipe(map(() => true));\n  const moveAndStop$: Observable<boolean> = move$.pipe(\n    timeout({\n      each: inactiveAfter,\n      with: () => concat(of(false), moveAndStop$.pipe(skipUntil(move$))),\n    }),\n    distinctUntilChanged(),\n  );\n  return moveAndStop$;\n}\n", "import { log } from '../logger';\n\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonArray = JsonValue[];\ntype JsonObject = { [key: string]: JsonValue };\ntype JsonValue = JsonPrimitive | JsonArray | JsonObject;\n\n/**\n * Persists a serializable object to local storage associated with the specified key.\n * @internal\n */\nfunction saveToLocalStorage<T extends JsonValue>(key: string, value: T): void {\n  if (typeof localStorage === 'undefined') {\n    log.error('Local storage is not available.');\n    return;\n  }\n\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (error) {\n    log.error(`Error setting item to local storage: ${error}`);\n  }\n}\n\n/**\n * Retrieves a serializable object from local storage by its key.\n * @internal\n */\nfunction loadFromLocalStorage<T extends JsonValue>(key: string): T | undefined {\n  if (typeof localStorage === 'undefined') {\n    log.error('Local storage is not available.');\n    return undefined;\n  }\n\n  try {\n    const item = localStorage.getItem(key);\n    if (!item) {\n      log.warn(`Item with key ${key} does not exist in local storage.`);\n      return undefined;\n    }\n    return JSON.parse(item);\n  } catch (error) {\n    log.error(`Error getting item from local storage: ${error}`);\n    return undefined;\n  }\n}\n\n/**\n * Generate a pair of functions to load and save a value of type T to local storage.\n * @internal\n */\nexport function createLocalStorageInterface<T extends JsonValue>(\n  key: string,\n): { load: () => T | undefined; save: (value: T) => void } {\n  return {\n    load: () => loadFromLocalStorage<T>(key),\n    save: (value: T) => saveToLocalStorage<T>(key, value),\n  };\n}\n", "import { cssPrefix } from '../constants';\nimport { createLocalStorageInterface } from './local-storage-helpers';\n\nconst USER_CHOICES_KEY = `${cssPrefix}-user-choices` as const;\n\n/**\n * @public\n * Represents the user's choices for video and audio input devices,\n * as well as their username.\n */\nexport type LocalUserChoices = {\n  /**\n   * Whether video input is enabled.\n   * @defaultValue `true`\n   */\n  videoEnabled: boolean;\n  /**\n   * Whether audio input is enabled.\n   * @defaultValue `true`\n   */\n  audioEnabled: boolean;\n  /**\n   * The device ID of the video input device to use.\n   * @defaultValue `''`\n   */\n  videoDeviceId: string;\n  /**\n   * The device ID of the audio input device to use.\n   * @defaultValue `''`\n   */\n  audioDeviceId: string;\n  /**\n   * The username to use.\n   * @defaultValue `''`\n   */\n  username: string;\n  /** @deprecated This property will be removed without replacement. */\n  e2ee: boolean;\n  /** @deprecated This property will be removed without replacement. */\n  sharedPassphrase: string;\n};\n\nconst defaultUserChoices: LocalUserChoices = {\n  videoEnabled: true,\n  audioEnabled: true,\n  videoDeviceId: '',\n  audioDeviceId: '',\n  username: '',\n  e2ee: false,\n  sharedPassphrase: '',\n} as const;\n\n/**\n * The type of the object stored in local storage.\n * @remarks\n * TODO: Replace this type with `LocalUserChoices` after removing the deprecated properties from `LocalUserChoices`.\n * @internal\n */\ntype TempStorageType = Omit<LocalUserChoices, 'e2ee' | 'sharedPassphrase'>;\nconst { load, save } = createLocalStorageInterface<TempStorageType>(USER_CHOICES_KEY);\n\n/**\n * Saves user choices to local storage.\n * @alpha\n */\nexport function saveUserChoices(\n  userChoices: LocalUserChoices,\n  /**\n   * Whether to prevent saving user choices to local storage.\n   */\n  preventSave: boolean = false,\n): void {\n  if (preventSave === true) {\n    return;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { e2ee, sharedPassphrase, ...toSave } = userChoices;\n  save(toSave);\n}\n\n/**\n * Reads the user choices from local storage, or returns the default settings if none are found.\n * @remarks\n * The deprecated parameters `e2ee` and `sharedPassphrase` are not read from local storage\n * and always return the value from the passed `defaults` or internal defaults.\n * @alpha\n */\nexport function loadUserChoices(\n  defaults?: Partial<LocalUserChoices>,\n  /**\n   * Whether to prevent loading from local storage and return default values instead.\n   * @defaultValue false\n   */\n  preventLoad: boolean = false,\n): LocalUserChoices {\n  const fallback: LocalUserChoices = {\n    videoEnabled: defaults?.videoEnabled ?? defaultUserChoices.videoEnabled,\n    audioEnabled: defaults?.audioEnabled ?? defaultUserChoices.audioEnabled,\n    videoDeviceId: defaults?.videoDeviceId ?? defaultUserChoices.videoDeviceId,\n    audioDeviceId: defaults?.audioDeviceId ?? defaultUserChoices.audioDeviceId,\n    username: defaults?.username ?? defaultUserChoices.username,\n    e2ee: defaults?.e2ee ?? defaultUserChoices.e2ee,\n    sharedPassphrase: defaults?.sharedPassphrase ?? defaultUserChoices.sharedPassphrase,\n  };\n\n  if (preventLoad) {\n    return fallback;\n  } else {\n    const maybeLoadedObject = load();\n    const result = { ...fallback, ...(maybeLoadedObject ?? {}) };\n    return result;\n  }\n}\n", "/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n", "/**\n * Returns true if the object is a function.\n * @param value The value to check\n */\nexport function isFunction(value: any): value is (...args: any[]) => any {\n  return typeof value === 'function';\n}\n", "/**\n * Used to create Error subclasses until the community moves away from ES5.\n *\n * This is because compiling from TypeScript down to ES5 has issues with subclassing Errors\n * as well as other built-in types: https://github.com/Microsoft/TypeScript/issues/12123\n *\n * @param createImpl A factory function to create the actual constructor implementation. The returned\n * function should be a named function that calls `_super` internally.\n */\nexport function createErrorClass<T>(createImpl: (_super: any) => any): T {\n  const _super = (instance: any) => {\n    Error.call(instance);\n    instance.stack = new Error().stack;\n  };\n\n  const ctorFunc = createImpl(_super);\n  ctorFunc.prototype = Object.create(Error.prototype);\n  ctorFunc.prototype.constructor = ctorFunc;\n  return ctorFunc;\n}\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (errors: any[]): UnsubscriptionError;\n}\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = createErrorClass(\n  (_super) =>\n    function UnsubscriptionErrorImpl(this: any, errors: (Error | string)[]) {\n      _super(this);\n      this.message = errors\n        ? `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}`\n        : '';\n      this.name = 'UnsubscriptionError';\n      this.errors = errors;\n    }\n);\n", "/**\n * Removes an item from an array, mutating it.\n * @param arr The array to remove the item from\n * @param item The item to remove\n */\nexport function arrRemove<T>(arr: T[] | undefined | null, item: T) {\n  if (arr) {\n    const index = arr.indexOf(item);\n    0 <= index && arr.splice(index, 1);\n  }\n}\n", "import { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic, Unsubscribable } from './types';\nimport { arrRemove } from './util/arrRemove';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY = (() => {\n    const empty = new Subscription();\n    empty.closed = true;\n    return empty;\n  })();\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   */\n  public closed = false;\n\n  private _parentage: Subscription[] | Subscription | null = null;\n\n  /**\n   * The list of registered finalizers to execute upon unsubscription. Adding and removing from this\n   * list occurs in the {@link #add} and {@link #remove} methods.\n   */\n  private _finalizers: Exclude<TeardownLogic, void>[] | null = null;\n\n  /**\n   * @param initialTeardown A function executed first as part of the finalization\n   * process that is kicked off when {@link #unsubscribe} is called.\n   */\n  constructor(private initialTeardown?: () => void) {}\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let errors: any[] | undefined;\n\n    if (!this.closed) {\n      this.closed = true;\n\n      // Remove this from it's parents.\n      const { _parentage } = this;\n      if (_parentage) {\n        this._parentage = null;\n        if (Array.isArray(_parentage)) {\n          for (const parent of _parentage) {\n            parent.remove(this);\n          }\n        } else {\n          _parentage.remove(this);\n        }\n      }\n\n      const { initialTeardown: initialFinalizer } = this;\n      if (isFunction(initialFinalizer)) {\n        try {\n          initialFinalizer();\n        } catch (e) {\n          errors = e instanceof UnsubscriptionError ? e.errors : [e];\n        }\n      }\n\n      const { _finalizers } = this;\n      if (_finalizers) {\n        this._finalizers = null;\n        for (const finalizer of _finalizers) {\n          try {\n            execFinalizer(finalizer);\n          } catch (err) {\n            errors = errors ?? [];\n            if (err instanceof UnsubscriptionError) {\n              errors = [...errors, ...err.errors];\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n\n      if (errors) {\n        throw new UnsubscriptionError(errors);\n      }\n    }\n  }\n\n  /**\n   * Adds a finalizer to this subscription, so that finalization will be unsubscribed/called\n   * when this subscription is unsubscribed. If this subscription is already {@link #closed},\n   * because it has already been unsubscribed, then whatever finalizer is passed to it\n   * will automatically be executed (unless the finalizer itself is also a closed subscription).\n   *\n   * Closed Subscriptions cannot be added as finalizers to any subscription. Adding a closed\n   * subscription to a any subscription will result in no operation. (A noop).\n   *\n   * Adding a subscription to itself, or adding `null` or `undefined` will not perform any\n   * operation at all. (A noop).\n   *\n   * `Subscription` instances that are added to this instance will automatically remove themselves\n   * if they are unsubscribed. Functions and {@link Unsubscribable} objects that you wish to remove\n   * will need to be removed manually with {@link #remove}\n   *\n   * @param teardown The finalization logic to add to this subscription.\n   */\n  add(teardown: TeardownLogic): void {\n    // Only add the finalizer if it's not undefined\n    // and don't add a subscription to itself.\n    if (teardown && teardown !== this) {\n      if (this.closed) {\n        // If this subscription is already closed,\n        // execute whatever finalizer is handed to it automatically.\n        execFinalizer(teardown);\n      } else {\n        if (teardown instanceof Subscription) {\n          // We don't add closed subscriptions, and we don't add the same subscription\n          // twice. Subscription unsubscribe is idempotent.\n          if (teardown.closed || teardown._hasParent(this)) {\n            return;\n          }\n          teardown._addParent(this);\n        }\n        (this._finalizers = this._finalizers ?? []).push(teardown);\n      }\n    }\n  }\n\n  /**\n   * Checks to see if a this subscription already has a particular parent.\n   * This will signal that this subscription has already been added to the parent in question.\n   * @param parent the parent to check for\n   */\n  private _hasParent(parent: Subscription) {\n    const { _parentage } = this;\n    return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n  }\n\n  /**\n   * Adds a parent to this subscription so it can be removed from the parent if it\n   * unsubscribes on it's own.\n   *\n   * NOTE: THIS ASSUMES THAT {@link _hasParent} HAS ALREADY BEEN CHECKED.\n   * @param parent The parent subscription to add\n   */\n  private _addParent(parent: Subscription) {\n    const { _parentage } = this;\n    this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n  }\n\n  /**\n   * Called on a child when it is removed via {@link #remove}.\n   * @param parent The parent to remove\n   */\n  private _removeParent(parent: Subscription) {\n    const { _parentage } = this;\n    if (_parentage === parent) {\n      this._parentage = null;\n    } else if (Array.isArray(_parentage)) {\n      arrRemove(_parentage, parent);\n    }\n  }\n\n  /**\n   * Removes a finalizer from this subscription that was previously added with the {@link #add} method.\n   *\n   * Note that `Subscription` instances, when unsubscribed, will automatically remove themselves\n   * from every other `Subscription` they have been added to. This means that using the `remove` method\n   * is not a common thing and should be used thoughtfully.\n   *\n   * If you add the same finalizer instance of a function or an unsubscribable object to a `Subscription` instance\n   * more than once, you will need to call `remove` the same number of times to remove all instances.\n   *\n   * All finalizer instances are removed to free up memory upon unsubscription.\n   *\n   * @param teardown The finalizer to remove from this subscription\n   */\n  remove(teardown: Exclude<TeardownLogic, void>): void {\n    const { _finalizers } = this;\n    _finalizers && arrRemove(_finalizers, teardown);\n\n    if (teardown instanceof Subscription) {\n      teardown._removeParent(this);\n    }\n  }\n}\n\nexport const EMPTY_SUBSCRIPTION = Subscription.EMPTY;\n\nexport function isSubscription(value: any): value is Subscription {\n  return (\n    value instanceof Subscription ||\n    (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe))\n  );\n}\n\nfunction execFinalizer(finalizer: Unsubscribable | (() => void)) {\n  if (isFunction(finalizer)) {\n    finalizer();\n  } else {\n    finalizer.unsubscribe();\n  }\n}\n", "import { Subscriber } from './Subscriber';\nimport { ObservableNotification } from './types';\n\n/**\n * The {@link GlobalConfig} object for RxJS. It is used to configure things\n * like how to react on unhandled errors.\n */\nexport const config: GlobalConfig = {\n  onUnhandledError: null,\n  onStoppedNotification: null,\n  Promise: undefined,\n  useDeprecatedSynchronousErrorHandling: false,\n  useDeprecatedNextContext: false,\n};\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like how to react on unhandled errors. Accessible via {@link config}\n * object.\n */\nexport interface GlobalConfig {\n  /**\n   * A registration point for unhandled errors from RxJS. These are errors that\n   * cannot were not handled by consuming code in the usual subscription path. For\n   * example, if you have this configured, and you subscribe to an observable without\n   * providing an error handler, errors from that subscription will end up here. This\n   * will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onUnhandledError: ((err: any) => void) | null;\n\n  /**\n   * A registration point for notifications that cannot be sent to subscribers because they\n   * have completed, errored or have been explicitly unsubscribed. By default, next, complete\n   * and error notifications sent to stopped subscribers are noops. However, sometimes callers\n   * might want a different behavior. For example, with sources that attempt to report errors\n   * to stopped subscribers, a caller can configure RxJS to throw an unhandled error instead.\n   * This will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onStoppedNotification: ((notification: ObservableNotification<any>, subscriber: Subscriber<any>) => void) | null;\n\n  /**\n   * The promise constructor used by default for {@link Observable#toPromise toPromise} and {@link Observable#forEach forEach}\n   * methods.\n   *\n   * @deprecated As of version 8, RxJS will no longer support this sort of injection of a\n   * Promise constructor. If you need a Promise implementation other than native promises,\n   * please polyfill/patch Promise as you see appropriate. Will be removed in v8.\n   */\n  Promise?: PromiseConstructorLike;\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BUY TIME\n   * FOR MIGRATION REASONS.\n   *\n   * @deprecated As of version 8, RxJS will no longer support synchronous throwing\n   * of unhandled errors. All errors will be thrown on a separate call stack to prevent bad\n   * behaviors described above. Will be removed in v8.\n   */\n  useDeprecatedSynchronousErrorHandling: boolean;\n\n  /**\n   * If true, enables an as-of-yet undocumented feature from v5: The ability to access\n   * `unsubscribe()` via `this` context in `next` functions created in observers passed\n   * to `subscribe`.\n   *\n   * This is being removed because the performance was severely problematic, and it could also cause\n   * issues when types other than POJOs are passed to subscribe as subscribers, as they will likely have\n   * their `this` context overwritten.\n   *\n   * @deprecated As of version 8, RxJS will no longer support altering the\n   * context of next functions provided as part of an observer to Subscribe. Instead,\n   * you will have access to a subscription or a signal or token that will allow you to do things like\n   * unsubscribe and test closed status. Will be removed in v8.\n   */\n  useDeprecatedNextContext: boolean;\n}\n", "import type { TimerHandle } from './timerHandle';\ntype SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearTimeoutFunction = (handle: TimerHandle) => void;\n\ninterface TimeoutProvider {\n  setTimeout: SetTimeoutFunction;\n  clearTimeout: ClearTimeoutFunction;\n  delegate:\n    | {\n        setTimeout: SetTimeoutFunction;\n        clearTimeout: ClearTimeoutFunction;\n      }\n    | undefined;\n}\n\nexport const timeoutProvider: TimeoutProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setTimeout(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = timeoutProvider;\n    if (delegate?.setTimeout) {\n      return delegate.setTimeout(handler, timeout, ...args);\n    }\n    return setTimeout(handler, timeout, ...args);\n  },\n  clearTimeout(handle) {\n    const { delegate } = timeoutProvider;\n    return (delegate?.clearTimeout || clearTimeout)(handle as any);\n  },\n  delegate: undefined,\n};\n", "import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\n\n/**\n * Handles an error on another job either with the user-configured {@link onUnhandledError},\n * or by throwing it on that new job so it can be picked up by `window.onerror`, `process.on('error')`, etc.\n *\n * This should be called whenever there is an error that is out-of-band with the subscription\n * or when an error hits a terminal boundary of the subscription and no error handler was provided.\n *\n * @param err the error to report\n */\nexport function reportUnhandledError(err: any) {\n  timeoutProvider.setTimeout(() => {\n    const { onUnhandledError } = config;\n    if (onUnhandledError) {\n      // Execute the user-configured error handler.\n      onUnhandledError(err);\n    } else {\n      // Throw so it is picked up by the runtime's uncaught error mechanism.\n      throw err;\n    }\n  });\n}\n", "/* tslint:disable:no-empty */\nexport function noop() { }\n", "import { CompleteNotification, NextNotification, ErrorNotification } from './types';\n\n/**\n * A completion object optimized for memory use and created to be the\n * same \"shape\" as other notifications in v8.\n * @internal\n */\nexport const COMPLETE_NOTIFICATION = (() => createNotification('C', undefined, undefined) as CompleteNotification)();\n\n/**\n * Internal use only. Creates an optimized error notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function errorNotification(error: any): ErrorNotification {\n  return createNotification('E', undefined, error) as any;\n}\n\n/**\n * Internal use only. Creates an optimized next notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function nextNotification<T>(value: T) {\n  return createNotification('N', value, undefined) as NextNotification<T>;\n}\n\n/**\n * Ensures that all notifications created internally have the same \"shape\" in v8.\n *\n * TODO: This is only exported to support a crazy legacy test in `groupBy`.\n * @internal\n */\nexport function createNotification(kind: 'N' | 'E' | 'C', value: any, error: any) {\n  return {\n    kind,\n    value,\n    error,\n  };\n}\n", "import { config } from '../config';\n\nlet context: { errorThrown: boolean; error: any } | null = null;\n\n/**\n * Handles dealing with errors for super-gross mode. Creates a context, in which\n * any synchronously thrown errors will be passed to {@link captureError}. Which\n * will record the error such that it will be rethrown after the call back is complete.\n * TODO: Remove in v8\n * @param cb An immediately executed function.\n */\nexport function errorContext(cb: () => void) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    const isRoot = !context;\n    if (isRoot) {\n      context = { errorThrown: false, error: null };\n    }\n    cb();\n    if (isRoot) {\n      const { errorThrown, error } = context!;\n      context = null;\n      if (errorThrown) {\n        throw error;\n      }\n    }\n  } else {\n    // This is the general non-deprecated path for everyone that\n    // isn't crazy enough to use super-gross mode (useDeprecatedSynchronousErrorHandling)\n    cb();\n  }\n}\n\n/**\n * Captures errors only in super-gross mode.\n * @param err the error to capture\n */\nexport function captureError(err: any) {\n  if (config.useDeprecatedSynchronousErrorHandling && context) {\n    context.errorThrown = true;\n    context.error = err;\n  }\n}\n", "import { isFunction } from './util/isFunction';\nimport { Observer, ObservableNotification } from './types';\nimport { isSubscription, Subscription } from './Subscription';\nimport { config } from './config';\nimport { reportUnhandledError } from './util/reportUnhandledError';\nimport { noop } from './util/noop';\nimport { nextNotification, errorNotification, COMPLETE_NOTIFICATION } from './NotificationFactories';\nimport { timeoutProvider } from './scheduler/timeoutProvider';\nimport { captureError } from './util/errorContext';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param next The `next` callback of an Observer.\n   * @param error The `error` callback of an\n   * Observer.\n   * @param complete The `complete` callback of an\n   * Observer.\n   * @return A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   * @deprecated Do not use. Will be removed in v8. There is no replacement for this\n   * method, and there is no reason to be creating instances of `Subscriber` directly.\n   * If you have a specific use case, please file an issue.\n   */\n  static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T> {\n    return new SafeSubscriber(next, error, complete);\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected isStopped: boolean = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected destination: Subscriber<any> | Observer<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * There is no reason to directly create an instance of Subscriber. This type is exported for typings reasons.\n   */\n  constructor(destination?: Subscriber<any> | Observer<any>) {\n    super();\n    if (destination) {\n      this.destination = destination;\n      // Automatically chain subscriptions together here.\n      // if destination is a Subscription, then it is a Subscriber.\n      if (isSubscription(destination)) {\n        destination.add(this);\n      }\n    } else {\n      this.destination = EMPTY_OBSERVER;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (this.isStopped) {\n      handleStoppedNotification(nextNotification(value), this);\n    } else {\n      this._next(value!);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (this.isStopped) {\n      handleStoppedNotification(errorNotification(err), this);\n    } else {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (this.isStopped) {\n      handleStoppedNotification(COMPLETE_NOTIFICATION, this);\n    } else {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (!this.closed) {\n      this.isStopped = true;\n      super.unsubscribe();\n      this.destination = null!;\n    }\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    try {\n      this.destination.error(err);\n    } finally {\n      this.unsubscribe();\n    }\n  }\n\n  protected _complete(): void {\n    try {\n      this.destination.complete();\n    } finally {\n      this.unsubscribe();\n    }\n  }\n}\n\n/**\n * This bind is captured here because we want to be able to have\n * compatibility with monoid libraries that tend to use a method named\n * `bind`. In particular, a library called Monio requires this.\n */\nconst _bind = Function.prototype.bind;\n\nfunction bind<Fn extends (...args: any[]) => any>(fn: Fn, thisArg: any): Fn {\n  return _bind.call(fn, thisArg);\n}\n\n/**\n * Internal optimization only, DO NOT EXPOSE.\n * @internal\n */\nclass ConsumerObserver<T> implements Observer<T> {\n  constructor(private partialObserver: Partial<Observer<T>>) {}\n\n  next(value: T): void {\n    const { partialObserver } = this;\n    if (partialObserver.next) {\n      try {\n        partialObserver.next(value);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n\n  error(err: any): void {\n    const { partialObserver } = this;\n    if (partialObserver.error) {\n      try {\n        partialObserver.error(err);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    } else {\n      handleUnhandledError(err);\n    }\n  }\n\n  complete(): void {\n    const { partialObserver } = this;\n    if (partialObserver.complete) {\n      try {\n        partialObserver.complete();\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n}\n\nexport class SafeSubscriber<T> extends Subscriber<T> {\n  constructor(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((e?: any) => void) | null,\n    complete?: (() => void) | null\n  ) {\n    super();\n\n    let partialObserver: Partial<Observer<T>>;\n    if (isFunction(observerOrNext) || !observerOrNext) {\n      // The first argument is a function, not an observer. The next\n      // two arguments *could* be observers, or they could be empty.\n      partialObserver = {\n        next: (observerOrNext ?? undefined) as (((value: T) => void) | undefined),\n        error: error ?? undefined,\n        complete: complete ?? undefined,\n      };\n    } else {\n      // The first argument is a partial observer.\n      let context: any;\n      if (this && config.useDeprecatedNextContext) {\n        // This is a deprecated path that made `this.unsubscribe()` available in\n        // next handler functions passed to subscribe. This only exists behind a flag\n        // now, as it is *very* slow.\n        context = Object.create(observerOrNext);\n        context.unsubscribe = () => this.unsubscribe();\n        partialObserver = {\n          next: observerOrNext.next && bind(observerOrNext.next, context),\n          error: observerOrNext.error && bind(observerOrNext.error, context),\n          complete: observerOrNext.complete && bind(observerOrNext.complete, context),\n        };\n      } else {\n        // The \"normal\" path. Just use the partial observer directly.\n        partialObserver = observerOrNext;\n      }\n    }\n\n    // Wrap the partial observer to ensure it's a full observer, and\n    // make sure proper error handling is accounted for.\n    this.destination = new ConsumerObserver(partialObserver);\n  }\n}\n\nfunction handleUnhandledError(error: any) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    captureError(error);\n  } else {\n    // Ideal path, we report this as an unhandled error,\n    // which is thrown on a new call stack.\n    reportUnhandledError(error);\n  }\n}\n\n/**\n * An error handler used when no error handler was supplied\n * to the SafeSubscriber -- meaning no error handler was supplied\n * do the `subscribe` call on our observable.\n * @param err The error to handle\n */\nfunction defaultErrorHandler(err: any) {\n  throw err;\n}\n\n/**\n * A handler for notifications that cannot be sent to a stopped subscriber.\n * @param notification The notification being sent\n * @param subscriber The stopped subscriber\n */\nfunction handleStoppedNotification(notification: ObservableNotification<any>, subscriber: Subscriber<any>) {\n  const { onStoppedNotification } = config;\n  onStoppedNotification && timeoutProvider.setTimeout(() => onStoppedNotification(notification, subscriber));\n}\n\n/**\n * The observer used as a stub for subscriptions where the user did not\n * pass any arguments to `subscribe`. Comes with the default error handling\n * behavior.\n */\nexport const EMPTY_OBSERVER: Readonly<Observer<any>> & { closed: true } = {\n  closed: true,\n  next: noop,\n  error: defaultErrorHandler,\n  complete: noop,\n};\n", "/**\n * Symbol.observable or a string \"@@observable\". Used for interop\n *\n * @deprecated We will no longer be exporting this symbol in upcoming versions of RxJS.\n * Instead polyfill and use Symbol.observable directly *or* use https://www.npmjs.com/package/symbol-observable\n */\nexport const observable: string | symbol = (() => (typeof Symbol === 'function' && Symbol.observable) || '@@observable')();\n", "/**\n * This function takes one parameter and just returns it. Simply put,\n * this is like `<T>(x: T): T => x`.\n *\n * ## Examples\n *\n * This is useful in some cases when using things like `mergeMap`\n *\n * ```ts\n * import { interval, take, map, range, mergeMap, identity } from 'rxjs';\n *\n * const source$ = interval(1000).pipe(take(5));\n *\n * const result$ = source$.pipe(\n *   map(i => range(i)),\n *   mergeMap(identity) // same as mergeMap(x => x)\n * );\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * Or when you want to selectively apply an operator\n *\n * ```ts\n * import { interval, take, identity } from 'rxjs';\n *\n * const shouldLimit = () => Math.random() < 0.5;\n *\n * const source$ = interval(1000);\n *\n * const result$ = source$.pipe(shouldLimit() ? take(5) : identity);\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * @param x Any value that is returned by this function\n * @returns The value passed as the first parameter to this function\n */\nexport function identity<T>(x: T): T {\n  return x;\n}\n", "import { identity } from './identity';\nimport { UnaryFunction } from '../types';\n\nexport function pipe(): typeof identity;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>\n): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>\n): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>\n): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>\n): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>\n): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>\n): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>,\n  ...fns: UnaryFunction<any, any>[]\n): UnaryFunction<T, unknown>;\n\n/**\n * pipe() can be called on one or more functions, each of which can take one argument (\"UnaryFunction\")\n * and uses it to return a value.\n * It returns a function that takes one argument, passes it to the first UnaryFunction, and then\n * passes the result to the next one, passes that result to the next one, and so on.  \n */\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (fns.length === 0) {\n    return identity as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n", "import { Operator } from './Operator';\nimport { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription, Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, Subscribable, Observer } from './types';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  source: Observable<any> | undefined;\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  operator: Operator<any, T> | undefined;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new Observable by calling the Observable constructor\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new observable\n   * @nocollapse\n   * @deprecated Use `new Observable()` instead. Will be removed in v8.\n   */\n  static create: (...args: any[]) => any = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  };\n\n  /**\n   * Creates a new Observable, with this Observable instance as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param operator the operator defining the operation to take on the observable\n   * @return a new observable with the Operator applied\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * If you have implemented an operator using `lift`, it is recommended that you create an\n   * operator by simply returning `new Observable()` directly. See \"Creating new operators from\n   * scratch\" section here: https://rxjs.dev/guide/operators\n   */\n  lift<R>(operator?: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observerOrNext?: Partial<Observer<T>> | ((value: T) => void)): Subscription;\n  /** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\n  subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular, do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided and an error happens,\n   * it will be thrown asynchronously. Errors thrown asynchronously cannot be caught using `try`/`catch`. Instead,\n   * use the {@link onUnhandledError} configuration option or use a runtime handler (like `window.onerror` or\n   * `process.on('error)`) to be notified of unhandled errors. Because of this, it's recommended that you provide\n   * an `error` method to avoid missing thrown errors.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of an Observer,\n   * if you do not need to listen for something, you can omit a function by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to the `error` function, as with an Observer, if not provided, errors emitted by an Observable will be thrown asynchronously.\n   *\n   * You can, however, subscribe with no parameters at all. This may be the case where you're not interested in terminal events\n   * and you also handled emissions internally by using operators (e.g. using `tap`).\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * #### Examples\n   *\n   * Subscribe with an {@link guide/observer Observer}\n   *\n   * ```ts\n   * import { of } from 'rxjs';\n   *\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() {\n   *     // We actually could just remove this method,\n   *     // since we do not really care about errors right now.\n   *   },\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   *   .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Subscribe with functions ({@link deprecations/subscribe-arguments deprecated})\n   *\n   * ```ts\n   * import { of } from 'rxjs'\n   *\n   * let sum = 0;\n   *\n   * of(1, 2, 3).subscribe(\n   *   value => {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   () => console.log('Sum equals: ' + sum)\n   * );\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Cancel a subscription\n   *\n   * ```ts\n   * import { interval } from 'rxjs';\n   *\n   * const subscription = interval(1000).subscribe({\n   *   next(num) {\n   *     console.log(num)\n   *   },\n   *   complete() {\n   *     // Will not be called, even when cancelling subscription.\n   *     console.log('completed!');\n   *   }\n   * });\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // 'unsubscribed!' after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   * or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   * Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   * the error will be thrown asynchronously as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {Subscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((error: any) => void) | null,\n    complete?: (() => void) | null\n  ): Subscription {\n    const subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n\n    errorContext(() => {\n      const { operator, source } = this;\n      subscriber.add(\n        operator\n          ? // We're dealing with a subscription in the\n            // operator chain to one of our lifted operators.\n            operator.call(subscriber, source)\n          : source\n          ? // If `source` has a value, but `operator` does not, something that\n            // had intimate knowledge of our API, like our `Subject`, must have\n            // set it. We're going to just call `_subscribe` directly.\n            this._subscribe(subscriber)\n          : // In all other cases, we're likely wrapping a user-provided initializer\n            // function, so we need to catch errors and handle them appropriately.\n            this._trySubscribe(subscriber)\n      );\n    });\n\n    return subscriber;\n  }\n\n  /** @internal */\n  protected _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      // We don't need to return anything in this case,\n      // because it's just going to try to `add()` to a subscription\n      // above.\n      sink.error(err);\n    }\n  }\n\n  /**\n   * Used as a NON-CANCELLABLE means of subscribing to an observable, for use with\n   * APIs that expect promises, like `async/await`. You cannot unsubscribe from this.\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * #### Example\n   *\n   * ```ts\n   * import { interval, take } from 'rxjs';\n   *\n   * const source$ = interval(1000).pipe(take(4));\n   *\n   * async function getTotal() {\n   *   let total = 0;\n   *\n   *   await source$.forEach(value => {\n   *     total += value;\n   *     console.log('observable -> ' + value);\n   *   });\n   *\n   *   return total;\n   * }\n   *\n   * getTotal().then(\n   *   total => console.log('Total: ' + total)\n   * );\n   *\n   * // Expected:\n   * // 'observable -> 0'\n   * // 'observable -> 1'\n   * // 'observable -> 2'\n   * // 'observable -> 3'\n   * // 'Total: 6'\n   * ```\n   *\n   * @param next a handler for each value emitted by the observable\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void): Promise<void>;\n\n  /**\n   * @param next a handler for each value emitted by the observable\n   * @param promiseCtor a constructor function used to instantiate the Promise\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   * @deprecated Passing a Promise constructor will no longer be available\n   * in upcoming versions of RxJS. This is because it adds weight to the library, for very\n   * little benefit. If you need this functionality, it is recommended that you either\n   * polyfill Promise, or you create an adapter to convert the returned native promise\n   * to whatever promise implementation you wanted. Will be removed in v8.\n   */\n  forEach(next: (value: T) => void, promiseCtor: PromiseConstructorLike): Promise<void>;\n\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      const subscriber = new SafeSubscriber<T>({\n        next: (value) => {\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscriber.unsubscribe();\n          }\n        },\n        error: reject,\n        complete: resolve,\n      });\n      this.subscribe(subscriber);\n    }) as Promise<void>;\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    return this.source?.subscribe(subscriber);\n  }\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>\n  ): Observable<D>;\n  pipe<A, B, C, D, E>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>\n  ): Observable<E>;\n  pipe<A, B, C, D, E, F>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>\n  ): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>\n  ): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>\n  ): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>\n  ): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>,\n    ...operations: OperatorFunction<any, any>[]\n  ): Observable<unknown>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ## Example\n   *\n   * ```ts\n   * import { interval, filter, map, scan } from 'rxjs';\n   *\n   * interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x));\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: typeof Promise): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: PromiseConstructorLike): Promise<T | undefined>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Subscribe to this Observable and get a Promise resolving on\n   * `complete` with the last emission (if any).\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * @method toPromise\n   * @param [promiseCtor] a constructor function used to instantiate\n   * the Promise\n   * @return A Promise that resolves with the last value emit, or\n   * rejects on an error. If there were no emissions, Promise\n   * resolves with undefined.\n   * @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise\n   */\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T | undefined> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: T | undefined;\n      this.subscribe(\n        (x: T) => (value = x),\n        (err: any) => reject(err),\n        () => resolve(value)\n      );\n    }) as Promise<T | undefined>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  return promiseCtor ?? config.Promise ?? Promise;\n}\n\nfunction isObserver<T>(value: any): value is Observer<T> {\n  return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\n\nfunction isSubscriber<T>(value: any): value is Subscriber<T> {\n  return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\n}\n", "import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../types';\nimport { isFunction } from './isFunction';\n\n/**\n * Used to determine if an object is an Observable with a lift function.\n */\nexport function hasLift(source: any): source is { lift: InstanceType<typeof Observable>['lift'] } {\n  return isFunction(source?.lift);\n}\n\n/**\n * Creates an `OperatorFunction`. Used to define operators throughout the library in a concise way.\n * @param init The logic to connect the liftedSource to the subscriber at the moment of subscription.\n */\nexport function operate<T, R>(\n  init: (liftedSource: Observable<T>, subscriber: Subscriber<R>) => (() => void) | void\n): OperatorFunction<T, R> {\n  return (source: Observable<T>) => {\n    if (hasLift(source)) {\n      return source.lift(function (this: Subscriber<R>, liftedSource: Observable<T>) {\n        try {\n          return init(liftedSource, this);\n        } catch (err) {\n          this.error(err);\n        }\n      });\n    }\n    throw new TypeError('Unable to lift unknown Observable type');\n  };\n}\n", "import { Subscriber } from '../Subscriber';\n\n/**\n * Creates an instance of an `OperatorSubscriber`.\n * @param destination The downstream subscriber.\n * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n * and send to the `destination` error handler.\n * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n * this handler are sent to the `destination` error handler.\n * @param onFinalize Additional teardown logic here. This will only be called on teardown if the\n * subscriber itself is not already closed. This is called after all other teardown logic is executed.\n */\nexport function createOperatorSubscriber<T>(\n  destination: Subscriber<any>,\n  onNext?: (value: T) => void,\n  onComplete?: () => void,\n  onError?: (err: any) => void,\n  onFinalize?: () => void\n): Subscriber<T> {\n  return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\n}\n\n/**\n * A generic helper for allowing operators to be created with a Subscriber and\n * use closures to capture necessary state from the operator function itself.\n */\nexport class OperatorSubscriber<T> extends Subscriber<T> {\n  /**\n   * Creates an instance of an `OperatorSubscriber`.\n   * @param destination The downstream subscriber.\n   * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n   * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n   * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n   * and send to the `destination` error handler.\n   * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n   * this handler are sent to the `destination` error handler.\n   * @param onFinalize Additional finalization logic here. This will only be called on finalization if the\n   * subscriber itself is not already closed. This is called after all other finalization logic is executed.\n   * @param shouldUnsubscribe An optional check to see if an unsubscribe call should truly unsubscribe.\n   * NOTE: This currently **ONLY** exists to support the strange behavior of {@link groupBy}, where unsubscription\n   * to the resulting observable does not actually disconnect from the source if there are active subscriptions\n   * to any grouped observable. (DO NOT EXPOSE OR USE EXTERNALLY!!!)\n   */\n  constructor(\n    destination: Subscriber<any>,\n    onNext?: (value: T) => void,\n    onComplete?: () => void,\n    onError?: (err: any) => void,\n    private onFinalize?: () => void,\n    private shouldUnsubscribe?: () => boolean\n  ) {\n    // It's important - for performance reasons - that all of this class's\n    // members are initialized and that they are always initialized in the same\n    // order. This will ensure that all OperatorSubscriber instances have the\n    // same hidden class in V8. This, in turn, will help keep the number of\n    // hidden classes involved in property accesses within the base class as\n    // low as possible. If the number of hidden classes involved exceeds four,\n    // the property accesses will become megamorphic and performance penalties\n    // will be incurred - i.e. inline caches won't be used.\n    //\n    // The reasons for ensuring all instances have the same hidden class are\n    // further discussed in this blog post from Benedikt Meurer:\n    // https://benediktmeurer.de/2018/03/23/impact-of-polymorphism-on-component-based-frameworks-like-react/\n    super(destination);\n    this._next = onNext\n      ? function (this: OperatorSubscriber<T>, value: T) {\n          try {\n            onNext(value);\n          } catch (err) {\n            destination.error(err);\n          }\n        }\n      : super._next;\n    this._error = onError\n      ? function (this: OperatorSubscriber<T>, err: any) {\n          try {\n            onError(err);\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure finalization.\n            this.unsubscribe();\n          }\n        }\n      : super._error;\n    this._complete = onComplete\n      ? function (this: OperatorSubscriber<T>) {\n          try {\n            onComplete();\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure finalization.\n            this.unsubscribe();\n          }\n        }\n      : super._complete;\n  }\n\n  unsubscribe() {\n    if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n      const { closed } = this;\n      super.unsubscribe();\n      // Execute additional teardown if we have any and we didn't already do so.\n      !closed && this.onFinalize?.();\n    }\n  }\n}\n", "import { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Make a {@link ConnectableObservable} behave like a ordinary observable and automates the way\n * you can connect to it.\n *\n * Internally it counts the subscriptions to the observable and subscribes (only once) to the source if\n * the number of subscriptions is larger than 0. If the number of subscriptions is smaller than 1, it\n * unsubscribes from the source. This way you can make sure that everything before the *published*\n * refCount has only a single subscription independently of the number of subscribers to the target\n * observable.\n *\n * Note that using the {@link share} operator is exactly the same as using the `multicast(() => new Subject())` operator\n * (making the observable hot) and the *refCount* operator in a sequence.\n *\n * ![](refCount.png)\n *\n * ## Example\n *\n * In the following example there are two intervals turned into connectable observables\n * by using the *publish* operator. The first one uses the *refCount* operator, the\n * second one does not use it. You will notice that a connectable observable does nothing\n * until you call its connect function.\n *\n * ```ts\n * import { interval, tap, publish, refCount } from 'rxjs';\n *\n * // Turn the interval observable into a ConnectableObservable (hot)\n * const refCountInterval = interval(400).pipe(\n *   tap(num => console.log(`refCount ${ num }`)),\n *   publish(),\n *   refCount()\n * );\n *\n * const publishedInterval = interval(400).pipe(\n *   tap(num => console.log(`publish ${ num }`)),\n *   publish()\n * );\n *\n * refCountInterval.subscribe();\n * refCountInterval.subscribe();\n * // 'refCount 0' -----> 'refCount 1' -----> etc\n * // All subscriptions will receive the same value and the tap (and\n * // every other operator) before the `publish` operator will be executed\n * // only once per event independently of the number of subscriptions.\n *\n * publishedInterval.subscribe();\n * // Nothing happens until you call .connect() on the observable.\n * ```\n *\n * @return A function that returns an Observable that automates the connection\n * to ConnectableObservable.\n * @see {@link ConnectableObservable}\n * @see {@link share}\n * @see {@link publish}\n * @deprecated Replaced with the {@link share} operator. How `share` is used\n * will depend on the connectable observable you created just prior to the\n * `refCount` operator.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function refCount<T>(): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let connection: Subscription | null = null;\n\n    (source as any)._refCount++;\n\n    const refCounter = createOperatorSubscriber(subscriber, undefined, undefined, undefined, () => {\n      if (!source || (source as any)._refCount <= 0 || 0 < --(source as any)._refCount) {\n        connection = null;\n        return;\n      }\n\n      ///\n      // Compare the local RefCountSubscriber's connection Subscription to the\n      // connection Subscription on the shared ConnectableObservable. In cases\n      // where the ConnectableObservable source synchronously emits values, and\n      // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n      // execution continues to here before the RefCountOperator has a chance to\n      // supply the RefCountSubscriber with the shared connection Subscription.\n      // For example:\n      // ```\n      // range(0, 10).pipe(\n      //   publish(),\n      //   refCount(),\n      //   take(5),\n      // )\n      // .subscribe();\n      // ```\n      // In order to account for this case, RefCountSubscriber should only dispose\n      // the ConnectableObservable's shared connection Subscription if the\n      // connection Subscription exists, *and* either:\n      //   a. RefCountSubscriber doesn't have a reference to the shared connection\n      //      Subscription yet, or,\n      //   b. RefCountSubscriber's connection Subscription reference is identical\n      //      to the shared connection Subscription\n      ///\n\n      const sharedConnection = (source as any)._connection;\n      const conn = connection;\n      connection = null;\n\n      if (sharedConnection && (!conn || sharedConnection === conn)) {\n        sharedConnection.unsubscribe();\n      }\n\n      subscriber.unsubscribe();\n    });\n\n    source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      connection = (source as ConnectableObservable<T>).connect();\n    }\n  });\n}\n", "import { Subject } from '../Subject';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { hasLift } from '../util/lift';\n\n/**\n * @class ConnectableObservable<T>\n * @deprecated Will be removed in v8. Use {@link connectable} to create a connectable observable.\n * If you are using the `refCount` method of `ConnectableObservable`, use the {@link share} operator\n * instead.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport class ConnectableObservable<T> extends Observable<T> {\n  protected _subject: Subject<T> | null = null;\n  protected _refCount: number = 0;\n  protected _connection: Subscription | null = null;\n\n  /**\n   * @param source The source observable\n   * @param subjectFactory The factory that creates the subject used internally.\n   * @deprecated Will be removed in v8. Use {@link connectable} to create a connectable observable.\n   * `new ConnectableObservable(source, factory)` is equivalent to\n   * `connectable(source, { connector: factory })`.\n   * When the `refCount()` method is needed, the {@link share} operator should be used instead:\n   * `new ConnectableObservable(source, factory).refCount()` is equivalent to\n   * `source.pipe(share({ connector: factory }))`.\n   * Details: https://rxjs.dev/deprecations/multicasting\n   */\n  constructor(public source: Observable<T>, protected subjectFactory: () => Subject<T>) {\n    super();\n    // If we have lift, monkey patch that here. This is done so custom observable\n    // types will compose through multicast. Otherwise the resulting observable would\n    // simply be an instance of `ConnectableObservable`.\n    if (hasLift(source)) {\n      this.lift = source.lift;\n    }\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>) {\n    return this.getSubject().subscribe(subscriber);\n  }\n\n  protected getSubject(): Subject<T> {\n    const subject = this._subject;\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n    return this._subject!;\n  }\n\n  protected _teardown() {\n    this._refCount = 0;\n    const { _connection } = this;\n    this._subject = this._connection = null;\n    _connection?.unsubscribe();\n  }\n\n  /**\n   * @deprecated {@link ConnectableObservable} will be removed in v8. Use {@link connectable} instead.\n   * Details: https://rxjs.dev/deprecations/multicasting\n   */\n  connect(): Subscription {\n    let connection = this._connection;\n    if (!connection) {\n      connection = this._connection = new Subscription();\n      const subject = this.getSubject();\n      connection.add(\n        this.source.subscribe(\n          createOperatorSubscriber(\n            subject as any,\n            undefined,\n            () => {\n              this._teardown();\n              subject.complete();\n            },\n            (err) => {\n              this._teardown();\n              subject.error(err);\n            },\n            () => this._teardown()\n          )\n        )\n      );\n\n      if (connection.closed) {\n        this._connection = null;\n        connection = Subscription.EMPTY;\n      }\n    }\n    return connection;\n  }\n\n  /**\n   * @deprecated {@link ConnectableObservable} will be removed in v8. Use the {@link share} operator instead.\n   * Details: https://rxjs.dev/deprecations/multicasting\n   */\n  refCount(): Observable<T> {\n    return higherOrderRefCount()(this) as Observable<T>;\n  }\n}\n", "import { TimestampProvider } from '../types';\n\ninterface PerformanceTimestampProvider extends TimestampProvider {\n  delegate: TimestampProvider | undefined;\n}\n\nexport const performanceTimestampProvider: PerformanceTimestampProvider = {\n  now() {\n    // Use the variable rather than `this` so that the function can be called\n    // without being bound to the provider.\n    return (performanceTimestampProvider.delegate || performance).now();\n  },\n  delegate: undefined,\n};\n", "import { Subscription } from '../Subscription';\n\ninterface AnimationFrameProvider {\n  schedule(callback: FrameRequestCallback): Subscription;\n  requestAnimationFrame: typeof requestAnimationFrame;\n  cancelAnimationFrame: typeof cancelAnimationFrame;\n  delegate:\n    | {\n        requestAnimationFrame: typeof requestAnimationFrame;\n        cancelAnimationFrame: typeof cancelAnimationFrame;\n      }\n    | undefined;\n}\n\nexport const animationFrameProvider: AnimationFrameProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  schedule(callback) {\n    let request = requestAnimationFrame;\n    let cancel: typeof cancelAnimationFrame | undefined = cancelAnimationFrame;\n    const { delegate } = animationFrameProvider;\n    if (delegate) {\n      request = delegate.requestAnimationFrame;\n      cancel = delegate.cancelAnimationFrame;\n    }\n    const handle = request((timestamp) => {\n      // Clear the cancel function. The request has been fulfilled, so\n      // attempting to cancel the request upon unsubscription would be\n      // pointless.\n      cancel = undefined;\n      callback(timestamp);\n    });\n    return new Subscription(() => cancel?.(handle));\n  },\n  requestAnimationFrame(...args) {\n    const { delegate } = animationFrameProvider;\n    return (delegate?.requestAnimationFrame || requestAnimationFrame)(...args);\n  },\n  cancelAnimationFrame(...args) {\n    const { delegate } = animationFrameProvider;\n    return (delegate?.cancelAnimationFrame || cancelAnimationFrame)(...args);\n  },\n  delegate: undefined,\n};\n", "import { Observable } from '../../Observable';\nimport { TimestampProvider } from '../../types';\nimport { performanceTimestampProvider } from '../../scheduler/performanceTimestampProvider';\nimport { animationFrameProvider } from '../../scheduler/animationFrameProvider';\n\n/**\n * An observable of animation frames\n *\n * Emits the amount of time elapsed since subscription and the timestamp on each animation frame.\n * Defaults to milliseconds provided to the requestAnimationFrame's callback. Does not end on its own.\n *\n * Every subscription will start a separate animation loop. Since animation frames are always scheduled\n * by the browser to occur directly before a repaint, scheduling more than one animation frame synchronously\n * should not be much different or have more overhead than looping over an array of events during\n * a single animation frame. However, if for some reason the developer would like to ensure the\n * execution of animation-related handlers are all executed during the same task by the engine,\n * the `share` operator can be used.\n *\n * This is useful for setting up animations with RxJS.\n *\n * ## Examples\n *\n * Tweening a div to move it on the screen\n *\n * ```ts\n * import { animationFrames, map, takeWhile, endWith } from 'rxjs';\n *\n * function tween(start: number, end: number, duration: number) {\n *   const diff = end - start;\n *   return animationFrames().pipe(\n *     // Figure out what percentage of time has passed\n *     map(({ elapsed }) => elapsed / duration),\n *     // Take the vector while less than 100%\n *     takeWhile(v => v < 1),\n *     // Finish with 100%\n *     endWith(1),\n *     // Calculate the distance traveled between start and end\n *     map(v => v * diff + start)\n *   );\n * }\n *\n * // Setup a div for us to move around\n * const div = document.createElement('div');\n * document.body.appendChild(div);\n * div.style.position = 'absolute';\n * div.style.width = '40px';\n * div.style.height = '40px';\n * div.style.backgroundColor = 'lime';\n * div.style.transform = 'translate3d(10px, 0, 0)';\n *\n * tween(10, 200, 4000).subscribe(x => {\n *   div.style.transform = `translate3d(${ x }px, 0, 0)`;\n * });\n * ```\n *\n * Providing a custom timestamp provider\n *\n * ```ts\n * import { animationFrames, TimestampProvider } from 'rxjs';\n *\n * // A custom timestamp provider\n * let now = 0;\n * const customTSProvider: TimestampProvider = {\n *   now() { return now++; }\n * };\n *\n * const source$ = animationFrames(customTSProvider);\n *\n * // Log increasing numbers 0...1...2... on every animation frame.\n * source$.subscribe(({ elapsed }) => console.log(elapsed));\n * ```\n *\n * @param timestampProvider An object with a `now` method that provides a numeric timestamp\n */\nexport function animationFrames(timestampProvider?: TimestampProvider) {\n  return timestampProvider ? animationFramesFactory(timestampProvider) : DEFAULT_ANIMATION_FRAMES;\n}\n\n/**\n * Does the work of creating the observable for `animationFrames`.\n * @param timestampProvider The timestamp provider to use to create the observable\n */\nfunction animationFramesFactory(timestampProvider?: TimestampProvider) {\n  return new Observable<{ timestamp: number; elapsed: number }>((subscriber) => {\n    // If no timestamp provider is specified, use performance.now() - as it\n    // will return timestamps 'compatible' with those passed to the run\n    // callback and won't be affected by NTP adjustments, etc.\n    const provider = timestampProvider || performanceTimestampProvider;\n\n    // Capture the start time upon subscription, as the run callback can remain\n    // queued for a considerable period of time and the elapsed time should\n    // represent the time elapsed since subscription - not the time since the\n    // first rendered animation frame.\n    const start = provider.now();\n\n    let id = 0;\n    const run = () => {\n      if (!subscriber.closed) {\n        id = animationFrameProvider.requestAnimationFrame((timestamp: DOMHighResTimeStamp | number) => {\n          id = 0;\n          // Use the provider's timestamp to calculate the elapsed time. Note that\n          // this means - if the caller hasn't passed a provider - that\n          // performance.now() will be used instead of the timestamp that was\n          // passed to the run callback. The reason for this is that the timestamp\n          // passed to the callback can be earlier than the start time, as it\n          // represents the time at which the browser decided it would render any\n          // queued frames - and that time can be earlier the captured start time.\n          const now = provider.now();\n          subscriber.next({\n            timestamp: timestampProvider ? now : timestamp,\n            elapsed: now - start,\n          });\n          run();\n        });\n      }\n    };\n\n    run();\n\n    return () => {\n      if (id) {\n        animationFrameProvider.cancelAnimationFrame(id);\n      }\n    };\n  });\n}\n\n/**\n * In the common case, where the timestamp provided by the rAF API is used,\n * we use this shared observable to reduce overhead.\n */\nconst DEFAULT_ANIMATION_FRAMES = animationFramesFactory();\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface ObjectUnsubscribedError extends Error {}\n\nexport interface ObjectUnsubscribedErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): ObjectUnsubscribedError;\n}\n\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = createErrorClass(\n  (_super) =>\n    function ObjectUnsubscribedErrorImpl(this: any) {\n      _super(this);\n      this.name = 'ObjectUnsubscribedError';\n      this.message = 'object unsubscribed';\n    }\n);\n", "import { Operator } from './Operator';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A Subject is a special type of Observable that allows values to be\n * multicasted to many Observers. Subjects are like EventEmitters.\n *\n * Every Subject is an Observable and an Observer. You can subscribe to a\n * Subject, and you can call next to feed values as well as error and complete.\n */\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\n  closed = false;\n\n  private currentObservers: Observer<T>[] | null = null;\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  observers: Observer<T>[] = [];\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  isStopped = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  hasError = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  thrownError: any = null;\n\n  /**\n   * Creates a \"subject\" by basically gluing an observer to an observable.\n   *\n   * @nocollapse\n   * @deprecated Recommended you do not use. Will be removed at some point in the future. Plans for replacement still under discussion.\n   */\n  static create: (...args: any[]) => any = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  };\n\n  constructor() {\n    // NOTE: This must be here to obscure Observable's constructor.\n    super();\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = operator as any;\n    return subject as any;\n  }\n\n  /** @internal */\n  protected _throwIfClosed() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n  }\n\n  next(value: T) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        if (!this.currentObservers) {\n          this.currentObservers = Array.from(this.observers);\n        }\n        for (const observer of this.currentObservers) {\n          observer.next(value);\n        }\n      }\n    });\n  }\n\n  error(err: any) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.hasError = this.isStopped = true;\n        this.thrownError = err;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.error(err);\n        }\n      }\n    });\n  }\n\n  complete() {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.isStopped = true;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.complete();\n        }\n      }\n    });\n  }\n\n  unsubscribe() {\n    this.isStopped = this.closed = true;\n    this.observers = this.currentObservers = null!;\n  }\n\n  get observed() {\n    return this.observers?.length > 0;\n  }\n\n  /** @internal */\n  protected _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    this._throwIfClosed();\n    return super._trySubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    this._throwIfClosed();\n    this._checkFinalizedStatuses(subscriber);\n    return this._innerSubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _innerSubscribe(subscriber: Subscriber<any>) {\n    const { hasError, isStopped, observers } = this;\n    if (hasError || isStopped) {\n      return EMPTY_SUBSCRIPTION;\n    }\n    this.currentObservers = null;\n    observers.push(subscriber);\n    return new Subscription(() => {\n      this.currentObservers = null;\n      arrRemove(observers, subscriber);\n    });\n  }\n\n  /** @internal */\n  protected _checkFinalizedStatuses(subscriber: Subscriber<any>) {\n    const { hasError, thrownError, isStopped } = this;\n    if (hasError) {\n      subscriber.error(thrownError);\n    } else if (isStopped) {\n      subscriber.complete();\n    }\n  }\n\n  /**\n   * Creates a new Observable with this Subject as the source. You can do this\n   * to create custom Observer-side logic of the Subject and conceal it from\n   * code that uses the Observable.\n   * @return {Observable} Observable that the Subject casts to\n   */\n  asObservable(): Observable<T> {\n    const observable: any = new Observable<T>();\n    observable.source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(\n    /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n    public destination?: Observer<T>,\n    source?: Observable<T>\n  ) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    this.destination?.next?.(value);\n  }\n\n  error(err: any) {\n    this.destination?.error?.(err);\n  }\n\n  complete() {\n    this.destination?.complete?.();\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    return this.source?.subscribe(subscriber) ?? EMPTY_SUBSCRIPTION;\n  }\n}\n", "import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\n\n/**\n * A variant of Subject that requires an initial value and emits its current\n * value whenever it is subscribed to.\n *\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    !subscription.closed && subscriber.next(this._value);\n    return subscription;\n  }\n\n  getValue(): T {\n    const { hasError, thrownError, _value } = this;\n    if (hasError) {\n      throw thrownError;\n    }\n    this._throwIfClosed();\n    return _value;\n  }\n\n  next(value: T): void {\n    super.next((this._value = value));\n  }\n}\n", "import { TimestampProvider } from '../types';\n\ninterface DateTimestampProvider extends TimestampProvider {\n  delegate: TimestampProvider | undefined;\n}\n\nexport const dateTimestampProvider: DateTimestampProvider = {\n  now() {\n    // Use the variable rather than `this` so that the function can be called\n    // without being bound to the provider.\n    return (dateTimestampProvider.delegate || Date).now();\n  },\n  delegate: undefined,\n};\n", "import { Subject } from './Subject';\nimport { TimestampProvider } from './types';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\n\n/**\n * A variant of {@link Subject} that \"replays\" old values to new subscribers by emitting them when they first subscribe.\n *\n * `ReplaySubject` has an internal buffer that will store a specified number of values that it has observed. Like `Subject`,\n * `ReplaySubject` \"observes\" values by having them passed to its `next` method. When it observes a value, it will store that\n * value for a time determined by the configuration of the `ReplaySubject`, as passed to its constructor.\n *\n * When a new subscriber subscribes to the `ReplaySubject` instance, it will synchronously emit all values in its buffer in\n * a First-In-First-Out (FIFO) manner. The `ReplaySubject` will also complete, if it has observed completion; and it will\n * error if it has observed an error.\n *\n * There are two main configuration items to be concerned with:\n *\n * 1. `bufferSize` - This will determine how many items are stored in the buffer, defaults to infinite.\n * 2. `windowTime` - The amount of time to hold a value in the buffer before removing it from the buffer.\n *\n * Both configurations may exist simultaneously. So if you would like to buffer a maximum of 3 values, as long as the values\n * are less than 2 seconds old, you could do so with a `new ReplaySubject(3, 2000)`.\n *\n * ### Differences with BehaviorSubject\n *\n * `BehaviorSubject` is similar to `new ReplaySubject(1)`, with a couple of exceptions:\n *\n * 1. `BehaviorSubject` comes \"primed\" with a single value upon construction.\n * 2. `ReplaySubject` will replay values, even after observing an error, where `BehaviorSubject` will not.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n * @see {@link shareReplay}\n */\nexport class ReplaySubject<T> extends Subject<T> {\n  private _buffer: (T | number)[] = [];\n  private _infiniteTimeWindow = true;\n\n  /**\n   * @param bufferSize The size of the buffer to replay on subscription\n   * @param windowTime The amount of time the buffered items will stay buffered\n   * @param timestampProvider An object with a `now()` method that provides the current timestamp. This is used to\n   * calculate the amount of time something has been buffered.\n   */\n  constructor(\n    private _bufferSize = Infinity,\n    private _windowTime = Infinity,\n    private _timestampProvider: TimestampProvider = dateTimestampProvider\n  ) {\n    super();\n    this._infiniteTimeWindow = _windowTime === Infinity;\n    this._bufferSize = Math.max(1, _bufferSize);\n    this._windowTime = Math.max(1, _windowTime);\n  }\n\n  next(value: T): void {\n    const { isStopped, _buffer, _infiniteTimeWindow, _timestampProvider, _windowTime } = this;\n    if (!isStopped) {\n      _buffer.push(value);\n      !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\n    }\n    this._trimBuffer();\n    super.next(value);\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    this._throwIfClosed();\n    this._trimBuffer();\n\n    const subscription = this._innerSubscribe(subscriber);\n\n    const { _infiniteTimeWindow, _buffer } = this;\n    // We use a copy here, so reentrant code does not mutate our array while we're\n    // emitting it to a new subscriber.\n    const copy = _buffer.slice();\n    for (let i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {\n      subscriber.next(copy[i] as T);\n    }\n\n    this._checkFinalizedStatuses(subscriber);\n\n    return subscription;\n  }\n\n  private _trimBuffer() {\n    const { _bufferSize, _timestampProvider, _buffer, _infiniteTimeWindow } = this;\n    // If we don't have an infinite buffer size, and we're over the length,\n    // use splice to truncate the old buffer values off. Note that we have to\n    // double the size for instances where we're not using an infinite time window\n    // because we're storing the values and the timestamps in the same array.\n    const adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\n    _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\n\n    // Now, if we're not in an infinite time window, remove all values where the time is\n    // older than what is allowed.\n    if (!_infiniteTimeWindow) {\n      const now = _timestampProvider.now();\n      let last = 0;\n      // Search the array for the first timestamp that isn't expired and\n      // truncate the buffer up to that point.\n      for (let i = 1; i < _buffer.length && (_buffer[i] as number) <= now; i += 2) {\n        last = i;\n      }\n      last && _buffer.splice(0, last + 1);\n    }\n  }\n}\n", "import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\n\n/**\n * A variant of Subject that only emits a value when it completes. It will emit\n * its latest value to all its observers on completion.\n *\n * @class AsyncSubject<T>\n */\nexport class AsyncSubject<T> extends Subject<T> {\n  private _value: T | null = null;\n  private _hasValue = false;\n  private _isComplete = false;\n\n  /** @internal */\n  protected _checkFinalizedStatuses(subscriber: Subscriber<T>) {\n    const { hasError, _hasValue, _value, thrownError, isStopped, _isComplete } = this;\n    if (hasError) {\n      subscriber.error(thrownError);\n    } else if (isStopped || _isComplete) {\n      _hasValue && subscriber.next(_value!);\n      subscriber.complete();\n    }\n  }\n\n  next(value: T): void {\n    if (!this.isStopped) {\n      this._value = value;\n      this._hasValue = true;\n    }\n  }\n\n  complete(): void {\n    const { _hasValue, _value, _isComplete } = this;\n    if (!_isComplete) {\n      this._isComplete = true;\n      _hasValue && super.next(_value!);\n      super.complete();\n    }\n  }\n}\n", "import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\nimport { SchedulerAction } from '../types';\n\n/**\n * A unit of work to be executed in a `scheduler`. An action is typically\n * created from within a {@link SchedulerLike} and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: SchedulerAction<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent {@link SchedulerLike} for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n", "import type { TimerHandle } from './timerHandle';\ntype SetIntervalFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearIntervalFunction = (handle: TimerHandle) => void;\n\ninterface IntervalProvider {\n  setInterval: SetIntervalFunction;\n  clearInterval: ClearIntervalFunction;\n  delegate:\n    | {\n        setInterval: SetIntervalFunction;\n        clearInterval: ClearIntervalFunction;\n      }\n    | undefined;\n}\n\nexport const intervalProvider: IntervalProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setInterval(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = intervalProvider;\n    if (delegate?.setInterval) {\n      return delegate.setInterval(handler, timeout, ...args);\n    }\n    return setInterval(handler, timeout, ...args);\n  },\n  clearInterval(handle) {\n    const { delegate } = intervalProvider;\n    return (delegate?.clearInterval || clearInterval)(handle as any);\n  },\n  delegate: undefined,\n};\n", "import { Action } from './Action';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { intervalProvider } from './intervalProvider';\nimport { arrRemove } from '../util/arrRemove';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsyncAction<T> extends Action<T> {\n  public id: TimerHandle | undefined;\n  public state?: T;\n  // @ts-ignore: Property has no initializer and is not definitely assigned\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (this.closed) {\n      return this;\n    }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id ?? this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, _id?: TimerHandle, delay: number = 0): TimerHandle {\n    return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(_scheduler: AsyncScheduler, id?: TimerHandle, delay: number | null = 0): TimerHandle | undefined {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay != null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    if (id != null) {\n      intervalProvider.clearInterval(id);\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, _delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      // HACK: Since code elsewhere is relying on the \"truthiness\" of the\n      // return here, we can't have it return \"\" or 0 or false.\n      // TODO: Clean this up when we refactor schedulers mid-version-8 or so.\n      errorValue = e ? e : new Error('Scheduled action threw falsy error');\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      const { id, scheduler } = this;\n      const { actions } = scheduler;\n\n      this.work = this.state = this.scheduler = null!;\n      this.pending = false;\n\n      arrRemove(actions, this);\n      if (id != null) {\n        this.id = this.recycleAsyncId(scheduler, id, null);\n      }\n\n      this.delay = null!;\n      super.unsubscribe();\n    }\n  }\n}\n", "let nextHandle = 1;\n// The promise needs to be created lazily otherwise it won't be patched by Zones\nlet resolved: Promise<any>;\nconst activeHandles: { [key: number]: any } = {};\n\n/**\n * Finds the handle in the list of active handles, and removes it.\n * Returns `true` if found, `false` otherwise. Used both to clear\n * Immediate scheduled tasks, and to identify if a task should be scheduled.\n */\nfunction findAndClearHandle(handle: number): boolean {\n  if (handle in activeHandles) {\n    delete activeHandles[handle];\n    return true;\n  }\n  return false;\n}\n\n/**\n * Helper functions to schedule and unschedule microtasks.\n */\nexport const Immediate = {\n  setImmediate(cb: () => void): number {\n    const handle = nextHandle++;\n    activeHandles[handle] = true;\n    if (!resolved) {\n      resolved = Promise.resolve();\n    }\n    resolved.then(() => findAndClearHandle(handle) && cb());\n    return handle;\n  },\n\n  clearImmediate(handle: number): void {\n    findAndClearHandle(handle);\n  },\n};\n\n/**\n * Used for internal testing purposes only. Do not export from library.\n */\nexport const TestTools = {\n  pending() {\n    return Object.keys(activeHandles).length;\n  }\n};\n", "import { Immediate } from '../util/Immediate';\nimport type { TimerHandle } from './timerHandle';\nconst { setImmediate, clearImmediate } = Immediate;\n\ntype SetImmediateFunction = (handler: () => void, ...args: any[]) => TimerHandle;\ntype ClearImmediateFunction = (handle: TimerHandle) => void;\n\ninterface ImmediateProvider {\n  setImmediate: SetImmediateFunction;\n  clearImmediate: ClearImmediateFunction;\n  delegate:\n    | {\n        setImmediate: SetImmediateFunction;\n        clearImmediate: ClearImmediateFunction;\n      }\n    | undefined;\n}\n\nexport const immediateProvider: ImmediateProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setImmediate(...args) {\n    const { delegate } = immediateProvider;\n    return (delegate?.setImmediate || setImmediate)(...args);\n  },\n  clearImmediate(handle) {\n    const { delegate } = immediateProvider;\n    return (delegate?.clearImmediate || clearImmediate)(handle as any);\n  },\n  delegate: undefined,\n};\n", "import { AsyncAction } from './AsyncAction';\nimport { AsapScheduler } from './AsapScheduler';\nimport { SchedulerAction } from '../types';\nimport { immediateProvider } from './immediateProvider';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsapAction<T> extends AsyncAction<T> {\n  constructor(protected scheduler: AsapScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AsapScheduler, id?: TimerHandle, delay: number = 0): TimerHandle {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If a microtask has already been scheduled, don't schedule another\n    // one. If a microtask hasn't been scheduled yet, schedule one now. Return\n    // the current scheduled microtask id.\n    return scheduler._scheduled || (scheduler._scheduled = immediateProvider.setImmediate(scheduler.flush.bind(scheduler, undefined)));\n  }\n\n  protected recycleAsyncId(scheduler: AsapScheduler, id?: TimerHandle, delay: number = 0): TimerHandle | undefined {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if (delay != null ? delay > 0 : this.delay > 0) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue has no remaining actions with the same async id,\n    // cancel the requested microtask and set the scheduled flag to undefined\n    // so the next AsapAction will request its own.\n    const { actions } = scheduler;\n    if (id != null && actions[actions.length - 1]?.id !== id) {\n      immediateProvider.clearImmediate(id);\n      if (scheduler._scheduled === id) {\n        scheduler._scheduled = undefined;\n      }\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n", "import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\nimport { SchedulerLike, SchedulerAction } from './types';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\n\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an `Action`.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\n * should not be used directly. Rather, create your own class and implement\n * {@link SchedulerLike}. Will be made internal in v8.\n */\nexport class Scheduler implements SchedulerLike {\n  public static now: () => number = dateTimestampProvider.now;\n\n  constructor(private schedulerActionCtor: typeof Action, now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.schedulerActionCtor<T>(this, work).schedule(state, delay);\n  }\n}\n", "import { Scheduler } from '../Scheduler';\nimport { Action } from './Action';\nimport { AsyncAction } from './AsyncAction';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsyncScheduler extends Scheduler {\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   * @internal\n   */\n  public _active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   * @internal\n   */\n  public _scheduled: TimerHandle | undefined;\n\n  constructor(SchedulerAction: typeof Action, now: () => number = Scheduler.now) {\n    super(SchedulerAction, now);\n  }\n\n  public flush(action: AsyncAction<any>): void {\n    const { actions } = this;\n\n    if (this._active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this._active = true;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions.shift()!)); // exhaust the scheduler queue\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions.shift()!)) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n", "import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AsapScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n    this._active = true;\n    // The async id that effects a call to flush is stored in _scheduled.\n    // Before executing an action, it's necessary to check the action's async\n    // id to determine whether it's supposed to be executed in the current\n    // flush.\n    // Previous implementations of this method used a count to determine this,\n    // but that was unsound, as actions that are unsubscribed - i.e. cancelled -\n    // are removed from the actions array and that can shift actions that are\n    // scheduled to be executed in a subsequent flush into positions at which\n    // they are executed within the current flush.\n    const flushId = this._scheduled;\n    this._scheduled = undefined;\n\n    const { actions } = this;\n    let error: any;\n    action = action || actions.shift()!;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions[0]) && action.id === flushId && actions.shift());\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions[0]) && action.id === flushId && actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n", "import { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\n\n/**\n *\n * Asap Scheduler\n *\n * <span class=\"informal\">Perform task as fast as it can be performed asynchronously</span>\n *\n * `asap` scheduler behaves the same as {@link asyncScheduler} scheduler when you use it to delay task\n * in time. If however you set delay to `0`, `asap` will wait for current synchronously executing\n * code to end and then it will try to execute given task as fast as possible.\n *\n * `asap` scheduler will do its best to minimize time between end of currently executing code\n * and start of scheduled task. This makes it best candidate for performing so called \"deferring\".\n * Traditionally this was achieved by calling `setTimeout(deferredTask, 0)`, but that technique involves\n * some (although minimal) unwanted delay.\n *\n * Note that using `asap` scheduler does not necessarily mean that your task will be first to process\n * after currently executing code. In particular, if some task was also scheduled with `asap` before,\n * that task will execute first. That being said, if you need to schedule task asynchronously, but\n * as soon as possible, `asap` scheduler is your best bet.\n *\n * ## Example\n * Compare async and asap scheduler<\n * ```ts\n * import { asapScheduler, asyncScheduler } from 'rxjs';\n *\n * asyncScheduler.schedule(() => console.log('async')); // scheduling 'async' first...\n * asapScheduler.schedule(() => console.log('asap'));\n *\n * // Logs:\n * // \"asap\"\n * // \"async\"\n * // ... but 'asap' goes first!\n * ```\n */\n\nexport const asapScheduler = new AsapScheduler(AsapAction);\n\n/**\n * @deprecated Renamed to {@link asapScheduler}. Will be removed in v8.\n */\nexport const asap = asapScheduler;\n", "import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asapScheduler} scheduler.\n *\n * ## Examples\n * Use async scheduler to delay task\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * const task = () => console.log('it works!');\n *\n * asyncScheduler.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n * ```\n *\n * Use async scheduler to repeat task in intervals\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * asyncScheduler.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n * ```\n */\n\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\n\n/**\n * @deprecated Renamed to {@link asyncScheduler}. Will be removed in v8.\n */\nexport const async = asyncScheduler;\n", "import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { QueueScheduler } from './QueueScheduler';\nimport { SchedulerAction } from '../types';\nimport { TimerHandle } from './timerHandle';\n\nexport class QueueAction<T> extends AsyncAction<T> {\n  constructor(protected scheduler: QueueScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return delay > 0 || this.closed ? super.execute(state, delay) : this._execute(state, delay);\n  }\n\n  protected requestAsyncId(scheduler: QueueScheduler, id?: TimerHandle, delay: number = 0): TimerHandle {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n\n    if ((delay != null && delay > 0) || (delay == null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n\n    // Otherwise flush the scheduler starting with this action.\n    scheduler.flush(this);\n\n    // HACK: In the past, this was returning `void`. However, `void` isn't a valid\n    // `TimerHandle`, and generally the return value here isn't really used. So the\n    // compromise is to return `0` which is both \"falsy\" and a valid `TimerHandle`,\n    // as opposed to refactoring every other instanceo of `requestAsyncId`.\n    return 0;\n  }\n}\n", "import { AsyncScheduler } from './AsyncScheduler';\n\nexport class QueueScheduler extends AsyncScheduler {\n}\n", "import { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link asyncScheduler} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * ## Examples\n * Schedule recursively first, then do something\n * ```ts\n * import { queueScheduler } from 'rxjs';\n *\n * queueScheduler.schedule(() => {\n *   queueScheduler.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n * ```\n *\n * Reschedule itself recursively\n * ```ts\n * import { queueScheduler } from 'rxjs';\n *\n * queueScheduler.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n * ```\n */\n\nexport const queueScheduler = new QueueScheduler(QueueAction);\n\n/**\n * @deprecated Renamed to {@link queueScheduler}. Will be removed in v8.\n */\nexport const queue = queueScheduler;\n", "import { AsyncAction } from './AsyncAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\nimport { SchedulerAction } from '../types';\nimport { animationFrameProvider } from './animationFrameProvider';\nimport { TimerHandle } from './timerHandle';\n\nexport class AnimationFrameAction<T> extends AsyncAction<T> {\n  constructor(protected scheduler: AnimationFrameScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AnimationFrameScheduler, id?: TimerHandle, delay: number = 0): TimerHandle {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If an animation frame has already been requested, don't request another\n    // one. If an animation frame hasn't been requested yet, request one. Return\n    // the current animation frame request id.\n    return scheduler._scheduled || (scheduler._scheduled = animationFrameProvider.requestAnimationFrame(() => scheduler.flush(undefined)));\n  }\n\n  protected recycleAsyncId(scheduler: AnimationFrameScheduler, id?: TimerHandle, delay: number = 0): TimerHandle | undefined {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if (delay != null ? delay > 0 : this.delay > 0) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue has no remaining actions with the same async id,\n    // cancel the requested animation frame and set the scheduled flag to\n    // undefined so the next AnimationFrameAction will request its own.\n    const { actions } = scheduler;\n    if (id != null && actions[actions.length - 1]?.id !== id) {\n      animationFrameProvider.cancelAnimationFrame(id as number);\n      scheduler._scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n", "import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AnimationFrameScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n    this._active = true;\n    // The async id that effects a call to flush is stored in _scheduled.\n    // Before executing an action, it's necessary to check the action's async\n    // id to determine whether it's supposed to be executed in the current\n    // flush.\n    // Previous implementations of this method used a count to determine this,\n    // but that was unsound, as actions that are unsubscribed - i.e. cancelled -\n    // are removed from the actions array and that can shift actions that are\n    // scheduled to be executed in a subsequent flush into positions at which\n    // they are executed within the current flush.\n    const flushId = this._scheduled;\n    this._scheduled = undefined;\n\n    const { actions } = this;\n    let error: any;\n    action = action || actions.shift()!;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions[0]) && action.id === flushId && actions.shift());\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions[0]) && action.id === flushId && actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n", "import { AnimationFrameAction } from './AnimationFrameAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\n\n/**\n *\n * Animation Frame Scheduler\n *\n * <span class=\"informal\">Perform task when `window.requestAnimationFrame` would fire</span>\n *\n * When `animationFrame` scheduler is used with delay, it will fall back to {@link asyncScheduler} scheduler\n * behaviour.\n *\n * Without delay, `animationFrame` scheduler can be used to create smooth browser animations.\n * It makes sure scheduled task will happen just before next browser content repaint,\n * thus performing animations as efficiently as possible.\n *\n * ## Example\n * Schedule div height animation\n * ```ts\n * // html: <div style=\"background: #0ff;\"></div>\n * import { animationFrameScheduler } from 'rxjs';\n *\n * const div = document.querySelector('div');\n *\n * animationFrameScheduler.schedule(function(height) {\n *   div.style.height = height + \"px\";\n *\n *   this.schedule(height + 1);  // `this` references currently executing Action,\n *                               // which we reschedule with new state\n * }, 0, 0);\n *\n * // You will see a div element growing in height\n * ```\n */\n\nexport const animationFrameScheduler = new AnimationFrameScheduler(AnimationFrameAction);\n\n/**\n * @deprecated Renamed to {@link animationFrameScheduler}. Will be removed in v8.\n */\nexport const animationFrame = animationFrameScheduler;\n", "import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { SchedulerAction } from '../types';\nimport { TimerHandle } from './timerHandle';\n\nexport class VirtualTimeScheduler extends AsyncScheduler {\n  /** @deprecated Not used in VirtualTimeScheduler directly. Will be removed in v8. */\n  static frameTimeFactor = 10;\n\n  /**\n   * The current frame for the state of the virtual scheduler instance. The difference\n   * between two \"frames\" is synonymous with the passage of \"virtual time units\". So if\n   * you record `scheduler.frame` to be `1`, then later, observe `scheduler.frame` to be at `11`,\n   * that means `10` virtual time units have passed.\n   */\n  public frame: number = 0;\n\n  /**\n   * Used internally to examine the current virtual action index being processed.\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  public index: number = -1;\n\n  /**\n   * This creates an instance of a `VirtualTimeScheduler`. Experts only. The signature of\n   * this constructor is likely to change in the long run.\n   *\n   * @param schedulerActionCtor The type of Action to initialize when initializing actions during scheduling.\n   * @param maxFrames The maximum number of frames to process before stopping. Used to prevent endless flush cycles.\n   */\n  constructor(schedulerActionCtor: typeof AsyncAction = VirtualAction as any, public maxFrames: number = Infinity) {\n    super(schedulerActionCtor, () => this.frame);\n  }\n\n  /**\n   * Prompt the Scheduler to execute all of its queued actions, therefore\n   * clearing its queue.\n   * @return {void}\n   */\n  public flush(): void {\n    const { actions, maxFrames } = this;\n    let error: any;\n    let action: AsyncAction<any> | undefined;\n\n    while ((action = actions[0]) && action.delay <= maxFrames) {\n      actions.shift();\n      this.frame = action.delay;\n\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    }\n\n    if (error) {\n      while ((action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n\nexport class VirtualAction<T> extends AsyncAction<T> {\n  protected active: boolean = true;\n\n  constructor(\n    protected scheduler: VirtualTimeScheduler,\n    protected work: (this: SchedulerAction<T>, state?: T) => void,\n    protected index: number = (scheduler.index += 1)\n  ) {\n    super(scheduler, work);\n    this.index = scheduler.index = index;\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (Number.isFinite(delay)) {\n      if (!this.id) {\n        return super.schedule(state, delay);\n      }\n      this.active = false;\n      // If an action is rescheduled, we save allocations by mutating its state,\n      // pushing it to the end of the scheduler queue, and recycling the action.\n      // But since the VirtualTimeScheduler is used for testing, VirtualActions\n      // must be immutable so they can be inspected later.\n      const action = new VirtualAction(this.scheduler, this.work);\n      this.add(action);\n      return action.schedule(state, delay);\n    } else {\n      // If someone schedules something with Infinity, it'll never happen. So we\n      // don't even schedule it.\n      return Subscription.EMPTY;\n    }\n  }\n\n  protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): TimerHandle {\n    this.delay = scheduler.frame + delay;\n    const { actions } = scheduler;\n    actions.push(this);\n    (actions as Array<VirtualAction<T>>).sort(VirtualAction.sortActions);\n    return 1;\n  }\n\n  protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): TimerHandle | undefined {\n    return undefined;\n  }\n\n  protected _execute(state: T, delay: number): any {\n    if (this.active === true) {\n      return super._execute(state, delay);\n    }\n  }\n\n  private static sortActions<T>(a: VirtualAction<T>, b: VirtualAction<T>) {\n    if (a.delay === b.delay) {\n      if (a.index === b.index) {\n        return 0;\n      } else if (a.index > b.index) {\n        return 1;\n      } else {\n        return -1;\n      }\n    } else if (a.delay > b.delay) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n}\n", "import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\n/**\n * A simple Observable that emits no items to the Observer and immediately\n * emits a complete notification.\n *\n * <span class=\"informal\">Just emits 'complete', and nothing else.</span>\n *\n * ![](empty.png)\n *\n * A simple Observable that only emits the complete notification. It can be used\n * for composing with other Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n *\n * Log complete notification\n *\n * ```ts\n * import { EMPTY } from 'rxjs';\n *\n * EMPTY.subscribe({\n *   next: () => console.log('Next'),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Outputs\n * // Complete!\n * ```\n *\n * Emit the number 7, then complete\n *\n * ```ts\n * import { EMPTY, startWith } from 'rxjs';\n *\n * const result = EMPTY.pipe(startWith(7));\n * result.subscribe(x => console.log(x));\n *\n * // Outputs\n * // 7\n * ```\n *\n * Map and flatten only odd numbers to the sequence `'a'`, `'b'`, `'c'`\n *\n * ```ts\n * import { interval, mergeMap, of, EMPTY } from 'rxjs';\n *\n * const interval$ = interval(1000);\n * const result = interval$.pipe(\n *   mergeMap(x => x % 2 === 1 ? of('a', 'b', 'c') : EMPTY),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following to the console:\n * // x is equal to the count on the interval, e.g. (0, 1, 2, 3, ...)\n * // x will occur every 1000ms\n * // if x % 2 is equal to 1, print a, b, c (each on its own)\n * // if x % 2 is not equal to 1, nothing will be output\n * ```\n *\n * @see {@link Observable}\n * @see {@link NEVER}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const EMPTY = new Observable<never>((subscriber) => subscriber.complete());\n\n/**\n * @param scheduler A {@link SchedulerLike} to use for scheduling\n * the emission of the complete notification.\n * @deprecated Replaced with the {@link EMPTY} constant or {@link scheduled} (e.g. `scheduled([], scheduler)`). Will be removed in v8.\n */\nexport function empty(scheduler?: SchedulerLike) {\n  return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\n\nfunction emptyScheduled(scheduler: SchedulerLike) {\n  return new Observable<never>((subscriber) => scheduler.schedule(() => subscriber.complete()));\n}\n", "import { SchedulerLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport function isScheduler(value: any): value is SchedulerLike {\n  return value && isFunction(value.schedule);\n}\n", "import { SchedulerLike } from '../types';\nimport { isFunction } from './isFunction';\nimport { isScheduler } from './isScheduler';\n\nfunction last<T>(arr: T[]): T | undefined {\n  return arr[arr.length - 1];\n}\n\nexport function popResultSelector(args: any[]): ((...args: unknown[]) => unknown) | undefined {\n  return isFunction(last(args)) ? args.pop() : undefined;\n}\n\nexport function popScheduler(args: any[]): SchedulerLike | undefined {\n  return isScheduler(last(args)) ? args.pop() : undefined;\n}\n\nexport function popNumber(args: any[], defaultValue: number): number {\n  return typeof last(args) === 'number' ? args.pop()! : defaultValue;\n}\n", "export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number' && typeof x !== 'function');", "import { isFunction } from \"./isFunction\";\n\n/**\n * Tests to see if the object is \"thennable\".\n * @param value the object to test\n */\nexport function isPromise(value: any): value is PromiseLike<any> {\n  return isFunction(value?.then);\n}\n", "import { InteropObservable } from '../types';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isInteropObservable(input: any): input is InteropObservable<any> {\n  return isFunction(input[Symbol_observable]);\n}\n", "import { isFunction } from './isFunction';\n\nexport function isAsyncIterable<T>(obj: any): obj is AsyncIterable<T> {\n  return Symbol.asyncIterator && isFunction(obj?.[Symbol.asyncIterator]);\n}\n", "/**\n * Creates the TypeError to throw if an invalid object is passed to `from` or `scheduled`.\n * @param input The object that was passed.\n */\nexport function createInvalidObservableTypeError(input: any) {\n  // TODO: We should create error codes that can be looked up, so this can be less verbose.\n  return new TypeError(\n    `You provided ${\n      input !== null && typeof input === 'object' ? 'an invalid object' : `'${input}'`\n    } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`\n  );\n}\n", "export function getSymbolIterator(): symbol {\n  if (typeof Symbol !== 'function' || !Symbol.iterator) {\n    return '@@iterator' as any;\n  }\n\n  return Symbol.iterator;\n}\n\nexport const iterator = getSymbolIterator();\n", "import { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being an Iterable */\nexport function isIterable(input: any): input is Iterable<any> {\n  return isFunction(input?.[Symbol_iterator]);\n}\n", "import { ReadableStreamLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport async function* readableStreamLikeToAsyncGenerator<T>(readableStream: ReadableStreamLike<T>): AsyncGenerator<T> {\n  const reader = readableStream.getReader();\n  try {\n    while (true) {\n      const { value, done } = await reader.read();\n      if (done) {\n        return;\n      }\n      yield value!;\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n\nexport function isReadableStreamLike<T>(obj: any): obj is ReadableStreamLike<T> {\n  // We don't want to use instanceof checks because they would return\n  // false for instances from another Realm, like an <iframe>.\n  return isFunction(obj?.getReader);\n}\n", "import { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { Observable } from '../Observable';\nimport { ObservableInput, ObservedValueOf, ReadableStreamLike } from '../types';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isIterable } from '../util/isIterable';\nimport { isReadableStreamLike, readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nimport { Subscriber } from '../Subscriber';\nimport { isFunction } from '../util/isFunction';\nimport { reportUnhandledError } from '../util/reportUnhandledError';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\nexport function innerFrom<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\nexport function innerFrom<T>(input: ObservableInput<T>): Observable<T> {\n  if (input instanceof Observable) {\n    return input;\n  }\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return fromInteropObservable(input);\n    }\n    if (isArrayLike(input)) {\n      return fromArrayLike(input);\n    }\n    if (isPromise(input)) {\n      return fromPromise(input);\n    }\n    if (isAsyncIterable(input)) {\n      return fromAsyncIterable(input);\n    }\n    if (isIterable(input)) {\n      return fromIterable(input);\n    }\n    if (isReadableStreamLike(input)) {\n      return fromReadableStreamLike(input);\n    }\n  }\n\n  throw createInvalidObservableTypeError(input);\n}\n\n/**\n * Creates an RxJS Observable from an object that implements `Symbol.observable`.\n * @param obj An object that properly implements `Symbol.observable`.\n */\nexport function fromInteropObservable<T>(obj: any) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    const obs = obj[Symbol_observable]();\n    if (isFunction(obs.subscribe)) {\n      return obs.subscribe(subscriber);\n    }\n    // Should be caught by observable subscribe function error handling.\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  });\n}\n\n/**\n * Synchronously emits the values of an array like and completes.\n * This is exported because there are creation functions and operators that need to\n * make direct use of the same logic, and there's no reason to make them run through\n * `from` conditionals because we *know* they're dealing with an array.\n * @param array The array to emit values from\n */\nexport function fromArrayLike<T>(array: ArrayLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    // Loop over the array and emit each value. Note two things here:\n    // 1. We're making sure that the subscriber is not closed on each loop.\n    //    This is so we don't continue looping over a very large array after\n    //    something like a `take`, `takeWhile`, or other synchronous unsubscription\n    //    has already unsubscribed.\n    // 2. In this form, reentrant code can alter that array we're looping over.\n    //    This is a known issue, but considered an edge case. The alternative would\n    //    be to copy the array before executing the loop, but this has\n    //    performance implications.\n    for (let i = 0; i < array.length && !subscriber.closed; i++) {\n      subscriber.next(array[i]);\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromPromise<T>(promise: PromiseLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    promise\n      .then(\n        (value) => {\n          if (!subscriber.closed) {\n            subscriber.next(value);\n            subscriber.complete();\n          }\n        },\n        (err: any) => subscriber.error(err)\n      )\n      .then(null, reportUnhandledError);\n  });\n}\n\nexport function fromIterable<T>(iterable: Iterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    for (const value of iterable) {\n      subscriber.next(value);\n      if (subscriber.closed) {\n        return;\n      }\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromAsyncIterable<T>(asyncIterable: AsyncIterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    process(asyncIterable, subscriber).catch((err) => subscriber.error(err));\n  });\n}\n\nexport function fromReadableStreamLike<T>(readableStream: ReadableStreamLike<T>) {\n  return fromAsyncIterable(readableStreamLikeToAsyncGenerator(readableStream));\n}\n\nasync function process<T>(asyncIterable: AsyncIterable<T>, subscriber: Subscriber<T>) {\n  for await (const value of asyncIterable) {\n    subscriber.next(value);\n    // A side-effect may have closed our subscriber,\n    // check before the next iteration.\n    if (subscriber.closed) {\n      return;\n    }\n  }\n  subscriber.complete();\n}\n", "import { Subscription } from '../Subscription';\nimport { SchedulerAction, SchedulerLike } from '../types';\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay: number,\n  repeat: true\n): void;\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay?: number,\n  repeat?: false\n): Subscription;\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay = 0,\n  repeat = false\n): Subscription | void {\n  const scheduleSubscription = scheduler.schedule(function (this: SchedulerAction<any>) {\n    work();\n    if (repeat) {\n      parentSubscription.add(this.schedule(null, delay));\n    } else {\n      this.unsubscribe();\n    }\n  }, delay);\n\n  parentSubscription.add(scheduleSubscription);\n\n  if (!repeat) {\n    // Because user-land scheduler implementations are unlikely to properly reuse\n    // Actions for repeat scheduling, we can't trust that the returned subscription\n    // will control repeat subscription scenarios. So we're trying to avoid using them\n    // incorrectly within this library.\n    return scheduleSubscription;\n  }\n}\n", "/** @prettier */\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * ## Example\n *\n * Ensure values in subscribe are called just before browser repaint\n *\n * ```ts\n * import { interval, observeOn, animationFrameScheduler } from 'rxjs';\n *\n * const someDiv = document.createElement('div');\n * someDiv.style.cssText = 'width: 200px;background: #09c';\n * document.body.appendChild(someDiv);\n * const intervals = interval(10);      // Intervals are scheduled\n *                                      // with async scheduler by default...\n * intervals.pipe(\n *   observeOn(animationFrameScheduler) // ...but we will observe on animationFrame\n * )                                    // scheduler to ensure smooth animation.\n * .subscribe(val => {\n *   someDiv.style.height = val + 'px';\n * });\n * ```\n *\n * @see {@link delay}\n *\n * @param scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param delay Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return A function that returns an Observable that emits the same\n * notifications as the source Observable, but with provided scheduler.\n */\nexport function observeOn<T>(scheduler: SchedulerLike, delay = 0): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => executeSchedule(subscriber, scheduler, () => subscriber.next(value), delay),\n        () => executeSchedule(subscriber, scheduler, () => subscriber.complete(), delay),\n        (err) => executeSchedule(subscriber, scheduler, () => subscriber.error(err), delay)\n      )\n    );\n  });\n}\n", "import { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\n\n/**\n * Asynchronously subscribes Observers to this Observable on the specified {@link SchedulerLike}.\n *\n * With `subscribeOn` you can decide what type of scheduler a specific Observable will be using when it is subscribed to.\n *\n * Schedulers control the speed and order of emissions to observers from an Observable stream.\n *\n * ![](subscribeOn.png)\n *\n * ## Example\n *\n * Given the following code:\n *\n * ```ts\n * import { of, merge } from 'rxjs';\n *\n * const a = of(1, 2, 3);\n * const b = of(4, 5, 6);\n *\n * merge(a, b).subscribe(console.log);\n *\n * // Outputs\n * // 1\n * // 2\n * // 3\n * // 4\n * // 5\n * // 6\n * ```\n *\n * Both Observable `a` and `b` will emit their values directly and synchronously once they are subscribed to.\n *\n * If we instead use the `subscribeOn` operator declaring that we want to use the {@link asyncScheduler} for values emitted by Observable `a`:\n *\n * ```ts\n * import { of, subscribeOn, asyncScheduler, merge } from 'rxjs';\n *\n * const a = of(1, 2, 3).pipe(subscribeOn(asyncScheduler));\n * const b = of(4, 5, 6);\n *\n * merge(a, b).subscribe(console.log);\n *\n * // Outputs\n * // 4\n * // 5\n * // 6\n * // 1\n * // 2\n * // 3\n * ```\n *\n * The reason for this is that Observable `b` emits its values directly and synchronously like before\n * but the emissions from `a` are scheduled on the event loop because we are now using the {@link asyncScheduler} for that specific Observable.\n *\n * @param scheduler The {@link SchedulerLike} to perform subscription actions on.\n * @param delay A delay to pass to the scheduler to delay subscriptions\n * @return A function that returns an Observable modified so that its\n * subscriptions happen on the specified {@link SchedulerLike}.\n */\nexport function subscribeOn<T>(scheduler: SchedulerLike, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    subscriber.add(scheduler.schedule(() => source.subscribe(subscriber), delay));\n  });\n}\n", "import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { InteropObservable, SchedulerLike } from '../types';\n\nexport function scheduleObservable<T>(input: InteropObservable<T>, scheduler: SchedulerLike) {\n  return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n", "import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { SchedulerLike } from '../types';\n\nexport function schedulePromise<T>(input: PromiseLike<T>, scheduler: SchedulerLike) {\n  return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n", "import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\nexport function scheduleArray<T>(input: ArrayLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>((subscriber) => {\n    // The current array index.\n    let i = 0;\n    // Start iterating over the array like on a schedule.\n    return scheduler.schedule(function () {\n      if (i === input.length) {\n        // If we have hit the end of the array like in the\n        // previous job, we can complete.\n        subscriber.complete();\n      } else {\n        // Otherwise let's next the value at the current index,\n        // then increment our index.\n        subscriber.next(input[i++]);\n        // If the last emission didn't cause us to close the subscriber\n        // (via take or some side effect), reschedule the job and we'll\n        // make another pass.\n        if (!subscriber.closed) {\n          this.schedule();\n        }\n      }\n    });\n  });\n}\n", "import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from '../util/isFunction';\nimport { executeSchedule } from '../util/executeSchedule';\n\n/**\n * Used in {@link scheduled} to create an observable from an Iterable.\n * @param input The iterable to create an observable from\n * @param scheduler The scheduler to use\n */\nexport function scheduleIterable<T>(input: Iterable<T>, scheduler: SchedulerLike) {\n  return new Observable<T>((subscriber) => {\n    let iterator: Iterator<T, T>;\n\n    // Schedule the initial creation of the iterator from\n    // the iterable. This is so the code in the iterable is\n    // not called until the scheduled job fires.\n    executeSchedule(subscriber, scheduler, () => {\n      // Create the iterator.\n      iterator = (input as any)[Symbol_iterator]();\n\n      executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          let value: T;\n          let done: boolean | undefined;\n          try {\n            // Pull the value out of the iterator\n            ({ value, done } = iterator.next());\n          } catch (err) {\n            // We got an error while pulling from the iterator\n            subscriber.error(err);\n            return;\n          }\n\n          if (done) {\n            // If it is \"done\" we just complete. This mimics the\n            // behavior of JavaScript's `for..of` consumption of\n            // iterables, which will not emit the value from an iterator\n            // result of `{ done: true: value: 'here' }`.\n            subscriber.complete();\n          } else {\n            // The iterable is not done, emit the value.\n            subscriber.next(value);\n          }\n        },\n        0,\n        true\n      );\n    });\n\n    // During finalization, if we see this iterator has a `return` method,\n    // then we know it is a Generator, and not just an Iterator. So we call\n    // the `return()` function. This will ensure that any `finally { }` blocks\n    // inside of the generator we can hit will be hit properly.\n    return () => isFunction(iterator?.return) && iterator.return();\n  });\n}\n", "import { SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { executeSchedule } from '../util/executeSchedule';\n\nexport function scheduleAsyncIterable<T>(input: AsyncIterable<T>, scheduler: SchedulerLike) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n  return new Observable<T>((subscriber) => {\n    executeSchedule(subscriber, scheduler, () => {\n      const iterator = input[Symbol.asyncIterator]();\n      executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          iterator.next().then((result) => {\n            if (result.done) {\n              // This will remove the subscriptions from\n              // the parent subscription.\n              subscriber.complete();\n            } else {\n              subscriber.next(result.value);\n            }\n          });\n        },\n        0,\n        true\n      );\n    });\n  });\n}\n", "import { SchedulerLike, ReadableStreamLike } from '../types';\nimport { Observable } from '../Observable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\n\nexport function scheduleReadableStreamLike<T>(input: ReadableStreamLike<T>, scheduler: SchedulerLike): Observable<T> {\n  return scheduleAsyncIterable(readableStreamLikeToAsyncGenerator(input), scheduler);\n}\n", "import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isReadableStreamLike } from '../util/isReadableStreamLike';\nimport { scheduleReadableStreamLike } from './scheduleReadableStreamLike';\n\n/**\n * Converts from a common {@link ObservableInput} type to an observable where subscription and emissions\n * are scheduled on the provided scheduler.\n *\n * @see {@link from}\n * @see {@link of}\n *\n * @param input The observable, array, promise, iterable, etc you would like to schedule\n * @param scheduler The scheduler to use to schedule the subscription and emissions from\n * the returned observable.\n */\nexport function scheduled<T>(input: ObservableInput<T>, scheduler: SchedulerLike): Observable<T> {\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return scheduleObservable(input, scheduler);\n    }\n    if (isArrayLike(input)) {\n      return scheduleArray(input, scheduler);\n    }\n    if (isPromise(input)) {\n      return schedulePromise(input, scheduler);\n    }\n    if (isAsyncIterable(input)) {\n      return scheduleAsyncIterable(input, scheduler);\n    }\n    if (isIterable(input)) {\n      return scheduleIterable(input, scheduler);\n    }\n    if (isReadableStreamLike(input)) {\n      return scheduleReadableStreamLike(input, scheduler);\n    }\n  }\n  throw createInvalidObservableTypeError(input);\n}\n", "import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { scheduled } from '../scheduled/scheduled';\nimport { innerFrom } from './innerFrom';\n\nexport function from<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function from<O extends ObservableInput<any>>(input: O, scheduler: SchedulerLike | undefined): Observable<ObservedValueOf<O>>;\n\n/**\n * Creates an Observable from an Array, an array-like object, a Promise, an iterable object, or an Observable-like object.\n *\n * <span class=\"informal\">Converts almost anything to an Observable.</span>\n *\n * ![](from.png)\n *\n * `from` converts various other objects and data types into Observables. It also converts a Promise, an array-like, or an\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable\" target=\"_blank\">iterable</a>\n * object into an Observable that emits the items in that promise, array, or iterable. A String, in this context, is treated\n * as an array of characters. Observable-like objects (contains a function named with the ES2015 Symbol for Observable) can also be\n * converted through this operator.\n *\n * ## Examples\n *\n * Converts an array to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n *\n * const array = [10, 20, 30];\n * const result = from(array);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 10\n * // 20\n * // 30\n * ```\n *\n * Convert an infinite iterable (from a generator) to an Observable\n *\n * ```ts\n * import { from, take } from 'rxjs';\n *\n * function* generateDoubles(seed) {\n *    let i = seed;\n *    while (true) {\n *      yield i;\n *      i = 2 * i; // double it\n *    }\n * }\n *\n * const iterator = generateDoubles(3);\n * const result = from(iterator).pipe(take(10));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 3\n * // 6\n * // 12\n * // 24\n * // 48\n * // 96\n * // 192\n * // 384\n * // 768\n * // 1536\n * ```\n *\n * With `asyncScheduler`\n *\n * ```ts\n * import { from, asyncScheduler } from 'rxjs';\n *\n * console.log('start');\n *\n * const array = [10, 20, 30];\n * const result = from(array, asyncScheduler);\n *\n * result.subscribe(x => console.log(x));\n *\n * console.log('end');\n *\n * // Logs:\n * // 'start'\n * // 'end'\n * // 10\n * // 20\n * // 30\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link fromEventPattern}\n *\n * @param {ObservableInput<T>} A subscription object, a Promise, an Observable-like,\n * an Array, an iterable, or an array-like object to be converted.\n * @param {SchedulerLike} An optional {@link SchedulerLike} on which to schedule the emission of values.\n * @return {Observable<T>}\n */\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T> {\n  return scheduler ? scheduled(input, scheduler) : innerFrom(input);\n}\n", "import { SchedulerLike, ValueFromArray } from '../types';\nimport { Observable } from '../Observable';\nimport { popScheduler } from '../util/args';\nimport { from } from './from';\n\n// Devs are more likely to pass null or undefined than they are a scheduler\n// without accompanying values. To make things easier for (naughty) devs who\n// use the `strictNullChecks: false` TypeScript compiler option, these\n// overloads with explicit null and undefined values are included.\n\nexport function of(value: null): Observable<null>;\nexport function of(value: undefined): Observable<undefined>;\n\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function of(scheduler: SchedulerLike): Observable<never>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function of<A extends readonly unknown[]>(...valuesAndScheduler: [...A, SchedulerLike]): Observable<ValueFromArray<A>>;\n\nexport function of(): Observable<never>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function of<T>(): Observable<T>;\nexport function of<T>(value: T): Observable<T>;\nexport function of<A extends readonly unknown[]>(...values: A): Observable<ValueFromArray<A>>;\n\n/**\n * Converts the arguments to an observable sequence.\n *\n * <span class=\"informal\">Each argument becomes a `next` notification.</span>\n *\n * ![](of.png)\n *\n * Unlike {@link from}, it does not do any flattening and emits each argument in whole\n * as a separate `next` notification.\n *\n * ## Examples\n *\n * Emit the values `10, 20, 30`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of(10, 20, 30)\n *   .subscribe({\n *     next: value => console.log('next:', value),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // Outputs\n * // next: 10\n * // next: 20\n * // next: 30\n * // the end\n * ```\n *\n * Emit the array `[1, 2, 3]`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of([1, 2, 3])\n *   .subscribe({\n *     next: value => console.log('next:', value),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // Outputs\n * // next: [1, 2, 3]\n * // the end\n * ```\n *\n * @see {@link from}\n * @see {@link range}\n *\n * @param {...T} values A comma separated list of arguments you want to be emitted\n * @return {Observable} An Observable that emits the arguments\n * described above and then completes.\n */\nexport function of<T>(...args: Array<T | SchedulerLike>): Observable<T> {\n  const scheduler = popScheduler(args);\n  return from(args as T[], scheduler);\n}\n", "import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { SchedulerLike } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/**\n * Creates an observable that will create an error instance and push it to the consumer as an error\n * immediately upon subscription.\n *\n * <span class=\"informal\">Just errors and does nothing else</span>\n *\n * ![](throw.png)\n *\n * This creation function is useful for creating an observable that will create an error and error every\n * time it is subscribed to. Generally, inside of most operators when you might want to return an errored\n * observable, this is unnecessary. In most cases, such as in the inner return of {@link concatMap},\n * {@link mergeMap}, {@link defer}, and many others, you can simply throw the error, and RxJS will pick\n * that up and notify the consumer of the error.\n *\n * ## Example\n *\n * Create a simple observable that will create a new error with a timestamp and log it\n * and the message every time you subscribe to it\n *\n * ```ts\n * import { throwError } from 'rxjs';\n *\n * let errorCount = 0;\n *\n * const errorWithTimestamp$ = throwError(() => {\n *   const error: any = new Error(`This is error number ${ ++errorCount }`);\n *   error.timestamp = Date.now();\n *   return error;\n * });\n *\n * errorWithTimestamp$.subscribe({\n *   error: err => console.log(err.timestamp, err.message)\n * });\n *\n * errorWithTimestamp$.subscribe({\n *   error: err => console.log(err.timestamp, err.message)\n * });\n *\n * // Logs the timestamp and a new error message for each subscription\n * ```\n *\n * ### Unnecessary usage\n *\n * Using `throwError` inside of an operator or creation function\n * with a callback, is usually not necessary\n *\n * ```ts\n * import { of, concatMap, timer, throwError } from 'rxjs';\n *\n * const delays$ = of(1000, 2000, Infinity, 3000);\n *\n * delays$.pipe(\n *   concatMap(ms => {\n *     if (ms < 10000) {\n *       return timer(ms);\n *     } else {\n *       // This is probably overkill.\n *       return throwError(() => new Error(`Invalid time ${ ms }`));\n *     }\n *   })\n * )\n * .subscribe({\n *   next: console.log,\n *   error: console.error\n * });\n * ```\n *\n * You can just throw the error instead\n *\n * ```ts\n * import { of, concatMap, timer } from 'rxjs';\n *\n * const delays$ = of(1000, 2000, Infinity, 3000);\n *\n * delays$.pipe(\n *   concatMap(ms => {\n *     if (ms < 10000) {\n *       return timer(ms);\n *     } else {\n *       // Cleaner and easier to read for most folks.\n *       throw new Error(`Invalid time ${ ms }`);\n *     }\n *   })\n * )\n * .subscribe({\n *   next: console.log,\n *   error: console.error\n * });\n * ```\n *\n * @param errorFactory A factory function that will create the error instance that is pushed.\n */\nexport function throwError(errorFactory: () => any): Observable<never>;\n\n/**\n * Returns an observable that will error with the specified error immediately upon subscription.\n *\n * @param error The error instance to emit\n * @deprecated Support for passing an error value will be removed in v8. Instead, pass a factory function to `throwError(() => new Error('test'))`. This is\n * because it will create the error at the moment it should be created and capture a more appropriate stack trace. If\n * for some reason you need to create the error ahead of time, you can still do that: `const err = new Error('test'); throwError(() => err);`.\n */\nexport function throwError(error: any): Observable<never>;\n\n/**\n * Notifies the consumer of an error using a given scheduler by scheduling it at delay `0` upon subscription.\n *\n * @param errorOrErrorFactory An error instance or error factory\n * @param scheduler A scheduler to use to schedule the error notification\n * @deprecated The `scheduler` parameter will be removed in v8.\n * Use `throwError` in combination with {@link observeOn}: `throwError(() => new Error('test')).pipe(observeOn(scheduler));`.\n * Details: https://rxjs.dev/deprecations/scheduler-argument\n */\nexport function throwError(errorOrErrorFactory: any, scheduler: SchedulerLike): Observable<never>;\n\nexport function throwError(errorOrErrorFactory: any, scheduler?: SchedulerLike): Observable<never> {\n  const errorFactory = isFunction(errorOrErrorFactory) ? errorOrErrorFactory : () => errorOrErrorFactory;\n  const init = (subscriber: Subscriber<never>) => subscriber.error(errorFactory());\n  return new Observable(scheduler ? (subscriber) => scheduler.schedule(init as any, 0, subscriber) : init);\n}\n", "import { PartialObserver, ObservableNotification, CompleteNotification, NextNotification, ErrorNotification } from './types';\nimport { Observable } from './Observable';\nimport { EMPTY } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\nimport { isFunction } from './util/isFunction';\n\n// TODO: When this enum is removed, replace it with a type alias. See #4556.\n/**\n * @deprecated Use a string literal instead. `NotificationKind` will be replaced with a type alias in v8.\n * It will not be replaced with a const enum as those are not compatible with isolated modules.\n */\nexport enum NotificationKind {\n  NEXT = 'N',\n  ERROR = 'E',\n  COMPLETE = 'C',\n}\n\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n * @deprecated It is NOT recommended to create instances of `Notification` directly.\n * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n * Will be removed in v8.\n */\nexport class Notification<T> {\n  /**\n   * A value signifying that the notification will \"next\" if observed. In truth,\n   * This is really synonymous with just checking `kind === \"N\"`.\n   * @deprecated Will be removed in v8. Instead, just check to see if the value of `kind` is `\"N\"`.\n   */\n  readonly hasValue: boolean;\n\n  /**\n   * Creates a \"Next\" notification object.\n   * @param kind Always `'N'`\n   * @param value The value to notify with if observed.\n   * @deprecated Internal implementation detail. Use {@link Notification#createNext createNext} instead.\n   */\n  constructor(kind: 'N', value?: T);\n  /**\n   * Creates an \"Error\" notification object.\n   * @param kind Always `'E'`\n   * @param value Always `undefined`\n   * @param error The error to notify with if observed.\n   * @deprecated Internal implementation detail. Use {@link Notification#createError createError} instead.\n   */\n  constructor(kind: 'E', value: undefined, error: any);\n  /**\n   * Creates a \"completion\" notification object.\n   * @param kind Always `'C'`\n   * @deprecated Internal implementation detail. Use {@link Notification#createComplete createComplete} instead.\n   */\n  constructor(kind: 'C');\n  constructor(public readonly kind: 'N' | 'E' | 'C', public readonly value?: T, public readonly error?: any) {\n    this.hasValue = kind === 'N';\n  }\n\n  /**\n   * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\n   * If the handler is missing it will do nothing. Even if the notification is an error, if\n   * there is no error handler on the observer, an error will not be thrown, it will noop.\n   * @param observer The observer to notify.\n   */\n  observe(observer: PartialObserver<T>): void {\n    return observeNotification(this as ObservableNotification<T>, observer);\n  }\n\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @param complete A complete handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  do(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  do(next: (value: T) => void, error: (err: any) => void): void;\n  /**\n   * Executes the next handler if the Notification is of `kind` `\"N\"`. Otherwise\n   * this will not error, and it will be a noop.\n   * @param next The next handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  do(next: (value: T) => void): void;\n  do(nextHandler: (value: T) => void, errorHandler?: (err: any) => void, completeHandler?: () => void): void {\n    const { kind, value, error } = this;\n    return kind === 'N' ? nextHandler?.(value!) : kind === 'E' ? errorHandler?.(error) : completeHandler?.();\n  }\n\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @param complete A complete handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(next: (value: T) => void, error: (err: any) => void): void;\n  /**\n   * Executes the next handler if the Notification is of `kind` `\"N\"`. Otherwise\n   * this will not error, and it will be a noop.\n   * @param next The next handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(next: (value: T) => void): void;\n\n  /**\n   * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\n   * If the handler is missing it will do nothing. Even if the notification is an error, if\n   * there is no error handler on the observer, an error will not be thrown, it will noop.\n   * @param observer The observer to notify.\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(observer: PartialObserver<T>): void;\n  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {\n    return isFunction((nextOrObserver as any)?.next)\n      ? this.observe(nextOrObserver as PartialObserver<T>)\n      : this.do(nextOrObserver as (value: T) => void, error as any, complete as any);\n  }\n\n  /**\n   * Returns a simple Observable that just delivers the notification represented\n   * by this Notification instance.\n   *\n   * @deprecated Will be removed in v8. To convert a `Notification` to an {@link Observable},\n   * use {@link of} and {@link dematerialize}: `of(notification).pipe(dematerialize())`.\n   */\n  toObservable(): Observable<T> {\n    const { kind, value, error } = this;\n    // Select the observable to return by `kind`\n    const result =\n      kind === 'N'\n        ? // Next kind. Return an observable of that value.\n          of(value!)\n        : //\n        kind === 'E'\n        ? // Error kind. Return an observable that emits the error.\n          throwError(() => error)\n        : //\n        kind === 'C'\n        ? // Completion kind. Kind is \"C\", return an observable that just completes.\n          EMPTY\n        : // Unknown kind, return falsy, so we error below.\n          0;\n    if (!result) {\n      // TODO: consider removing this check. The only way to cause this would be to\n      // use the Notification constructor directly in a way that is not type-safe.\n      // and direct use of the Notification constructor is deprecated.\n      throw new TypeError(`Unexpected notification kind ${kind}`);\n    }\n    return result;\n  }\n\n  private static completeNotification = new Notification('C') as Notification<never> & CompleteNotification;\n  /**\n   * A shortcut to create a Notification instance of the type `next` from a\n   * given value.\n   * @param {T} value The `next` value.\n   * @return {Notification<T>} The \"next\" Notification representing the\n   * argument.\n   * @nocollapse\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n   * Will be removed in v8.\n   */\n  static createNext<T>(value: T) {\n    return new Notification('N', value) as Notification<T> & NextNotification<T>;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `error` from a\n   * given error.\n   * @param {any} [err] The `error` error.\n   * @return {Notification<T>} The \"error\" Notification representing the\n   * argument.\n   * @nocollapse\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n   * Will be removed in v8.\n   */\n  static createError(err?: any) {\n    return new Notification('E', undefined, err) as Notification<never> & ErrorNotification;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `complete`.\n   * @return {Notification<any>} The valueless \"complete\" Notification.\n   * @nocollapse\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n   * Will be removed in v8.\n   */\n  static createComplete(): Notification<never> & CompleteNotification {\n    return Notification.completeNotification;\n  }\n}\n\n/**\n * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\n * If the handler is missing it will do nothing. Even if the notification is an error, if\n * there is no error handler on the observer, an error will not be thrown, it will noop.\n * @param notification The notification object to observe.\n * @param observer The observer to notify.\n */\nexport function observeNotification<T>(notification: ObservableNotification<T>, observer: PartialObserver<T>) {\n  const { kind, value, error } = notification as any;\n  if (typeof kind !== 'string') {\n    throw new TypeError('Invalid notification, missing \"kind\"');\n  }\n  kind === 'N' ? observer.next?.(value!) : kind === 'E' ? observer.error?.(error) : observer.complete?.();\n}\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface EmptyError extends Error {}\n\nexport interface EmptyErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): EmptyError;\n}\n\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n * @see {@link firstValueFrom}\n * @see {@link lastValueFrom}\n *\n * @class EmptyError\n */\nexport const EmptyError: EmptyErrorCtor = createErrorClass((_super) => function EmptyErrorImpl(this: any) {\n  _super(this);\n  this.name = 'EmptyError';\n  this.message = 'no elements in sequence';\n});\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface ArgumentOutOfRangeError extends Error {}\n\nexport interface ArgumentOutOfRangeErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): ArgumentOutOfRangeError;\n}\n\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport const ArgumentOutOfRangeError: ArgumentOutOfRangeErrorCtor = createErrorClass(\n  (_super) =>\n    function ArgumentOutOfRangeErrorImpl(this: any) {\n      _super(this);\n      this.name = 'ArgumentOutOfRangeError';\n      this.message = 'argument out of range';\n    }\n);\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface NotFoundError extends Error {}\n\nexport interface NotFoundErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (message: string): NotFoundError;\n}\n\n/**\n * An error thrown when a value or values are missing from an\n * observable sequence.\n *\n * @see {@link operators/single}\n *\n * @class NotFoundError\n */\nexport const NotFoundError: NotFoundErrorCtor = createErrorClass(\n  (_super) =>\n    function NotFoundErrorImpl(this: any, message: string) {\n      _super(this);\n      this.name = 'NotFoundError';\n      this.message = message;\n    }\n);\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface SequenceError extends Error {}\n\nexport interface SequenceErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (message: string): SequenceError;\n}\n\n/**\n * An error thrown when something is wrong with the sequence of\n * values arriving on the observable.\n *\n * @see {@link operators/single}\n *\n * @class SequenceError\n */\nexport const SequenceError: SequenceErrorCtor = createErrorClass(\n  (_super) =>\n    function SequenceErrorImpl(this: any, message: string) {\n      _super(this);\n      this.name = 'SequenceError';\n      this.message = message;\n    }\n);\n", "/**\n * Checks to see if a value is not only a `Date` object,\n * but a *valid* `Date` object that can be converted to a\n * number. For example, `new Date('blah')` is indeed an\n * `instanceof Date`, however it cannot be converted to a\n * number.\n */\nexport function isValidDate(value: any): value is Date {\n  return value instanceof Date && !isNaN(value as any);\n}\n", "import { asyncScheduler } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerLike, OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\nimport { isValidDate } from '../util/isDate';\nimport { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createErrorClass } from '../util/createErrorClass';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { executeSchedule } from '../util/executeSchedule';\n\nexport interface TimeoutConfig<T, O extends ObservableInput<unknown> = ObservableInput<T>, M = unknown> {\n  /**\n   * The time allowed between values from the source before timeout is triggered.\n   */\n  each?: number;\n\n  /**\n   * The relative time as a `number` in milliseconds, or a specific time as a `Date` object,\n   * by which the first value must arrive from the source before timeout is triggered.\n   */\n  first?: number | Date;\n\n  /**\n   * The scheduler to use with time-related operations within this operator. Defaults to {@link asyncScheduler}\n   */\n  scheduler?: SchedulerLike;\n\n  /**\n   * A factory used to create observable to switch to when timeout occurs. Provides\n   * a {@link TimeoutInfo} about the source observable's emissions and what delay or\n   * exact time triggered the timeout.\n   */\n  with?: (info: TimeoutInfo<T, M>) => O;\n\n  /**\n   * Optional additional metadata you can provide to code that handles\n   * the timeout, will be provided through the {@link TimeoutError}.\n   * This can be used to help identify the source of a timeout or pass along\n   * other information related to the timeout.\n   */\n  meta?: M;\n}\n\nexport interface TimeoutInfo<T, M = unknown> {\n  /** Optional metadata that was provided to the timeout configuration. */\n  readonly meta: M;\n  /** The number of messages seen before the timeout */\n  readonly seen: number;\n  /** The last message seen */\n  readonly lastValue: T | null;\n}\n\n/**\n * An error emitted when a timeout occurs.\n */\nexport interface TimeoutError<T = unknown, M = unknown> extends Error {\n  /**\n   * The information provided to the error by the timeout\n   * operation that created the error. Will be `null` if\n   * used directly in non-RxJS code with an empty constructor.\n   * (Note that using this constructor directly is not recommended,\n   * you should create your own errors)\n   */\n  info: TimeoutInfo<T, M> | null;\n}\n\nexport interface TimeoutErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new <T = unknown, M = unknown>(info?: TimeoutInfo<T, M>): TimeoutError<T, M>;\n}\n\n/**\n * An error thrown by the {@link timeout} operator.\n *\n * Provided so users can use as a type and do quality comparisons.\n * We recommend you do not subclass this or create instances of this class directly.\n * If you have need of a error representing a timeout, you should\n * create your own error class and use that.\n *\n * @see {@link timeout}\n *\n * @class TimeoutError\n */\nexport const TimeoutError: TimeoutErrorCtor = createErrorClass(\n  (_super) =>\n    function TimeoutErrorImpl(this: any, info: TimeoutInfo<any> | null = null) {\n      _super(this);\n      this.message = 'Timeout has occurred';\n      this.name = 'TimeoutError';\n      this.info = info;\n    }\n);\n\n/**\n * If `with` is provided, this will return an observable that will switch to a different observable if the source\n * does not push values within the specified time parameters.\n *\n * <span class=\"informal\">The most flexible option for creating a timeout behavior.</span>\n *\n * The first thing to know about the configuration is if you do not provide a `with` property to the configuration,\n * when timeout conditions are met, this operator will emit a {@link TimeoutError}. Otherwise, it will use the factory\n * function provided by `with`, and switch your subscription to the result of that. Timeout conditions are provided by\n * the settings in `first` and `each`.\n *\n * The `first` property can be either a `Date` for a specific time, a `number` for a time period relative to the\n * point of subscription, or it can be skipped. This property is to check timeout conditions for the arrival of\n * the first value from the source _only_. The timings of all subsequent values  from the source will be checked\n * against the time period provided by `each`, if it was provided.\n *\n * The `each` property can be either a `number` or skipped. If a value for `each` is provided, it represents the amount of\n * time the resulting observable will wait between the arrival of values from the source before timing out. Note that if\n * `first` is _not_ provided, the value from `each` will be used to check timeout conditions for the arrival of the first\n * value and all subsequent values. If `first` _is_ provided, `each` will only be use to check all values after the first.\n *\n * ## Examples\n *\n * Emit a custom error if there is too much time between values\n *\n * ```ts\n * import { interval, timeout, throwError } from 'rxjs';\n *\n * class CustomTimeoutError extends Error {\n *   constructor() {\n *     super('It was too slow');\n *     this.name = 'CustomTimeoutError';\n *   }\n * }\n *\n * const slow$ = interval(900);\n *\n * slow$.pipe(\n *   timeout({\n *     each: 1000,\n *     with: () => throwError(() => new CustomTimeoutError())\n *   })\n * )\n * .subscribe({\n *   error: console.error\n * });\n * ```\n *\n * Switch to a faster observable if your source is slow.\n *\n * ```ts\n * import { interval, timeout } from 'rxjs';\n *\n * const slow$ = interval(900);\n * const fast$ = interval(500);\n *\n * slow$.pipe(\n *   timeout({\n *     each: 1000,\n *     with: () => fast$,\n *   })\n * )\n * .subscribe(console.log);\n * ```\n * @param config The configuration for the timeout.\n */\nexport function timeout<T, O extends ObservableInput<unknown>, M = unknown>(\n  config: TimeoutConfig<T, O, M> & { with: (info: TimeoutInfo<T, M>) => O }\n): OperatorFunction<T, T | ObservedValueOf<O>>;\n\n/**\n * Returns an observable that will error or switch to a different observable if the source does not push values\n * within the specified time parameters.\n *\n * <span class=\"informal\">The most flexible option for creating a timeout behavior.</span>\n *\n * The first thing to know about the configuration is if you do not provide a `with` property to the configuration,\n * when timeout conditions are met, this operator will emit a {@link TimeoutError}. Otherwise, it will use the factory\n * function provided by `with`, and switch your subscription to the result of that. Timeout conditions are provided by\n * the settings in `first` and `each`.\n *\n * The `first` property can be either a `Date` for a specific time, a `number` for a time period relative to the\n * point of subscription, or it can be skipped. This property is to check timeout conditions for the arrival of\n * the first value from the source _only_. The timings of all subsequent values  from the source will be checked\n * against the time period provided by `each`, if it was provided.\n *\n * The `each` property can be either a `number` or skipped. If a value for `each` is provided, it represents the amount of\n * time the resulting observable will wait between the arrival of values from the source before timing out. Note that if\n * `first` is _not_ provided, the value from `each` will be used to check timeout conditions for the arrival of the first\n * value and all subsequent values. If `first` _is_ provided, `each` will only be use to check all values after the first.\n *\n * ### Handling TimeoutErrors\n *\n * If no `with` property was provided, subscriptions to the resulting observable may emit an error of {@link TimeoutError}.\n * The timeout error provides useful information you can examine when you're handling the error. The most common way to handle\n * the error would be with {@link catchError}, although you could use {@link tap} or just the error handler in your `subscribe` call\n * directly, if your error handling is only a side effect (such as notifying the user, or logging).\n *\n * In this case, you would check the error for `instanceof TimeoutError` to validate that the error was indeed from `timeout`, and\n * not from some other source. If it's not from `timeout`, you should probably rethrow it if you're in a `catchError`.\n *\n * ## Examples\n *\n * Emit a {@link TimeoutError} if the first value, and _only_ the first value, does not arrive within 5 seconds\n *\n * ```ts\n * import { interval, timeout } from 'rxjs';\n *\n * // A random interval that lasts between 0 and 10 seconds per tick\n * const source$ = interval(Math.round(Math.random() * 10_000));\n *\n * source$.pipe(\n *   timeout({ first: 5_000 })\n * )\n * .subscribe({\n *   next: console.log,\n *   error: console.error\n * });\n * ```\n *\n * Emit a {@link TimeoutError} if the source waits longer than 5 seconds between any two values or the first value\n * and subscription.\n *\n * ```ts\n * import { timer, timeout, expand } from 'rxjs';\n *\n * const getRandomTime = () => Math.round(Math.random() * 10_000);\n *\n * // An observable that waits a random amount of time between each delivered value\n * const source$ = timer(getRandomTime())\n *   .pipe(expand(() => timer(getRandomTime())));\n *\n * source$\n *   .pipe(timeout({ each: 5_000 }))\n *   .subscribe({\n *     next: console.log,\n *     error: console.error\n *   });\n * ```\n *\n * Emit a {@link TimeoutError} if the source does not emit before 7 seconds, _or_ if the source waits longer than\n * 5 seconds between any two values after the first.\n *\n * ```ts\n * import { timer, timeout, expand } from 'rxjs';\n *\n * const getRandomTime = () => Math.round(Math.random() * 10_000);\n *\n * // An observable that waits a random amount of time between each delivered value\n * const source$ = timer(getRandomTime())\n *   .pipe(expand(() => timer(getRandomTime())));\n *\n * source$\n *   .pipe(timeout({ first: 7_000, each: 5_000 }))\n *   .subscribe({\n *     next: console.log,\n *     error: console.error\n *   });\n * ```\n */\nexport function timeout<T, M = unknown>(config: Omit<TimeoutConfig<T, any, M>, 'with'>): OperatorFunction<T, T>;\n\n/**\n * Returns an observable that will error if the source does not push its first value before the specified time passed as a `Date`.\n * This is functionally the same as `timeout({ first: someDate })`.\n *\n * <span class=\"informal\">Errors if the first value doesn't show up before the given date and time</span>\n *\n * ![](timeout.png)\n *\n * @param first The date to at which the resulting observable will timeout if the source observable\n * does not emit at least one value.\n * @param scheduler The scheduler to use. Defaults to {@link asyncScheduler}.\n */\nexport function timeout<T>(first: Date, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns an observable that will error if the source does not push a value within the specified time in milliseconds.\n * This is functionally the same as `timeout({ each: milliseconds })`.\n *\n * <span class=\"informal\">Errors if it waits too long between any value</span>\n *\n * ![](timeout.png)\n *\n * @param each The time allowed between each pushed value from the source before the resulting observable\n * will timeout.\n * @param scheduler The scheduler to use. Defaults to {@link asyncScheduler}.\n */\nexport function timeout<T>(each: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\n *\n * ![](timeout.png)\n *\n * @see {@link timeoutWith}\n *\n * @return A function that returns an Observable that mirrors behaviour of the\n * source Observable, unless timeout happens when it throws an error.\n */\nexport function timeout<T, O extends ObservableInput<any>, M>(\n  config: number | Date | TimeoutConfig<T, O, M>,\n  schedulerArg?: SchedulerLike\n): OperatorFunction<T, T | ObservedValueOf<O>> {\n  // Intentionally terse code.\n  // If the first argument is a valid `Date`, then we use it as the `first` config.\n  // Otherwise, if the first argument is a `number`, then we use it as the `each` config.\n  // Otherwise, it can be assumed the first argument is the configuration object itself, and\n  // we destructure that into what we're going to use, setting important defaults as we do.\n  // NOTE: The default for `scheduler` will be the `scheduler` argument if it exists, or\n  // it will default to the `asyncScheduler`.\n  const {\n    first,\n    each,\n    with: _with = timeoutErrorFactory,\n    scheduler = schedulerArg ?? asyncScheduler,\n    meta = null!,\n  } = (isValidDate(config) ? { first: config } : typeof config === 'number' ? { each: config } : config) as TimeoutConfig<T, O, M>;\n\n  if (first == null && each == null) {\n    // Ensure timeout was provided at runtime.\n    throw new TypeError('No timeout provided.');\n  }\n\n  return operate((source, subscriber) => {\n    // This subscription encapsulates our subscription to the\n    // source for this operator. We're capturing it separately,\n    // because if there is a `with` observable to fail over to,\n    // we want to unsubscribe from our original subscription, and\n    // hand of the subscription to that one.\n    let originalSourceSubscription: Subscription;\n    // The subscription for our timeout timer. This changes\n    // every time we get a new value.\n    let timerSubscription: Subscription;\n    // A bit of state we pass to our with and error factories to\n    // tell what the last value we saw was.\n    let lastValue: T | null = null;\n    // A bit of state we pass to the with and error factories to\n    // tell how many values we have seen so far.\n    let seen = 0;\n    const startTimer = (delay: number) => {\n      timerSubscription = executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          try {\n            originalSourceSubscription.unsubscribe();\n            innerFrom(\n              _with!({\n                meta,\n                lastValue,\n                seen,\n              })\n            ).subscribe(subscriber);\n          } catch (err) {\n            subscriber.error(err);\n          }\n        },\n        delay\n      );\n    };\n\n    originalSourceSubscription = source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          // clear the timer so we can emit and start another one.\n          timerSubscription?.unsubscribe();\n          seen++;\n          // Emit\n          subscriber.next((lastValue = value));\n          // null | undefined are both < 0. Thanks, JavaScript.\n          each! > 0 && startTimer(each!);\n        },\n        undefined,\n        undefined,\n        () => {\n          if (!timerSubscription?.closed) {\n            timerSubscription?.unsubscribe();\n          }\n          // Be sure not to hold the last value in memory after unsubscription\n          // it could be quite large.\n          lastValue = null;\n        }\n      )\n    );\n\n    // Intentionally terse code.\n    // If we've `seen` a value, that means the \"first\" clause was met already, if it existed.\n    //   it also means that a timer was already started for \"each\" (in the next handler above).\n    // If `first` was provided, and it's a number, then use it.\n    // If `first` was provided and it's not a number, it's a Date, and we get the difference between it and \"now\".\n    // If `first` was not provided at all, then our first timer will be the value from `each`.\n    !seen && startTimer(first != null ? (typeof first === 'number' ? first : +first - scheduler!.now()) : each!);\n  });\n}\n\n/**\n * The default function to use to emit an error when timeout occurs and a `with` function\n * is not specified.\n * @param info The information about the timeout to pass along to the error\n */\nfunction timeoutErrorFactory(info: TimeoutInfo<any>): Observable<never> {\n  throw new TimeoutError(info);\n}\n", "import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function map<T, R>(project: (value: T, index: number) => R): OperatorFunction<T, R>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function map<T, R, A>(project: (this: A, value: T, index: number) => R, thisArg: A): OperatorFunction<T, R>;\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * ![](map.png)\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * ## Example\n *\n * Map every click to the `clientX` position of that click\n *\n * ```ts\n * import { fromEvent, map } from 'rxjs';\n *\n * const clicks = fromEvent<PointerEvent>(document, 'click');\n * const positions = clicks.pipe(map(ev => ev.clientX));\n *\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return A function that returns an Observable that emits the values from the\n * source Observable transformed by the given `project` function.\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return operate((source, subscriber) => {\n    // The index of the value from the source. Used with projection.\n    let index = 0;\n    // Subscribe to the source, all errors and completions are sent along\n    // to the consumer.\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value: T) => {\n        // Call the projection function with the appropriate this context,\n        // and send the resulting value to the consumer.\n        subscriber.next(project.call(thisArg, value, index++));\n      })\n    );\n  });\n}\n", "import { OperatorFunction } from \"../types\";\nimport { map } from \"../operators/map\";\n\nconst { isArray } = Array;\n\nfunction callOrApply<T, R>(fn: ((...values: T[]) => R), args: T|T[]): R {\n    return isArray(args) ? fn(...args) : fn(args);\n}\n\n/**\n * Used in several -- mostly deprecated -- situations where we need to \n * apply a list of arguments or a single argument to a result selector.\n */\nexport function mapOneOrManyArgs<T, R>(fn: ((...values: T[]) => R)): OperatorFunction<T|T[], R> {\n    return map(args => callOrApply(fn, args))\n}", "const { isArray } = Array;\nconst { getPrototypeOf, prototype: objectProto, keys: getKeys } = Object;\n\n/**\n * Used in functions where either a list of arguments, a single array of arguments, or a\n * dictionary of arguments can be returned. Returns an object with an `args` property with\n * the arguments in an array, if it is a dictionary, it will also return the `keys` in another\n * property.\n */\nexport function argsArgArrayOrObject<T, O extends Record<string, T>>(args: T[] | [O] | [T[]]): { args: T[]; keys: string[] | null } {\n  if (args.length === 1) {\n    const first = args[0];\n    if (isArray(first)) {\n      return { args: first, keys: null };\n    }\n    if (isPOJO(first)) {\n      const keys = getKeys(first);\n      return {\n        args: keys.map((key) => first[key]),\n        keys,\n      };\n    }\n  }\n\n  return { args: args as T[], keys: null };\n}\n\nfunction isPOJO(obj: any): obj is object {\n  return obj && typeof obj === 'object' && getPrototypeOf(obj) === objectProto;\n}\n", "import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subscriber } from '../Subscriber';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * A process embodying the general \"merge\" strategy. This is used in\n * `mergeMap` and `mergeScan` because the logic is otherwise nearly identical.\n * @param source The original source observable\n * @param subscriber The consumer subscriber\n * @param project The projection function to get our inner sources\n * @param concurrent The number of concurrent inner subscriptions\n * @param onBeforeNext Additional logic to apply before nexting to our consumer\n * @param expand If `true` this will perform an \"expand\" strategy, which differs only\n * in that it recurses, and the inner subscription must be schedule-able.\n * @param innerSubScheduler A scheduler to use to schedule inner subscriptions,\n * this is to support the expand strategy, mostly, and should be deprecated\n */\nexport function mergeInternals<T, R>(\n  source: Observable<T>,\n  subscriber: Subscriber<R>,\n  project: (value: T, index: number) => ObservableInput<R>,\n  concurrent: number,\n  onBeforeNext?: (innerValue: R) => void,\n  expand?: boolean,\n  innerSubScheduler?: SchedulerLike,\n  additionalFinalizer?: () => void\n) {\n  // Buffered values, in the event of going over our concurrency limit\n  const buffer: T[] = [];\n  // The number of active inner subscriptions.\n  let active = 0;\n  // An index to pass to our accumulator function\n  let index = 0;\n  // Whether or not the outer source has completed.\n  let isComplete = false;\n\n  /**\n   * Checks to see if we can complete our result or not.\n   */\n  const checkComplete = () => {\n    // If the outer has completed, and nothing is left in the buffer,\n    // and we don't have any active inner subscriptions, then we can\n    // Emit the state and complete.\n    if (isComplete && !buffer.length && !active) {\n      subscriber.complete();\n    }\n  };\n\n  // If we're under our concurrency limit, just start the inner subscription, otherwise buffer and wait.\n  const outerNext = (value: T) => (active < concurrent ? doInnerSub(value) : buffer.push(value));\n\n  const doInnerSub = (value: T) => {\n    // If we're expanding, we need to emit the outer values and the inner values\n    // as the inners will \"become outers\" in a way as they are recursively fed\n    // back to the projection mechanism.\n    expand && subscriber.next(value as any);\n\n    // Increment the number of active subscriptions so we can track it\n    // against our concurrency limit later.\n    active++;\n\n    // A flag used to show that the inner observable completed.\n    // This is checked during finalization to see if we should\n    // move to the next item in the buffer, if there is on.\n    let innerComplete = false;\n\n    // Start our inner subscription.\n    innerFrom(project(value, index++)).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (innerValue) => {\n          // `mergeScan` has additional handling here. For example\n          // taking the inner value and updating state.\n          onBeforeNext?.(innerValue);\n\n          if (expand) {\n            // If we're expanding, then just recurse back to our outer\n            // handler. It will emit the value first thing.\n            outerNext(innerValue as any);\n          } else {\n            // Otherwise, emit the inner value.\n            subscriber.next(innerValue);\n          }\n        },\n        () => {\n          // Flag that we have completed, so we know to check the buffer\n          // during finalization.\n          innerComplete = true;\n        },\n        // Errors are passed to the destination.\n        undefined,\n        () => {\n          // During finalization, if the inner completed (it wasn't errored or\n          // cancelled), then we want to try the next item in the buffer if\n          // there is one.\n          if (innerComplete) {\n            // We have to wrap this in a try/catch because it happens during\n            // finalization, possibly asynchronously, and we want to pass\n            // any errors that happen (like in a projection function) to\n            // the outer Subscriber.\n            try {\n              // INNER SOURCE COMPLETE\n              // Decrement the active count to ensure that the next time\n              // we try to call `doInnerSub`, the number is accurate.\n              active--;\n              // If we have more values in the buffer, try to process those\n              // Note that this call will increment `active` ahead of the\n              // next conditional, if there were any more inner subscriptions\n              // to start.\n              while (buffer.length && active < concurrent) {\n                const bufferedValue = buffer.shift()!;\n                // Particularly for `expand`, we need to check to see if a scheduler was provided\n                // for when we want to start our inner subscription. Otherwise, we just start\n                // are next inner subscription.\n                if (innerSubScheduler) {\n                  executeSchedule(subscriber, innerSubScheduler, () => doInnerSub(bufferedValue));\n                } else {\n                  doInnerSub(bufferedValue);\n                }\n              }\n              // Check to see if we can complete, and complete if so.\n              checkComplete();\n            } catch (err) {\n              subscriber.error(err);\n            }\n          }\n        }\n      )\n    );\n  };\n\n  // Subscribe to our source observable.\n  source.subscribe(\n    createOperatorSubscriber(subscriber, outerNext, () => {\n      // Outer completed, make a note of it, and check to see if we can complete everything.\n      isComplete = true;\n      checkComplete();\n    })\n  );\n\n  // Additional finalization (for when the destination is torn down).\n  // Other finalization is added implicitly via subscription above.\n  return () => {\n    additionalFinalizer?.();\n  };\n}\n", "import { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  concurrent?: number\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined,\n  concurrent?: number\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n  concurrent?: number\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * ![](mergeMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * ## Example\n *\n * Map and flatten each letter to an Observable ticking every 1 second\n *\n * ```ts\n * import { of, mergeMap, interval, map } from 'rxjs';\n *\n * const letters = of('a', 'b', 'c');\n * const result = letters.pipe(\n *   mergeMap(x => interval(1000).pipe(map(i => x + i)))\n * );\n *\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a, b, c every second with respective ascending integers\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and merging\n * the results of the Observables obtained from this transformation.\n */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Infinity\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  if (isFunction(resultSelector)) {\n    // DEPRECATED PATH\n    return mergeMap((a, i) => map((b: any, ii: number) => resultSelector(a, b, i, ii))(innerFrom(project(a, i))), concurrent);\n  } else if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n\n  return operate((source, subscriber) => mergeInternals(source, subscriber, project, concurrent));\n}\n", "import { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nimport { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * ![](mergeAll.png)\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n *\n * Spawn a new interval Observable for each click event, and blend their outputs as one Observable\n *\n * ```ts\n * import { fromEvent, map, interval, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(map(() => interval(1000)));\n * const firstOrder = higherOrder.pipe(mergeAll());\n *\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * Count from 0 to 9 every second for each click, but only allow 2 concurrent timers\n *\n * ```ts\n * import { fromEvent, map, interval, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(1000).pipe(take(10)))\n * );\n * const firstOrder = higherOrder.pipe(mergeAll(2));\n *\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concatAll}\n * @see {@link exhaustAll}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Infinity] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits values coming from\n * all the inner Observables emitted by the source Observable.\n */\nexport function mergeAll<O extends ObservableInput<any>>(concurrent: number = Infinity): OperatorFunction<O, ObservedValueOf<O>> {\n  return mergeMap(identity, concurrent);\n}\n", "import { mergeAll } from './mergeAll';\nimport { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * ![](concatAll.svg)\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n *\n * ```ts\n * import { fromEvent, map, interval, take, concatAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(1000).pipe(take(4)))\n * );\n * const firstOrder = higherOrder.pipe(concatAll());\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaustAll}\n * @see {@link mergeAll}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @return A function that returns an Observable emitting values from all the\n * inner Observables concatenated.\n */\nexport function concatAll<O extends ObservableInput<any>>(): OperatorFunction<O, ObservedValueOf<O>> {\n  return mergeAll(1);\n}\n", "import { Observable } from '../Observable';\nimport { ObservableInputTuple, SchedulerLike } from '../types';\nimport { concatAll } from '../operators/concatAll';\nimport { popScheduler } from '../util/args';\nimport { from } from './from';\n\nexport function concat<T extends readonly unknown[]>(...inputs: [...ObservableInputTuple<T>]): Observable<T[number]>;\nexport function concat<T extends readonly unknown[]>(\n  ...inputsAndScheduler: [...ObservableInputTuple<T>, SchedulerLike]\n): Observable<T[number]>;\n\n/**\n * Creates an output Observable which sequentially emits all values from the first given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * ![](concat.png)\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * ## Examples\n *\n * Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10\n *\n * ```ts\n * import { interval, take, range, concat } from 'rxjs';\n *\n * const timer = interval(1000).pipe(take(4));\n * const sequence = range(1, 10);\n * const result = concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n * ```\n *\n * Concatenate 3 Observables\n *\n * ```ts\n * import { interval, take, concat } from 'rxjs';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n *\n * const result = concat(timer1, timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n * ```\n *\n * Concatenate the same Observable to repeat it\n *\n * ```ts\n * import { interval, take, concat } from 'rxjs';\n *\n * const timer = interval(1000).pipe(take(2));\n *\n * concat(timer, timer) // concatenating the same Observable!\n *   .subscribe({\n *     next: value => console.log(value),\n *     complete: () => console.log('...and it is done!')\n *   });\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // '...and it is done!' also after 4s\n * ```\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link startWith}\n * @see {@link endWith}\n *\n * @param args Input Observables to concatenate.\n */\nexport function concat(...args: any[]): Observable<unknown> {\n  return concatAll()(from(args, popScheduler(args)));\n}\n", "import { innerFrom } from '../observable/innerFrom';\nimport { Observable } from '../Observable';\nimport { mergeMap } from '../operators/mergeMap';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isFunction } from '../util/isFunction';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\n\n// These constants are used to create handler registry functions using array mapping below.\nconst nodeEventEmitterMethods = ['addListener', 'removeListener'] as const;\nconst eventTargetMethods = ['addEventListener', 'removeEventListener'] as const;\nconst jqueryMethods = ['on', 'off'] as const;\n\nexport interface NodeStyleEventEmitter {\n  addListener(eventName: string | symbol, handler: NodeEventHandler): this;\n  removeListener(eventName: string | symbol, handler: NodeEventHandler): this;\n}\n\nexport type NodeEventHandler = (...args: any[]) => void;\n\n// For APIs that implement `addListener` and `removeListener` methods that may\n// not use the same arguments or return EventEmitter values\n// such as React Native\nexport interface NodeCompatibleEventEmitter {\n  addListener(eventName: string, handler: NodeEventHandler): void | {};\n  removeListener(eventName: string, handler: NodeEventHandler): void | {};\n}\n\n// Use handler types like those in @types/jquery. See:\n// https://github.com/DefinitelyTyped/DefinitelyTyped/blob/847731ba1d7fa6db6b911c0e43aa0afe596e7723/types/jquery/misc.d.ts#L6395\nexport interface JQueryStyleEventEmitter<TContext, T> {\n  on(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;\n  off(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;\n}\n\nexport interface EventListenerObject<E> {\n  handleEvent(evt: E): void;\n}\n\nexport interface HasEventTargetAddRemove<E> {\n  addEventListener(\n    type: string,\n    listener: ((evt: E) => void) | EventListenerObject<E> | null,\n    options?: boolean | AddEventListenerOptions\n  ): void;\n  removeEventListener(\n    type: string,\n    listener: ((evt: E) => void) | EventListenerObject<E> | null,\n    options?: EventListenerOptions | boolean\n  ): void;\n}\n\nexport interface EventListenerOptions {\n  capture?: boolean;\n  passive?: boolean;\n  once?: boolean;\n}\n\nexport interface AddEventListenerOptions extends EventListenerOptions {\n  once?: boolean;\n  passive?: boolean;\n}\n\nexport function fromEvent<T>(target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>, eventName: string): Observable<T>;\nexport function fromEvent<T, R>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  resultSelector: (event: T) => R\n): Observable<R>;\nexport function fromEvent<T>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  options: EventListenerOptions\n): Observable<T>;\nexport function fromEvent<T, R>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  options: EventListenerOptions,\n  resultSelector: (event: T) => R\n): Observable<R>;\n\nexport function fromEvent(target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>, eventName: string): Observable<unknown>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function fromEvent<T>(target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>, eventName: string): Observable<T>;\nexport function fromEvent<R>(\n  target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>,\n  eventName: string,\n  resultSelector: (...args: any[]) => R\n): Observable<R>;\n\nexport function fromEvent(\n  target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>,\n  eventName: string\n): Observable<unknown>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function fromEvent<T>(target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>, eventName: string): Observable<T>;\nexport function fromEvent<R>(\n  target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>,\n  eventName: string,\n  resultSelector: (...args: any[]) => R\n): Observable<R>;\n\nexport function fromEvent<T>(\n  target: JQueryStyleEventEmitter<any, T> | ArrayLike<JQueryStyleEventEmitter<any, T>>,\n  eventName: string\n): Observable<T>;\nexport function fromEvent<T, R>(\n  target: JQueryStyleEventEmitter<any, T> | ArrayLike<JQueryStyleEventEmitter<any, T>>,\n  eventName: string,\n  resultSelector: (value: T, ...args: any[]) => R\n): Observable<R>;\n\n/**\n * Creates an Observable that emits events of a specific type coming from the\n * given event target.\n *\n * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n * EventEmitter events or others.</span>\n *\n * ![](fromEvent.png)\n *\n * `fromEvent` accepts as a first argument event target, which is an object with methods\n * for registering event handler functions. As a second argument it takes string that indicates\n * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n * which are described in detail below. If your event target does not match any of the ones listed,\n * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n * handler functions have different names, but they all accept a string describing event type\n * and function itself, which will be called whenever said event happens.\n *\n * Every time resulting Observable is subscribed, event handler function will be registered\n * to event target on given event type. When that event fires, value\n * passed as a first argument to registered function will be emitted by output Observable.\n * When Observable is unsubscribed, function will be unregistered from event target.\n *\n * Note that if event target calls registered function with more than one argument, second\n * and following arguments will not appear in resulting stream. In order to get access to them,\n * you can pass to `fromEvent` optional project function, which will be called with all arguments\n * passed to event handler. Output Observable will then emit value returned by project function,\n * instead of the usual value.\n *\n * Remember that event targets listed below are checked via duck typing. It means that\n * no matter what kind of object you have and no matter what environment you work in,\n * you can safely use `fromEvent` on that object if it exposes described methods (provided\n * of course they behave as was described above). So for example if Node.js library exposes\n * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n * a good choice.\n *\n * If the API you use is more callback then event handler oriented (subscribed\n * callback function fires only once and thus there is no need to manually\n * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n * instead.\n *\n * `fromEvent` supports following types of event targets:\n *\n * **DOM EventTarget**\n *\n * This is an object with `addEventListener` and `removeEventListener` methods.\n *\n * In the browser, `addEventListener` accepts - apart from event type string and event\n * handler function arguments - optional third parameter, which is either an object or boolean,\n * both used for additional configuration how and when passed function will be called. When\n * `fromEvent` is used with event target of that type, you can provide this values\n * as third parameter as well.\n *\n * **Node.js EventEmitter**\n *\n * An object with `addListener` and `removeListener` methods.\n *\n * **JQuery-style event target**\n *\n * An object with `on` and `off` methods\n *\n * **DOM NodeList**\n *\n * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n *\n * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n * it contains and install event handler function in every of them. When returned Observable\n * is unsubscribed, function will be removed from all Nodes.\n *\n * **DOM HtmlCollection**\n *\n * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n * installed and removed in each of elements.\n *\n *\n * ## Examples\n *\n * Emit clicks happening on the DOM document\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * clicks.subscribe(x => console.log(x));\n *\n * // Results in:\n * // MouseEvent object logged to console every time a click\n * // occurs on the document.\n * ```\n *\n * Use `addEventListener` with capture option\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * // note optional configuration parameter which will be passed to addEventListener\n * const clicksInDocument = fromEvent(document, 'click', { capture: true });\n * const clicksInDiv = fromEvent(div, 'click');\n *\n * clicksInDocument.subscribe(() => console.log('document'));\n * clicksInDiv.subscribe(() => console.log('div'));\n *\n * // By default events bubble UP in DOM tree, so normally\n * // when we would click on div in document\n * // \"div\" would be logged first and then \"document\".\n * // Since we specified optional `capture` option, document\n * // will catch event when it goes DOWN DOM tree, so console\n * // will log \"document\" and then \"div\".\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n * @see {@link fromEventPattern}\n *\n * @param {FromEventTarget<T>} target The DOM EventTarget, Node.js\n * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n * @param {string} eventName The event name of interest, being emitted by the\n * `target`.\n * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n * @return {Observable<T>}\n */\nexport function fromEvent<T>(\n  target: any,\n  eventName: string,\n  options?: EventListenerOptions | ((...args: any[]) => T),\n  resultSelector?: (...args: any[]) => T\n): Observable<T> {\n  if (isFunction(options)) {\n    resultSelector = options;\n    options = undefined;\n  }\n  if (resultSelector) {\n    return fromEvent<T>(target, eventName, options as EventListenerOptions).pipe(mapOneOrManyArgs(resultSelector));\n  }\n\n  // Figure out our add and remove methods. In order to do this,\n  // we are going to analyze the target in a preferred order, if\n  // the target matches a given signature, we take the two \"add\" and \"remove\"\n  // method names and apply them to a map to create opposite versions of the\n  // same function. This is because they all operate in duplicate pairs,\n  // `addListener(name, handler)`, `removeListener(name, handler)`, for example.\n  // The call only differs by method name, as to whether or not you're adding or removing.\n  const [add, remove] =\n    // If it is an EventTarget, we need to use a slightly different method than the other two patterns.\n    isEventTarget(target)\n      ? eventTargetMethods.map((methodName) => (handler: any) => target[methodName](eventName, handler, options as EventListenerOptions))\n      : // In all other cases, the call pattern is identical with the exception of the method names.\n      isNodeStyleEventEmitter(target)\n      ? nodeEventEmitterMethods.map(toCommonHandlerRegistry(target, eventName))\n      : isJQueryStyleEventEmitter(target)\n      ? jqueryMethods.map(toCommonHandlerRegistry(target, eventName))\n      : [];\n\n  // If add is falsy, it's because we didn't match a pattern above.\n  // Check to see if it is an ArrayLike, because if it is, we want to\n  // try to apply fromEvent to all of it's items. We do this check last,\n  // because there are may be some types that are both ArrayLike *and* implement\n  // event registry points, and we'd rather delegate to that when possible.\n  if (!add) {\n    if (isArrayLike(target)) {\n      return mergeMap((subTarget: any) => fromEvent(subTarget, eventName, options as EventListenerOptions))(\n        innerFrom(target)\n      ) as Observable<T>;\n    }\n  }\n\n  // If add is falsy and we made it here, it's because we didn't\n  // match any valid target objects above.\n  if (!add) {\n    throw new TypeError('Invalid event target');\n  }\n\n  return new Observable<T>((subscriber) => {\n    // The handler we are going to register. Forwards the event object, by itself, or\n    // an array of arguments to the event handler, if there is more than one argument,\n    // to the consumer.\n    const handler = (...args: any[]) => subscriber.next(1 < args.length ? args : args[0]);\n    // Do the work of adding the handler to the target.\n    add(handler);\n    // When we finalize, we want to remove the handler and free up memory.\n    return () => remove!(handler);\n  });\n}\n\n/**\n * Used to create `add` and `remove` functions to register and unregister event handlers\n * from a target in the most common handler pattern, where there are only two arguments.\n * (e.g.  `on(name, fn)`, `off(name, fn)`, `addListener(name, fn)`, or `removeListener(name, fn)`)\n * @param target The target we're calling methods on\n * @param eventName The event name for the event we're creating register or unregister functions for\n */\nfunction toCommonHandlerRegistry(target: any, eventName: string) {\n  return (methodName: string) => (handler: any) => target[methodName](eventName, handler);\n}\n\n/**\n * Checks to see if the target implements the required node-style EventEmitter methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isNodeStyleEventEmitter(target: any): target is NodeStyleEventEmitter {\n  return isFunction(target.addListener) && isFunction(target.removeListener);\n}\n\n/**\n * Checks to see if the target implements the required jQuery-style EventEmitter methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isJQueryStyleEventEmitter(target: any): target is JQueryStyleEventEmitter<any, any> {\n  return isFunction(target.on) && isFunction(target.off);\n}\n\n/**\n * Checks to see if the target implements the required EventTarget methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isEventTarget(target: any): target is HasEventTargetAddRemove<any> {\n  return isFunction(target.addEventListener) && isFunction(target.removeEventListener);\n}\n", "import { Observable } from '../Observable';\nimport { noop } from '../util/noop';\n\n/**\n * An Observable that emits no items to the Observer and never completes.\n *\n * ![](never.png)\n *\n * A simple Observable that emits neither values nor errors nor the completion\n * notification. It can be used for testing purposes or for composing with other\n * Observables. Please note that by never emitting a complete notification, this\n * Observable keeps the subscription from being disposed automatically.\n * Subscriptions need to be manually disposed.\n *\n * ##  Example\n *\n * Emit the number 7, then never emit anything else (not even complete)\n *\n * ```ts\n * import { NEVER, startWith } from 'rxjs';\n *\n * const info = () => console.log('Will not be called');\n *\n * const result = NEVER.pipe(startWith(7));\n * result.subscribe({\n *   next: x => console.log(x),\n *   error: info,\n *   complete: info\n * });\n * ```\n *\n * @see {@link Observable}\n * @see {@link EMPTY}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const NEVER = new Observable<never>(noop);\n\n/**\n * @deprecated Replaced with the {@link NEVER} constant. Will be removed in v8.\n */\nexport function never() {\n  return NEVER;\n}\n", "const { isArray } = Array;\n\n/**\n * Used in operators and functions that accept either a list of arguments, or an array of arguments\n * as a single argument.\n */\nexport function argsOrArgArray<T>(args: (T | T[])[]): T[] {\n  return args.length === 1 && isArray(args[0]) ? args[0] : (args as T[]);\n}\n", "import { OperatorFunction, MonoTypeOperatorFunction, TruthyTypesOf } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function filter<T, S extends T, A>(predicate: (this: A, value: T, index: number) => value is S, thisArg: A): OperatorFunction<T, S>;\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S): OperatorFunction<T, S>;\nexport function filter<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function filter<T, A>(predicate: (this: A, value: T, index: number) => boolean, thisArg: A): MonoTypeOperatorFunction<T>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * ![](filter.png)\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * ## Example\n *\n * Emit only click events whose target was a DIV element\n *\n * ```ts\n * import { fromEvent, filter } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksOnDivs = clicks.pipe(filter(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * clicksOnDivs.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param thisArg An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return A function that returns an Observable that emits items from the\n * source Observable that satisfy the specified `predicate`.\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean, thisArg?: any): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    // An index passed to our predicate function on each call.\n    let index = 0;\n\n    // Subscribe to the source, all errors and completions are\n    // forwarded to the consumer.\n    source.subscribe(\n      // Call the predicate with the appropriate `this` context,\n      // if the predicate returns `true`, then send the value\n      // to the consumer.\n      createOperatorSubscriber(subscriber, (value) => predicate.call(thisArg, value, index++) && subscriber.next(value))\n    );\n  });\n}\n", "import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * A basic scan operation. This is used for `scan` and `reduce`.\n * @param accumulator The accumulator to use\n * @param seed The seed value for the state to accumulate\n * @param hasSeed Whether or not a seed was provided\n * @param emitOnNext Whether or not to emit the state on next\n * @param emitBeforeComplete Whether or not to emit the before completion\n */\n\nexport function scanInternals<V, A, S>(\n  accumulator: (acc: V | A | S, value: V, index: number) => A,\n  seed: S,\n  hasSeed: boolean,\n  emitOnNext: boolean,\n  emitBeforeComplete?: undefined | true\n) {\n  return (source: Observable<V>, subscriber: Subscriber<any>) => {\n    // Whether or not we have state yet. This will only be\n    // false before the first value arrives if we didn't get\n    // a seed value.\n    let hasState = hasSeed;\n    // The state that we're tracking, starting with the seed,\n    // if there is one, and then updated by the return value\n    // from the accumulator on each emission.\n    let state: any = seed;\n    // An index to pass to the accumulator function.\n    let index = 0;\n\n    // Subscribe to our source. All errors and completions are passed through.\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          // Always increment the index.\n          const i = index++;\n          // Set the state\n          state = hasState\n            ? // We already have state, so we can get the new state from the accumulator\n              accumulator(state, value, i)\n            : // We didn't have state yet, a seed value was not provided, so\n\n              // we set the state to the first value, and mark that we have state now\n              ((hasState = true), value);\n\n          // Maybe send it to the consumer.\n          emitOnNext && subscriber.next(state);\n        },\n        // If an onComplete was given, call it, otherwise\n        // just pass through the complete notification to the consumer.\n        emitBeforeComplete &&\n          (() => {\n            hasState && subscriber.next(state);\n            subscriber.complete();\n          })\n      )\n    );\n  };\n}\n", "import { MonoTypeOperatorFunction } from '../types';\nimport { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function distinctUntilChanged<T>(comparator?: (previous: T, current: T) => boolean): MonoTypeOperatorFunction<T>;\nexport function distinctUntilChanged<T, K>(\n  comparator: (previous: K, current: K) => boolean,\n  keySelector: (value: T) => K\n): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns a result {@link Observable} that emits all values pushed by the source observable if they\n * are distinct in comparison to the last value the result observable emitted.\n *\n * When provided without parameters or with the first parameter (`{@link distinctUntilChanged#comparator comparator}`),\n * it behaves like this:\n *\n * 1. It will always emit the first value from the source.\n * 2. For all subsequent values pushed by the source, they will be compared to the previously emitted values\n *    using the provided `comparator` or an `===` equality check.\n * 3. If the value pushed by the source is determined to be unequal by this check, that value is emitted and\n *    becomes the new \"previously emitted value\" internally.\n *\n * When the second parameter (`{@link distinctUntilChanged#keySelector keySelector}`) is provided, the behavior\n * changes:\n *\n * 1. It will always emit the first value from the source.\n * 2. The `keySelector` will be run against all values, including the first value.\n * 3. For all values after the first, the selected key will be compared against the key selected from\n *    the previously emitted value using the `comparator`.\n * 4. If the keys are determined to be unequal by this check, the value (not the key), is emitted\n *    and the selected key from that value is saved for future comparisons against other keys.\n *\n * ## Examples\n *\n * A very basic example with no `{@link distinctUntilChanged#comparator comparator}`. Note that `1` is emitted more than once,\n * because it's distinct in comparison to the _previously emitted_ value,\n * not in comparison to _all other emitted values_.\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * of(1, 1, 1, 2, 2, 2, 1, 1, 3, 3)\n *   .pipe(distinctUntilChanged())\n *   .subscribe(console.log);\n * // Logs: 1, 2, 1, 3\n * ```\n *\n * With a `{@link distinctUntilChanged#comparator comparator}`, you can do custom comparisons. Let's say\n * you only want to emit a value when all of its components have\n * changed:\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * const totallyDifferentBuilds$ = of(\n *   { engineVersion: '1.1.0', transmissionVersion: '1.2.0' },\n *   { engineVersion: '1.1.0', transmissionVersion: '1.4.0' },\n *   { engineVersion: '1.3.0', transmissionVersion: '1.4.0' },\n *   { engineVersion: '1.3.0', transmissionVersion: '1.5.0' },\n *   { engineVersion: '2.0.0', transmissionVersion: '1.5.0' }\n * ).pipe(\n *   distinctUntilChanged((prev, curr) => {\n *     return (\n *       prev.engineVersion === curr.engineVersion ||\n *       prev.transmissionVersion === curr.transmissionVersion\n *     );\n *   })\n * );\n *\n * totallyDifferentBuilds$.subscribe(console.log);\n *\n * // Logs:\n * // { engineVersion: '1.1.0', transmissionVersion: '1.2.0' }\n * // { engineVersion: '1.3.0', transmissionVersion: '1.4.0' }\n * // { engineVersion: '2.0.0', transmissionVersion: '1.5.0' }\n * ```\n *\n * You can also provide a custom `{@link distinctUntilChanged#comparator comparator}` to check that emitted\n * changes are only in one direction. Let's say you only want to get\n * the next record temperature:\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * const temps$ = of(30, 31, 20, 34, 33, 29, 35, 20);\n *\n * const recordHighs$ = temps$.pipe(\n *   distinctUntilChanged((prevHigh, temp) => {\n *     // If the current temp is less than\n *     // or the same as the previous record,\n *     // the record hasn't changed.\n *     return temp <= prevHigh;\n *   })\n * );\n *\n * recordHighs$.subscribe(console.log);\n * // Logs: 30, 31, 34, 35\n * ```\n *\n * Selecting update events only when the `updatedBy` field shows\n * the account changed hands.\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * // A stream of updates to a given account\n * const accountUpdates$ = of(\n *   { updatedBy: 'blesh', data: [] },\n *   { updatedBy: 'blesh', data: [] },\n *   { updatedBy: 'ncjamieson', data: [] },\n *   { updatedBy: 'ncjamieson', data: [] },\n *   { updatedBy: 'blesh', data: [] }\n * );\n *\n * // We only want the events where it changed hands\n * const changedHands$ = accountUpdates$.pipe(\n *   distinctUntilChanged(undefined, update => update.updatedBy)\n * );\n *\n * changedHands$.subscribe(console.log);\n * // Logs:\n * // { updatedBy: 'blesh', data: Array[0] }\n * // { updatedBy: 'ncjamieson', data: Array[0] }\n * // { updatedBy: 'blesh', data: Array[0] }\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param comparator A function used to compare the previous and current keys for\n * equality. Defaults to a `===` check.\n * @param keySelector Used to select a key value to be passed to the `comparator`.\n *\n * @return A function that returns an Observable that emits items from the\n * source Observable with distinct values.\n */\nexport function distinctUntilChanged<T, K>(\n  comparator?: (previous: K, current: K) => boolean,\n  keySelector: (value: T) => K = identity as (value: T) => K\n): MonoTypeOperatorFunction<T> {\n  // We've been allowing `null` do be passed as the `compare`, so we can't do\n  // a default value for the parameter, because that will only work\n  // for `undefined`.\n  comparator = comparator ?? defaultCompare;\n\n  return operate((source, subscriber) => {\n    // The previous key, used to compare against keys selected\n    // from new arrivals to determine \"distinctiveness\".\n    let previousKey: K;\n    // Whether or not this is the first value we've gotten.\n    let first = true;\n\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        // We always call the key selector.\n        const currentKey = keySelector(value);\n\n        // If it's the first value, we always emit it.\n        // Otherwise, we compare this key to the previous key, and\n        // if the comparer returns false, we emit.\n        if (first || !comparator!(previousKey, currentKey)) {\n          // Update our state *before* we emit the value\n          // as emission can be the source of re-entrant code\n          // in functional libraries like this. We only really\n          // need to do this if it's the first value, or if the\n          // key we're tracking in previous needs to change.\n          first = false;\n          previousKey = currentKey;\n\n          // Emit the value!\n          subscriber.next(value);\n        }\n      })\n    );\n  });\n}\n\nfunction defaultCompare(a: any, b: any) {\n  return a === b;\n}\n", "import { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\n\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * The specified function will also be called when the subscriber explicitly unsubscribes.\n *\n * ## Examples\n *\n * Execute callback function when the observable completes\n *\n * ```ts\n * import { interval, take, finalize } from 'rxjs';\n *\n * // emit value in sequence every 1 second\n * const source = interval(1000);\n * const example = source.pipe(\n *   take(5), //take only the first 5 values\n *   finalize(() => console.log('Sequence complete')) // Execute when the observable completes\n * );\n * const subscribe = example.subscribe(val => console.log(val));\n *\n * // results:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * // 'Sequence complete'\n * ```\n *\n * Execute callback function when the subscriber explicitly unsubscribes\n *\n * ```ts\n * import { interval, finalize, tap, noop, timer } from 'rxjs';\n *\n * const source = interval(100).pipe(\n *   finalize(() => console.log('[finalize] Called')),\n *   tap({\n *     next: () => console.log('[next] Called'),\n *     error: () => console.log('[error] Not called'),\n *     complete: () => console.log('[tap complete] Not called')\n *   })\n * );\n *\n * const sub = source.subscribe({\n *   next: x => console.log(x),\n *   error: noop,\n *   complete: () => console.log('[complete] Not called')\n * });\n *\n * timer(150).subscribe(() => sub.unsubscribe());\n *\n * // results:\n * // '[next] Called'\n * // 0\n * // '[finalize] Called'\n * ```\n *\n * @param {function} callback Function to be called when source terminates.\n * @return A function that returns an Observable that mirrors the source, but\n * will call the specified function on termination.\n */\nexport function finalize<T>(callback: () => void): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    // TODO: This try/finally was only added for `useDeprecatedSynchronousErrorHandling`.\n    // REMOVE THIS WHEN THAT HOT GARBAGE IS REMOVED IN V8.\n    try {\n      source.subscribe(subscriber);\n    } finally {\n      subscriber.add(callback);\n    }\n  });\n}\n", "import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { scanInternals } from './scanInternals';\n\nexport function scan<V, A = V>(accumulator: (acc: A | V, value: V, index: number) => A): OperatorFunction<V, V | A>;\nexport function scan<V, A>(accumulator: (acc: A, value: V, index: number) => A, seed: A): OperatorFunction<V, A>;\nexport function scan<V, A, S>(accumulator: (acc: A | S, value: V, index: number) => A, seed: S): OperatorFunction<V, A>;\n\n// TODO: link to a \"redux pattern\" section in the guide (location TBD)\n\n/**\n * Useful for encapsulating and managing state. Applies an accumulator (or \"reducer function\")\n * to each value from the source after an initial state is established -- either via\n * a `seed` value (second argument), or from the first value from the source.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation state after each update</span>\n *\n * ![](scan.png)\n *\n * This operator maintains an internal state and emits it after processing each value as follows:\n *\n * 1. First value arrives\n *   - If a `seed` value was supplied (as the second argument to `scan`), let `state = seed` and `value = firstValue`.\n *   - If NO `seed` value was supplied (no second argument), let `state = firstValue` and go to 3.\n * 2. Let `state = accumulator(state, value)`.\n *   - If an error is thrown by `accumulator`, notify the consumer of an error. The process ends.\n * 3. Emit `state`.\n * 4. Next value arrives, let `value = nextValue`, go to 2.\n *\n * ## Examples\n *\n * An average of previous numbers. This example shows how\n * not providing a `seed` can prime the stream with the\n * first value from the source.\n *\n * ```ts\n * import { of, scan, map } from 'rxjs';\n *\n * const numbers$ = of(1, 2, 3);\n *\n * numbers$\n *   .pipe(\n *     // Get the sum of the numbers coming in.\n *     scan((total, n) => total + n),\n *     // Get the average by dividing the sum by the total number\n *     // received so far (which is 1 more than the zero-based index).\n *     map((sum, index) => sum / (index + 1))\n *   )\n *   .subscribe(console.log);\n * ```\n *\n * The Fibonacci sequence. This example shows how you can use\n * a seed to prime accumulation process. Also... you know... Fibonacci.\n * So important to like, computers and stuff that its whiteboarded\n * in job interviews. Now you can show them the Rx version! (Please don't, haha)\n *\n * ```ts\n * import { interval, scan, map, startWith } from 'rxjs';\n *\n * const firstTwoFibs = [0, 1];\n * // An endless stream of Fibonacci numbers.\n * const fibonacci$ = interval(1000).pipe(\n *   // Scan to get the fibonacci numbers (after 0, 1)\n *   scan(([a, b]) => [b, a + b], firstTwoFibs),\n *   // Get the second number in the tuple, it's the one you calculated\n *   map(([, n]) => n),\n *   // Start with our first two digits :)\n *   startWith(...firstTwoFibs)\n * );\n *\n * fibonacci$.subscribe(console.log);\n * ```\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n * @see {@link switchScan}\n *\n * @param accumulator A \"reducer function\". This will be called for each value after an initial state is\n * acquired.\n * @param seed The initial state. If this is not provided, the first value from the source will\n * be used as the initial state, and emitted without going through the accumulator. All subsequent values\n * will be processed by the accumulator function. If this is provided, all values will go through\n * the accumulator function.\n * @return A function that returns an Observable of the accumulated values.\n */\nexport function scan<V, A, S>(accumulator: (acc: V | A | S, value: V, index: number) => A, seed?: S): OperatorFunction<V, V | A> {\n  // providing a seed of `undefined` *should* be valid and trigger\n  // hasSeed! so don't use `seed !== undefined` checks!\n  // For this reason, we have to check it here at the original call site\n  // otherwise inside Operator/Subscriber we won't know if `undefined`\n  // means they didn't provide anything or if they literally provided `undefined`\n  return operate(scanInternals(accumulator, seed as S, arguments.length >= 2, true));\n}\n", "import { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { noop } from '../util/noop';\n\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * The `skipUntil` operator causes the observable stream to skip the emission of values until the passed in observable\n * emits the first value. This can be particularly useful in combination with user interactions, responses of HTTP\n * requests or waiting for specific times to pass by.\n *\n * ![](skipUntil.png)\n *\n * Internally, the `skipUntil` operator subscribes to the passed in `notifier` `ObservableInput` (which gets converted\n * to an Observable) in order to recognize the emission of its first value. When `notifier` emits next, the operator\n * unsubscribes from it and starts emitting the values of the *source* observable until it completes or errors. It\n * will never let the *source* observable emit any values if the `notifier` completes or throws an error without\n * emitting a value before.\n *\n * ## Example\n *\n * In the following example, all emitted values of the interval observable are skipped until the user clicks anywhere\n * within the page\n *\n * ```ts\n * import { interval, fromEvent, skipUntil } from 'rxjs';\n *\n * const intervalObservable = interval(1000);\n * const click = fromEvent(document, 'click');\n *\n * const emitAfterClick = intervalObservable.pipe(\n *   skipUntil(click)\n * );\n * // clicked at 4.6s. output: 5...6...7...8........ or\n * // clicked at 7.3s. output: 8...9...10..11.......\n * emitAfterClick.subscribe(value => console.log(value));\n * ```\n *\n * @see {@link last}\n * @see {@link skip}\n * @see {@link skipWhile}\n * @see {@link skipLast}\n *\n * @param notifier An `ObservableInput` that has to emit an item before the source Observable elements begin to\n * be mirrored by the resulting Observable.\n * @return A function that returns an Observable that skips items from the\n * source Observable until the `notifier` Observable emits an item, then emits the\n * remaining items.\n */\nexport function skipUntil<T>(notifier: ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let taking = false;\n\n    const skipSubscriber = createOperatorSubscriber(\n      subscriber,\n      () => {\n        skipSubscriber?.unsubscribe();\n        taking = true;\n      },\n      noop\n    );\n\n    innerFrom(notifier).subscribe(skipSubscriber);\n\n    source.subscribe(createOperatorSubscriber(subscriber, (value) => taking && subscriber.next(value)));\n  });\n}\n", "import { concat } from '../observable/concat';\nimport { OperatorFunction, SchedulerLike, ValueFromArray } from '../types';\nimport { popScheduler } from '../util/args';\nimport { operate } from '../util/lift';\n\n// Devs are more likely to pass null or undefined than they are a scheduler\n// without accompanying values. To make things easier for (naughty) devs who\n// use the `strictNullChecks: false` TypeScript compiler option, these\n// overloads with explicit null and undefined values are included.\n\nexport function startWith<T>(value: null): OperatorFunction<T, T | null>;\nexport function startWith<T>(value: undefined): OperatorFunction<T, T | undefined>;\n\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `concatAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function startWith<T, A extends readonly unknown[] = T[]>(\n  ...valuesAndScheduler: [...A, SchedulerLike]\n): OperatorFunction<T, T | ValueFromArray<A>>;\nexport function startWith<T, A extends readonly unknown[] = T[]>(...values: A): OperatorFunction<T, T | ValueFromArray<A>>;\n\n/**\n * Returns an observable that, at the moment of subscription, will synchronously emit all\n * values provided to this operator, then subscribe to the source and mirror all of its emissions\n * to subscribers.\n *\n * This is a useful way to know when subscription has occurred on an existing observable.\n *\n * <span class=\"informal\">First emits its arguments in order, and then any\n * emissions from the source.</span>\n *\n * ![](startWith.png)\n *\n * ## Examples\n *\n * Emit a value when a timer starts.\n *\n * ```ts\n * import { timer, map, startWith } from 'rxjs';\n *\n * timer(1000)\n *   .pipe(\n *     map(() => 'timer emit'),\n *     startWith('timer start')\n *   )\n *   .subscribe(x => console.log(x));\n *\n * // results:\n * // 'timer start'\n * // 'timer emit'\n * ```\n *\n * @param values Items you want the modified Observable to emit first.\n * @return A function that returns an Observable that synchronously emits\n * provided values before subscribing to the source Observable.\n *\n * @see {@link endWith}\n * @see {@link finalize}\n * @see {@link concat}\n */\nexport function startWith<T, D>(...values: D[]): OperatorFunction<T, T | D> {\n  const scheduler = popScheduler(values);\n  return operate((source, subscriber) => {\n    // Here we can't pass `undefined` as a scheduler, because if we did, the\n    // code inside of `concat` would be confused by the `undefined`, and treat it\n    // like an invalid observable. So we have to split it two different ways.\n    (scheduler ? concat(values, source, scheduler) : concat(values, source)).subscribe(subscriber);\n  });\n}\n", "import { Subscriber } from '../Subscriber';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/* tslint:disable:max-line-length */\nexport function switchMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switchAll}.</span>\n *\n * ![](switchMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * ## Example\n *\n * Generate new Observable according to source Observable values\n *\n * ```ts\n * import { of, switchMap } from 'rxjs';\n *\n * const switched = of(1, 2, 3).pipe(switchMap(x => of(x, x ** 2, x ** 3)));\n * switched.subscribe(x => console.log(x));\n * // outputs\n * // 1\n * // 1\n * // 1\n * // 2\n * // 4\n * // 8\n * // 3\n * // 9\n * // 27\n * ```\n *\n * Restart an interval Observable on every click event\n *\n * ```ts\n * import { fromEvent, switchMap, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(switchMap(() => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchAll}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and taking\n * only the values from the most recently projected inner Observable.\n */\nexport function switchMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return operate((source, subscriber) => {\n    let innerSubscriber: Subscriber<ObservedValueOf<O>> | null = null;\n    let index = 0;\n    // Whether or not the source subscription has completed\n    let isComplete = false;\n\n    // We only complete the result if the source is complete AND we don't have an active inner subscription.\n    // This is called both when the source completes and when the inners complete.\n    const checkComplete = () => isComplete && !innerSubscriber && subscriber.complete();\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          // Cancel the previous inner subscription if there was one\n          innerSubscriber?.unsubscribe();\n          let innerIndex = 0;\n          const outerIndex = index++;\n          // Start the next inner subscription\n          innerFrom(project(value, outerIndex)).subscribe(\n            (innerSubscriber = createOperatorSubscriber(\n              subscriber,\n              // When we get a new inner value, next it through. Note that this is\n              // handling the deprecate result selector here. This is because with this architecture\n              // it ends up being smaller than using the map operator.\n              (innerValue) => subscriber.next(resultSelector ? resultSelector(value, innerValue, outerIndex, innerIndex++) : innerValue),\n              () => {\n                // The inner has completed. Null out the inner subscriber to\n                // free up memory and to signal that we have no inner subscription\n                // currently.\n                innerSubscriber = null!;\n                checkComplete();\n              }\n            ))\n          );\n        },\n        () => {\n          isComplete = true;\n          checkComplete();\n        }\n      )\n    );\n  });\n}\n", "import { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { noop } from '../util/noop';\n\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits a value. Then, it completes.</span>\n *\n * ![](takeUntil.png)\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value, the output Observable stops mirroring the source Observable\n * and completes. If the `notifier` doesn't emit any value and completes\n * then `takeUntil` will pass all values.\n *\n * ## Example\n *\n * Tick every second until the first click happens\n *\n * ```ts\n * import { interval, fromEvent, takeUntil } from 'rxjs';\n *\n * const source = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const result = source.pipe(takeUntil(clicks));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return A function that returns an Observable that emits the values from the\n * source Observable until `notifier` emits its first value.\n */\nexport function takeUntil<T>(notifier: ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    innerFrom(notifier).subscribe(createOperatorSubscriber(subscriber, () => subscriber.complete(), noop));\n    !subscriber.closed && source.subscribe(subscriber);\n  });\n}\n", "function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;", "import { useCallback, useState } from 'react';\nfunction useBoolean(defaultValue) {\n    const [value, setValue] = useState(!!defaultValue);\n    const setTrue = useCallback(() => setValue(true), []);\n    const setFalse = useCallback(() => setValue(false), []);\n    const toggle = useCallback(() => setValue(x => !x), []);\n    return { value, setValue, setTrue, setFalse, toggle };\n}\nexport default useBoolean;\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { useState } from 'react';\nfunction useCopyToClipboard() {\n    const [copiedText, setCopiedText] = useState(null);\n    const copy = (text) => __awaiter(this, void 0, void 0, function* () {\n        if (!(navigator === null || navigator === void 0 ? void 0 : navigator.clipboard)) {\n            console.warn('Clipboard not supported');\n            return false;\n        }\n        try {\n            yield navigator.clipboard.writeText(text);\n            setCopiedText(text);\n            return true;\n        }\n        catch (error) {\n            console.warn('Copy failed', error);\n            setCopiedText(null);\n            return false;\n        }\n    });\n    return [copiedText, copy];\n}\nexport default useCopyToClipboard;\n", "import { useCallback } from 'react';\nimport { useBoolean, useCounter, useInterval } from '..';\nfunction useCountdown(countdownOption) {\n    let isDeprecated = false;\n    let countStart, intervalMs, isIncrement, countStop;\n    if ('seconds' in countdownOption) {\n        console.warn('[useCountdown:DEPRECATED] new interface is already available (see https://usehooks-ts.com/react-hook/use-countdown), the old version will retire on usehooks-ts@3.');\n        isDeprecated = true;\n        countStart = countdownOption.seconds;\n        intervalMs = countdownOption.interval;\n        isIncrement = countdownOption.isIncrement;\n    }\n    else {\n        ;\n        ({ countStart, intervalMs, isIncrement, countStop } = countdownOption);\n    }\n    intervalMs = intervalMs !== null && intervalMs !== void 0 ? intervalMs : 1000;\n    isIncrement = isIncrement !== null && isIncrement !== void 0 ? isIncrement : false;\n    countStop = countStop !== null && countStop !== void 0 ? countStop : 0;\n    const { count, increment, decrement, reset: resetCounter, } = useCounter(countStart);\n    const { value: isCountdownRunning, setTrue: startCountdown, setFalse: stopCountdown, } = useBoolean(false);\n    const resetCountdown = () => {\n        stopCountdown();\n        resetCounter();\n    };\n    const countdownCallback = useCallback(() => {\n        if (count === countStop) {\n            stopCountdown();\n            return;\n        }\n        if (isIncrement) {\n            increment();\n        }\n        else {\n            decrement();\n        }\n    }, [count, countStop, decrement, increment, isIncrement, stopCountdown]);\n    useInterval(countdownCallback, isCountdownRunning ? intervalMs : null);\n    return isDeprecated\n        ? [\n            count,\n            {\n                start: startCountdown,\n                stop: stopCountdown,\n                reset: resetCountdown,\n            },\n        ]\n        : [\n            count,\n            {\n                startCountdown,\n                stopCountdown,\n                resetCountdown,\n            },\n        ];\n}\nexport default useCountdown;\n", "import { useState } from 'react';\nfunction useCounter(initialValue) {\n    const [count, setCount] = useState(initialValue || 0);\n    const increment = () => setCount(x => x + 1);\n    const decrement = () => setCount(x => x - 1);\n    const reset = () => setCount(initialValue || 0);\n    return {\n        count,\n        increment,\n        decrement,\n        reset,\n        setCount,\n    };\n}\nexport default useCounter;\n", "import { useEffect, useState } from 'react';\nfunction useDebounce(value, delay) {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n    useEffect(() => {\n        const timer = setTimeout(() => setDebouncedValue(value), delay || 500);\n        return () => {\n            clearTimeout(timer);\n        };\n    }, [value, delay]);\n    return debouncedValue;\n}\nexport default useDebounce;\n", "import { useEffect } from 'react';\nfunction useEffectOnce(effect) {\n    useEffect(effect, []);\n}\nexport default useEffectOnce;\n", "import { useCallback, useState } from 'react';\nimport { useEventListener, useIsomorphicLayoutEffect } from '..';\nfunction useElementSize() {\n    const [ref, setRef] = useState(null);\n    const [size, setSize] = useState({\n        width: 0,\n        height: 0,\n    });\n    const handleSize = useCallback(() => {\n        setSize({\n            width: (ref === null || ref === void 0 ? void 0 : ref.offsetWidth) || 0,\n            height: (ref === null || ref === void 0 ? void 0 : ref.offsetHeight) || 0,\n        });\n    }, [ref === null || ref === void 0 ? void 0 : ref.offsetHeight, ref === null || ref === void 0 ? void 0 : ref.offsetWidth]);\n    useEventListener('resize', handleSize);\n    useIsomorphicLayoutEffect(() => {\n        handleSize();\n    }, [ref === null || ref === void 0 ? void 0 : ref.offsetHeight, ref === null || ref === void 0 ? void 0 : ref.offsetWidth]);\n    return [setRef, size];\n}\nexport default useElementSize;\n", "import { useCallback, useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from '..';\nexport default function useEventCallback(fn) {\n    const ref = useRef(() => {\n        throw new Error('Cannot call an event handler while rendering.');\n    });\n    useIsomorphicLayoutEffect(() => {\n        ref.current = fn;\n    }, [fn]);\n    return useCallback((...args) => ref.current(...args), [ref]);\n}\n", "import { useEffect, useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from '..';\nfunction useEventListener(eventName, handler, element, options) {\n    const savedHandler = useRef(handler);\n    useIsomorphicLayoutEffect(() => {\n        savedHandler.current = handler;\n    }, [handler]);\n    useEffect(() => {\n        var _a;\n        const targetElement = (_a = element === null || element === void 0 ? void 0 : element.current) !== null && _a !== void 0 ? _a : window;\n        if (!(targetElement && targetElement.addEventListener))\n            return;\n        const listener = event => savedHandler.current(event);\n        targetElement.addEventListener(eventName, listener, options);\n        return () => {\n            targetElement.removeEventListener(eventName, listener, options);\n        };\n    }, [eventName, element, options]);\n}\nexport default useEventListener;\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { useEffect, useReducer, useRef } from 'react';\nfunction useFetch(url, options) {\n    const cache = useRef({});\n    const cancelRequest = useRef(false);\n    const initialState = {\n        error: undefined,\n        data: undefined,\n    };\n    const fetchReducer = (state, action) => {\n        switch (action.type) {\n            case 'loading':\n                return Object.assign({}, initialState);\n            case 'fetched':\n                return Object.assign(Object.assign({}, initialState), { data: action.payload });\n            case 'error':\n                return Object.assign(Object.assign({}, initialState), { error: action.payload });\n            default:\n                return state;\n        }\n    };\n    const [state, dispatch] = useReducer(fetchReducer, initialState);\n    useEffect(() => {\n        if (!url)\n            return;\n        cancelRequest.current = false;\n        const fetchData = () => __awaiter(this, void 0, void 0, function* () {\n            dispatch({ type: 'loading' });\n            if (cache.current[url]) {\n                dispatch({ type: 'fetched', payload: cache.current[url] });\n                return;\n            }\n            try {\n                const response = yield fetch(url, options);\n                if (!response.ok) {\n                    throw new Error(response.statusText);\n                }\n                const data = (yield response.json());\n                cache.current[url] = data;\n                if (cancelRequest.current)\n                    return;\n                dispatch({ type: 'fetched', payload: data });\n            }\n            catch (error) {\n                if (cancelRequest.current)\n                    return;\n                dispatch({ type: 'error', payload: error });\n            }\n        });\n        void fetchData();\n        return () => {\n            cancelRequest.current = true;\n        };\n    }, [url]);\n    return state;\n}\nexport default useFetch;\n", "import { useState } from 'react';\nimport { useEventListener } from '..';\nfunction useHover(elementRef) {\n    const [value, setValue] = useState(false);\n    const handleMouseEnter = () => setValue(true);\n    const handleMouseLeave = () => setValue(false);\n    useEventListener('mouseenter', handleMouseEnter, elementRef);\n    useEventListener('mouseleave', handleMouseLeave, elementRef);\n    return value;\n}\nexport default useHover;\n", "import { useState } from 'react';\nfunction useImageOnLoad() {\n    const [isLoaded, setIsLoaded] = useState(false);\n    const handleImageOnLoad = () => {\n        setIsLoaded(true);\n    };\n    const css = {\n        thumbnail: {\n            visibility: isLoaded ? 'hidden' : 'visible',\n            filter: 'blur(8px)',\n            transition: 'visibility 0ms ease-out 500ms',\n        },\n        fullSize: {\n            opacity: isLoaded ? 1 : 0,\n            transition: 'opacity 500ms ease-in 0ms',\n        },\n    };\n    return { handleImageOnLoad, css };\n}\nexport default useImageOnLoad;\n", "import { useEffect, useState } from 'react';\nfunction useIntersectionObserver(elementRef, { threshold = 0, root = null, rootMargin = '0%', freezeOnceVisible = false, }) {\n    const [entry, setEntry] = useState();\n    const frozen = (entry === null || entry === void 0 ? void 0 : entry.isIntersecting) && freezeOnceVisible;\n    const updateEntry = ([entry]) => {\n        setEntry(entry);\n    };\n    useEffect(() => {\n        const node = elementRef === null || elementRef === void 0 ? void 0 : elementRef.current;\n        const hasIOSupport = !!window.IntersectionObserver;\n        if (!hasIOSupport || frozen || !node)\n            return;\n        const observerParams = { threshold, root, rootMargin };\n        const observer = new IntersectionObserver(updateEntry, observerParams);\n        observer.observe(node);\n        return () => observer.disconnect();\n    }, [elementRef === null || elementRef === void 0 ? void 0 : elementRef.current, JSON.stringify(threshold), root, rootMargin, frozen]);\n    return entry;\n}\nexport default useIntersectionObserver;\n", "import { useEffect, useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from '..';\nfunction useInterval(callback, delay) {\n    const savedCallback = useRef(callback);\n    useIsomorphicLayoutEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n    useEffect(() => {\n        if (!delay && delay !== 0) {\n            return;\n        }\n        const id = setInterval(() => savedCallback.current(), delay);\n        return () => clearInterval(id);\n    }, [delay]);\n}\nexport default useInterval;\n", "import { useEffect, useState } from 'react';\nfunction useIsClient() {\n    const [isClient, setClient] = useState(false);\n    useEffect(() => {\n        setClient(true);\n    }, []);\n    return isClient;\n}\nexport default useIsClient;\n", "import { useRef } from 'react';\nfunction useIsFirstRender() {\n    const isFirst = useRef(true);\n    if (isFirst.current) {\n        isFirst.current = false;\n        return true;\n    }\n    return isFirst.current;\n}\nexport default useIsFirstRender;\n", "import { useCallback, useEffect, useRef } from 'react';\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return useCallback(() => isMounted.current, []);\n}\nexport default useIsMounted;\n", "import { useEffect, useLayoutEffect } from 'react';\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect;\nexport default useIsomorphicLayoutEffect;\n", "import { useCallback, useEffect, useState, } from 'react';\nimport { useEventCallback, useEventListener } from '..';\nfunction useLocalStorage(key, initialValue) {\n    const readValue = useCallback(() => {\n        if (typeof window === 'undefined') {\n            return initialValue;\n        }\n        try {\n            const item = window.localStorage.getItem(key);\n            return item ? parseJSON(item) : initialValue;\n        }\n        catch (error) {\n            console.warn(`Error reading localStorage key “${key}”:`, error);\n            return initialValue;\n        }\n    }, [initialValue, key]);\n    const [storedValue, setStoredValue] = useState(readValue);\n    const setValue = useEventCallback(value => {\n        if (typeof window === 'undefined') {\n            console.warn(`Tried setting localStorage key “${key}” even though environment is not a client`);\n        }\n        try {\n            const newValue = value instanceof Function ? value(storedValue) : value;\n            window.localStorage.setItem(key, JSON.stringify(newValue));\n            setStoredValue(newValue);\n            window.dispatchEvent(new Event('local-storage'));\n        }\n        catch (error) {\n            console.warn(`Error setting localStorage key “${key}”:`, error);\n        }\n    });\n    useEffect(() => {\n        setStoredValue(readValue());\n    }, []);\n    const handleStorageChange = useCallback((event) => {\n        if ((event === null || event === void 0 ? void 0 : event.key) && event.key !== key) {\n            return;\n        }\n        setStoredValue(readValue());\n    }, [key, readValue]);\n    useEventListener('storage', handleStorageChange);\n    useEventListener('local-storage', handleStorageChange);\n    return [storedValue, setValue];\n}\nexport default useLocalStorage;\nfunction parseJSON(value) {\n    try {\n        return value === 'undefined' ? undefined : JSON.parse(value !== null && value !== void 0 ? value : '');\n    }\n    catch (_a) {\n        console.log('parsing error on', { value });\n        return undefined;\n    }\n}\n", "import { useEffect, useState } from 'react';\nimport { useIsomorphicLayoutEffect } from '..';\nfunction useLockedBody(initialLocked = false, rootId = '___gatsby') {\n    const [locked, setLocked] = useState(initialLocked);\n    useIsomorphicLayoutEffect(() => {\n        if (!locked) {\n            return;\n        }\n        const originalOverflow = document.body.style.overflow;\n        const originalPaddingRight = document.body.style.paddingRight;\n        document.body.style.overflow = 'hidden';\n        const root = document.getElementById(rootId);\n        const scrollBarWidth = root ? root.offsetWidth - root.scrollWidth : 0;\n        if (scrollBarWidth) {\n            document.body.style.paddingRight = `${scrollBarWidth}px`;\n        }\n        return () => {\n            document.body.style.overflow = originalOverflow;\n            if (scrollBarWidth) {\n                document.body.style.paddingRight = originalPaddingRight;\n            }\n        };\n    }, [locked]);\n    useEffect(() => {\n        if (locked !== initialLocked) {\n            setLocked(initialLocked);\n        }\n    }, [initialLocked]);\n    return [locked, setLocked];\n}\nexport default useLockedBody;\n", "import { useCallback, useState } from 'react';\nfunction useMap(initialState = new Map()) {\n    const [map, setMap] = useState(new Map(initialState));\n    const actions = {\n        set: useCallback((key, value) => {\n            setMap(prev => {\n                const copy = new Map(prev);\n                copy.set(key, value);\n                return copy;\n            });\n        }, []),\n        setAll: useCallback(entries => {\n            setMap(() => new Map(entries));\n        }, []),\n        remove: useCallback(key => {\n            setMap(prev => {\n                const copy = new Map(prev);\n                copy.delete(key);\n                return copy;\n            });\n        }, []),\n        reset: useCallback(() => {\n            setMap(() => new Map());\n        }, []),\n    };\n    return [map, actions];\n}\nexport default useMap;\n", "import { useEffect, useState } from 'react';\nfunction useMediaQuery(query) {\n    const getMatches = (query) => {\n        if (typeof window !== 'undefined') {\n            return window.matchMedia(query).matches;\n        }\n        return false;\n    };\n    const [matches, setMatches] = useState(getMatches(query));\n    function handleChange() {\n        setMatches(getMatches(query));\n    }\n    useEffect(() => {\n        const matchMedia = window.matchMedia(query);\n        handleChange();\n        if (matchMedia.addListener) {\n            matchMedia.addListener(handleChange);\n        }\n        else {\n            matchMedia.addEventListener('change', handleChange);\n        }\n        return () => {\n            if (matchMedia.removeListener) {\n                matchMedia.removeListener(handleChange);\n            }\n            else {\n                matchMedia.removeEventListener('change', handleChange);\n            }\n        };\n    }, [query]);\n    return matches;\n}\nexport default useMediaQuery;\n", "import { useCallback, useEffect, useState } from 'react';\nimport { useEventListener } from '..';\nfunction useReadLocalStorage(key) {\n    const readValue = useCallback(() => {\n        if (typeof window === 'undefined') {\n            return null;\n        }\n        try {\n            const item = window.localStorage.getItem(key);\n            return item ? JSON.parse(item) : null;\n        }\n        catch (error) {\n            console.warn(`Error reading localStorage key “${key}”:`, error);\n            return null;\n        }\n    }, [key]);\n    const [storedValue, setStoredValue] = useState(readValue);\n    useEffect(() => {\n        setStoredValue(readValue());\n    }, []);\n    const handleStorageChange = useCallback((event) => {\n        if ((event === null || event === void 0 ? void 0 : event.key) && event.key !== key) {\n            return;\n        }\n        setStoredValue(readValue());\n    }, [key, readValue]);\n    useEventListener('storage', handleStorageChange);\n    useEventListener('local-storage', handleStorageChange);\n    return storedValue;\n}\nexport default useReadLocalStorage;\n", "import { useState } from 'react';\nimport { useEventListener, useIsomorphicLayoutEffect } from '..';\nfunction useScreen() {\n    const getScreen = () => {\n        if (typeof window !== 'undefined' && window.screen) {\n            return window.screen;\n        }\n        return undefined;\n    };\n    const [screen, setScreen] = useState(getScreen());\n    function handleSize() {\n        setScreen(getScreen());\n    }\n    useEventListener('resize', handleSize);\n    useIsomorphicLayoutEffect(() => {\n        handleSize();\n    }, []);\n    return screen;\n}\nexport default useScreen;\n", "import { useEffect, useState } from 'react';\nconst cachedScriptStatuses = {};\nfunction getScriptNode(src) {\n    const node = document.querySelector(`script[src=\"${src}\"]`);\n    const status = node === null || node === void 0 ? void 0 : node.getAttribute('data-status');\n    return {\n        node,\n        status,\n    };\n}\nfunction useScript(src, options) {\n    const [status, setStatus] = useState(() => {\n        var _a;\n        if (!src || (options === null || options === void 0 ? void 0 : options.shouldPreventLoad)) {\n            return 'idle';\n        }\n        if (typeof window === 'undefined') {\n            return 'loading';\n        }\n        return (_a = cachedScriptStatuses[src]) !== null && _a !== void 0 ? _a : 'loading';\n    });\n    useEffect(() => {\n        var _a, _b;\n        if (!src || (options === null || options === void 0 ? void 0 : options.shouldPreventLoad)) {\n            return;\n        }\n        const cachedScriptStatus = cachedScriptStatuses[src];\n        if (cachedScriptStatus === 'ready' || cachedScriptStatus === 'error') {\n            setStatus(cachedScriptStatus);\n            return;\n        }\n        const script = getScriptNode(src);\n        let scriptNode = script.node;\n        if (!scriptNode) {\n            scriptNode = document.createElement('script');\n            scriptNode.src = src;\n            scriptNode.async = true;\n            scriptNode.setAttribute('data-status', 'loading');\n            document.body.appendChild(scriptNode);\n            const setAttributeFromEvent = (event) => {\n                const scriptStatus = event.type === 'load' ? 'ready' : 'error';\n                scriptNode === null || scriptNode === void 0 ? void 0 : scriptNode.setAttribute('data-status', scriptStatus);\n            };\n            scriptNode.addEventListener('load', setAttributeFromEvent);\n            scriptNode.addEventListener('error', setAttributeFromEvent);\n        }\n        else {\n            setStatus((_b = (_a = script.status) !== null && _a !== void 0 ? _a : cachedScriptStatus) !== null && _b !== void 0 ? _b : 'loading');\n        }\n        const setStateFromEvent = (event) => {\n            const newStatus = event.type === 'load' ? 'ready' : 'error';\n            setStatus(newStatus);\n            cachedScriptStatuses[src] = newStatus;\n        };\n        scriptNode.addEventListener('load', setStateFromEvent);\n        scriptNode.addEventListener('error', setStateFromEvent);\n        return () => {\n            if (scriptNode) {\n                scriptNode.removeEventListener('load', setStateFromEvent);\n                scriptNode.removeEventListener('error', setStateFromEvent);\n            }\n            if (scriptNode && (options === null || options === void 0 ? void 0 : options.removeOnUnmount)) {\n                scriptNode.remove();\n            }\n        };\n    }, [src, options === null || options === void 0 ? void 0 : options.shouldPreventLoad, options === null || options === void 0 ? void 0 : options.removeOnUnmount]);\n    return status;\n}\nexport default useScript;\n", "import { useCallback, useEffect, useState, } from 'react';\nimport { useEventCallback, useEventListener } from '..';\nfunction useSessionStorage(key, initialValue) {\n    const readValue = useCallback(() => {\n        if (typeof window === 'undefined') {\n            return initialValue;\n        }\n        try {\n            const item = window.sessionStorage.getItem(key);\n            return item ? parseJSON(item) : initialValue;\n        }\n        catch (error) {\n            console.warn(`Error reading sessionStorage key “${key}”:`, error);\n            return initialValue;\n        }\n    }, [initialValue, key]);\n    const [storedValue, setStoredValue] = useState(readValue);\n    const setValue = useEventCallback(value => {\n        if (typeof window == 'undefined') {\n            console.warn(`Tried setting sessionStorage key “${key}” even though environment is not a client`);\n        }\n        try {\n            const newValue = value instanceof Function ? value(storedValue) : value;\n            window.sessionStorage.setItem(key, JSON.stringify(newValue));\n            setStoredValue(newValue);\n            window.dispatchEvent(new Event('session-storage'));\n        }\n        catch (error) {\n            console.warn(`Error setting sessionStorage key “${key}”:`, error);\n        }\n    });\n    useEffect(() => {\n        setStoredValue(readValue());\n    }, []);\n    const handleStorageChange = useCallback((event) => {\n        if ((event === null || event === void 0 ? void 0 : event.key) && event.key !== key) {\n            return;\n        }\n        setStoredValue(readValue());\n    }, [key, readValue]);\n    useEventListener('storage', handleStorageChange);\n    useEventListener('session-storage', handleStorageChange);\n    return [storedValue, setValue];\n}\nexport default useSessionStorage;\nfunction parseJSON(value) {\n    try {\n        return value === 'undefined' ? undefined : JSON.parse(value !== null && value !== void 0 ? value : '');\n    }\n    catch (_a) {\n        console.log('parsing error on', { value });\n        return undefined;\n    }\n}\n", "import { useCallback, useMemo, useState } from 'react';\nfunction useStep(maxStep) {\n    const [currentStep, setCurrentStep] = useState(1);\n    const canGoToNextStep = useMemo(() => currentStep + 1 <= maxStep, [currentStep, maxStep]);\n    const canGoToPrevStep = useMemo(() => currentStep - 1 >= 1, [currentStep]);\n    const setStep = useCallback(step => {\n        const newStep = step instanceof Function ? step(currentStep) : step;\n        if (newStep >= 1 && newStep <= maxStep) {\n            setCurrentStep(newStep);\n            return;\n        }\n        throw new Error('Step not valid');\n    }, [maxStep, currentStep]);\n    const goToNextStep = useCallback(() => {\n        if (canGoToNextStep) {\n            setCurrentStep(step => step + 1);\n        }\n    }, [canGoToNextStep]);\n    const goToPrevStep = useCallback(() => {\n        if (canGoToPrevStep) {\n            setCurrentStep(step => step - 1);\n        }\n    }, [canGoToPrevStep]);\n    const reset = useCallback(() => {\n        setCurrentStep(1);\n    }, []);\n    return [\n        currentStep,\n        {\n            goToNextStep,\n            goToPrevStep,\n            canGoToNextStep,\n            canGoToPrevStep,\n            setStep,\n            reset,\n        },\n    ];\n}\nexport default useStep;\n", "import { useEffect, useState } from 'react';\nimport { useLocalStorage, useMediaQuery, useUpdateEffect } from '..';\nconst COLOR_SCHEME_QUERY = '(prefers-color-scheme: dark)';\nfunction useTernaryDarkMode() {\n    const isDarkOS = useMediaQuery(COLOR_SCHEME_QUERY);\n    const [ternaryDarkMode, setTernaryDarkMode] = useLocalStorage('usehooks-ts-ternary-dark-mode', 'system');\n    const [isDarkMode, setDarkMode] = useState(isDarkOS);\n    useUpdateEffect(() => {\n        if (ternaryDarkMode === 'system') {\n            setDarkMode(isDarkOS);\n        }\n    }, [isDarkOS]);\n    useEffect(() => {\n        switch (ternaryDarkMode) {\n            case 'light':\n                setDarkMode(false);\n                break;\n            case 'system':\n                setDarkMode(isDarkOS);\n                break;\n            case 'dark':\n                setDarkMode(true);\n                break;\n        }\n    }, [ternaryDarkMode, isDarkOS]);\n    function toggleTernaryDarkMode() {\n        const toggleDict = {\n            light: 'system',\n            system: 'dark',\n            dark: 'light',\n        };\n        setTernaryDarkMode(prevMode => toggleDict[prevMode]);\n    }\n    return {\n        isDarkMode,\n        ternaryDarkMode,\n        setTernaryDarkMode,\n        toggleTernaryDarkMode,\n    };\n}\nexport default useTernaryDarkMode;\n", "import { useEffect, useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from '..';\nfunction useTimeout(callback, delay) {\n    const savedCallback = useRef(callback);\n    useIsomorphicLayoutEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n    useEffect(() => {\n        if (!delay && delay !== 0) {\n            return;\n        }\n        const id = setTimeout(() => savedCallback.current(), delay);\n        return () => clearTimeout(id);\n    }, [delay]);\n}\nexport default useTimeout;\n", "import { useCallback, useState } from 'react';\nfunction useToggle(defaultValue) {\n    const [value, setValue] = useState(!!defaultValue);\n    const toggle = useCallback(() => setValue(x => !x), []);\n    return [value, toggle, setValue];\n}\nexport default useToggle;\n", "import { useEffect } from 'react';\nimport { useIsFirstRender } from '..';\nfunction useUpdateEffect(effect, deps) {\n    const isFirst = useIsFirstRender();\n    useEffect(() => {\n        if (!isFirst) {\n            return effect();\n        }\n    }, deps);\n}\nexport default useUpdateEffect;\n", "import { useState } from 'react';\nimport { useEventListener, useIsomorphicLayoutEffect } from '..';\nfunction useWindowSize() {\n    const [windowSize, setWindowSize] = useState({\n        width: 0,\n        height: 0,\n    });\n    const handleSize = () => {\n        setWindowSize({\n            width: window.innerWidth,\n            height: window.innerHeight,\n        });\n    };\n    useEventListener('resize', handleSize);\n    useIsomorphicLayoutEffect(() => {\n        handleSize();\n    }, []);\n    return windowSize;\n}\nexport default useWindowSize;\n"],
  "mappings": "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",
  "names": ["noop", "self", "getLogger", "React", "React2", "root", "definition", "module", "exports", "log", "this", "noop", "undefinedType", "isIE", "window", "navigator", "test", "userAgent", "logMethods", "bindMethod", "obj", "methodName", "method", "bind", "Function", "prototype", "call", "e", "apply", "arguments", "traceForIE", "console", "trace", "realMethod", "undefined", "replaceLoggingMethods", "level", "loggerName", "i", "length", "methodFactory", "debug", "enableLoggingWhenConsoleArrives", "defaultMethodFactory", "Logger", "name", "defaultLevel", "factory", "self", "currentLevel", "storageKey", "persistLevelIfPossible", "levelNum", "levelName", "toUpperCase", "localStorage", "ignore", "document", "cookie", "encodeURIComponent", "getPersistedLevel", "storedLevel", "location", "indexOf", "exec", "slice", "levels", "clearPersistedLevel", "removeItem", "getLevel", "setLevel", "persist", "SILENT", "setDefaultLevel", "resetLevel", "enableAll", "TRACE", "disableAll", "initialLevel", "defaultLogger", "_loggersByName", "getLogger", "TypeError", "logger", "_log", "noConflict", "getLoggers", "LogLevel", "LoggerNames", "livekitLogger", "info", "setLogLevel", "Object", "entries", "filter", "_ref", "logrName", "startsWith", "map", "_ref2", "logr", "setLogExtension", "extension", "originalFactory", "configLevel", "rawMethod", "logLevel", "needLog", "silent", "msg", "context", "assert", "condition", "Error", "FLOAT32_MAX", "FLOAT32_MIN", "UINT32_MAX", "INT32_MAX", "INT32_MIN", "assertInt32", "arg", "Number", "isInteger", "assertUInt32", "assertFloat32", "isFinite", "enumTypeSymbol", "Symbol", "getEnumType", "enumObject", "t", "setEnumType", "typeName", "values", "opt", "makeEnumType", "v", "no", "localName", "_opt", "names", "create", "numbers", "normalValues", "value", "n", "normalizeEnumValue", "push", "findName", "findNumber", "makeEnum", "assign", "Message", "equals", "other", "getType", "runtime", "util", "clone", "fromBinary", "bytes", "options", "type", "format", "bin", "makeReadOptions", "readMessage", "readerFactory", "byteLength", "fromJson", "jsonValue", "json", "fromJsonString", "jsonString", "JSON", "parse", "concat", "message", "String", "toBinary", "makeWriteOptions", "writer", "writerFactory", "writeMessage", "finish", "toJson", "toJsonString", "_a", "stringify", "prettySpaces", "toJSON", "emitDefaultValues", "getPrototypeOf", "constructor", "makeMessageType", "fields", "substring", "lastIndexOf", "data", "initFields", "initPartial", "setPrototypeOf", "newFieldList", "a", "b", "makeProtoRuntime", "syntax", "ScalarType", "LongType", "varint64read", "lowBits", "highBits", "shift", "buf", "pos", "assertBounds", "middleByte", "varint64write", "lo", "hi", "hasNext", "byte", "splitBits", "hasMoreBits", "TWO_PWR_32_DBL", "int64FromString", "dec", "minus", "base", "add1e6digit", "begin", "end", "digit1e6", "negate", "newBits", "int64ToString", "bits", "negative", "result", "uInt64ToString", "toUnsigned", "low", "mid", "high", "digitA", "digitB", "digitC", "Math", "floor", "toString", "decimalFrom1e7WithLeadingZeros", "digit1e7", "partial", "varint32write", "varint32read", "readBytes", "makeInt64Support", "dv", "DataView", "ArrayBuffer", "ok", "BigInt", "getBigInt64", "getBigUint64", "setBigInt64", "setBigUint64", "process", "env", "BUF_BIGINT_DISABLE", "MIN", "MAX", "UMIN", "UMAX", "zero", "supported", "bi", "uParse", "enc", "getInt32", "uEnc", "setInt32", "uDec", "assertInt64String", "assertUInt64String", "protoInt64", "WireType", "BinaryWriter", "textEncoder", "stack", "TextEncoder", "chunks", "Uint8Array", "len", "offset", "set", "fork", "join", "chunk", "prev", "pop", "uint32", "raw", "tag", "fieldNo", "int32", "bool", "string", "encode", "float", "buffer", "setFloat32", "double", "setFloat64", "fixed32", "setUint32", "sfixed32", "sint32", "sfixed64", "view", "tc", "fixed64", "int64", "sint64", "sign", "uint64", "BinaryReader", "textDecoder", "varint64", "byteOffset", "TextDecoder", "wireType", "skip", "start", "Varint", "Bit64", "Bit32", "LengthDelimited", "StartGroup", "EndGroup", "subarray", "RangeError", "zze", "s", "getUint32", "getFloat32", "getFloat64", "decode", "wrapField", "fieldWrapper", "DOUBLE", "FLOAT", "INT64", "UINT64", "INT32", "UINT32", "BOOL", "STRING", "BYTES", "scalarEquals", "FIXED64", "SFIXED64", "SINT64", "scalarDefaultValue", "longType", "scalarTypeInfo", "isUndefined", "isIntrinsicDefault", "FIXED32", "SFIXED32", "toLowerCase", "unknownFieldsSymbol", "readDefaults", "readUnknownFields", "writeDefaults", "writeUnknownFields", "makeBinaryFormatCommon", "listUnknownFields", "discardUnknownFields", "m", "c", "f", "onUnknownField", "Array", "isArray", "reader", "field", "find", "target", "repeated", "oneof", "case", "kind", "scalarType", "T", "read", "readScalar", "L", "readScalarLTString", "arr", "messageType", "readMessageField", "unwrapField", "mapKey", "mapVal", "readMapEntry", "key", "val", "K", "V", "keyRaw", "BIGINT", "SINT32", "writeMapEntry", "keyValue", "parseInt", "writeScalar", "writeMessageField", "emitIntrinsicDefault", "writePacked", "makeBinaryFormatProto3", "byNumber", "packed", "item", "encTable", "split", "decTable", "charCodeAt", "protoBase64", "base64Str", "es", "bytePos", "groupPos", "p", "base64", "jsonReadDefaults", "ignoreUnknownFields", "jsonWriteDefaults", "enumAsInteger", "useProtoFieldName", "makeJsonFormatCommon", "makeWriteField", "writeField", "writeEnum", "oneofSeen", "jsonKey", "findJsonName", "seen", "targetArray", "jsonItem", "readEnum", "targetMap", "jsonMapKey", "jsonMapValue", "enumValue", "member", "byMember", "findField", "jsonName", "r", "debugJsonValue", "NaN", "POSITIVE_INFINITY", "NEGATIVE_INFINITY", "trim", "isNaN", "long", "uLong", "makeJsonFormatProto3", "jsonObj", "entryKey", "entryValue", "enumType", "keys", "jsonArr", "makeUtilCommon", "source", "sk", "sourceField", "toU8Arr", "copy", "k", "mt", "every", "va", "vb", "any", "cloneSingularField", "input", "InternalFieldList", "normalizer", "_fields", "_normalizer", "jsonNames", "list", "all", "numbersAsc", "sort", "members", "o", "localFieldName", "protoName", "inOneof", "protoCamelCase", "safeObjectProperty", "safeMessageProperty", "localOneofName", "fieldJsonName", "snakeCase", "capNext", "charAt", "reservedObjectProperties", "Set", "reservedMessageProperties", "fallback", "has", "InternalOneofInfo", "default", "addField", "_lookup", "proto3", "normalizeFieldInfosProto3", "fieldInfos", "_b", "_c", "_d", "ooname", "Timestamp", "seconds", "nanos", "matches", "match", "ms", "Date", "repeat", "z", "nanosStr", "toISOString", "replace", "toDate", "ceil", "now", "fromDate", "date", "getTime", "AudioCodec", "VideoCodec", "ImageCodec", "TrackType", "TrackSource", "VideoQuality", "ConnectionQuality", "ClientConfigSetting", "DisconnectReason", "ReconnectReason", "SubscriptionError", "Room", "sid", "emptyTimeout", "maxParticipants", "creationTime", "turnPassword", "enabledCodecs", "metadata", "numParticipants", "numPublishers", "activeRecording", "Codec", "mime", "fmtpLine", "PlayoutDelay", "enabled", "min", "max", "ParticipantPermission", "canSubscribe", "canPublish", "canPublishData", "canPublishSources", "hidden", "recorder", "canUpdateMetadata", "agent", "ParticipantInfo", "identity", "state", "ParticipantInfo_State", "JOINING", "tracks", "joinedAt", "version", "region", "isPublisher", "TrackInfo", "Encryption", "Encryption_Type", "SimulcastCodecInfo", "mimeType", "cid", "layers", "VideoLayer", "AUDIO", "muted", "width", "height", "simulcast", "disableDtx", "UNKNOWN", "codecs", "stereo", "disableRed", "encryption", "NONE", "stream", "quality", "LOW", "bitrate", "ssrc", "DataPacket", "DataPacket_Kind", "RELIABLE", "UserPacket", "ActiveSpeakerUpdate", "speakers", "SpeakerInfo", "active", "participantSid", "participantIdentity", "payload", "destinationSids", "destinationIdentities", "ParticipantTracks", "trackSids", "ServerInfo", "edition", "ServerInfo_Edition", "Standard", "protocol", "nodeId", "debugInfo", "ClientInfo", "sdk", "ClientInfo_SDK", "os", "osVersion", "deviceModel", "browser", "browserVersion", "address", "network", "ClientConfiguration", "resumeConnection", "UNSET", "forceRelay", "VideoConfiguration", "DisabledCodecs", "hardwareEncoder", "publish", "RTPDrift", "duration", "startTimestamp", "endTimestamp", "rtpClockTicks", "driftSamples", "driftMs", "clockRate", "RTPStats", "packets", "packetRate", "headerBytes", "packetsLost", "packetLossRate", "packetLossPercentage", "packetsDuplicate", "packetDuplicateRate", "bytesDuplicate", "headerBytesDuplicate", "bitrateDuplicate", "packetsPadding", "packetPaddingRate", "bytesPadding", "headerBytesPadding", "bitratePadding", "packetsOutOfOrder", "frames", "frameRate", "jitterCurrent", "jitterMax", "gapHistogram", "nacks", "nackAcks", "nackMisses", "nackRepeated", "plis", "firs", "rttCurrent", "rttMax", "keyFrames", "layerLockPlis", "TimedVersion", "unixMicro", "ticks", "maxRetryDelay", "DEFAULT_RETRY_DELAYS_IN_MS", "DefaultReconnectPolicy", "retryDelays", "_retryDelays", "nextRetryDelayInMs", "retryCount", "retryDelay", "random", "R", "Reflect", "ReflectApply", "apply", "target", "receiver", "args", "Function", "prototype", "call", "ReflectOwnKeys", "ownKeys", "Object", "getOwnPropertySymbols", "getOwnPropertyNames", "concat", "ProcessEmitWarning", "warning", "console", "warn", "NumberIsNaN", "Number", "isNaN", "value", "EventEmitter", "init", "eventsModule", "exports", "once", "_events", "undefined", "_eventsCount", "_maxListeners", "defaultMaxListeners", "checkListener", "listener", "TypeError", "defineProperty", "enumerable", "get", "set", "arg", "RangeError", "getPrototypeOf", "create", "setMaxListeners", "n", "_getMaxListeners", "that", "getMaxListeners", "emit", "type", "i", "arguments", "length", "push", "doError", "events", "error", "er", "Error", "err", "message", "context", "handler", "len", "listeners", "arrayClone", "_addListener", "prepend", "m", "existing", "newListener", "unshift", "warned", "w", "String", "name", "emitter", "count", "addListener", "on", "prependListener", "onceWrapper", "fired", "removeListener", "wrapFn", "_onceWrap", "state", "wrapped", "bind", "prependOnceListener", "list", "position", "originalListener", "shift", "spliceOne", "off", "removeAllListeners", "keys", "key", "_listeners", "unwrap", "evlistener", "unwrapListeners", "rawListeners", "listenerCount", "eventNames", "arr", "copy", "Array", "index", "pop", "ret", "Promise", "resolve", "reject", "errorListener", "resolver", "slice", "eventTargetAgnosticAddListener", "addErrorHandlerIfEventEmitter", "flags", "addEventListener", "wrapListener", "removeEventListener", "logDisabled_", "deprecationWarnings_", "extractVersion", "uastring", "expr", "pos", "match", "parseInt", "wrapPeerConnectionEvent", "window", "eventNameToWrap", "wrapper", "RTCPeerConnection", "proto", "nativeAddEventListener", "nativeEventName", "cb", "wrappedCallback", "e", "modifiedEvent", "handleEvent", "_eventMap", "Map", "nativeRemoveEventListener", "has", "unwrappedCb", "delete", "size", "configurable", "disableLog", "bool", "disableWarnings", "log", "deprecated", "oldMethod", "newMethod", "detectBrowser", "result", "browser", "version", "navigator", "userAgent", "mozGetUserMedia", "webkitGetUserMedia", "isSecureContext", "webkitRTCPeerConnection", "supportsUnifiedPlan", "RTCRtpTransceiver", "isObject", "val", "toString", "compactObject", "data", "reduce", "accumulator", "isObj", "isEmptyObject", "assign", "walkStats", "stats", "base", "resultSet", "id", "forEach", "endsWith", "filterStats", "track", "outbound", "streamStatsType", "filteredResult", "trackStats", "trackIdentifier", "trackStat", "trackId", "logging", "utils", "shimGetUserMedia", "browserDetails", "mediaDevices", "constraintsToChrome_", "c", "mandatory", "optional", "cc", "r", "ideal", "exact", "min", "max", "oldname_", "prefix", "charAt", "toUpperCase", "oc", "mix", "advanced", "shimConstraints_", "constraints", "func", "JSON", "parse", "stringify", "audio", "remap", "obj", "a", "b", "video", "face", "facingMode", "getSupportedFacingModeLies", "getSupportedConstraints", "matches", "enumerateDevices", "then", "devices", "filter", "d", "kind", "dev", "find", "some", "label", "toLowerCase", "includes", "deviceId", "shimError_", "PermissionDeniedError", "PermissionDismissedError", "InvalidStateError", "DevicesNotFoundError", "ConstraintNotSatisfiedError", "TrackStartError", "MediaDeviceFailedDueToShutdown", "MediaDeviceKillSwitchOn", "TabCaptureError", "ScreenCaptureError", "DeviceCaptureError", "constraint", "constraintName", "getUserMedia_", "onSuccess", "onError", "getUserMedia", "origGetUserMedia", "cs", "stream", "getAudioTracks", "getVideoTracks", "getTracks", "stop", "DOMException", "shimGetDisplayMedia", "getSourceId", "getDisplayMedia", "sourceId", "widthSpecified", "width", "heightSpecified", "height", "frameRateSpecified", "frameRate", "chromeMediaSource", "chromeMediaSourceId", "maxFrameRate", "maxWidth", "maxHeight", "shimMediaStream", "MediaStream", "webkitMediaStream", "shimOnTrack", "_ontrack", "f", "origSetRemoteDescription", "setRemoteDescription", "_ontrackpoly", "te", "getReceivers", "event", "Event", "transceiver", "streams", "dispatchEvent", "shimGetSendersWithDtmf", "shimSenderWithDtmf", "pc", "dtmf", "_dtmf", "createDTMFSender", "_pc", "getSenders", "_senders", "origAddTrack", "addTrack", "sender", "origRemoveTrack", "removeTrack", "idx", "indexOf", "splice", "origAddStream", "addStream", "origRemoveStream", "removeStream", "s", "RTCRtpSender", "origGetSenders", "senders", "shimGetStats", "origGetStats", "getStats", "selector", "onSucc", "onErr", "fixChromeStats_", "response", "standardReport", "reports", "report", "standardStats", "timestamp", "localcandidate", "remotecandidate", "names", "stat", "makeMapStats", "map", "successCallbackWrapper_", "shimSenderReceiverGetStats", "RTCRtpReceiver", "origGetReceivers", "receivers", "srcElement", "MediaStreamTrack", "shimAddTrackRemoveTrackWithNative", "getLocalStreams", "_shimmedLocalStreams", "streamId", "alreadyExists", "existingSenders", "newSenders", "newSender", "shimAddTrackRemoveTrack", "origGetLocalStreams", "nativeStreams", "_reverseStreams", "_streams", "newStream", "signalingState", "t", "oldStream", "replaceInternalStreamId", "description", "sdp", "internalId", "externalStream", "internalStream", "replace", "RegExp", "RTCSessionDescription", "replaceExternalStreamId", "method", "nativeMethod", "methodObj", "isLegacyCall", "desc", "origSetLocalDescription", "setLocalDescription", "origLocalDescription", "getOwnPropertyDescriptor", "isLocal", "streamid", "hasTrack", "shimPeerConnection", "RTCIceCandidate", "fixNegotiationNeeded", "getConfiguration", "sdpSemantics", "nativeGetUserMedia", "getSettings", "nativeGetSettings", "applyConstraints", "nativeApplyConstraints", "preferredMediaSource", "code", "mediaSource", "RTCTrackEvent", "mozRTCPeerConnection", "modernStatsTypes", "inboundrtp", "outboundrtp", "candidatepair", "nativeGetStats", "shimSenderGetStats", "shimReceiverGetStats", "shimRemoveStream", "shimRTCDataChannel", "DataChannel", "RTCDataChannel", "shimAddTransceiver", "origAddTransceiver", "addTransceiver", "setParametersPromises", "sendEncodings", "shouldPerformCheck", "encodingParam", "ridRegex", "test", "rid", "parseFloat", "scaleResolutionDownBy", "maxFramerate", "params", "getParameters", "encodings", "setParameters", "catch", "shimGetParameters", "origGetParameters", "shimCreateOffer", "origCreateOffer", "createOffer", "all", "finally", "shimCreateAnswer", "origCreateAnswer", "createAnswer", "shimLocalStreamsAPI", "_localStreams", "_addTrack", "_len", "_key", "tracks", "shimRemoteStreamsAPI", "getRemoteStreams", "_remoteStreams", "_onaddstream", "_onaddstreampoly", "shimCallbacksAPI", "addIceCandidate", "successCallback", "failureCallback", "options", "promise", "withCallback", "candidate", "_getUserMedia", "shimConstraints", "errcb", "shimRTCIceServerUrls", "OrigPeerConnection", "pcConfig", "pcConstraints", "iceServers", "newIceServers", "server", "urls", "url", "generateCertificate", "shimTrackEventTransceiver", "shimCreateOfferLegacy", "offerOptions", "offerToReceiveAudio", "audioTransceiver", "getTransceivers", "direction", "setDirection", "offerToReceiveVideo", "videoTransceiver", "shimAudioContext", "AudioContext", "webkitAudioContext", "SDPUtils", "generateIdentifier", "Math", "random", "substring", "localCName", "splitLines", "blob", "trim", "split", "line", "splitSections", "parts", "part", "getDescription", "sections", "getMediaSections", "matchPrefix", "parseCandidate", "foundation", "component", "protocol", "priority", "ip", "address", "port", "relatedAddress", "relatedPort", "tcpType", "ufrag", "usernameFragment", "writeCandidate", "join", "parseIceOptions", "parseRtpMap", "parsed", "payloadType", "clockRate", "channels", "numChannels", "writeRtpMap", "codec", "pt", "preferredPayloadType", "parseExtmap", "uri", "attributes", "writeExtmap", "headerExtension", "preferredId", "parseFmtp", "kv", "j", "writeFmtp", "parameters", "param", "parseRtcpFb", "parameter", "writeRtcpFb", "lines", "rtcpFeedback", "fb", "parseSsrcMedia", "sp", "ssrc", "colon", "attribute", "parseSsrcGroup", "semantics", "ssrcs", "getMid", "mediaSection", "mid", "parseFingerprint", "algorithm", "getDtlsParameters", "sessionpart", "role", "fingerprints", "writeDtlsParameters", "setupType", "fp", "parseCryptoLine", "tag", "cryptoSuite", "keyParams", "sessionParams", "writeCryptoLine", "writeCryptoKeyParams", "parseCryptoKeyParams", "keyMethod", "keySalt", "lifeTime", "mkiValue", "mkiLength", "getCryptoParameters", "getIceParameters", "pwd", "password", "writeIceParameters", "iceLite", "parseRtpParameters", "codecs", "headerExtensions", "fecMechanisms", "rtcp", "mline", "profile", "rtpmapline", "fmtps", "wildcardRtcpFb", "duplicate", "existingFeedback", "writeRtpDescription", "caps", "maxptime", "extension", "parseRtpEncodingParameters", "encodingParameters", "hasRed", "hasUlpfec", "primarySsrc", "secondarySsrc", "flows", "apt", "encParam", "codecPayloadType", "rtx", "fec", "mechanism", "bandwidth", "maxBitrate", "parseRtcpParameters", "rtcpParameters", "remoteSsrc", "cname", "rsize", "reducedSize", "compound", "mux", "writeRtcpParameters", "parseMsid", "spec", "planB", "msidParts", "parseSctpDescription", "parseMLine", "maxSizeLine", "maxMessageSize", "sctpPort", "fmt", "sctpMapLines", "writeSctpDescription", "media", "sctp", "output", "generateSessionId", "substr", "writeSessionBoilerplate", "sessId", "sessVer", "sessUser", "sessionId", "user", "getDirection", "getKind", "isRejected", "parseOLine", "username", "sessionVersion", "netType", "addressType", "isValidSDP", "module", "shimRTCIceCandidate", "NativeRTCIceCandidate", "nativeCandidate", "parsedCandidate", "toJSON", "sdpMid", "sdpMLineIndex", "writable", "shimRTCIceCandidateRelayProtocol", "relayProtocol", "shimMaxMessageSize", "_sctp", "sctpInDescription", "mLine", "getRemoteFirefoxVersion", "getCanSendMaxMessageSize", "remoteIsFirefox", "canSendMaxMessageSize", "getMaxMessageSize", "isFirefox", "canSendMMS", "remoteMMS", "POSITIVE_INFINITY", "shimSendThrowTypeError", "wrapDcSend", "dc", "origDataChannelSend", "send", "byteLength", "readyState", "origCreateDataChannel", "createDataChannel", "dataChannel", "channel", "shimConnectionState", "completed", "checking", "iceConnectionState", "_onconnectionstatechange", "origMethod", "_connectionstatechangepoly", "_lastConnectionState", "connectionState", "newEvent", "removeExtmapAllowMixed", "nativeSRD", "shimAddIceCandidateNullOrEmpty", "nativeAddIceCandidate", "shimParameterlessSetLocalDescription", "nativeSetLocalDescription", "adapterFactory", "shimChrome", "shimFirefox", "shimSafari", "adapter", "commonShim", "chromeShim", "browserShim", "firefoxShim", "safariShim", "DECRYPTION_FAILURE_TOLERANCE", "E2EE_FLAG", "SALT", "KEY_PROVIDER_DEFAULTS", "sharedKey", "ratchetSalt", "ratchetWindowSize", "failureTolerance", "KeyProviderEvent", "KeyHandlerEvent", "EncryptionEvent", "CryptorEvent", "isE2EESupported", "isInsertableStreamSupported", "isScriptTransformSupported", "window", "RTCRtpScriptTransform", "RTCRtpSender", "prototype", "createEncodedStreams", "BaseKeyProvider", "EventEmitter", "constructor", "options", "onKeyRatcheted", "material", "keyIndex", "log", "debug", "keyInfoMap", "Map", "Object", "assign", "KEY_PROVIDER_DEFAULTS", "on", "KeyProviderEvent", "KeyRatcheted", "onSetEncryptionKey", "key", "participantIdentity", "keyInfo", "set", "concat", "emit", "SetKey", "getKeys", "Array", "from", "values", "getOptions", "ratchetKey", "RatchetRequest", "LivekitError", "Error", "constructor", "code", "message", "ConnectionError", "reason", "status", "DeviceUnsupportedError", "TrackInvalidError", "UnsupportedServer", "UnexpectedConnectionState", "NegotiationError", "MediaDeviceFailure", "getFailure", "error", "name", "NotFound", "PermissionDenied", "DeviceInUse", "Other", "RoomEvent", "ParticipantEvent", "EngineEvent", "TrackEvent", "r", "e", "n", "i", "t", "o", "a", "isImmediate", "u", "callback", "c", "maxWait", "v", "Date", "now", "l", "f", "d", "slice", "call", "arguments", "Promise", "clearTimeout", "setTimeout", "apply", "forEach", "resolve", "push", "reject", "cancel", "commonVersionIdentifier", "browserDetails", "getBrowser", "userAgent", "force", "length", "undefined", "navigator", "ua", "toLowerCase", "browser", "browsersList", "find", "_ref", "test", "describe", "version", "getMatch", "os", "includes", "exp", "id", "match", "protocolVersion", "CriticalTimers", "setInterval", "clearInterval", "VideoPreset", "constructor", "width", "height", "maxBitrate", "maxFramerate", "priority", "encoding", "resolution", "frameRate", "aspectRatio", "backupCodecs", "videoCodecs", "isBackupCodec", "codec", "backup", "AudioPresets", "telephone", "speech", "music", "musicStereo", "musicHighQuality", "musicHighQualityStereo", "VideoPresets", "h90", "h180", "h216", "h360", "h540", "h720", "h1080", "h1440", "h2160", "VideoPresets43", "h120", "h240", "h480", "ScreenSharePresets", "h360fps3", "h360fps15", "h720fps5", "h720fps15", "h720fps30", "h1080fps15", "h1080fps30", "original", "SignalTarget", "proto3", "util", "setEnumType", "no", "StreamState", "CandidateProtocol", "SignalRequest", "Message", "data", "message", "case", "initPartial", "fromBinary", "bytes", "options", "fromJson", "jsonValue", "fromJsonString", "jsonString", "equals", "b", "runtime", "typeName", "fields", "newFieldList", "kind", "T", "SessionDescription", "oneof", "TrickleRequest", "AddTrackRequest", "MuteTrackRequest", "UpdateSubscription", "UpdateTrackSettings", "LeaveRequest", "UpdateVideoLayers", "SubscriptionPermission", "SyncState", "SimulateScenario", "UpdateParticipantMetadata", "Ping", "SignalResponse", "JoinResponse", "ParticipantUpdate", "TrackPublishedResponse", "SpeakersChanged", "RoomUpdate", "ConnectionQualityUpdate", "StreamStateUpdate", "SubscribedQualityUpdate", "SubscriptionPermissionUpdate", "TrackUnpublishedResponse", "ReconnectResponse", "Pong", "SubscriptionResponse", "SimulcastCodec", "cid", "type", "TrackType", "AUDIO", "muted", "disableDtx", "source", "TrackSource", "UNKNOWN", "layers", "simulcastCodecs", "sid", "stereo", "disableRed", "encryption", "Encryption_Type", "NONE", "stream", "getEnumType", "VideoLayer", "repeated", "candidateInit", "target", "PUBLISHER", "otherParticipants", "serverVersion", "iceServers", "subscriberPrimary", "alternativeUrl", "serverRegion", "pingTimeout", "pingInterval", "sifTrailer", "Uint8Array", "Room", "ParticipantInfo", "ICEServer", "ClientConfiguration", "ServerInfo", "TrackInfo", "trackSid", "sdp", "participants", "trackSids", "subscribe", "participantTracks", "ParticipantTracks", "disabled", "quality", "VideoQuality", "LOW", "fps", "canReconnect", "reason", "DisconnectReason", "UNKNOWN_REASON", "metadata", "urls", "username", "credential", "speakers", "SpeakerInfo", "ConnectionQualityInfo", "participantSid", "ConnectionQuality", "POOR", "score", "updates", "StreamStateInfo", "state", "ACTIVE", "streamStates", "SubscribedQuality", "enabled", "SubscribedCodec", "qualities", "subscribedQualities", "subscribedCodecs", "TrackPermission", "allTracks", "participantIdentity", "allParticipants", "trackPermissions", "allowed", "publishTracks", "dataChannels", "DataChannelInfo", "label", "scenario", "timestamp", "protoInt64", "zero", "rtt", "lastPingTimestamp", "RegionSettings", "regions", "RegionInfo", "region", "url", "distance", "err", "SubscriptionError", "SE_UNKNOWN", "cloneDeep", "value", "structuredClone", "JSON", "parse", "stringify", "BACKGROUND_REACTION_DELAY", "recycledElements", "Track", "EventEmitter", "mediaTrack", "loggerOptions", "attachedElements", "isMuted", "streamState", "Active", "isInBackground", "_currentBitrate", "log", "appVisibilityChangedListener", "backgroundTimeout", "document", "visibilityState", "handleAppVisibilityChanged", "getLogger", "_a", "loggerName", "LoggerNames", "loggerContextCb", "setMaxListeners", "_mediaStreamTrack", "_mediaStreamID", "Source", "Unknown", "logContext", "Object", "assign", "getLogContextFromTrack", "currentBitrate", "mediaStreamTrack", "mediaStreamID", "attach", "element", "elementType", "Kind", "Video", "addAppVisibilityListener", "parentElement", "splice", "indexOf", "createElement", "attachToElement", "allMediaStreamTracks", "srcObject", "getTracks", "hasAudio", "some", "tr", "play", "then", "emit", "AudioPlaybackStarted", "VideoPlaybackStarted", "catch", "AudioPlaybackFailed", "VideoPlaybackFailed", "debug", "concat", "warn", "ElementAttached", "detach", "detachTrack", "idx", "recycleElement", "ElementDetached", "detached", "elm", "removeAppVisibilityListener", "stop", "stopMonitor", "enable", "disable", "monitorInterval", "updateLoggerOptions", "HTMLAudioElement", "shouldCache", "pause", "isWeb", "addEventListener", "removeEventListener", "track", "mediaStream", "MediaStream", "existingTracks", "getAudioTracks", "getVideoTracks", "et", "removeTrack", "addTrack", "isSafari", "HTMLVideoElement", "autoplay", "playsInline", "isFireFox", "kindToProto", "k", "Audio", "VIDEO", "DATA", "kindFromProto", "sourceToProto", "s", "Camera", "CAMERA", "Microphone", "MICROPHONE", "ScreenShare", "SCREEN_SHARE", "ScreenShareAudio", "SCREEN_SHARE_AUDIO", "sourceFromProto", "streamStateFromProto", "ProtoStreamState", "PAUSED", "Paused", "mergeDefaultOptions", "audioDefaults", "videoDefaults", "opts", "audio", "video", "mergeObjectWithoutOverwriting", "mainObject", "objectToMerge", "keys", "key", "constraintsForOptions", "constraints", "videoOptions", "detectSilence", "timeOffset", "ctx", "getNewAudioContext", "analyser", "createAnalyser", "fftSize", "bufferLength", "frequencyBinCount", "dataArray", "createMediaStreamSource", "connect", "sleep", "getByteTimeDomainData", "someNoise", "sample", "close", "AudioContext", "window", "webkitAudioContext", "latencyHint", "sourceToKind", "screenCaptureToDisplayMediaStreamOptions", "videoConstraints", "max", "ideal", "_b", "controller", "selfBrowserSurface", "surfaceSwitching", "systemAudio", "mimeTypeToVideoCodecString", "mimeType", "split", "Error", "getTrackPublicationInfo", "tracks", "infos", "trackInfo", "trackSource", "trackMuted", "trackEnabled", "trackKind", "trackName", "isEnabled", "trackEncrypted", "isEncrypted", "trackMimeType", "separator", "ddExtensionURI", "unpackStreamId", "packed", "parts", "substr", "duration", "supportsTransceiver", "RTCPeerConnection", "prototype", "supportsAddTrack", "supportsAV1", "RTCRtpSender", "isSafari", "capabilities", "getCapabilities", "hasAV1", "codec", "codecs", "mimeType", "supportsVP9", "isFireFox", "browser", "getBrowser", "version", "compareVersions", "hasVP9", "isSVCCodec", "supportsSetSinkId", "elm", "document", "createElement", "setCodecPreferencesVersions", "Chrome", "Safari", "Firefox", "supportsSetCodecPreferences", "transceiver", "isWeb", "name", "v", "isFireFox", "getBrowser", "name", "isChromiumBased", "isSafari", "isSafari17", "b", "version", "startsWith", "isMobile", "isWeb", "test", "navigator", "userAgent", "document", "isReactNative", "product", "isCloud", "serverUrl", "hostname", "endsWith", "getLKReactNativeInfo", "global", "LiveKitReactNativeGlobal", "undefined", "getReactNativeOs", "info", "platform", "getDevicePixelRatio", "window", "devicePixelRatio", "compareVersions", "v1", "v2", "parts1", "split", "parts2", "k", "Math", "min", "length", "i", "p1", "parseInt", "p2", "roDispatchCallback", "entries", "entry", "target", "handleResize", "ioDispatchCallback", "handleVisibilityChanged", "resizeObserver", "getResizeObserver", "ResizeObserver", "intersectionObserver", "getIntersectionObserver", "IntersectionObserver", "root", "rootMargin", "getClientInfo", "ClientInfo", "sdk", "ClientInfo_SDK", "JS", "protocol", "protocolVersion", "os", "_a", "createDummyVideoStreamTrack", "width", "arguments", "length", "undefined", "height", "enabled", "paintContent", "canvas", "document", "createElement", "ctx", "getContext", "fillRect", "beginPath", "arc", "Math", "PI", "closePath", "fillStyle", "fill", "dummyStream", "captureStream", "dummyTrack", "getTracks", "Error", "emptyAudioStreamTrack", "getEmptyAudioStreamTrack", "AudioContext", "oscillator", "createOscillator", "gain", "createGain", "setValueAtTime", "dst", "createMediaStreamDestination", "connect", "start", "stream", "getAudioTracks", "clone", "Future", "constructor", "futureBase", "onFinally", "promise", "Promise", "resolve", "reject", "__awaiter", "finally", "_a", "createAudioAnalyser", "track", "options", "opts", "Object", "assign", "cloneTrack", "fftSize", "smoothingTimeConstant", "minDecibels", "maxDecibels", "audioContext", "getNewAudioContext", "streamTrack", "mediaStreamTrack", "mediaStreamSource", "createMediaStreamSource", "MediaStream", "analyser", "createAnalyser", "dataArray", "Uint8Array", "frequencyBinCount", "calculateVolume", "getByteFrequencyData", "sum", "amplitude", "pow", "volume", "sqrt", "cleanup", "close", "stop", "Mutex", "_locking", "_locks", "isLocked", "lock", "unlockNext", "willLock", "willUnlock", "then", "isVideoCodec", "maybeCodec", "videoCodecs", "includes", "unwrapConstraint", "constraint", "Array", "isArray", "exact", "ideal", "toWebsocketUrl", "url", "startsWith", "replace", "toHttpUrl", "defaultId", "DeviceManager", "getInstance", "instance", "getDevices", "kind", "requestPermissions", "userMediaPromiseMap", "size", "log", "debug", "get", "all", "values", "e", "warn", "devices", "navigator", "mediaDevices", "enumerateDevices", "isSafari", "hasDeviceInUse", "isDummyDeviceOrEmpty", "some", "device", "noLabel", "label", "isRelevant", "permissionsToAcquire", "video", "audio", "getUserMedia", "forEach", "filter", "normalizeDeviceId", "deviceId", "groupId", "find", "d", "has", "mediaDeviceKinds", "Map", "defaultDimensionsTimeout", "LocalTrack", "Track", "constraints", "_constraints", "mediaTrack", "userProvidedTrack", "loggerOptions", "_isUpstreamPaused", "handleTrackMuteEvent", "debouncedTrackMuteHandler", "catch", "logContext", "debounce", "pauseUpstream", "handleTrackUnmuteEvent", "cancel", "resumeUpstream", "handleEnded", "isInBackground", "reacquireTrack", "_mediaStreamTrack", "removeEventListener", "emit", "TrackEvent", "Ended", "providedByUser", "muteLock", "pauseUpstreamLock", "processorLock", "setMediaStreamTrack", "getConstraints", "id", "dimensions", "Kind", "Video", "getSettings", "isUpstreamPaused", "isUserProvided", "_b", "processor", "processedTrack", "newTrack", "force", "attachedElements", "el", "detachTrack", "mediaStream", "addEventListener", "processorElement", "TypeError", "attachToElement", "muted", "restart", "element", "sender", "replaceTrack", "isMuted", "waitForDimensions", "timeout", "Audio", "getBrowser", "os", "sleep", "started", "Date", "now", "dims", "TrackInvalidError", "getDeviceId", "source", "Source", "ScreenShare", "mute", "setTrackMuted", "unmute", "stopProcessor", "streamConstraints", "Restarted", "concat", "Muted", "Unmuted", "needsReAcquisition", "readyState", "handleAppVisibilityChanged", "_super", "call", "isMobile", "destroy", "unlock", "UpstreamPaused", "browser", "name", "compareVersions", "version", "DeviceUnsupportedError", "UpstreamResumed", "getRTCStatsReport", "getStats", "statsReport", "setProcessor", "showProcessedStreamLocally", "play", "error", "processorOptions", "init", "getProcessor", "remove", "E2EEManager", "EventEmitter", "onWorkerMessage", "ev", "data", "message", "EncryptionEvent", "EncryptionError", "keyProvider", "getKeys", "keyInfo", "postKey", "encryptionEnabled", "participantIdentity", "room", "localParticipant", "identity", "ParticipantEncryptionStatusChanged", "participant", "getParticipantByIdentity", "KeyProviderEvent", "KeyRatcheted", "material", "keyIndex", "onWorkerError", "worker", "setup", "isE2EESupported", "info", "setupEventListeners", "msg", "keyProviderOptions", "getOptions", "onmessage", "onerror", "postMessage", "setParticipantCryptorEnabled", "postEnable", "setSifTrailer", "trailer", "postSifTrailer", "setupEngine", "engine", "on", "EngineEvent", "RTPVideoMapUpdate", "rtpMap", "postRTPMap", "RoomEvent", "TrackPublished", "pub", "trackInfo", "encryption", "Encryption_Type", "NONE", "ConnectionStateChanged", "state", "ConnectionState", "Connected", "participants", "tracks", "TrackUnsubscribed", "_", "trackId", "mediaStreamID", "TrackSubscribed", "setupE2EEReceiver", "SignalConnected", "isE2EEEnabled", "ParticipantEvent", "LocalTrackPublished", "publication", "setupE2EESender", "SetKey", "RatchetRequest", "participantId", "postRatchetRequest", "_ref", "key", "isPublisher", "enableMsg", "ReferenceError", "map", "remoteId", "receiver", "mimeType", "handleReceiver", "mimeTypeToVideoCodecString", "handleSender", "codec", "isScriptTransformSupported", "transform", "RTCRtpScriptTransform", "E2EE_FLAG", "writable", "writableStream", "readable", "readableStream", "receiverStreams", "createEncodedStreams", "senderStreams", "QueueTaskStatus", "AsyncQueue", "pendingTasks", "taskMutex", "nextTaskIndex", "run", "task", "taskInfo", "enqueuedAt", "status", "WAITING", "set", "executedAt", "RUNNING", "COMPLETED", "delete", "flush", "snapshot", "from", "passThroughQueueSignals", "canPassThroughQueue", "req", "canPass", "indexOf", "case", "trace", "SignalConnectionState", "SignalClient", "currentState", "isDisconnected", "DISCONNECTING", "DISCONNECTED", "isEstablishingConnection", "CONNECTING", "RECONNECTING", "useJSON", "rtt", "resetCallbacks", "onAnswer", "onLeave", "onLocalTrackPublished", "onLocalTrackUnpublished", "onNegotiateRequested", "onOffer", "onRemoteMuteChanged", "onSubscribedQualityUpdate", "onTokenRefresh", "onTrickle", "onClose", "getLogger", "loggerName", "LoggerNames", "Signal", "loggerContextCb", "requestQueue", "queuedRequests", "closingLock", "connectionLock", "join", "token", "abortSignal", "res", "reconnect", "sid", "reason", "clearPingInterval", "reconnectReason", "connectOptions", "clientInfo", "getClientInfo", "params", "createConnectionParams", "abortHandler", "clearTimeout", "wsTimeout", "ConnectionError", "setTimeout", "websocketTimeout", "aborted", "ws", "WebSocket", "binaryType", "onopen", "CONNECTED", "resp", "fetch", "substring", "toFixed", "text", "handleWSError", "json", "JSON", "parse", "SignalResponse", "fromJson", "ArrayBuffer", "fromBinary", "shouldProcessMessage", "pingTimeoutDuration", "value", "pingTimeout", "pingIntervalDuration", "pingInterval", "interval", "startPingInterval", "_c", "_d", "signalLatency", "handleSignalResponse", "onclose", "handleOnClose", "updateState", "closePromise", "CLOSING", "race", "sendOffer", "offer", "offerSdp", "sdp", "sendRequest", "toProtoSessionDescription", "sendAnswer", "answer", "answerSdp", "sendIceCandidate", "candidate", "target", "TrickleRequest", "candidateInit", "stringify", "sendMuteTrack", "trackSid", "MuteTrackRequest", "sendAddTrack", "sendUpdateLocalMetadata", "metadata", "UpdateParticipantMetadata", "sendUpdateTrackSettings", "settings", "sendUpdateSubscription", "sub", "sendSyncState", "sync", "sendUpdateVideoLayers", "layers", "UpdateVideoLayers", "sendUpdateSubscriptionPermissions", "allParticipants", "trackPermissions", "SubscriptionPermission", "sendSimulateScenario", "scenario", "sendPing", "protoInt64", "Ping", "timestamp", "sendLeave", "LeaveRequest", "canReconnect", "DisconnectReason", "CLIENT_INITIATED", "fromQueue", "canQueue", "push", "OPEN", "SignalRequest", "send", "toJsonString", "toBinary", "pingHandled", "sd", "fromProtoSessionDescription", "onParticipantUpdate", "onSpeakersChanged", "speakers", "onRoomUpdate", "onConnectionQuality", "onStreamStateUpdate", "onSubscriptionPermissionUpdate", "onSubscriptionError", "Number", "parseInt", "lastPingTimestamp", "toString", "resetPingTimeout", "msgCase", "setReconnected", "shift", "onCloseCallback", "clearPingTimeout", "CriticalTimers", "toUTCString", "setInterval", "clearInterval", "rsd", "type", "SessionDescription", "URLSearchParams", "autoSubscribe", "isReactNative", "protocol", "deviceModel", "osVersion", "browserVersion", "publishOnly", "adaptiveStream", "connection", "grammar", "grammarModule", "exports", "v", "reg", "o", "names", "format", "s", "i", "u", "p", "z", "r", "t", "c", "b", "m", "a", "encoding", "rate", "address", "subtype", "direction", "config", "sessionConfig", "str", "raddr", "tcptype", "generation", "attribute", "maxMessageSize", "RegExp", "dir2", "clksrcExt", "mediaClockValue", "rateNumerator", "rateDenominator", "keys", "objs", "obj", "toIntIfInt", "String", "attachProperties", "match", "location", "rawName", "parseReg", "content", "needsBlank", "keyLocation", "require$$0", "validLine", "prototype", "test", "bind", "session", "media", "split", "l", "slice", "rtp", "fmtp", "j", "paramReducer", "acc", "expr", "parseParams", "reduce", "parseFmtpConfig", "parsePayloads", "parseRemoteCandidates", "candidates", "parts", "component", "ip", "port", "parseImageAttributes", "item", "parseSimulcastStreamList", "scid", "paused", "formatRegExp", "formatStr", "args", "len", "x", "arg", "makeLine", "Function", "n", "apply", "defaultOuterOrder", "defaultInnerOrder", "writer", "mLine", "payloads", "outerOrder", "innerOrder", "parser", "require$$1", "write", "startBitrateForSVC", "PCEvents", "NegotiationStarted", "NegotiationComplete", "RTPVideoPayloadTypes", "PCTransport", "pc", "_pc", "createPC", "mediaConstraints", "pendingCandidates", "restartingIce", "renegotiate", "trackBitrates", "remoteStereoMids", "remoteNackMids", "negotiate", "onError", "createAndSendOffer", "onconnectionstatechange", "oniceconnectionstatechange", "onicegatheringstatechange", "ondatachannel", "onnegotiationneeded", "onsignalingstatechange", "onicecandidate", "ontrack", "isChromiumBased", "RTCPeerConnection", "onIceCandidate", "onicecandidateerror", "onIceCandidateError", "onIceConnectionStateChange", "iceConnectionState", "onSignalingStatechange", "signalingState", "onConnectionStateChange", "connectionState", "onDataChannel", "onTrack", "isICEConnected", "addIceCandidate", "remoteDescription", "setRemoteDescription", "mungedSDP", "stereoMids", "nackMids", "extractStereoAndNackAudioFromOffer", "sdpParsed", "trackbr", "transceiver", "mid", "codecPayload", "toUpperCase", "payload", "fmtpFound", "attr", "maxbr", "setMungedSDP", "iceRestart", "currentSD", "createOffer", "ensureAudioNackAndStereo", "ensureVideoDDExtensionForSVC", "msid", "cid", "round", "createAndSetAnswer", "createAnswer", "createDataChannel", "dataChannelDict", "addTransceiver", "transceiverInit", "addTrack", "UnexpectedConnectionState", "setTrackCodecBitrate", "setConfiguration", "rtcConfig", "canRemoveTrack", "removeTrack", "getConnectionState", "getICEConnectionState", "getSignallingState", "getTransceivers", "getSenders", "getLocalDescription", "localDescription", "getRemoteDescription", "getConnectedAddress", "selectedCandidatePairId", "candidatePairs", "stats", "selected", "selectedID", "remoteCandidateId", "munged", "remote", "originalSdp", "setLocalDescription", "fields", "remoteSdp", "NegotiationError", "opusPayload", "rtcpFb", "fb", "toLowerCase", "isSVCCodec", "maxID", "ddFound", "ext", "uri", "ddExtensionURI", "defaultVideoCodec", "publishDefaults", "audioBitrate", "AudioPresets", "music", "maxBitrate", "audioPreset", "dtx", "red", "forceStereo", "simulcast", "screenShareEncoding", "ScreenSharePresets", "h1080fps15", "stopMicTrackOnMute", "videoCodec", "backupCodec", "audioDefaults", "autoGainControl", "echoCancellation", "noiseSuppression", "videoDefaults", "resolution", "VideoPresets", "h720", "roomOptionDefaults", "dynacast", "stopLocalTrackOnUnpublish", "reconnectPolicy", "DefaultReconnectPolicy", "disconnectOnPageLeave", "expWebAudioMix", "roomConnectOptionDefaults", "maxRetries", "peerConnectionTimeout", "PCTransportState", "PCTransportManager", "needsPublisher", "isPublisherConnectionRequired", "needsSubscriber", "isSubscriberConnectionRequired", "subscriberPrimary", "previousState", "connectionStates", "requiredTransports", "tr", "every", "st", "FAILED", "CLOSED", "NEW", "onStateChange", "publisher", "subscriber", "PCManager", "googConstraints", "optional", "googDscp", "SignalTarget", "PUBLISHER", "SUBSCRIBER", "onPublisherOffer", "requirePublisher", "require", "requireSubscriber", "createAndSendPublisherOffer", "setPublisherAnswer", "triggerIceRestart", "createSubscriberAnswerFromOffer", "RTCSdpType", "updateConfiguration", "ensurePCTransportConnection", "abortController", "transport", "ensureTransportConnected", "negotiationTimeout", "signal", "once", "addPublisherTransceiver", "addPublisherTrack", "createPublisherDataChannel", "transports", "pcTransport", "connectTimeout", "lossyDataChannel", "reliableDataChannel", "minReconnectWait", "leaveReconnect", "PCState", "RTCEngine", "isClosed", "_isClosed", "fullReconnectOnNext", "pcState", "New", "pendingTrackResolvers", "reconnectAttempts", "reconnectStart", "attemptingReconnect", "joinAttempts", "maxJoinAttempts", "shouldFailNext", "handleDataChannel", "channel", "reliableDCSub", "lossyDCSub", "handleDataMessage", "dataProcessLock", "buffer", "Blob", "arrayBuffer", "dp", "DataPacket", "ActiveSpeakersUpdate", "DataPacketReceived", "handleDataError", "event", "currentTarget", "channelKind", "maxRetransmits", "ErrorEvent", "handleBufferedAmountLow", "DataPacket_Kind", "LOSSY", "RELIABLE", "updateAndEmitDCBufferStatus", "handleDisconnect", "disconnectReason", "disconnect", "duration", "Disconnected", "delay", "getNextRetryDelay", "elapsedMs", "retryCount", "clearReconnectTimeout", "regionUrlProvider", "updateToken", "reconnectTimeout", "attemptReconnect", "waitForRestarted", "onRestarted", "off", "onDisconnected", "isBufferStatusLow", "dcBufferStatus", "DCBufferStatusChanged", "dc", "dataChannelForKind", "bufferedAmount", "bufferedAmountLowThreshold", "handleBrowserOnLine", "client", "ReconnectReason", "RR_SIGNAL_DISCONNECTED", "Engine", "expSignalLatency", "registerOnLineListener", "updates", "ParticipantUpdate", "update", "ConnectionQualityUpdate", "RoomUpdate", "SubscriptionError", "SubscriptionPermissionUpdate", "SpeakersChanged", "StreamStateChanged", "latestJoinResponse", "roomSid", "_e", "_f", "signalOpts", "setupSignalClientCallbacks", "joinResponse", "pcManager", "configure", "clientConfiguration", "Closing", "removeAllListeners", "deregisterOnLineListener", "clearPendingReconnect", "cleanupPeerConnections", "cleanupClient", "dcCleanup", "onbufferedamountlow", "onclosing", "lossyDC", "reliableDC", "publicationTimeout", "updateMuteStatus", "dataSubscriberReadyState", "getConnectedServerAddress", "setRegionUrlProvider", "provider", "participantSid", "makeRTCConfiguration", "TransportsCreated", "publisherState", "subscriberState", "shouldEmit", "RR_SUBSCRIBER_FAILED", "RR_PUBLISHER_FAILED", "MediaTrackAdded", "streams", "createDataChannels", "response", "LocalTrackUnpublished", "RemoteMute", "SubscribedQualityUpdate", "leave", "serverResponse", "e2eeEnabled", "encodedInsertableStreams", "iceServers", "rtcIceServers", "iceServer", "rtcIceServer", "urls", "username", "credential", "forceRelay", "ClientConfigSetting", "ENABLED", "iceTransportPolicy", "sdpSemantics", "continualGatheringPolicy", "ordered", "setPreferredCodec", "RTCRtpReceiver", "cap", "getCapabilities", "matched", "partialMatched", "unmatched", "codecs", "matchesVideoCodec", "sdpFmtpLine", "supportsSetCodecPreferences", "setCodecPreferences", "createSender", "encodings", "supportsTransceiver", "createTransceiverRTCRtpSender", "supportsAddTrack", "createRTCRtpSender", "createSimulcastSender", "simulcastTrack", "createSimulcastTransceiverSender", "sendEncodings", "setSimulcastTrackSender", "resumeConnection", "DISABLED", "restartConnection", "recoverable", "SignalReconnectError", "RR_UNKNOWN", "context", "nextRetryDelayInMs", "regionUrl", "Restarting", "SignalRestarted", "waitForPCReconnected", "resetAttempts", "nextRegionUrl", "getNextBestRegionUrl", "Resuming", "SignalResumed", "Resumed", "waitForPCInitialConnection", "Reconnecting", "sendDataPacket", "packet", "ensurePublisherConnected", "ensureDataTransportConnected", "transportName", "targetChannel", "endTime", "getTime", "verifyTransport", "AbortController", "handleClosed", "abort", "rtpTypes", "remoteTracks", "localTracks", "previousAnswer", "previousOffer", "trackSids", "isDesired", "SyncState", "subscription", "UpdateSubscription", "subscribe", "participantTracks", "publishTracks", "getTrackPublicationInfo", "dataChannels", "dataChannelsInfo", "failNext", "infos", "getInfo", "DataChannelInfo", "isWeb", "window", "RegionUrlProvider", "lastUpdateAt", "settingsCacheTime", "attemptedRegions", "serverUrl", "URL", "isCloud", "getServerUrl", "regionSettings", "fetchRegionSettings", "regionsLeft", "regions", "region", "attempted", "nextRegion", "regionSettingsResponse", "getCloudConfigUrl", "headers", "authorization", "ok", "statusText", "host", "monitorFrequency", "computeBitrate", "currentStats", "prevStats", "bytesNow", "bytesPrev", "bytesReceived", "bytesSent", "LocalAudioTrack", "stopOnMute", "monitorSender", "_currentBitrate", "getSenderStats", "checkForSilence", "setDeviceId", "restartTrack", "Microphone", "deviceHasChanged", "constraintsForOptions", "startMonitor", "monitorInterval", "setAudioContext", "audioStats", "streamId", "packetsSent", "packetsLost", "roundTripTime", "jitter", "trackIsSilent", "detectSilence", "AudioSilenceDetected", "mediaTrackToLocalTrack", "LocalVideoTrack", "presets169", "presets43", "VideoPresets43", "presetsScreenShare", "defaultSimulcastPresets169", "h180", "h360", "defaultSimulcastPresets43", "computeDefaultScreenShareSimulcastPresets", "fromPreset", "scaleResolutionDownBy", "fps", "maxFramerate", "VideoPreset", "floor", "max", "priority", "videoRids", "computeVideoEncodings", "isScreenShare", "videoEncoding", "useSimulcast", "scalabilityMode", "determineAppropriateEncoding", "original", "sm", "ScalabilityMode", "spatial", "rid", "presets", "sortPresets", "screenShareSimulcastLayers", "defaultSimulcastLayers", "videoSimulcastLayers", "midPreset", "lowPreset", "encodingsFromPresets", "computeTrackBackupEncodings", "serverRequested", "backup", "presetsForResolution", "preset", "aspect", "abs", "idx", "min", "canSetPriority", "isFireFox", "networkPriority", "getReactNativeOs", "topFramerate", "notifyOnce", "sort", "aEnc", "bEnc", "results", "temporal", "suffix", "refreshSubscribedCodecAfterNewCodec", "simulcastCodecs", "statsMap", "totalBitrate", "prev", "senderLock", "isSimulcast", "getParameters", "signalClient", "__asyncValues", "_g", "next", "done", "sc", "Camera", "items", "vs", "frameHeight", "frameWidth", "firCount", "pliCount", "nackCount", "framesSent", "retransmittedPacketsSent", "qualityLimitationReason", "qualityLimitationResolutionChanges", "setPublishingQuality", "maxQuality", "qualities", "q", "VideoQuality", "LOW", "HIGH", "SubscribedQuality", "quality", "setPublishingLayers", "_h", "addSimulcastTrack", "simulcastCodecInfo", "subscribedCodecs", "setPublishingCodecs", "currentCodec", "newCodecs", "codecs_1", "codecs_1_1", "setPublishingLayersForSender", "senderEncodings", "hasChanged", "closableSpatial", "videoQualityForRid", "subscribedQuality", "active", "maxFrameRate", "setParameters", "MEDIUM", "videoLayersFromEncodings", "svc", "VideoLayer", "bitrate", "ssrc", "encodingSM", "ceil", "scale", "RemoteTrack", "setMuted", "setMediaStream", "onRemoveTrack", "enable", "stopMonitor", "disable", "monitorReceiver", "RemoteAudioTrack", "audioOutput", "getReceiverStats", "webAudioPluginNodes", "sinkId", "setVolume", "gainNode", "setTargetAtTime", "_setVolume", "elementVolume", "getVolume", "highestVolume", "setSinkId", "elm", "supportsSetSinkId", "attach", "needsNewWebAudioConnection", "connectWebAudio", "detach", "detached", "disconnectWebAudio", "setWebAudioPlugins", "nodes", "sourceNode", "srcObject", "lastNode", "node", "destination", "resume", "AudioPlaybackFailed", "receiverStats", "concealedSamples", "concealmentEvents", "silentConcealedSamples", "silentConcealmentEvents", "totalAudioEnergy", "totalSamplesDuration", "REACTION_DELAY", "RemoteVideoTrack", "adaptiveStreamSettings", "elementInfos", "debouncedHandleResize", "updateDimensions", "isAdaptiveStream", "elementInfo", "HTMLElementInfo", "observeElementInfo", "handleResize", "handleVisibilityChanged", "updateVisibility", "observe", "stopObservingElementInfo", "stopElementInfos", "stopObserving", "detachedElements", "stopObservingElement", "getDecoderImplementation", "decoderImplementation", "codecID", "codecId", "framesDecoded", "framesDropped", "framesReceived", "packetsReceived", "lastVisibilityChange", "visibilityChangedAt", "backgroundPause", "pauseVideoInBackground", "isPiPMode", "pictureInPicture", "isVisible", "visible", "lastVisible", "VisibilityChanged", "maxWidth", "maxHeight", "pixelDensity", "getPixelDensity", "currentElementWidth", "currentElementHeight", "lastDimensions", "VideoDimensionsChanged", "getDevicePixelRatio", "devicePixelRatio", "isPiP", "isIntersecting", "onVisibilityChanged", "entry", "onEnterPiP", "onLeavePiP", "isElementInViewport", "pictureInPictureElement", "clientWidth", "clientHeight", "getIntersectionObserver", "getResizeObserver", "unobserve", "top", "offsetTop", "left", "offsetLeft", "offsetWidth", "offsetHeight", "hidden", "opacity", "display", "getComputedStyle", "offsetParent", "pageYOffset", "innerHeight", "pageXOffset", "innerWidth", "parseFloat", "TrackPublication", "metadataMuted", "handleMuted", "handleUnmuted", "Publication", "setMaxListeners", "trackName", "Unknown", "setTrack", "getLogContextFromTrack", "isEnabled", "isSubscribed", "isEncrypted", "audioTrack", "videoTrack", "updateInfo", "sourceFromProto", "simulcasted", "SubscriptionStatus", "PermissionStatus", "LocalTrackPublication", "ti", "handleTrackEnded", "ConnectionQuality", "qualityFromProto", "ProtoQuality", "EXCELLENT", "Excellent", "GOOD", "Good", "POOR", "Poor", "LOST", "Lost", "Participant", "isAgent", "permissions", "agent", "audioLevel", "isSpeaking", "_connectionQuality", "audioTracks", "videoTracks", "getTrack", "getTrackByName", "connectionQuality", "isCameraEnabled", "isMicrophoneEnabled", "isScreenShareEnabled", "isLocal", "joinedAt", "participantInfo", "_setName", "_setMetadata", "permission", "setPermissions", "md", "changed", "prevMetadata", "ParticipantMetadataChanged", "ParticipantNameChanged", "prevPermissions", "canPublish", "canSubscribe", "canPublishData", "recorder", "canPublishSources", "index", "ParticipantPermissionsChanged", "setIsSpeaking", "speaking", "lastSpokeAt", "IsSpeakingChanged", "setConnectionQuality", "prevQuality", "ConnectionQualityChanged", "addTrackPublication", "TrackMuted", "TrackUnmuted", "trackPermissionToProto", "perms", "TrackPermission", "allTracks", "allowAll", "allowedTrackSids", "RemoteTrackPublication", "allowed", "disabled", "currentVideoQuality", "handleVisibilityChange", "emitTrackUpdate", "handleVideoDimensionsChange", "videoDimensions", "subscribed", "setSubscribed", "prevStatus", "subscriptionStatus", "prevPermission", "permissionStatus", "ParticipantTracks", "emitSubscriptionUpdateIfChanged", "emitPermissionUpdateIfChanged", "Unsubscribed", "Desired", "Subscribed", "Allowed", "NotAllowed", "setEnabled", "isManualOperationAllowed", "setVideoQuality", "setVideoDimensions", "setVideoFPS", "videoQuality", "prevTrack", "setAllowed", "setSubscriptionError", "SubscriptionFailed", "prevMetadataMuted", "previousStatus", "currentStatus", "SubscriptionStatusChanged", "previousPermissionStatus", "currentPermissionStatus", "SubscriptionPermissionChanged", "UpdateTrackSettings", "UpdateSettings", "RemoteParticipant", "fromParticipantInfo", "pi", "volumeMap", "pt", "TrackSubscriptionPermissionChanged", "TrackSubscriptionStatusChanged", "previousTrack", "TrackSubscriptionFailed", "audioPublication", "addSubscribedMediaTrack", "triesLeft", "getTrackPublication", "isVideo", "hasMetadata", "validTracks", "newTracks", "kindFromProto", "existingTrackOfSource", "publishedTrack", "oldTrack", "unpublishTrack", "sendUnpublish", "TrackUnpublished", "setAudioOutput", "output", "promises", "_len", "_key", "LocalParticipant", "pendingPublishing", "Set", "pendingPublishPromises", "participantTrackPermissions", "allParticipantsAllowedToSubscribe", "encryptionType", "handleReconnecting", "reconnectFuture", "handleReconnected", "updateTrackSubscriptionPermissions", "handleDisconnected", "allParticipantsAllowed", "onTrackUnmuted", "onTrackMuted", "onTrackUpstreamPaused", "onTrackUpstreamResumed", "handleSubscribedQualityUpdate", "roomOptions", "newCodecs_1", "newCodecs_1_1", "isBackupCodec", "publishAdditionalCodecForTrack", "subscribedQualities", "handleLocalTrackUnpublished", "unpublished", "ScreenShareAudio", "currentPermissions", "query", "onchange", "activeDeviceMap", "lastCameraError", "cameraError", "lastMicrophoneError", "microphoneError", "setMetadata", "setName", "setCameraEnabled", "publishOptions", "setTrackEnabled", "setMicrophoneEnabled", "setScreenShareEnabled", "setE2EEEnabled", "GCM", "republishAllTracks", "add", "createTracks", "createScreenTracks", "publishPromises", "localTrack", "publishTrack", "publishedTracks", "MediaDevicesError", "screenAudioTrack", "enableCameraAndMicrophone", "mergeDefaultOptions", "audioCaptureDefaults", "videoCaptureDefaults", "err", "AudioStreamAcquired", "isAudio", "trackConstraints", "conOrBool", "getDisplayMedia", "isSafari17", "h1080fps30", "screenCaptureToDisplayMediaStreamOptions", "getVideoTracks", "screenVideo", "contentHint", "screenAudio", "defaultConstraints", "MediaStreamTrack", "deviceKind", "updateLoggerOptions", "existingPublication", "isStereoInput", "channelCount", "isStereo", "e2ee", "publishPromise", "publish", "supportsAV1", "supportsVP9", "AddTrackRequest", "kindToProto", "sourceToProto", "disableDtx", "stereo", "disableRed", "defaultRes", "SimulcastCodec", "_j", "_k", "_l", "primaryCodecMime", "updatedCodec", "trackTransceiver", "_m", "_o", "stopOnUnpublish", "getPublicationForTrack", "pubLogContext", "negotiationNeeded", "trackSender", "clear", "unpublishTracks", "restartTracks", "localPubs", "publishData", "destinationSids", "topic", "val", "UserPacket", "setTrackSubscriptionPermissions", "mutedOnServer", "connectionReconcileFrequency", "Room", "EventEmitter", "constructor", "options", "_this", "this", "state", "ConnectionState", "Disconnected", "activeSpeakers", "isE2EEEnabled", "audioEnabled", "isVideoPlaybackBlocked", "log", "bufferedEvents", "connect", "url", "token", "opts", "__awaiter", "unlockDisconnect", "disconnectLock", "lock", "Connected", "info", "concat", "name", "logContext", "Promise", "resolve", "connectFuture", "promise", "setAndEmitConnectionState", "Connecting", "_c", "regionUrlProvider", "getServerUrl", "toString", "regionUrl", "undefined", "isCloud", "URL", "RegionUrlProvider", "updateToken", "fetchRegionSettings", "catch", "e", "warn", "Object", "assign", "error", "connectFn", "reject", "abortController", "abort", "AbortController", "attemptConnection", "ConnectionError", "reason", "nextUrl", "getNextBestRegionUrl", "_d", "signal", "status", "handleDisconnect", "stopLocalTrackOnUnpublish", "message", "Future", "clearConnectionFutures", "connectSignal", "engine", "connectOptions", "roomOptions", "joinResponse", "join", "autoSubscribe", "publishOnly", "adaptiveStream", "maxRetries", "e2eeEnabled", "e2eeManager", "websocketTimeout", "serverInfo", "version", "serverVersion", "region", "serverRegion", "debug", "entries", "map", "_ref", "key", "value", "room", "_e", "roomSid", "_f", "sid", "identity", "_g", "participant", "UnsupportedServer", "dynacast", "applyJoinResponse", "pi", "localParticipant", "handleParticipantUpdates", "otherParticipants", "handleRoomUpdate", "e2ee", "setSifTrailer", "sifTrailer", "Reconnecting", "recreateEngine", "maybeCreateEngine", "_h", "setRegionUrlProvider", "acquireAudioContext", "connOptions", "roomConnectOptionDefaults", "rtcConfig", "peerConnectionTimeout", "setupLocalParticipantEvents", "emit", "RoomEvent", "SignalConnected", "err", "close", "resultingError", "Error", "aborted", "waitForPCInitialConnection", "isWeb", "disconnectOnPageLeave", "window", "addEventListener", "onPageLeave", "document", "_j", "navigator", "mediaDevices", "handleDeviceChange", "registerConnectionReconcile", "disconnect", "stopTracks", "arguments", "length", "unlock", "_k", "_m", "_l", "call", "_o", "client", "isDisconnected", "sendLeave", "DisconnectReason", "CLIENT_INITIATED", "startAudio", "elements", "browser", "getBrowser", "os", "audioId", "dummyAudioEl", "getElementById", "createElement", "id", "autoplay", "hidden", "track", "getEmptyAudioStreamTrack", "enabled", "stream", "MediaStream", "srcObject", "body", "append", "once", "remove", "push", "participants", "forEach", "p", "audioTracks", "t", "attachedElements", "all", "muted", "play", "handleAudioPlaybackStarted", "handleAudioPlaybackFailed", "startVideo", "values", "videoTracks", "tr", "_a", "el", "includes", "then", "handleVideoPlaybackStarted", "handleVideoPlaybackFailed", "handleRestarting", "clearConnectionReconcile", "handleParticipantDisconnected", "handleSignalRestarted", "republishAllTracks", "waitForRestarted", "_p", "Reconnected", "emitBufferedEvents", "participantInfos", "updateInfo", "identityToSid", "get", "remoteParticipant", "isNewParticipant", "ParticipantInfo_State", "DISCONNECTED", "getOrCreateParticipant", "handleActiveSpeakersUpdate", "speakers", "seenSids", "speaker", "audioLevel", "level", "setIsSpeaking", "emitWhenConnected", "ActiveSpeakersChanged", "handleSpeakersChanged", "speakerUpdates", "lastSpeakers", "Map", "set", "active", "delete", "Array", "from", "sort", "a", "b", "handleStreamStateUpdate", "streamStateUpdate", "streamStates", "streamState", "participantSid", "pub", "getTrackPublication", "trackSid", "Track", "streamStateFromProto", "ParticipantEvent", "TrackStreamStateChanged", "handleSubscriptionPermissionUpdate", "update", "setAllowed", "allowed", "handleSubscriptionError", "find", "tracks", "has", "setSubscriptionError", "handleDataPacket", "userPacket", "kind", "DataReceived", "payload", "topic", "canPlaybackAudio", "AudioPlaybackStatusChanged", "VideoPlaybackStatusChanged", "MediaDevicesChanged", "oldRoom", "roomInfo", "metadata", "RoomMetadataChanged", "activeRecording", "RecordingStatusChanged", "handleConnectionQualityUpdate", "updates", "setConnectionQuality", "quality", "onLocalParticipantMetadataChanged", "ParticipantMetadataChanged", "onLocalParticipantNameChanged", "ParticipantNameChanged", "onLocalTrackMuted", "TrackMuted", "onLocalTrackUnmuted", "TrackUnmuted", "onLocalTrackPublished", "LocalTrackPublished", "LocalAudioTrack", "trackIsSilent", "checkForSilence", "LocalAudioSilenceDetected", "deviceId", "_q", "getDeviceId", "deviceKind", "sourceToKind", "source", "activeDeviceMap", "ActiveDeviceChanged", "onLocalTrackUnpublished", "LocalTrackUnpublished", "onLocalConnectionQualityChanged", "ConnectionQualityChanged", "onMediaDevicesError", "MediaDevicesError", "onLocalParticipantPermissionsChanged", "prevPermissions", "ParticipantPermissionsChanged", "setMaxListeners", "roomOptionDefaults", "getLogger", "loggerName", "LoggerNames", "audioCaptureDefaults", "audioDefaults", "videoCaptureDefaults", "videoDefaults", "publishDefaults", "Mutex", "LocalParticipant", "unwrapConstraint", "_b", "audioOutput", "switchActiveDevice", "setupE2EE", "setE2EEEnabled", "setParticipantCryptorEnabled", "E2EEManager", "on", "EncryptionEvent", "ParticipantEncryptionStatusChanged", "EncryptionError", "setup", "isRecording", "numParticipants", "numPublishers", "isClosed", "RTCEngine", "EngineEvent", "ParticipantUpdate", "RoomUpdate", "SpeakersChanged", "StreamStateChanged", "ConnectionQualityUpdate", "SubscriptionError", "SubscriptionPermissionUpdate", "MediaTrackAdded", "mediaTrack", "receiver", "onTrackAdded", "ActiveSpeakersUpdate", "DataPacketReceived", "Resuming", "Resumed", "updateSubscriptions", "SignalResumed", "sendSyncState", "Restarting", "SignalRestarted", "DCBufferStatusChanged", "setupEngine", "getLocalDevices", "requestPermissions", "DeviceManager", "getInstance", "getDevices", "prepareConnection", "fetch", "toHttpUrl", "method", "getParticipantByIdentity", "simulateScenario", "scenario", "arg", "postAction", "req", "handleOnClose", "SimulateScenario", "case", "failNext", "fullReconnectOnNext", "onLeave", "LeaveRequest", "canReconnect", "BigInt", "sendSimulateScenario", "canPlaybackVideo", "getActiveAudioOutputDevice", "getActiveDevice", "exact", "deviceHasChanged", "success", "deviceConstraint", "prevDeviceId", "filter", "Source", "Microphone", "audioTrack", "setDeviceId", "every", "val", "Camera", "videoTrack", "supportsSetSinkId", "expWebAudioMix", "audioContext", "setSinkId", "setAudioOutput", "AudioStreamAcquired", "clear", "reconnectedHandler", "cleanup", "off", "parts", "unpackStreamId", "participantId", "streamId", "trackId", "startsWith", "adaptiveStreamSettings", "addSubscribedMediaTrack", "shouldStopTracks", "unpublishTrack", "detach", "stop", "removeEventListener", "publication", "ParticipantDisconnected", "getNewAudioContext", "resume", "setAudioContext", "newContextIsRunning", "createParticipant", "RemoteParticipant", "fromParticipantInfo", "loggerContextCb", "ParticipantConnected", "TrackPublished", "trackPublication", "TrackSubscribed", "Kind", "Audio", "TrackEvent", "AudioPlaybackStarted", "AudioPlaybackFailed", "Video", "VideoPlaybackFailed", "VideoPlaybackStarted", "TrackUnpublished", "TrackUnsubscribed", "TrackSubscriptionFailed", "TrackSubscriptionStatusChanged", "TrackSubscriptionPermissionChanged", "remoteTracks", "reduce", "acc", "getTracks", "localTracks", "isSubscribed", "RemoteTrackPublication", "emitTrackUpdate", "consecutiveFailures", "connectionReconcileInterval", "CriticalTimers", "setInterval", "verifyTransport", "numFailures", "closed", "transportsConnected", "STATE_MISMATCH", "connectionReconcileFrequency", "clearInterval", "ConnectionStateChanged", "_ref2", "ev", "args", "event", "_len", "_key", "simulateParticipants", "publishOptions", "audio", "video", "useRealTracks", "publish", "participantOptions", "count", "aspectRatios", "RoomModel", "emptyTimeout", "maxParticipants", "creationTime", "protoInt64", "parse", "Date", "getTime", "turnPassword", "enabledCodecs", "ParticipantInfo", "camPub", "LocalTrackPublication", "TrackInfo", "TrackSource", "CAMERA", "Math", "floor", "random", "type", "TrackType", "AUDIO", "LocalVideoTrack", "getUserMedia", "getVideoTracks", "createDummyVideoStreamTrack", "addTrackPublication", "audioPub", "MICROPHONE", "getAudioTracks", "i", "ACTIVE", "joinedAt", "now", "dummyVideo", "dummyTrack", "_len2", "_key2", "minimizedArgs", "mapArgs", "isArray", "CheckStatus", "Checker", "IDLE", "logs", "errorsAsWarnings", "run", "onComplete", "setStatus", "RUNNING", "perform", "appendWarning", "appendError", "setTimeout", "SKIPPED", "isSuccess", "SUCCESS", "FAILED", "getInfo", "some", "l", "skip", "appendMessage", "description", "createLocalTracks", "mergeDefaultOptions", "constraints", "constraintsForOptions", "mediaPromise", "userMediaPromiseMap", "mediaStreamTrack", "isAudio", "trackConstraints", "conOrBool", "getSettings", "mediaTrackToLocalTrack", "mediaStream", "createLocalVideoTrack", "createLocalAudioTrack", "PublishAudioCheck", "Checker", "description", "perform", "room", "connect", "track", "createLocalAudioTrack", "localParticipant", "publishTrack", "Promise", "resolve", "setTimeout", "stats", "_a", "sender", "getStats", "Error", "numPackets", "forEach", "stat", "type", "mediaType", "packetsSent", "appendMessage", "concat", "PublishVideoCheck", "createLocalVideoTrack", "ReconnectCheck", "reconnectingTriggered", "reconnected", "reconnectResolver", "reconnectTimeout", "on", "RoomEvent", "Reconnecting", "Reconnected", "engine", "client", "ws", "close", "onClose", "state", "ConnectionState", "Connected", "appendWarning", "TURNCheck", "signalClient", "SignalClient", "joinRes", "join", "url", "token", "autoSubscribe", "maxRetries", "e2eeEnabled", "websocketTimeout", "hasTLS", "hasTURN", "hasSTUN", "iceServer", "iceServers", "urls", "startsWith", "_b", "connectOptions", "rtcConfig", "iceTransportPolicy", "skip", "WebRTCCheck", "hasTcp", "hasIpv4Udp", "SignalConnected", "prevTrickle", "onTrickle", "sd", "target", "candidate", "RTCIceCandidate", "str", "protocol", "address", "port", "isIPPrivate", "tcpType", "pcManager", "subscriber", "onIceCandidateError", "ev", "RTCPeerConnectionIceErrorEvent", "errorCode", "errorText", "log", "info", "err", "parts", "split", "length", "second", "parseInt", "WebSocketCheck", "serverVersion", "serverInfo", "edition", "ServerInfo_Edition", "Cloud", "region", "_c", "ConnectionCheck", "EventEmitter", "constructor", "checkResults", "Map", "getNextCheckId", "nextId", "size", "set", "logs", "status", "CheckStatus", "IDLE", "name", "updateCheck", "checkId", "emit", "isSuccess", "Array", "from", "values", "every", "r", "FAILED", "getResults", "createAndRunCheck", "check", "test", "handleUpdate", "result", "run", "off", "checkWebsocket", "checkWebRTC", "checkTURN", "checkReconnect", "checkPublishAudio", "checkPublishVideo", "facingModeFromLocalTrack", "localTrack", "options", "LocalTrack", "mediaStreamTrack", "trackSettings", "getSettings", "facingMode", "defaultFacingMode", "confidence", "rawFacingMode", "debug", "isFacingModeValue", "includes", "label", "labelAnalysisResult", "facingModeFromDeviceLabel", "undefined", "knownDeviceLabels", "knownDeviceLabelSections", "deviceLabel", "trim", "toLowerCase", "has", "get", "entries", "find", "_ref", "section", "item", "allowedValues", "config", "platform", "platform", "placements", "sides", "side", "placement", "overflow", "platform", "x", "y", "min", "max", "getComputedStyle", "getComputedStyle", "window", "shift", "flip", "computePosition", "d", "b", "__awaiter", "__values", "r", "from", "r", "__asyncValues", "__values", "v", "Subscription", "__values", "empty", "timeout", "Subscriber", "ConsumerObserver", "SafeSubscriber", "Observable", "observable", "OperatorSubscriber", "err", "ConnectableObservable", "timestamp", "timestamp", "Subject", "__values", "observable", "AnonymousSubject", "BehaviorSubject", "ReplaySubject", "last", "AsyncSubject", "Action", "delay", "timeout", "AsyncAction", "delay", "AsapAction", "delay", "Scheduler", "delay", "AsyncScheduler", "AsapScheduler", "QueueAction", "delay", "QueueScheduler", "AnimationFrameAction", "delay", "AnimationFrameScheduler", "VirtualTimeScheduler", "VirtualAction", "delay", "__values", "process", "__asyncValues", "delay", "repeat", "delay", "delay", "iterator", "iterator", "NotificationKind", "Notification", "config", "first", "delay", "isArray", "expand", "buffer", "isArray", "first", "isWeb", "regex", "computePosition", "flip", "shift", "grammar", "log", "loglevel", "setLogLevel", "setLogExtension", "context", "Track", "LocalParticipant", "size", "zip", "findIndex", "log", "events", "observable", "RoomEvent", "RoomEvent", "r", "Room", "observable", "_a", "room", "kind", "log", "LocalParticipant", "map", "startWith", "Track", "events", "Observable", "ParticipantEvent", "ParticipantEvent", "map", "identity", "startWith", "observable", "Observable", "_a", "_b", "RoomEvent", "r", "source", "localParticipant", "Track", "Subject", "log", "filter", "BehaviorSubject", "timestamp", "DataPacket_Kind", "RoomEvent", "observable", "map", "room", "log", "startWith", "concat", "fallback", "r", "React22", "import_react", "import_react", "import_react", "import_react", "delay", "timer", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "entry", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "resizeObserver", "getResizeObserver", "size", "observable", "startWith", "query", "__spreadProps", "__spreadValues", "context", "r", "require", "__async", "connect", "__objRest", "log", "Room", "ConnectionState", "createMediaDeviceObserver", "mergeProps", "publication", "_a", "identity", "participantPermissionObserver", "roomAudioPlaybackAllowedObservable", "roomVideoPlaybackAllowedObservable", "getTrackReferenceId", "Track", "trackReferences", "participants", "isTrackReference", "interval", "RoomEvent", "activeDeviceId", "ConnectionQuality", "_b", "RemoteTrackPublication", "isTrackReferencePinned", "isLocal", "kind", "tracks", "deviceId", "facingMode", "facingModeFromLocalTrack", "saveUserChoices", "isWeb"]
}
